Version 1
SubGoalCombiner SGC_AND
INITSECTION
//////WAVE 1 - initial combat start
DB_DEN_AttackOnDen_WavePriority((CHARACTER)S_GOB_RaiderBold_1c9fd1dd-12bc-4b81-acb8-9eef54174c55,"DEN_AttackOnDen_Minion"); //Melee
DB_DEN_AttackOnDen_WavePriority(S_GOB_RaiderArrogant_43d953fa-575e-452c-b220-939e6bdcc36b,"DEN_AttackOnDen_Minion"); //Archer
DB_DEN_AttackOnDen_WavePriority(S_GOB_AttackOnDen_Sapper_001_392146c2-0849-4250-b907-e4fb9a13ddcf,""); //Sapper
DB_DEN_AttackOnDen_WavePriority(S_GOB_AttackOnDen_Spider_001_16614e7b-b200-45f3-83fb-dded3641861f,""); //Spider
DB_DEN_AttackOnDen_WavePriority(S_GOB_AttackOnDen_Ogre_001_04695229-6f1d-433c-8e74-88e21e720e9a,""); //Ogre
DB_DEN_AttackOnDen_WavePriority(S_GOB_RaiderHefty_fcbb04a8-f4e6-4065-901c-1a4a708ccd54,"DEN_AttackOnDen_Minion"); //Archer

//////WAVE 2
DB_DEN_AttackOnDen_WavePriority(S_GOB_RaiderHardy_6687f78f-5d6a-40d4-8cfd-2b972dacde3c,"DEN_AttackOnDen_Minion"); //Melee
DB_DEN_AttackOnDen_WavePriority(S_GOB_AttackOnDen_Bugbear_001_5673d584-cce4-4688-bc50-c0da7eb252ec,"");
DB_DEN_AttackOnDen_WavePriority(S_GOB_AttackOnDen_Spider_002_de05b62e-6306-46e1-9f2f-2ac6554d0316,""); //Spider
DB_DEN_AttackOnDen_WavePriority(S_GOB_RaiderStupid_5d049dbe-ff35-45be-88f9-5f999dc0ffe4,"DEN_AttackOnDen_Minion"); //Archer
DB_DEN_AttackOnDen_WavePriority(S_GOB_RaiderCunning_abdd3748-0834-46f3-8214-18dd4dca9d40,"DEN_AttackOnDen_Minion"); //Melee
DB_DEN_AttackOnDen_WavePriority(S_GOB_AttackOnDen_Sapper_003_4264ba13-c816-405c-bc55-9f91dcfd9793,""); //Sapper

//////WAVE 3
DB_DEN_AttackOnDen_WavePriority(S_GOB_RaiderChieftain_5bac0842-c1d4-4358-a85c-24ab745d0280,"DEN_AttackOnDen_Minion"); //Warchief
DB_DEN_AttackOnDen_WavePriority(S_GOB_AttackOnDen_Sapper_004_1b6dba51-be8b-47ac-a73b-94c29e56bbad,""); //Sapper
DB_DEN_AttackOnDen_WavePriority(S_GOB_AttackOnDen_Melee_001_ebe03162-0d2d-4d9c-a5b2-aff64610479b,"DEN_AttackOnDen_Minion"); //Melee
DB_DEN_AttackOnDen_WavePriority(S_GOB_GoblinLush_d738c9a4-a031-4dd9-912f-93cda8d8d8b7,"DEN_AttackOnDen_Minion");  //Archer
DB_DEN_AttackOnDen_WavePriority(S_GOB_AttackOnDen_Ranged_001_12c5dc1a-f738-48bb-8b11-88a7899ec199,""); //Caster
DB_DEN_AttackOnDen_WavePriority(S_GOB_AttackOnDen_Bugbear_002_e6af67ed-d549-4165-817c-78cb489f3020,"");
DB_DEN_AttackOnDen_WavePriority(S_GOB_WarchiefBrave_6601b8f7-1a92-46bb-b409-6fcef7406a39,"DEN_AttackOnDen_Minion"); //Melee
DB_DEN_AttackOnDen_WavePriority(S_GOB_WarchiefGrumpy_126e39d1-7c38-453c-888b-4cddce7f3e41,"DEN_AttackOnDen_Minion"); //Melee

//////WAVE 4
//////WAVE 5
// currently empty, should be cleared by this point

////////
//DB_DEN_AttackOnDen_Waves ( _WaveNumber , _NumberOfParticipantsToAdd , _DrowAdFlag , _AtmosphereChange )
DB_DEN_AttackOnDen_Waves(1,7,(FLAG)GOB_DrowCommander_AD_AttackOnDen_Wave1_66105ace-44ff-19db-5be2-49ee3e2e599e,"");
DB_DEN_AttackOnDen_Waves(2,7,(FLAG)GOB_DrowCommander_AD_AttackOnDen_Wave2_5f83c558-a0da-9bbd-dfa9-ff6322a98c02,"3c709a75-76de-45f8-4ada-b68763f3e7f0");
DB_DEN_AttackOnDen_Waves(3,10,(FLAG)GOB_DrowCommander_AD_AttackOnDen_Wave3_82107442-5058-7a93-6d71-9ccd5e4706c0,"");
DB_DEN_AttackOnDen_Waves(4,10,(FLAG)GOB_DrowCommander_AD_AttackOnDen_Wave4_d908e79d-a28c-b6a8-3e4f-583c52167384,"");

DB_DEN_AttackOnDen_CurrentWave(0);
DB_DEN_AttackOnDen_AddToNextWave((CHARACTER)NULL_00000000-0000-0000-0000-000000000000,0);

//Spiders
DB_DEN_AttackOnDen_Spiders((CHARACTER)S_GOB_AttackOnDen_Spider_001_16614e7b-b200-45f3-83fb-dded3641861f);
DB_DEN_AttackOnDen_Spiders((CHARACTER)S_GOB_AttackOnDen_Spider_002_de05b62e-6306-46e1-9f2f-2ac6554d0316);

//characters not in level before combat

DB_DEN_AttackOnDen_ExtraCharacters(S_GOB_AttackOnDen_Sapper_001_392146c2-0849-4250-b907-e4fb9a13ddcf);
DB_DEN_AttackOnDen_ExtraCharacters(S_GOB_AttackOnDen_Sapper_003_4264ba13-c816-405c-bc55-9f91dcfd9793);
DB_DEN_AttackOnDen_ExtraCharacters(S_GOB_AttackOnDen_Sapper_004_1b6dba51-be8b-47ac-a73b-94c29e56bbad);
DB_DEN_AttackOnDen_ExtraCharacters(S_GOB_AttackOnDen_Melee_001_ebe03162-0d2d-4d9c-a5b2-aff64610479b);
DB_DEN_AttackOnDen_ExtraCharacters(S_GOB_AttackOnDen_Ranged_001_12c5dc1a-f738-48bb-8b11-88a7899ec199);
DB_DEN_AttackOnDen_ExtraCharacters(S_GOB_AttackOnDen_Spider_001_16614e7b-b200-45f3-83fb-dded3641861f);
DB_DEN_AttackOnDen_ExtraCharacters(S_GOB_AttackOnDen_Spider_002_de05b62e-6306-46e1-9f2f-2ac6554d0316);
DB_DEN_AttackOnDen_ExtraCharacters(S_GOB_AttackOnDen_Ogre_001_04695229-6f1d-433c-8e74-88e21e720e9a);
DB_DEN_AttackOnDen_ExtraCharacters(S_GOB_AttackOnDen_Bugbear_001_5673d584-cce4-4688-bc50-c0da7eb252ec);
DB_DEN_AttackOnDen_ExtraCharacters(S_GOB_AttackOnDen_Bugbear_002_e6af67ed-d549-4165-817c-78cb489f3020);
DB_DEN_AttackOnDen_ExtraCharacters(S_GOB_AttackOnDen_BarrelGoblin_001_b27869ef-88e2-4f99-93f9-c1e8773dcf4a);
DB_DEN_AttackOnDen_ExtraCharacters(S_GOB_AttackOnDen_BarrelGoblin_002_7687218e-90a7-4694-bf69-e9f516ed030e);
DB_DEN_AttackOnDen_ExtraCharacters(S_GOB_AttackOnDen_BarrelGoblin_003_23e26dde-3e25-4f94-a50d-0cd8c6bf4b64);

DB_DEN_AttackOnDen_ExtraCharactersRemove(S_GOB_AttackOnDen_Spider_001_16614e7b-b200-45f3-83fb-dded3641861f);
DB_DEN_AttackOnDen_ExtraCharactersRemove(S_GOB_AttackOnDen_Spider_002_de05b62e-6306-46e1-9f2f-2ac6554d0316);
DB_DEN_AttackOnDen_ExtraCharactersRemove(S_GOB_AttackOnDen_Ogre_001_04695229-6f1d-433c-8e74-88e21e720e9a);
DB_DEN_AttackOnDen_ExtraCharactersRemove(S_GOB_AttackOnDen_Bugbear_001_5673d584-cce4-4688-bc50-c0da7eb252ec);
DB_DEN_AttackOnDen_ExtraCharactersRemove(S_GOB_AttackOnDen_Bugbear_002_e6af67ed-d549-4165-817c-78cb489f3020);


//Ogre Throw targets
DB_DEN_AttackOnDen_OgreThrowHelpers((ITEM)S_DEN_AttackOnDen_OgreThrowHelper_000_8a50dcf9-b868-43ee-a2e8-be7f32699ba1);
DB_DEN_AttackOnDen_OgreThrowHelpers((ITEM)S_DEN_AttackOnDen_OgreThrowHelper_001_2eaade89-0234-41a0-97a8-b825779eae27);
DB_DEN_AttackOnDen_OgreThrowHelpers((ITEM)S_DEN_AttackOnDen_OgreThrowHelper_002_f267a023-2c2c-4c73-ba1d-6ddd036639ec);
DB_DEN_AttackOnDen_OgreThrowHelpers((ITEM)S_DEN_AttackOnDen_OgreThrowHelper_003_ef92fd96-8046-471f-97f8-3f7cd07b6e67);
DB_DEN_AttackOnDen_OgreThrowHelpers((ITEM)S_DEN_AttackOnDen_OgreThrowHelper_004_6dad1c1b-cc9e-43f0-baad-71515dc5390b);
DB_DEN_AttackOnDen_OgreThrowHelpers((ITEM)S_DEN_AttackOnDen_OgreThrowHelper_005_696cab71-07e7-49b2-8da6-e7a9f08cf2c8);
DB_DEN_AttackOnDen_OgreThrowHelpers((ITEM)S_DEN_AttackOnDen_OgreThrowHelper_006_5d55cad1-a1b1-4849-9f14-1c53adc44b60);


DB_DEN_AttackOnDen_Ogres((CHARACTER)S_GOB_AttackOnDen_Ogre_001_04695229-6f1d-433c-8e74-88e21e720e9a);

DB_DEN_AttackOnDen_GoblinBarrels((ITEM)S_DEN_AttackOnDen_GoblinBarrel_001_b8625f40-04f3-45e1-9efe-fed845487ac8,(CHARACTER)S_GOB_AttackOnDen_BarrelGoblin_001_b27869ef-88e2-4f99-93f9-c1e8773dcf4a);
DB_DEN_AttackOnDen_GoblinBarrels((ITEM)S_DEN_AttackOnDen_GoblinBarrel_002_5f4a2691-5466-461c-bc33-06c41fdaae37,(CHARACTER)S_GOB_AttackOnDen_BarrelGoblin_002_7687218e-90a7-4694-bf69-e9f516ed030e);
DB_DEN_AttackOnDen_GoblinBarrels((ITEM)S_DEN_AttackOnDen_GoblinBarrel_003_2f3c6448-676e-4037-98b7-e297446912c8,(CHARACTER)S_GOB_AttackOnDen_BarrelGoblin_003_23e26dde-3e25-4f94-a50d-0cd8c6bf4b64);

DB_DEN_AttackOnDen_GoblinBarrelists((CHARACTER)S_GOB_AttackOnDen_BarrelGoblin_001_b27869ef-88e2-4f99-93f9-c1e8773dcf4a);
DB_DEN_AttackOnDen_GoblinBarrelists((CHARACTER)S_GOB_AttackOnDen_BarrelGoblin_002_7687218e-90a7-4694-bf69-e9f516ed030e);
DB_DEN_AttackOnDen_GoblinBarrelists((CHARACTER)S_GOB_AttackOnDen_BarrelGoblin_003_23e26dde-3e25-4f94-a50d-0cd8c6bf4b64);

//Enter Barrel state once combat starts, only for characters who are active before the battle
DB_DEN_AttackOnDen_GoblinBarrels_ActiveCharacters((ITEM)S_DEN_AttackOnDen_GoblinBarrel_004_cf223a48-7164-43c0-91c2-b39c19937f3b,(CHARACTER)S_GOB_WarchiefGrumpy_126e39d1-7c38-453c-888b-4cddce7f3e41);
DB_DEN_AttackOnDen_GoblinBarrels_ActiveCharacters((ITEM)S_DEN_AttackOnDen_GoblinBarrel_005_1a6cc81d-58a1-4724-94eb-0af6c7194600,(CHARACTER)S_GOB_GoblinLush_d738c9a4-a031-4dd9-912f-93cda8d8d8b7);

PROC_DEN_AttackOnDen_Combat_Init();
KBSECTION
PROC
PROC_DEN_AttackOnDen_Combat_Init()
AND
DB_DEN_AttackOnDen_ExtraCharacters(_Char)
THEN
SetOnStage(_Char,0);

//If a raider dies before the event starts, remove them from
///the setup DB
PROC
PROC_StateSet_PermaDefeated(_Raider)
AND
DB_DEN_AttackOnDen_WavePriority((CHARACTER)_Raider,(STRING)_SwarmId)
AND
NOT DB_DEN_AttackOnDen_WaveParticipants((CHARACTER)_Raider,_)
THEN
NOT DB_DEN_AttackOnDen_WavePriority((CHARACTER)_Raider,(STRING)_SwarmId);

//REGION Goblin Barrels
//init
IF
DB_DEN_AttackOnDen_GoblinBarrels(_Barrel,_Goblin)
THEN
SetOnStage(_Barrel,0);

IF
DB_DEN_AttackOnDen_GoblinBarrels_ActiveCharacters(_Barrel,_Goblin)
THEN
DB_DEN_AttackOnDen_GoblinBarrels(_Barrel,_Goblin);

PROC
PROC_DEN_AttackOnDen_Combat_Init()
AND
DB_DEN_AttackOnDen_GoblinBarrels(_Barrel,_Goblin)
AND
NOT DB_DEN_AttackOnDen_GoblinBarrels_ActiveCharacters(_Barrel,_Goblin)
AND
_Goblin != NULL_00000000-0000-0000-0000-000000000000
THEN
SetOnStage(_Goblin,0); 

//Ogres Throw Helpers
PROC
PROC_DEN_AttackOnDen_Combat_Init()
AND
DB_DEN_AttackOnDen_Ogres(_Ogre)
AND
DB_DEN_AttackOnDen_OgreThrowHelpers(_Helper)
THEN
AiAddInterestingItem(_Ogre,_Helper);
SetOnStage(_Helper,0);

//Combat
PROC
PROC_DEN_AttackOnDen_CombatSetup()
AND
DB_DEN_AttackOnDen_OgreThrowHelpers(_Helper)
THEN
SetOnStage(_Helper,1);

//Active characters
PROC
PROC_DEN_AttackOnDen_StartCombat()
AND
DB_DEN_AttackOnDen_GoblinBarrels_ActiveCharacters(_Barrel,_Goblin)
THEN
NOT DB_DEN_AttackOnDen_GoblinBarrels_ActiveCharacters(_Barrel,_Goblin);
SetOnStage(_Goblin,0);

PROC
PROC_DEN_AttackOnDen_StartCombat()
AND
DB_DEN_AttackOnDen_GoblinBarrels(_Barrel,_Goblin)
AND
_Goblin != NULL_00000000-0000-0000-0000-000000000000
THEN
SetOnStage(_Barrel,1);

IF
OnThrown(_Barrel,_,_Ogre,_,_,_,_)
AND
DB_DEN_AttackOnDen_Ogres((CHARACTER)_Ogre)
AND
DB_DEN_AttackOnDen_GoblinBarrels((ITEM)_Barrel,_)
THEN
RealtimeObjectTimerLaunch(_Barrel,"DEN_AttackOnDen_GoblinBarrel_DestroyDelay",250);

IF
ObjectTimerFinished(_Barrel,"DEN_AttackOnDen_GoblinBarrel_DestroyDelay")
AND
DB_DEN_AttackOnDen_GoblinBarrels((ITEM)_Barrel,_Goblin)
AND
GetHitpoints(_Barrel,_Hp)
THEN
ApplyDamage(_Barrel,_Hp,"Bludgeoning",_Goblin);
Die(_Barrel,DEATHTYPE.DoT,_Goblin,0,0);

IF
DestroyingBy(_Barrel,_,_,_)
AND
DB_DEN_AttackOnDen_GoblinBarrels(_Barrel,_Goblin)
AND
_Goblin != NULL_00000000-0000-0000-0000-000000000000
AND
GetPosition(_Barrel,_X,_Y,_Z)
THEN
AppearAtPosition((CHARACTER)_Goblin,_X,_Y,_Z,1,NULL_00000000-0000-0000-0000-000000000000,"DEN_AttackOnDen_GoblinBarrels_JoinCombat");
NOT DB_DEN_AttackOnDen_GoblinBarrels(_Barrel,_Goblin);

IF
EntityEvent((CHARACTER)_Goblin,"DEN_AttackOnDen_GoblinBarrels_JoinCombat")
THEN
SetCanJoinCombat(_Goblin, 1);
SetFaction(_Goblin, (FACTION)ACT1_DEN_AttackRaiders_Fighters_bfdc773b-6521-4fd1-3784-3d1404f1b2f5);
SetCombatGroupID(_Goblin, "DEN_AttackOnDen_GateCombat");
PROC_DEN_AttackOnDen_BarrelTryLeave(_Goblin);

PROC
PROC_DEN_AttackOnDen_BarrelTryLeave((CHARACTER)_Raider)
AND
DB_DEN_AttackOnDen_GoblinBarrelists(_Raider)
AND
DB_GLO_DefeatCounter_CountMet("DEN_AttackOnDen_RaiderCombat")
THEN
PROC_CharacterMoveTo((CHARACTER)_Raider, S_DEN_GoblinAppearDirection_2d5a4623-399f-4b23-b7cc-2cd5f2635fc0, "Sprint", "DEN_AttackOnDen_RaiderDisappear");

PROC
PROC_DEN_AttackOnDen_BarrelTryLeave((CHARACTER)_Raider)
AND
DB_DEN_AttackOnDen_GoblinBarrelists(_Raider)
AND
DB_GLO_DefeatCounter_CountMet("DEN_AttackOnDen_GateCombat")
THEN
PROC_CharacterMoveTo((CHARACTER)_Raider, S_DEN_GoblinAppearDirection_2d5a4623-399f-4b23-b7cc-2cd5f2635fc0, "Sprint", "DEN_AttackOnDen_RaiderDisappear");


PROC
PROC_DEN_AttackOnDen_EndOfCombat("DEN_AttackOnDen_GateCombat")
AND
DB_DEN_AttackOnDen_GoblinBarrels((ITEM)_Barrel,_Goblin)
AND
GetHitpoints(_Barrel,_Hp)
AND
_Hp > 0
THEN
ApplyDamage(_Barrel,_Hp,"Bludgeoning",_Goblin);

PROC
PROC_DEN_AttackOnDen_RaidersGoInsideDen()
THEN
GoalCompleted;

PROC
PROC_StateSet_Defeated(_Ogre)
AND
DB_DEN_AttackOnDen_Ogres((CHARACTER)_Ogre)
THEN
NOT DB_DEN_AttackOnDen_Ogres((CHARACTER)_Ogre);
PROC_DEN_AttackOnDen_CheckOgresAreDefeated();

//If all ogres died, destroy barrels
PROC
PROC_DEN_AttackOnDen_CheckOgresAreDefeated()
AND
NOT DB_DEN_AttackOnDen_Ogres(_)
AND
DB_DEN_AttackOnDen_GoblinBarrels((ITEM)_Barrel,_Goblin)
AND
GetHitpoints(_Barrel,_Hp)
THEN
ApplyDamage(_Barrel,_Hp,"Bludgeoning",_Goblin);

//END_REGION

//REGION Waiting to Join Wave state
PROC
PROC_DEN_AttackOnDen_CombatSetup()
AND
DB_DEN_AttackOnDen_WavePriority(_Raider,_SwarmId)
AND
NOT DB_DEN_AttackOnDen_WaveParticipants(_Raider,_)
AND
NOT DB_DEN_AttackOnDen_GoblinBarrels(_,_Raider)
THEN
DB_DEN_AttackOnDen_WaveParticipants(_Raider,0);
RequestSetSwarmGroup(_Raider,_SwarmId);

IF
DB_DEN_AttackOnDen_WaveParticipants(_Raider, 0)
THEN
SetCanJoinCombat(_Raider, 0);
SetFaction(_Raider, (FACTION)ACT1_DEN_AttackRaiders_Standby_aca56eff-f292-1b69-8f22-ec96197b8d25);

IF
DB_DEN_AttackOnDen_WaveParticipants(_Raider,1)
THEN
SetCanJoinCombat(_Raider, 1);
SetFaction(_Raider, (FACTION)ACT1_DEN_AttackRaiders_Fighters_bfdc773b-6521-4fd1-3784-3d1404f1b2f5);
SetCombatGroupID(_Raider, "DEN_AttackOnDen_GateCombat");

IF
AttackedBy((CHARACTER)_Raider,(CHARACTER)_Char,_,_,_,_,_)
AND
DB_DEN_AttackOnDen_WaveParticipants(_Raider,0)
AND
IsEnemy(_Raider,_Char,1)
THEN
NOT DB_DEN_AttackOnDen_WaveParticipants(_Raider,0);
DB_DEN_AttackOnDen_WaveParticipants(_Raider,1);

//Change atmosphere at start
PROC
PROC_DEN_AttackOnDen_CombatSetup()
THEN
TriggerSetAtmosphere((TRIGGER)ATM_WLD_RangerCamp_G_Forest_LT_WLD_RangerCamp_9e8067fa-2c43-bf05-58e3-9fb308541417, "4c6be3e8-345c-8729-2c44-d2f57ce095cf"); //ATM_WLD_Plains_A_Caravanserai

PROC
PROC_DEN_AttackOnDen_VictoryInvitation()
THEN
TriggerResetAtmosphere((TRIGGER)ATM_WLD_RangerCamp_G_Forest_LT_WLD_RangerCamp_9e8067fa-2c43-bf05-58e3-9fb308541417);

//END_REGION

//REGION Gate as a target Logic
//Spiders should ignore the door, all other raiders chould see it as a 
////viable combat target
IF
DB_DEN_AttackOnDen_WaveParticipants(_Raider,1)
AND
NOT DB_DEN_AttackOnDen_Spiders(_Raider)
AND
DB_DEN_GateInUse(_Gate)
AND
IsClosed(_Gate,1)
THEN
SetDualEntityEvent(_Raider,_Gate,"GOB_SetAiTarget_DenGate");

//add Gate as target
IF
DualEntityEvent((CHARACTER)_Raider,(ITEM)_Gate,"GOB_SetAiTarget_DenGate")
THEN
AiAddInterestingItem(_Raider,_Gate);

//Remove Gate as target
IF
DualEntityEvent((CHARACTER)_Raider,(ITEM)_Gate,"GOB_ClearAiTarget_DenGate")
THEN
AiRemoveInterestingItem(_Raider,_Gate);

//Clear the Gate as an interesting item if it is opened
IF
Opened(_Gate)
AND
DB_DEN_GateInUse(_Gate)
AND
DB_DEN_AttackOnDen_WaveParticipants(_Raider,1)
AND
NOT DB_DEN_AttackOnDen_Spiders(_Raider)
THEN
SetDualEntityEvent(_Raider,_Gate,"GOB_ClearAiTarget_DenGate");

//Re-add gate as target if closed
IF
Closed(_Gate)
AND
DB_DEN_GateInUse(_Gate)
AND
DB_DEN_AttackOnDen_WaveParticipants(_Raider,1)
AND
NOT DB_DEN_AttackOnDen_Spiders(_Raider)
THEN
SetDualEntityEvent(_Raider,_Gate,"GOB_SetAiTarget_DenGate");

//END_REGION

//REGION AI hints + archetype swaps

IF
DB_DEN_AttackOnDen_WaveParticipants(_Raider,1)
AND
NOT DB_DEN_AttackOnDen_Spiders(_Raider)
AND
GetBaseArchetype(_Raider,_Archetype)
AND
_Archetype == "goblin_mage"
THEN
SetAiHint(_Raider,ACT1_DEN_AI_HINT_RAMPARTS_34ebba96-404b-42f9-9726-ac4063f37161);

IF
DB_DEN_AttackOnDen_Spiders(_Spider)
THEN
SetAiHint(_Spider,ACT1_DEN_AI_HINT_RAMPARTS_34ebba96-404b-42f9-9726-ac4063f37161);


IF
DB_DEN_AttackOnDen_WaveParticipants(_Raider,1)
AND
NOT DB_DEN_AttackOnDen_Spiders(_Raider)
AND
GetBaseArchetype(_Raider,_Archetype)
AND
_Archetype == "goblin_melee"
THEN
RequestSetBaseArchetype(_Raider,"melee_ignoresurfacedamage");
SetAiHint(_Raider,NULL_00000000-0000-0000-0000-000000000000);

IF
DB_DEN_AttackOnDen_WaveParticipants(_Raider,1)
AND
NOT DB_DEN_AttackOnDen_Spiders(_Raider)
AND
GetBaseArchetype(_Raider,_Archetype)
AND
_Archetype == "goblin_ranged"
THEN
RequestSetBaseArchetype(_Raider,"ranged_ignoresurfacedamage");
SetAiHint(_Raider,NULL_00000000-0000-0000-0000-000000000000);

//END_REGION

//REGION Create New Wave
//Most of the characters in this combat exist in the goblin camp before hand, so we create a
///dynamic system that can create (mostly) even sized waves. 

//Add the first wave when combat starts, turn starts is too late in this case!
IF
EnteredCombat(S_GOB_DrowCommander_25721313-0c15-4935-8176-9f134385451b,_)
AND
NOT DB_DEN_AttackOnDen_DefeatCounterComplete("DEN_AttackOnDen_GateCombat")
AND
DB_GlobalFlag((FLAG)DEN_AttackOnDen_State_RaidersAtDen_29f372ac-f9f1-4d54-bc9e-7eb493fa09d8)
THEN
PROC_DEN_AttackOnDen_TryAddNewWave();


//Every Drow turn, check if we start a new wave
IF
TurnStarted(S_GOB_DrowCommander_25721313-0c15-4935-8176-9f134385451b)
AND
NOT DB_DEN_AttackOnDen_DefeatCounterComplete("DEN_AttackOnDen_GateCombat")
AND
DB_GlobalFlag((FLAG)DEN_AttackOnDen_State_RaidersAtDen_29f372ac-f9f1-4d54-bc9e-7eb493fa09d8)
THEN
PROC_DEN_AttackOnDen_TryAddNewWave();

PROC
PROC_DEN_AttackOnDen_TryAddNewWave()
AND
DB_DEN_AttackOnDen_CurrentWave(_CurrentWave)
AND
IntegerSum(_CurrentWave,1,_NextWave)
AND
DB_DEN_AttackOnDen_Waves(_NextWave,_NumberOfWaveParticipants,_,_)
THEN
NOT DB_DEN_AttackOnDen_CurrentWave(_CurrentWave);
DB_DEN_AttackOnDen_CurrentWave(_NextWave);
PROC_DEN_AttackOnDen_AddToNextWave(_NumberOfWaveParticipants);

PROC
PROC_DEN_AttackOnDen_TryAddNewWave()
AND
DB_DEN_AttackOnDen_CurrentWave(_CurrentWave)
AND
IntegerSum(_CurrentWave,1,_NextWave)
AND
_NextWave > 4
THEN
PROC_DEN_AttackOnDen_AddToNextWave(0);

//Update Atmosphere
PROC
PROC_DEN_AttackOnDen_TryAddNewWave()
AND
DB_DEN_AttackOnDen_CurrentWave(_CurrentWave)
AND
DB_DEN_AttackOnDen_Waves(_CurrentWave,_,_,_Atm)
AND
_Atm != ""
THEN
TriggerSetAtmosphere((TRIGGER)ATM_WLD_RangerCamp_G_Forest_LT_WLD_RangerCamp_9e8067fa-2c43-bf05-58e3-9fb308541417, _Atm);

//Reset wave character counter
PROC
PROC_DEN_AttackOnDen_AddToNextWave((INTEGER)_)
AND
DB_DEN_AttackOnDen_AddToNextWave(_Raider,_NextWaveCount)
THEN
NOT DB_DEN_AttackOnDen_AddToNextWave(_Raider,_NextWaveCount);

//Send out all remaining forces
PROC
PROC_DEN_AttackOnDen_AddToNextWave((INTEGER)_NumberOfWaveParticipants)
AND
SysCount("DB_DEN_AttackOnDen_WavePriority",1,_Int)
AND
_Int < 6
THEN
PROC_DEN_AttackOnDen_AllForcesJoinAttack();


//Add to wave based on number to be added per the DB_DEN_AttackOnDen_Waves
PROC
PROC_DEN_AttackOnDen_AddToNextWave((INTEGER)_NumberOfWaveParticipants)
AND
DB_DEN_AttackOnDen_WavePriority(_Raider,_SwarmId)
AND
SysCount("DB_DEN_AttackOnDen_AddToNextWave",2,_NextWaveCount)
AND
_NextWaveCount < _NumberOfWaveParticipants
THEN
PROC_DEN_AttackOnDen_JoinAttack(_Raider,_SwarmId,_NextWaveCount);

PROC
PROC_DEN_AttackOnDen_JoinAttack((CHARACTER)_Raider,(STRING)_SwarmId,(INTEGER)_NextWaveCount)
THEN
DB_DEN_AttackOnDen_AddToNextWave(_Raider,_NextWaveCount);
NOT DB_DEN_AttackOnDen_WavePriority(_Raider,_SwarmId);
NOT DB_DEN_AttackOnDen_WaveParticipants(_Raider,0);
DB_DEN_AttackOnDen_WaveParticipants(_Raider,1);

//Final wave
PROC
PROC_DEN_AttackOnDen_AllForcesJoinAttack()
AND
NOT DB_GlobalFlag((FLAG)DEN_AttackOnDen_State_RaidersInDen_5e839d5f-3e25-4b56-b758-81d25c9cbd33)
AND
QRY_OnlyOnce("DEN_AttackOnDen_AllForcesJoinAttack")
AND
DB_DEN_AttackOnDen_WavePriority(_Raider,_SwarmId)
THEN
PROC_DEN_AttackOnDen_JoinAttack(_Raider,_SwarmId,0);

PROC
PROC_StateSet_Defeated(S_GOB_DrowCommander_25721313-0c15-4935-8176-9f134385451b)
AND
DB_GlobalFlag((FLAG)DEN_AttackOnDen_State_RaidersAtDen_29f372ac-f9f1-4d54-bc9e-7eb493fa09d8)
AND
NOT DB_GlobalFlag((FLAG)DEN_AttackOnDen_State_RaidersInDen_5e839d5f-3e25-4b56-b758-81d25c9cbd33)
AND
NOT DB_DEN_AttackOnDen_DefeatCounterComplete("DEN_AttackOnDen_RaiderCombat")
THEN
PROC_DEN_AttackOnDen_AllForcesJoinAttack();

IF
Dying(S_GOB_DrowCommander_25721313-0c15-4935-8176-9f134385451b)
AND
DB_GlobalFlag((FLAG)DEN_AttackOnDen_State_RaidersAtDen_29f372ac-f9f1-4d54-bc9e-7eb493fa09d8)
AND
NOT DB_GlobalFlag((FLAG)DEN_AttackOnDen_State_RaidersInDen_5e839d5f-3e25-4b56-b758-81d25c9cbd33)
AND
NOT DB_DEN_AttackOnDen_DefeatCounterComplete("DEN_AttackOnDen_RaiderCombat")
THEN
PROC_DEN_AttackOnDen_AllForcesJoinAttack();

IF
DestroyedBy(_Gate,_,_,_)
AND
DB_GlobalFlag((FLAG)DEN_AttackOnDen_State_RaidersAtDen_29f372ac-f9f1-4d54-bc9e-7eb493fa09d8)
AND
DB_DEN_GateInUse(_Gate)
THEN
PROC_DEN_AttackOnDen_AllForcesJoinAttack();

IF
DB_InRegion(_Player, S_DEN_RaidersAggroArea_c4bc8b06-6b65-49a0-9e8a-89233c70a3a9)
AND
DB_Players(_Player)
AND
NOT DB_HiddenCharacters(_Player, _)
THEN
PROC_TriggerUnregisterForPlayers(S_DEN_RaidersAggroArea_c4bc8b06-6b65-49a0-9e8a-89233c70a3a9);
PROC_DEN_AttackOnDen_AllForcesJoinAttack();

IF
TextEvent("DEN_AttackOnDen_AllForcesJoinAttack")
THEN
PROC_DEN_AttackOnDen_AllForcesJoinAttack();

//END_REGION

//REGION Hints helping AI move into den

//If Raiders enter the Ramparts, clear their AI hints
IF
DB_DEN_AttackOnDen_WaveParticipants(_Raider,1)
THEN
TriggerRegisterForCharacter(S_DEN_AttackOnDen_RaiderAiHintClear_d67da57d-9c81-4330-bbd1-0ca195d838ac,_Raider);

IF
EnteredTrigger(_Raider,S_DEN_AttackOnDen_RaiderAiHintClear_d67da57d-9c81-4330-bbd1-0ca195d838ac)
THEN
SetAiHint(_Raider,NULL_00000000-0000-0000-0000-000000000000);

//END_REGION

//REGION Sapper Explode Fallback

IF
CastedSpell((CHARACTER)_Sapper,"Shout_GOB_DetonateSelf",_,_,_)
AND
_Sapper != NULL_00000000-0000-0000-0000-000000000000
AND
IsCharacter(_Sapper, 1)
AND
NOT DB_Dead(_Sapper)
AND
GetPosition(_Sapper,_X,_Y,_Z)
THEN
//CreateExplosionAtPosition(_X,_Y,_Z,"Projectile_Barrel_Explosion_Smokepowder",3,_Sapper);
Die(_Sapper,DEATHTYPE.Incinerate,_Sapper,1,0);

//END_REGION

//REGION Drow scripting

PROC
PROC_DEN_AttackOnDen_StartCombat()
AND
NOT DB_DEN_AttackOnDen_SiegeIsActive(1)
THEN
DB_DEN_AttackOnDen_SiegeIsActive(1);
SetTag(S_GOB_DrowCommander_25721313-0c15-4935-8176-9f134385451b,(TAG)AI_BLOCKWEAPONACTIONS_53c3304c-032d-4c49-86df-00b3b03a6b13);
SetStayInAiHints(S_GOB_DrowCommander_25721313-0c15-4935-8176-9f134385451b, 1);
SetAiHint(S_GOB_DrowCommander_25721313-0c15-4935-8176-9f134385451b, AI_HINT_UNIQUE_1902723d-dd16-4e7a-87d6-7b07f63add79);

//AD Flags
IF
DB_DEN_AttackOnDen_CurrentWave(_Wave)
AND
DB_DEN_AttackOnDen_Waves(_Wave,_,_Flag, _)
THEN
SetFlag(_Flag,S_GOB_DrowCommander_25721313-0c15-4935-8176-9f134385451b,0);

IF
TurnStarted(S_GOB_DrowCommander_25721313-0c15-4935-8176-9f134385451b)
AND
DB_State_Current(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_AttackOnDen")
AND
DB_DEN_AttackOnDen_SiegeIsActive(1)
THEN
PROC_TryStartAD(GOB_DrowCommander_AD_AttackOnDen_ee0c9dcb-8da8-6329-5a9d-737d864c4f8f,S_GOB_DrowCommander_25721313-0c15-4935-8176-9f134385451b);

IF
TurnStarted(S_GOB_DrowCommander_25721313-0c15-4935-8176-9f134385451b)
AND
DB_State_Current(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_AttackOnDen")
AND
DB_OnlyOnce("DEN_AttackOnDen_DrowChargesGates")
AND
QRY_OnlyOnce("DEN_AttackOnDen_DrowChargesAD")
THEN
PROC_TryStartAD(GOB_DrowCommander_AD_AttackOnDen_ee0c9dcb-8da8-6329-5a9d-737d864c4f8f,S_GOB_DrowCommander_25721313-0c15-4935-8176-9f134385451b);


//Stay in region trigger logic
PROC
PROC_DEN_AttackOnDen_AllForcesJoinAttack()
THEN
NOT DB_DEN_AttackOnDen_SiegeIsActive(1);
ClearTag(S_GOB_DrowCommander_25721313-0c15-4935-8176-9f134385451b,(TAG)AI_BLOCKWEAPONACTIONS_53c3304c-032d-4c49-86df-00b3b03a6b13);
SetAiHint(S_GOB_DrowCommander_25721313-0c15-4935-8176-9f134385451b,NULL_00000000-0000-0000-0000-000000000000);
SetStayInAiHints(S_GOB_DrowCommander_25721313-0c15-4935-8176-9f134385451b,0);

//END_REGION

//REGION Gate as a target logic for Drow Commander
PROC
PROC_DEN_AttackOnDen_AllForcesJoinAttack()
AND
DB_DEN_GateInUse(_Gate)
AND
IsClosed(_Gate,1)
THEN
AiAddInterestingItem(S_GOB_DrowCommander_25721313-0c15-4935-8176-9f134385451b,_Gate);

//Clear the Gate as an interesting item if it is opened
IF
Opened(_Gate)
AND
DB_DEN_GateInUse(_Gate)
THEN
AiRemoveInterestingItem(S_GOB_DrowCommander_25721313-0c15-4935-8176-9f134385451b,_Gate);

//Re-add gate as target if closed
IF
Closed(_Gate)
AND
DB_DEN_GateInUse(_Gate)
THEN
AiAddInterestingItem(S_GOB_DrowCommander_25721313-0c15-4935-8176-9f134385451b,_Gate);

//END_REGION

//REGION Swarm Gate Defenders

PROC
PROC_DEN_AttackOnDen_SetupNPC(_Defender, "Gate", _)
AND
_Defender != S_Player_Wyll_c774d764-4a17-48dc-b470-32ace9ce447d
AND
_Defender != S_DEN_TieflingLeader_475200ee-cc3c-4dbe-84b1-1820c02ea26a
THEN
DB_DEN_AttackOnDen_GateDefenderSwarmGroup(_Defender);
RequestSetSwarmGroup(_Defender,"DEN_AttackOnDen_GateDefenders");

PROC
PROC_DEN_AttackOnDen_EndOfCombat(_)
AND
DB_DEN_AttackOnDen_GateDefenderSwarmGroup(_Defender)
THEN
NOT DB_DEN_AttackOnDen_GateDefenderSwarmGroup(_Defender);
RequestSetSwarmGroup(_Defender,"");

//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "Act1"
