Version 1
SubGoalCombiner SGC_AND
INITSECTION
//REGION Behavior Groupings
/*
The second entries in this DB denote how the NPCs will behave during the Druid Attack.
Special Cases: require custom handling to either participate or leave grove for some reason.
Flee: Outsiders who leave when the event starts.
Fight: Outsiders who fight against the Druids.
Cower: Outsiders who are non-combatants. Hide in the Prison and cower.
Kids: Outsider kids who flee to the kid's hideout.
Outdoor Druids/Animals: Druids located outside of the Druid Lair subregion.
Indoor Druids/Animals: Druids located inside the Druid Lair subregion.
*/

//Special Cases
DB_DEN_DruidAttack_NonDruids((CHARACTER)S_DEN_Gatekeeper_847717b3-82eb-45a7-b875-78665c12ce9a,"Special","",(DIALOGRESOURCE)DEN_DruidAttack_Gatekeeper_b2017c64-1221-362d-794d-16fae9bdb765);//joins Fight once all fled
DB_DEN_DruidAttack_NonDruids(S_DEN_ScoutCaptive_f5b5819f-1636-4f2e-82bb-709522cc399f,"Special","",DEN_DruidAttack_ScoutCaptive_d73e8e2c-9453-dbc7-193b-2f230bc7b6e2);//joins Fight if freed,else disappears
DB_DEN_DruidAttack_NonDruids(S_DEN_CharmedKid_3b92c689-6024-4446-a6c9-584e9e8d77ca,"Special","",DEN_DruidAttack_CharmedKid_3556eac7-16a9-a379-f78e-8ddfa4d7bb89);//joins Kids if alive+harpies over
DB_DEN_DruidAttack_NonDruids(S_DEN_Tiefling_005_e5319db6-ea86-43cc-9fd0-5ec1e0eab492,"Special","",DEN_DruidAttack_Tiefling005_0470634c-b135-fba4-7a47-0286608660ae);//joins Cower or Fight
DB_DEN_DruidAttack_NonDruids(S_Player_ShadowHeart_3ed74f06-3c60-42dc-83f6-f034cb47c679,"Special","",NULL_00000000-0000-0000-0000-000000000000);
DB_DEN_DruidAttack_NonDruids(S_Player_Wyll_c774d764-4a17-48dc-b470-32ace9ce447d,"Special","",DEN_DruidAttack_Wyll_33bcabb5-66eb-1f2d-a99c-ff6abc3a72e2);
DB_DEN_DruidAttack_NonDruids(S_DEN_DruidOpposed_322cf8d2-32ee-453f-987e-f12b32652b5d,"Special","DEN_DRUIDATTACK_RAMP",DEN_DruidAttack_DruidOpposed_e51bc513-8bb9-bde2-678a-8228bc5964a6); //Rath sides with the Tieflings
DB_DEN_DruidAttack_NonDruids(S_DEN_PetWolf_63471e30-7413-4496-97de-0bdf67c2f753,"Special","DEN_DRUIDATTACK_RAMP",DEN_DruidAttack_PetWolf_8bbde966-95a6-e8fb-4d45-644324309a6e); //Silver sides with the Tieflings

//Flee
DB_DEN_DruidAttack_NonDruids(S_DEN_AdventurerLeader_82d1b843-9e8c-48a5-9d87-caddea5c193c,"Flee","",NULL_00000000-0000-0000-0000-000000000000);
DB_DEN_DruidAttack_NonDruids(S_DEN_RobbedAdventurer_534bceaf-678c-40a0-8ca9-e1134f95ba0d,"Flee","",NULL_00000000-0000-0000-0000-000000000000);
DB_DEN_DruidAttack_NonDruids(S_DEN_RaidAdventurer_4faf77a0-b883-4f7b-acbf-4500973f446d,"Flee","",NULL_00000000-0000-0000-0000-000000000000);
DB_DEN_DruidAttack_NonDruids(S_HAG_Hag_c457d064-83fb-4ec6-b74d-1f30dfafd12d,"Flee","",NULL_00000000-0000-0000-0000-000000000000);
DB_DEN_DruidAttack_NonDruids(S_GLO_Volo_2af25a85-5b9a-4794-85d3-0bd4c4d262fa,"Flee","",NULL_00000000-0000-0000-0000-000000000000);
DB_DEN_DruidAttack_NonDruids(S_GLO_ProdigyBrother_d0187724-c0e2-4019-a01d-a03ee8153f1b,"Flee","DEN_DRUIDATTACK_CAVEENTRANCE",DEN_DruidAttack_ProdigyBrother_bc9af748-5f3d-5bbc-70c0-d0c60bd4a974);//special
DB_DEN_DruidAttack_NonDruids(S_GLO_ProdigySister_44d09b0b-0568-456c-b18d-559a0a3f981d,"Flee","DEN_DRUIDATTACK_RAMP",DEN_DruidAttack_ProdigySister_a569e6bf-fed8-6cdd-2211-f537764180b6);//special
DB_DEN_DruidAttack_NonDruids(S_GLO_Prodigy_b6a3a9e9-b6eb-4c19-ab3f-4c431178fe1b,"Flee","DEN_DRUIDATTACK_TIEFLINGQUARTERS",DEN_DruidAttack_Prodigy_c3b0d58c-9a48-3640-05c7-7696e6472871);//special

//Fight
DB_DEN_DruidAttack_NonDruids(S_DEN_Tiefling_008_03b6fae4-d250-4ce9-9a01-19cb427deb17,"Fight","DEN_DRUIDATTACK_CAVEENTRANCE",DEN_DruidAttack_SonOfChef_51f90355-bf6d-62d2-523b-a5b06777d672);
DB_DEN_DruidAttack_NonDruids(S_DEN_TieflingLeader_475200ee-cc3c-4dbe-84b1-1820c02ea26a,"Fight","DEN_DRUIDATTACK_TIEFLINGQUARTERS",DEN_DruidAttack_TieflingLeader_ffb672a7-3815-eba5-ebab-be02e73f2110);
DB_DEN_DruidAttack_NonDruids(S_DEN_Tiefling_011_77439e86-3f60-4456-bd55-931e2f45654f,"Fight","DEN_DRUIDATTACK_RAMP",DEN_DruidAttack_Tiefling011_39fdac41-197c-1026-98d6-796764a93e3e);
DB_DEN_DruidAttack_NonDruids(S_DEN_Tiefling_004_c9562174-44af-4ffa-9e5e-da58538f23d8,"Fight","DEN_DRUIDATTACK_CAVEENTRANCE",DEN_DruidAttack_Tiefling004_b7e1382b-ca79-2be6-bd60-9ff5d0a43c88);
DB_DEN_DruidAttack_NonDruids(S_DEN_Tiefling_001_82f8662d-76da-4352-b37e-01ba433b5d43,"Fight","DEN_DRUIDATTACK_CAVEENTRANCE",DEN_DruidAttack_Tiefling001_a8b2c76e-8a7b-31d5-89b0-551379eb78ff);
DB_DEN_DruidAttack_NonDruids(S_DEN_Weaponsmith_e2ad06ec-8034-479a-9f69-b86faea6dc79,"Fight","DEN_DRUIDATTACK_TIEFLINGQUARTERS",DEN_DruidAttack_Weaponsmith_PostEA_23532629-93cf-a224-d39d-f29825c49025);
DB_DEN_DruidAttack_NonDruids(S_DEN_TieflingRefugee_RangerTrader_001_637d8d68-2a04-409e-a77d-cf31ac9478ee,"Fight","DEN_DRUIDATTACK_TIEFLINGQUARTERS",DEN_DruidAttack_RangerTrader_4a126415-d96e-d718-e489-01eb748fd0e7);
DB_DEN_DruidAttack_NonDruids(S_DEN_PrisonGuard_3ff71f38-28e9-4e72-ba17-9f6d3bb2a995,"Fight","DEN_DRUIDATTACK_TIEFLINGQUARTERS",DEN_DruidAttack_PrisonGuard_2728467e-d5da-915f-0afc-d96eb30bf2b6);
DB_DEN_DruidAttack_NonDruids(S_GLO_IrritatedTiefling_65ad9da0-0efb-4cc3-bf82-c006f43dda6c,"Fight","DEN_DRUIDATTACK_RAMP",DEN_DruidAttack_IrritatedTiefling_f0f2d15b-5117-4149-4a81-55e9171b7842);
DB_DEN_DruidAttack_NonDruids(S_DEN_Trainer_02025646-347a-4235-aef7-e46b7c94b435,"Fight","DEN_DRUIDATTACK_RAMP",DEN_DruidAttack_Trainer_369683da-1441-bf8a-f4b1-b776c239fae7);

//Cower
DB_DEN_DruidAttack_NonDruids(S_DEN_TieflingRefugee_004_bc4c4282-86b0-4330-9df8-246ed0a704a2,"Cower","DEN_DRUIDATTACK_PRISONCOWER",DEN_DruidAttack_Refugee004_b51b9873-15e7-70a6-4878-d58d24cf29e2);//
DB_DEN_DruidAttack_NonDruids(S_GLO_Stargazer_cd442e20-a6de-4497-ac51-8466433a758e,"Cower","DEN_DRUIDATTACK_PRISONCOWER",DEN_DruidAttack_Stargazer_72c19b42-2bbe-58a5-f4f5-cefa33614101);
DB_DEN_DruidAttack_NonDruids(S_DEN_Tiefling_010_23129d6c-8d39-4a4c-a4f6-cfc6637b597c,"Cower","DEN_DRUIDATTACK_PRISONCOWER",DEN_DruidAttack_Tiefling010_879f39d2-d144-4dcb-d57a-70484244b450);
DB_DEN_DruidAttack_NonDruids(S_GLO_YoungLover_01_dd9178e7-1e3f-43bc-8a38-666dfcac7d0c,"Cower","DEN_DRUIDATTACK_PRISONCOWER",DEN_DruidAttack_YoungLover01_aafbfb8e-d39e-944f-3088-f9a4b5b76d25);//
DB_DEN_DruidAttack_NonDruids(S_GLO_YoungLover_02_dcf597c0-36c5-4c81-957a-6fe9fca50a68,"Cower","DEN_DRUIDATTACK_PRISONCOWER",DEN_DruidAttack_YoungLover02_bb5294db-06b4-6874-2f73-4516163c8aea);
DB_DEN_DruidAttack_NonDruids(S_DEN_Tiefling_FoodTrader_001_1b35671b-e5d7-4943-bbd0-4c816b69b7cb,"Cower","DEN_DRUIDATTACK_PRISONCOWER",DEN_DruidAttack_Chef_96f76f55-7039-a7bb-09df-e22d64b0d0ce);//
DB_DEN_DruidAttack_NonDruids(S_DEN_Bard_4a405fba-3000-4c63-97e5-a8001ebb883c,"Cower","DEN_DRUIDATTACK_PRISONCOWER",DEN_DruidAttack_Bard_36153d2f-0c0e-4d3b-9f24-971ea061a0c6);
DB_DEN_DruidAttack_NonDruids(S_DEN_ParentA_d6d88c8b-6ba7-4350-b3b3-d60565a44e90,"Cower","DEN_DRUIDATTACK_PRISONCOWER",DEN_DruidAttack_ParentA_8b150201-14de-fc09-9e3e-3103d5382f89);//
DB_DEN_DruidAttack_NonDruids(S_DEN_ParentB_397467d4-1631-447b-a505-d44275dca78e,"Cower","DEN_DRUIDATTACK_PRISONCOWER",DEN_DruidAttack_ParentB_f17ab2c3-dedd-8b20-810b-2824625aacdf);
DB_DEN_DruidAttack_NonDruids(S_DEN_GrieflingFriend_c3334ee5-38dc-4197-aacc-4aa55803ff52,"Cower","DEN_DRUIDATTACK_PRISONCOWER",DEN_DruidAttack_GrieflingFriend_3fbfe9dd-7a96-4779-f9e6-0efe25948abd);
DB_DEN_DruidAttack_NonDruids(S_DEN_Griefling_7ce0afc2-e8f2-4f2e-82d8-27df98acc3d8,"Cower","DEN_DRUIDATTACK_PRISONCOWER",DEN_DruidAttack_Griefling_913aa59d-e8e3-75c2-3027-8a38ce6c4f62);
DB_DEN_DruidAttack_NonDruids(S_DEN_Protester_001_bd673fe3-983d-4aee-b73b-6ba6217e8a20,"Cower","DEN_DRUIDATTACK_PRISONCOWER",DEN_DruidAttack_Protester1_a3bceea0-4220-5afa-0b47-fe1919a29e5e);
DB_DEN_DruidAttack_NonDruids(S_DEN_Protester_002_5ba86ab9-b36e-468a-a0ac-0439c0ec205a,"Cower","DEN_DRUIDATTACK_PRISONCOWER",DEN_DruidAttack_Protester2_5ed3b58f-bad4-0a9d-1ec9-11ce480d2836);
DB_DEN_DruidAttack_NonDruids(S_DEN_Protester_003_650d1cdc-fff6-49f0-aaa2-0a10bcf89abf,"Cower","DEN_DRUIDATTACK_PRISONCOWER",DEN_DruidAttack_Protester3_1984b182-1b19-0b7b-89a3-35551539441e);

//Kids
DB_DEN_DruidAttack_NonDruids(S_DEN_Trainee_001_1f839ad2-2bcb-47d2-8de9-db7a1fb5d67f,"Kid","",DEN_DruidAttack_Trainee001_c649d259-f4fa-6ba2-e403-d8bc77d1ebb4);
DB_DEN_DruidAttack_NonDruids(S_DEN_Trainee_002_bd7f31a6-98e8-46cd-97be-4347fa45d387,"Kid","",DEN_DruidAttack_Trainee002_4e617305-9702-400e-03ac-bb2c60fb9b8e);
DB_DEN_DruidAttack_NonDruids(S_DEN_Trainee_003_71bdc11d-b488-427d-8453-632e91178c7e,"Kid","",DEN_DruidAttack_Trainee003_2ca993e2-2171-cc98-6c35-a7e89da7c1f1);
DB_DEN_DruidAttack_NonDruids(S_DEN_TieflingKid_004_6644185d-385e-4dfc-973c-bb854cbfd540,"Kid","",DEN_DruidAttack_Kid004_6f6f8a4b-b1fc-3f2f-eda8-ade6604d1a5e);
DB_DEN_DruidAttack_NonDruids(S_DEN_PickpocketTrader_e1fda08b-45d4-41db-84b5-20e9931ba5af,"Kid","",DEN_DruidAttack_PickpocketTrader_3b1bf832-42c8-1d42-8f52-de9f51087533);
DB_DEN_DruidAttack_NonDruids(S_DEN_Pickpocket_540ddc1f-42c6-4347-ba03-b3cf3d3942ab,"Kid","",DEN_DruidAttack_Pickpocket_9a522c35-5349-fd2f-043d-ffb8d49f45e5);
DB_DEN_DruidAttack_NonDruids(S_DEN_RobberKid_94e865e9-790d-4633-a378-8fb50832b5e9,"Kid","",DEN_DruidAttack_RobberKid_78696973-8773-8840-6f09-464fe084a602);
DB_DEN_DruidAttack_NonDruids(S_DEN_ThiefHideoutLeader_c8ab1ca6-96bb-467e-91c9-af87bc4d3925,"Kid","",DEN_DruidAttack_HideoutLeader_6d23c2ff-a91f-e8f9-efe6-0da787526115);
DB_DEN_DruidAttack_NonDruids(S_DEN_SnakeKid_02257c1c-bbec-4ae3-9bcb-31c75a0a982f,"Kid","",DEN_DruidAttack_SnakeKid_86ccd153-58bf-4062-ddfc-40d0de8f7940);
DB_DEN_DruidAttack_NonDruids(S_GLO_GruntingKid_0f8ef61e-cb63-49e1-a242-677173bff5e0,"Kid","",DEN_DruidAttack_GruntingKid_f90764ab-f437-08b6-4dc3-73c5c6e3f896);

//Outdoor Druids
DB_DEN_DruidAttack_Druids((CHARACTER)S_DEN_DruidGuard_001_d1de6b4d-02d1-47f9-8e9e-55a593e3dc71,"DEN_DRUIDATTACK_CAVEENTRANCE",(DIALOGRESOURCE)DEN_DruidAttack_DruidGuard001_32828100-ccd2-8936-34a9-204d8f1e0888);
DB_DEN_DruidAttack_Druids(S_DEN_DruidGuard_002_8e2433db-55e9-4d03-a8fc-f8d02711907c,"DEN_DRUIDATTACK_CAVEENTRANCE",DEN_DruidAttack_DruidGuard002_f9c5bedb-6952-0667-f9e0-42f9a1bf410e);
DB_DEN_DruidAttack_Druids(S_DEN_ServantPlight_005_13db744d-8a48-4131-8801-fd5fc289fdf6,"DEN_DRUIDATTACK_CAVEENTRANCE",DEN_DruidAttack_ServantPlight_34d3c4e8-1dac-7798-f7ce-3dddb7299bdc);
DB_DEN_DruidAttack_Druids(S_DEN_RitualDruid_004_32bef45a-47ca-4c3a-b907-13a857b316fd,"DEN_DRUIDATTACK_RAMP",DEN_DruidAttack_RitualDruid4_a6e71ebe-b590-947a-49d2-cf26e835d689);
DB_DEN_DruidAttack_Druids(S_DEN_DruidGuard_003_b888b138-951a-4092-b356-333b4b65123d,"DEN_DRUIDATTACK_CAVEENTRANCE",DEN_DruidAttack_DruidGuard003_d667ea97-cb64-1fc6-e268-e35f33c0d268);
DB_DEN_DruidAttack_Druids(S_DEN_BirdSender_30ee2bc0-0e69-4999-8d1c-8335c439cecf,"DEN_DRUIDATTACK_RAMP",DEN_DruidAttack_BirdSender_e3916978-461d-8080-1176-4ef99967a3e2);
DB_DEN_DruidAttack_Druids(S_DEN_RitualDruid_001_9c5c4c89-890b-4e72-8698-53d36e6b4271,"DEN_DRUIDATTACK_CAVEENTRANCE",DEN_DruidAttack_RitualDruid1_ebfbd203-cd1a-b9f8-0b0e-f07d9afad3d9);
DB_DEN_DruidAttack_Druids(S_DEN_RitualDruid_002_96e41e71-9239-498b-9cb8-8b14fd48acd0,"DEN_DRUIDATTACK_CAVEENTRANCE",DEN_DruidAttack_RitualDruid2_c11deb40-806b-b23a-73e7-74f4b93cc16a);
DB_DEN_DruidAttack_Druids(S_DEN_RitualDruid_003_7cae8e24-d610-4229-859d-7b2da7c5d162,"DEN_DRUIDATTACK_RAMP",DEN_DruidAttack_RitualDruid3_7fe0fb85-e318-fff4-f665-e2136ccc0f85);
DB_DEN_DruidAttack_Druids(S_DEN_RitualDruid_005_641fc4b5-3c42-4c4d-a759-541ad437f9df,"DEN_DRUIDATTACK_TIEFLINGQUARTERS",DEN_DruidAttack_RitualDruid5_b35902d9-9b30-036e-b90a-1dfb40fcba85);

//Outdoor Animals
DB_DEN_DruidAttack_Druids(S_DEN_VoloBear_893c5f40-a760-4b04-bd86-c8fb8f5dd08a,"DEN_DRUIDATTACK_CAVEENTRANCE",DEN_DruidAttack_VoloBear_83fce1f0-50c5-e8fd-7713-42a3daab9163);
DB_DEN_DruidAttack_Druids(S_DEN_ZenBear_d4d4bfd2-9639-45bc-a256-2f079e53db29,"DEN_DRUIDATTACK_RAMP",DEN_DruidAttack_ZenBear_3268b799-3191-37a1-4679-dee465bf0fa0);
DB_DEN_DruidAttack_Druids(S_DEN_ExcitedBoar_5e856a8e-957a-49b1-8ec7-f430984e08ca,"DEN_DRUIDATTACK_RAMP",DEN_DruidAttack_ExcitedBoar_48464056-361f-66b8-11eb-14fc8261de8d);
DB_DEN_DruidAttack_Druids(S_DEN_ElevatorBear_04b7ef23-1002-4682-b962-33a2328bcd5c,"DEN_DRUIDATTACK_TIEFLINGQUARTERS",DEN_DruidAttack_ElevatorBear_62f1b786-7a8d-3bbb-2226-403b9ad4bcb2);

//Indoor Druids
DB_DEN_DruidAttack_Druids(S_DEN_DruidLeader_95eb2b0b-a522-4ea5-8167-c5f4d1418156,"DEN_DRUIDATTACK_TIEFLINGQUARTERS",DEN_DruidAttack_DruidLeader_04b1e983-d5a3-9687-2829-eab4648aed49);
DB_DEN_DruidAttack_Druids(S_DEN_ServantGnome_003_0d971a2f-5fd7-4358-8966-147ed8b106dd,"DEN_DRUIDATTACK_TIEFLINGQUARTERS",DEN_DruidAttack_ServantGnome_00e44c88-63d6-511f-44bb-f5ed8c59686b);
DB_DEN_DruidAttack_Druids(S_DEN_ServantIntolerant_002_6f36c7a1-edfd-4e99-bd90-6d874f68c9b8,"DEN_DRUIDATTACK_TIEFLINGQUARTERS",DEN_DruidAttack_ServantIntolerant_1ddd13ab-69a3-3859-bd16-d2176ea84f4c);
DB_DEN_DruidAttack_Druids(S_DEN_Apprentice_7cabf226-e34b-4556-8903-a45d0fe26caf,"DEN_DRUIDATTACK_TIEFLINGQUARTERS",DEN_DruidAttack_Apprentice_1326e146-505c-8933-1680-cbc2d0ceedcd);

DB_DEN_LairDruid((CHARACTER)S_DEN_DruidLeader_95eb2b0b-a522-4ea5-8167-c5f4d1418156);
DB_DEN_LairDruid(S_DEN_ServantGnome_003_0d971a2f-5fd7-4358-8966-147ed8b106dd);
DB_DEN_LairDruid(S_DEN_ServantIntolerant_002_6f36c7a1-edfd-4e99-bd90-6d874f68c9b8);
DB_DEN_LairDruid(S_DEN_Apprentice_7cabf226-e34b-4556-8903-a45d0fe26caf);
//END_REGION

//REGION Combat Setup

//There are four encounters. Druids always move from one encounter to the next when one ends.
//DEN_DRUIDATTACK_CAVEENTRANCE: Entrance to the tiefling cave area
//DEN_DRUIDATTACK_RAMP: Ramp that goes down to the druid area
//DEN_DRUIDATTACK_TIEFLINGQUARTERS: Main area with the packing tiefling NPCs
//DEN_DRUIDATTACK_PRISON: Prison area where tieflings go cower

DB_DEN_DruidAttack_Combats("DEN_DRUIDATTACK_CAVEENTRANCE");
DB_DEN_DruidAttack_Combats("DEN_DRUIDATTACK_RAMP");
DB_DEN_DruidAttack_Combats("DEN_DRUIDATTACK_TIEFLINGQUARTERS");
DB_DEN_DruidAttack_Combats("DEN_DRUIDATTACK_PRISON");

DB_DEN_DruidAttack_ProdigyNPCs((CHARACTER)S_GLO_ProdigyBrother_d0187724-c0e2-4019-a01d-a03ee8153f1b);
DB_DEN_DruidAttack_ProdigyNPCs(S_GLO_ProdigySister_44d09b0b-0568-456c-b18d-559a0a3f981d);
DB_DEN_DruidAttack_ProdigyNPCs(S_GLO_Prodigy_b6a3a9e9-b6eb-4c19-ab3f-4c431178fe1b);

//Non-Idol crime types against druids that will trigger Druid Attack
DB_DEN_DruidAttack_AttackStartCrimes("Assault");
DB_DEN_DruidAttack_AttackStartCrimes("Murder");

//Idol crime types that will trigger Druid Attack + custom dialogs
DB_DEN_DruidAttack_IdolCrimes("Steal", "DEN_DruidAttack_StoleIdol",(DIALOGRESOURCE)GEB_DEN_DruidAttack_AD_NoticedIdolStolen_f9c88974-84e1-9a76-3edf-8568ddff6b62);
DB_DEN_DruidAttack_IdolCrimes("Vandalise", "DEN_DruidAttack_DamagedIdol",GEB_DEN_DruidAttack_AD_NoticedIdolTampered_1eff316c-1568-f1ca-48a7-2e7962830553);
DB_DEN_DruidAttack_IdolCrimes("UseForbiddenItem", "DEN_DruidAttack_FallbackIdolCrime",GEB_DEN_DruidAttack_AD_NoticedIdolTampered_1eff316c-1568-f1ca-48a7-2e7962830553);
DB_DEN_DruidAttack_IdolCrimes("MoveForbiddenItem", "DEN_DruidAttack_FallbackIdolCrime",GEB_DEN_DruidAttack_AD_NoticedIdolTampered_1eff316c-1568-f1ca-48a7-2e7962830553);

DB_LinkedCrimes("Steal", "DEN_GroveConflict_IdolStolen");

DB_DEN_DruidAttack_FactionLeaders((CHARACTER)S_DEN_TieflingLeader_475200ee-cc3c-4dbe-84b1-1820c02ea26a,(FLAG)DEN_DruidAttack_State_PrepAfterDeathOfDruids_b4754af7-07ec-433c-87d2-e78ef4c79e6e);
DB_DEN_DruidAttack_FactionLeaders(S_DEN_Trainer_02025646-347a-4235-aef7-e46b7c94b435,DEN_DruidAttack_State_PrepAfterDeathOfDruids_b4754af7-07ec-433c-87d2-e78ef4c79e6e);

//Flags set when either Outsiders or Druids win
DB_DEN_DruidAttack_EndFlags(DEN_DruidAttack_State_PrepAfterDeathOfDruids_b4754af7-07ec-433c-87d2-e78ef4c79e6e);
DB_DEN_DruidAttack_EndFlags(DEN_DruidAttack_State_PrepAfterDeathOfTieflings_79826e3c-1dd7-4a8b-a5ca-cf4dfde51d12);

//Druid attack is triggered when DEN_DruidAttack_LINE_DruidToCombat ends or if it fails to play
DB_Inclusion_NPCDialog(DEN_DruidAttack_LINE_DruidToCombat_5a00d684-3cc6-fede-ad99-4d12ce8487a7, (CHARACTER)S_DEN_DruidLeader_95eb2b0b-a522-4ea5-8167-c5f4d1418156);
DB_DialogBlockTradeButton(DEN_DruidAttack_LINE_DruidToCombat_5a00d684-3cc6-fede-ad99-4d12ce8487a7);
DB_IgnoreMutingStatussesDialog(DEN_DruidAttack_LINE_DruidToCombat_5a00d684-3cc6-fede-ad99-4d12ce8487a7);
DB_DialogStarted_IgnoreStopConditions(DEN_DruidAttack_LINE_DruidToCombat_5a00d684-3cc6-fede-ad99-4d12ce8487a7);
	//In lair nodes:
DB_GLO_Cinematic_PositionedDialog(DEN_DruidAttack_LINE_DruidToCombat_5a00d684-3cc6-fede-ad99-4d12ce8487a7, "DEN_DruidAttack_DruidToCombatTransition");
DB_GLO_Cinematic_PositionFlags("DEN_DruidAttack_DruidToCombatTransition", S_DEN_DruidLair_SUB_a9794f19-187a-4d79-b739-443548411d29, DEN_DruidAttack_State_DruidToCombatTransitionInLair_886dfddf-c5ab-4fa6-a646-ed7f2b0f4657);
	//make players in druid & tiefling areas see the transition
DB_AddCharactersInTriggerToDialog(DEN_DruidAttack_LINE_DruidToCombat_5a00d684-3cc6-fede-ad99-4d12ce8487a7, S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, 1, 1, 1);
DB_AddCharactersInTriggerToDialog(DEN_DruidAttack_LINE_DruidToCombat_5a00d684-3cc6-fede-ad99-4d12ce8487a7, S_DEN_DruidLair_SUB_a9794f19-187a-4d79-b739-443548411d29, 1, 1, 1);

//DB to separate Rath + Silver from rest of Druids (they fight for Outsiders against Druids)
DB_DEN_DruidAttack_OpposedDruids((CHARACTER)S_DEN_DruidOpposed_322cf8d2-32ee-453f-987e-f12b32652b5d, "Assault");
DB_DEN_DruidAttack_OpposedDruids(S_DEN_PetWolf_63471e30-7413-4496-97de-0bdf67c2f753, "Assault_Beast_HighPrio");

//The ownership trigger for the idol can change depending on the situation (it is moved into the Druid Lair)
DB_DEN_DruidAttack_CurrentIdolTrigger((TRIGGER)S_DEN_PondOwnership_aff112d5-b79e-405e-9114-6b70aea65a06);
TriggerRegisterForItems(S_DEN_DruidEntrance_Ownership_137c1348-fafd-44cf-924e-eb4df6de9bb6);
TriggerRegisterForItems(S_DEN_PondOwnership_aff112d5-b79e-405e-9114-6b70aea65a06);

DB_DEN_DruidAttack_Attackers((CHARACTER)NULL_00000000-0000-0000-0000-000000000000);
NOT DB_DEN_DruidAttack_Attackers((CHARACTER)NULL_00000000-0000-0000-0000-000000000000);
//END_REGION

//REGION DruidAttack Paths


DB_DEN_DruidAttack_AttackPath((CHARACTER)S_DEN_DruidGuard_001_d1de6b4d-02d1-47f9-8e9e-55a593e3dc71, (TRIGGER)S_DEN_DruidAttack_DruidPos1_ad4e340a-74ae-4288-a96d-98f62e1c92dd, 2, 2);
DB_DEN_DruidAttack_AttackPath(S_DEN_DruidGuard_002_8e2433db-55e9-4d03-a8fc-f8d02711907c, S_DEN_DruidAttack_DruidPos2_dfbc8078-2176-4a30-ae02-3d56706e8f9e, 5, 4);
DB_DEN_DruidAttack_AttackPath(S_DEN_DruidGuard_003_b888b138-951a-4092-b356-333b4b65123d, S_DEN_DruidAttack_DruidPos17_98679bad-49a6-458d-bca8-03cc767b069d, 1, 1);
DB_DEN_DruidAttack_AttackPath(S_DEN_BirdSender_30ee2bc0-0e69-4999-8d1c-8335c439cecf, S_DEN_DruidAttack_DruidPos18_ccf66c7d-f168-45e3-8009-17b34358ebe2, 1, 2);
DB_DEN_DruidAttack_AttackPath(S_DEN_RitualDruid_001_9c5c4c89-890b-4e72-8698-53d36e6b4271, S_DEN_DruidAttack_DruidPos19_8d922a3b-66b6-49f9-82de-a7a35ebf27fc, 4, 3);
DB_DEN_DruidAttack_AttackPath(S_DEN_RitualDruid_002_96e41e71-9239-498b-9cb8-8b14fd48acd0, S_DEN_DruidAttack_DruidPos20_4e6dc176-af8d-4177-b9fe-1a8ea36151de, 6, 3);
DB_DEN_DruidAttack_AttackPath(S_DEN_RitualDruid_003_7cae8e24-d610-4229-859d-7b2da7c5d162, S_DEN_DruidAttack_DruidPos21_d1ccd6b0-3de4-4cc2-a9ea-b2a649e7b789, 2, 2);
DB_DEN_DruidAttack_AttackPath(S_DEN_RitualDruid_004_32bef45a-47ca-4c3a-b907-13a857b316fd, S_DEN_DruidAttack_DruidPos6_5bb43478-f2ae-4bb9-a6b2-103b33994405, 1, 1);
DB_DEN_DruidAttack_AttackPath(S_DEN_RitualDruid_005_641fc4b5-3c42-4c4d-a759-541ad437f9df, S_DEN_DruidAttack_DruidPos22_710269da-89d7-4fc5-a0a0-6a4555797240, 5, 4);
DB_DEN_DruidAttack_AttackPath(S_DEN_VoloBear_893c5f40-a760-4b04-bd86-c8fb8f5dd08a, S_DEN_DruidAttack_DruidPos4_85733ff7-7b70-4fb9-9c2b-ca57f36c852f, 6, 4);
DB_DEN_DruidAttack_AttackPath(S_DEN_ZenBear_d4d4bfd2-9639-45bc-a256-2f079e53db29, S_DEN_DruidAttack_DruidPos7_102828d9-8f29-46ae-acb9-dc9826a30b85, 6, 3);
DB_DEN_DruidAttack_AttackPath(S_DEN_ExcitedBoar_5e856a8e-957a-49b1-8ec7-f430984e08ca, S_DEN_DruidAttack_DruidPos15_929d4c3b-8e93-46d1-8b67-9e3217f55f7b, 2, 2);

DB_DEN_DruidAttack_AttackPath(S_DEN_ElevatorBear_04b7ef23-1002-4682-b962-33a2328bcd5c, S_DEN_DruidAttack_DruidPos10_fc7e134b-0b9e-4c3c-8a19-abe7ae80783c, 3, 3);
DB_DEN_DruidAttack_AttackPath(S_DEN_DruidLeader_95eb2b0b-a522-4ea5-8167-c5f4d1418156, S_DEN_DruidAttack_DruidPos11_2576ab2d-8cad-4fe3-867f-90fd3a18edaa, 3, 3);
DB_DEN_DruidAttack_AttackPath(S_DEN_ServantGnome_003_0d971a2f-5fd7-4358-8966-147ed8b106dd, S_DEN_DruidAttack_DruidPos12_40c020a6-b5da-4970-9396-26374edc58a3, 1, 1);
DB_DEN_DruidAttack_AttackPath(S_DEN_ServantIntolerant_002_6f36c7a1-edfd-4e99-bd90-6d874f68c9b8, S_DEN_DruidAttack_DruidPos13_cb116205-29a1-4196-ac51-588985e1a734, 4, 4);
DB_DEN_DruidAttack_AttackPath(S_DEN_ServantPlight_005_13db744d-8a48-4131-8801-fd5fc289fdf6, S_DEN_DruidAttack_DruidPos3_075b187e-068c-42cb-a0df-2e5186a92f52, 0, 0);
DB_DEN_DruidAttack_AttackPath(S_DEN_Apprentice_7cabf226-e34b-4556-8903-a45d0fe26caf, S_DEN_DruidAttack_DruidPos14_8f1dcec6-5e4b-4114-bfd4-cba90338434c, 2, 2);

//DB_DEN_DruidAttack_AttackPath(S_DEN_ScoutCaptive_f5b5819f-1636-4f2e-82bb-709522cc399f, S_DEN_DruidAttack_DruidPos16_408adf4f-946d-41c4-b7bd-6e7067b7b782);
//DB_DEN_DruidAttack_AttackPath(S_DEN_PetWolf_63471e30-7413-4496-97de-0bdf67c2f753,);
//DB_DEN_DruidAttack_AttackPath(S_DEN_DruidOpposed_322cf8d2-32ee-453f-987e-f12b32652b5d,);

DB_DEN_DruidAttack_PathPositions("OutOfPond", 1, S_DEN_OutOfPondPos_001_2a64ea02-ca53-46e3-8c40-5902e9572923);
DB_DEN_DruidAttack_PathPositions("OutOfPond", 2, S_DEN_OutOfPondPos_002_efcc71e9-d26c-4c3e-8512-5664e0b58858);
DB_DEN_DruidAttack_PathPositions("OutOfPond", 3, S_DEN_OutOfPondPos_003_2e0f77d3-5476-4f11-8c37-5902b9628d99);
DB_DEN_DruidAttack_PathPositions("OutOfPond", 4, S_DEN_OutOfPondPos_004_2959fe64-a35e-428a-a30e-1bc07d863181);
DB_DEN_DruidAttack_PathPositions("OutOfPond", 5, S_DEN_OutOfPondPos_005_64b5d153-0cf2-4b9f-ab80-b17fc38c9c67);
DB_DEN_DruidAttack_PathPositions("OutOfPond", 6, S_DEN_OutOfPondPos_006_b43bc1bc-27b5-4482-b77e-74bf9c2baead);

DB_DEN_DruidAttack_PathPositions("UpRamp", 1, S_DEN_UpRampPos_001_32590022-5719-4bff-aafb-512bb9c2b5f0);
DB_DEN_DruidAttack_PathPositions("UpRamp", 2, S_DEN_UpRampPos_002_d50f31b2-31d9-4d23-9623-18218e78430c);
DB_DEN_DruidAttack_PathPositions("UpRamp", 3, S_DEN_UpRampPos_003_d9c1553e-201c-41cf-8f3c-444b5a1694ae);
DB_DEN_DruidAttack_PathPositions("UpRamp", 4, S_DEN_UpRampPos_004_61f3ea3c-fffa-40aa-836b-a6eae7213c75);
//END_REGION

//REGION

DB_DEN_DruidAttack_SwarmExcluded((CHARACTER)S_DEN_TieflingLeader_475200ee-cc3c-4dbe-84b1-1820c02ea26a);
DB_DEN_DruidAttack_SwarmExcluded((CHARACTER)S_GLO_Prodigy_b6a3a9e9-b6eb-4c19-ab3f-4c431178fe1b);
DB_DEN_DruidAttack_SwarmExcluded((CHARACTER)S_DEN_DruidOpposed_322cf8d2-32ee-453f-987e-f12b32652b5d);

DB_DEN_DruidAttack_DruidAnimals((CHARACTER)S_DEN_VoloBear_893c5f40-a760-4b04-bd86-c8fb8f5dd08a);
DB_DEN_DruidAttack_DruidAnimals(S_DEN_ZenBear_d4d4bfd2-9639-45bc-a256-2f079e53db29);
DB_DEN_DruidAttack_DruidAnimals(S_DEN_ExcitedBoar_5e856a8e-957a-49b1-8ec7-f430984e08ca);
DB_DEN_DruidAttack_DruidAnimals(S_DEN_ElevatorBear_04b7ef23-1002-4682-b962-33a2328bcd5c);
//END_REGION

DB_GLO_DefeatCounter_AllDefeatedGlobalFlag("DEN_DruidAttack_NonDruids",(FLAG)DEN_DruidAttack_State_PrepAfterDeathOfTieflings_79826e3c-1dd7-4a8b-a5ca-cf4dfde51d12);
KBSECTION
//REGION INIT
IF
DB_DEN_DruidAttack_Druids(_Druid, _, _)
THEN
DB_DEN_DruidAttack_DruidVictims(_Druid);

//END_REGION

//REGION Special Case: Prodigy

//special handling for prodigy characters depending whether they were convinced to stay or leave in the grove
IF
FlagSet(DEN_Prodigy_State_Staying_479db0b1-cc1b-78bf-3e7b-9840747fbd4f,NULL_00000000-0000-0000-0000-000000000000,_)
AND
NOT DB_GlobalFlag(DEN_DruidAttack_State_DruidSetup_96fc1420-fa07-4235-98c3-ecb34fcb6b0a)
AND
DB_DEN_DruidAttack_ProdigyNPCs(_NPC)
AND
DB_DEN_DruidAttack_NonDruids(_NPC,"Flee",_Group,_Dialog)
THEN
NOT DB_DEN_DruidAttack_NonDruids(_NPC,"Flee",_Group,_Dialog);
DB_DEN_DruidAttack_NonDruids(_NPC,"Fight",_Group,_Dialog);

//END_REGION

//REGION Special Case: Tiefling Leader

//zevlor has an additional dialog swap when Druid Attack is complete
IF
EntityEvent(S_DEN_TieflingLeader_475200ee-cc3c-4dbe-84b1-1820c02ea26a, "DEN_DruidAttack_PostAttackSetupComplete")
THEN
PROC_RemoveAllDialogEntriesForSpeaker(S_DEN_TieflingLeader_475200ee-cc3c-4dbe-84b1-1820c02ea26a);
PROC_DEN_TieflingLeader_SetUpCaveDialog();

//END_REGION

//REGION Special Case: Goblin Scout

//if the Druid Scout has been saved by the party he'll be added to the fight (dies instantly otherwise)
IF
FlagSet(DEN_GoblinScouts_Event_SavedCaptive_3b35e886-d24d-41ed-bc4b-c6950b261212,NULL_00000000-0000-0000-0000-000000000000,_)
AND
NOT DB_GlobalFlag(DEN_DruidAttack_State_DruidSetup_96fc1420-fa07-4235-98c3-ecb34fcb6b0a)
AND
DB_DEN_DruidAttack_NonDruids(S_DEN_ScoutCaptive_f5b5819f-1636-4f2e-82bb-709522cc399f,"Special","",_Dialog)
THEN
NOT DB_DEN_DruidAttack_NonDruids(S_DEN_ScoutCaptive_f5b5819f-1636-4f2e-82bb-709522cc399f,"Special","",_Dialog);
DB_DEN_DruidAttack_Druids(S_DEN_ScoutCaptive_f5b5819f-1636-4f2e-82bb-709522cc399f, "DEN_DRUIDATTACK_RAMP",_Dialog);

//END_REGION

//REGION Special Case: Paralyzed Tiefling TODO: Do druids kill a paralyzed Pandirna? 

//Paralyzed tiefling will join event if healed of Paralysis. This can happen before or during the event.
//Pandirna is healed during Druid Attack.
IF
FlagSet(DEN_General_State_PotionTieflingHealed_0dece41d-7a76-193e-1a6b-1efc7e4497ab,S_DEN_Tiefling_005_e5319db6-ea86-43cc-9fd0-5ec1e0eab492,0)
AND
DB_GlobalFlag(DEN_DruidAttack_State_TieflingSetup_71dfdbe0-558d-443f-a033-8c86c34723e1)
AND
DB_DEN_DruidAttack_NonDruids(S_DEN_Tiefling_005_e5319db6-ea86-43cc-9fd0-5ec1e0eab492,"Special","",_Dialog)
THEN
DB_GLO_DefeatCounter(S_DEN_Tiefling_005_e5319db6-ea86-43cc-9fd0-5ec1e0eab492, "DEN_DruidAttack_NonDruids");

//Switch Pandirna's Druid Attack grouping if she's healed.
IF
DB_DEN_Paralyzed_Healed(1)
AND
DB_DEN_DruidAttack_NonDruids(S_DEN_Tiefling_005_e5319db6-ea86-43cc-9fd0-5ec1e0eab492,"Special","",_Dialog)
THEN
NOT DB_DEN_DruidAttack_NonDruids(S_DEN_Tiefling_005_e5319db6-ea86-43cc-9fd0-5ec1e0eab492,"Special","",_Dialog);
DB_DEN_DruidAttack_NonDruids(S_DEN_Tiefling_005_e5319db6-ea86-43cc-9fd0-5ec1e0eab492,"Fight","DEN_DRUIDATTACK_RAMP",_Dialog);

//Pandirna needs to move out of shed in story if she's healed. After this, anubis movement should kick in.
IF
DB_DEN_DruidAttack_NonDruids(S_DEN_Tiefling_005_e5319db6-ea86-43cc-9fd0-5ec1e0eab492, "Fight", "DEN_DRUIDATTACK_RAMP", _)
AND
DB_GlobalFlag(DEN_DruidAttack_State_TieflingSetup_71dfdbe0-558d-443f-a033-8c86c34723e1)
AND
GetFlag(DEN_DruidAttack_Event_TieflingsPrepare_6a8c217f-adf6-46d2-8cfd-d2e9a437c3d4,S_DEN_Tiefling_005_e5319db6-ea86-43cc-9fd0-5ec1e0eab492,0)
THEN
SetFlag(DEN_DruidAttack_Event_TieflingsPrepare_6a8c217f-adf6-46d2-8cfd-d2e9a437c3d4,S_DEN_Tiefling_005_e5319db6-ea86-43cc-9fd0-5ec1e0eab492, 0, 1);
PROC_CharacterMoveTo(S_DEN_Tiefling_005_e5319db6-ea86-43cc-9fd0-5ec1e0eab492,S_DEN_StorageDoor_e2911d4f-2b43-48e4-a1c2-5c4cc53bae8d,"Run","DEN_DruidAttack_ParalzyedUnlock");
SetFlag(DEN_DruidAttack_Event_BypassDone_a66b1d52-046d-41e2-909c-e01045126e77,S_DEN_Tiefling_005_e5319db6-ea86-43cc-9fd0-5ec1e0eab492);

IF
EntityEvent(S_DEN_Tiefling_005_e5319db6-ea86-43cc-9fd0-5ec1e0eab492,"DEN_DruidAttack_ParalzyedUnlock")
AND
IsDestroyed(S_DEN_StorageDoor_e2911d4f-2b43-48e4-a1c2-5c4cc53bae8d,0)
AND
IsLocked(S_DEN_StorageDoor_e2911d4f-2b43-48e4-a1c2-5c4cc53bae8d,1)
THEN
Unlock(S_DEN_StorageDoor_e2911d4f-2b43-48e4-a1c2-5c4cc53bae8d);


//END_REGION

//REGION Special Case: Harpy Kid TODO: Disappear out of sight maybe?

//Charmed Kid will take on regular kid's druid attack behavior only if saved from the harpies (Harpy Meal complete)
IF
FlagSet(DEN_HarpyMeal_Event_KidReturnHideout_8180a3b3-8db8-c60f-4df9-e8b95adb14f4,NULL_00000000-0000-0000-0000-000000000000,_)
AND
NOT DB_GlobalFlag(DEN_DruidAttack_State_DruidSetup_96fc1420-fa07-4235-98c3-ecb34fcb6b0a)
AND
DB_DEN_DruidAttack_NonDruids(S_DEN_CharmedKid_3b92c689-6024-4446-a6c9-584e9e8d77ca,"Special","",_Dialog)
THEN
NOT DB_DEN_DruidAttack_NonDruids(S_DEN_CharmedKid_3b92c689-6024-4446-a6c9-584e9e8d77ca,"Special","",_Dialog);
DB_DEN_DruidAttack_NonDruids(S_DEN_CharmedKid_3b92c689-6024-4446-a6c9-584e9e8d77ca,"Kid","",_Dialog);

IF
FlagSet(DEN_HarpyMeal_Event_KidReturnHideout_8180a3b3-8db8-c60f-4df9-e8b95adb14f4,NULL_00000000-0000-0000-0000-000000000000,_)
AND
DB_GlobalFlag(DEN_DruidAttack_State_DruidSetup_96fc1420-fa07-4235-98c3-ecb34fcb6b0a)
AND
DB_DEN_DruidAttack_NonDruids(S_DEN_CharmedKid_3b92c689-6024-4446-a6c9-584e9e8d77ca,"Special","",_Dialog)
THEN
NOT DB_DEN_DruidAttack_NonDruids(S_DEN_CharmedKid_3b92c689-6024-4446-a6c9-584e9e8d77ca,"Special","",_Dialog);
DB_DEN_DruidAttack_NonDruids(S_DEN_CharmedKid_3b92c689-6024-4446-a6c9-584e9e8d77ca,"Kid","",_Dialog);
PROC_DEN_DruidAttack_SetNewDialog(S_DEN_CharmedKid_3b92c689-6024-4446-a6c9-584e9e8d77ca,_Dialog);

//END_REGION

//REGION Special Case: Wyll + Shadowheart

//Shadowheart will flee from grove if present in region and not recruited
//Wyll will join combat against druids if present in region and not recruited
IF
DB_Players(S_Player_ShadowHeart_3ed74f06-3c60-42dc-83f6-f034cb47c679)
AND
DB_DEN_DruidAttack_NonDruids(S_Player_ShadowHeart_3ed74f06-3c60-42dc-83f6-f034cb47c679,"Special","",NULL_00000000-0000-0000-0000-000000000000)
THEN
NOT DB_DEN_DruidAttack_NonDruids(S_Player_ShadowHeart_3ed74f06-3c60-42dc-83f6-f034cb47c679,"Special","",NULL_00000000-0000-0000-0000-000000000000);

IF
DB_Players(S_Player_Wyll_c774d764-4a17-48dc-b470-32ace9ce447d)
AND
DB_DEN_DruidAttack_NonDruids(S_Player_Wyll_c774d764-4a17-48dc-b470-32ace9ce447d,_Type,_Group,_Dialog)
THEN
NOT DB_DEN_DruidAttack_NonDruids(S_Player_Wyll_c774d764-4a17-48dc-b470-32ace9ce447d,_Type,_Group,_Dialog);

IF
DB_InCamp(S_Player_ShadowHeart_3ed74f06-3c60-42dc-83f6-f034cb47c679)
AND
DB_DEN_DruidAttack_NonDruids(S_Player_ShadowHeart_3ed74f06-3c60-42dc-83f6-f034cb47c679,"Special","",NULL_00000000-0000-0000-0000-000000000000)
THEN
NOT DB_DEN_DruidAttack_NonDruids(S_Player_ShadowHeart_3ed74f06-3c60-42dc-83f6-f034cb47c679,"Special","",NULL_00000000-0000-0000-0000-000000000000);

IF
DB_InCamp(S_Player_Wyll_c774d764-4a17-48dc-b470-32ace9ce447d)
AND
DB_DEN_DruidAttack_NonDruids(S_Player_Wyll_c774d764-4a17-48dc-b470-32ace9ce447d,_Type,_Group,_Dialog)
THEN
NOT DB_DEN_DruidAttack_NonDruids(S_Player_Wyll_c774d764-4a17-48dc-b470-32ace9ce447d,_Type,_Group,_Dialog);

//Shadowheart leaves during Druid Attack.
IF
DB_State_Current(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_DruidAttack")
AND
DB_DEN_DruidAttack_NonDruids(S_Player_ShadowHeart_3ed74f06-3c60-42dc-83f6-f034cb47c679, _, _, _)
AND
NOT DB_Defeated(S_Player_ShadowHeart_3ed74f06-3c60-42dc-83f6-f034cb47c679)
THEN
PROC_DEN_RemoveFromDenNPCs(S_Player_ShadowHeart_3ed74f06-3c60-42dc-83f6-f034cb47c679);
PROC_DisappearOutOfSight(S_Player_ShadowHeart_3ed74f06-3c60-42dc-83f6-f034cb47c679,"Run",1,"");

PROC
PROC_DEN_DruidAttack_Init()
AND
DB_DEN_DruidAttack_NonDruids(S_Player_Wyll_c774d764-4a17-48dc-b470-32ace9ce447d,_Type,_Group,_Dialog)
THEN
NOT DB_DEN_DruidAttack_NonDruids(S_Player_Wyll_c774d764-4a17-48dc-b470-32ace9ce447d,_Type,_Group,_Dialog);
DB_DEN_DruidAttack_NonDruids(S_Player_Wyll_c774d764-4a17-48dc-b470-32ace9ce447d,"Fight","DEN_DRUIDATTACK_RAMP",_Dialog);

IF
DB_DisappearedOutOfSight(S_Player_Wyll_c774d764-4a17-48dc-b470-32ace9ce447d, _, _, _, "DEN_DruidAttack_ForceCombatArrival", _, _)
AND
DB_Defeated(S_Player_Wyll_c774d764-4a17-48dc-b470-32ace9ce447d)
THEN
PROC_CancelDisappearOutOfSight(S_Player_Wyll_c774d764-4a17-48dc-b470-32ace9ce447d);

//END_REGION

//REGION Special Case: Captured Goblin TODO: Sazza runs away on her own during the chaos.

//the captured goblin will hostile against everyone in the grove on event start - including if players are currently escorting her
PROC
PROC_DEN_DruidAttack_Init()
AND
NOT DB_Dead(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb)
AND
NOT DB_GlobalFlag(DEN_CapturedGoblin_State_LeftDen_2a64c50f-45b6-8bd2-e980-77fb4b11fce3)
AND
NOT CharacterGetOwner(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb,_)
THEN
PROC_RemoveDialog(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb);
PROC_SetRelationMutual(Act1_DEN_DruidAttack_Refugees_dc3cbc03-a072-4cf7-b650-d0c43158b773,ACT1_DEN_CapturedGoblin_40d6a49e-806c-4bce-8214-6228cc0ded72,0);
PROC_SetRelationToPlayers(ACT1_DEN_CapturedGoblin_40d6a49e-806c-4bce-8214-6228cc0ded72,0);

//END_REGION

//REGION Special Case: Druid Opposed + Pet Wolf

//edge-case: if Rath or Silver are assaulted, that will start druid attack and they will stay on the druids side
PROC
PROC_CharacterRegisterCrime_Success((CHARACTER)_Player, (STRING)_AssaultCrime, (INTEGER)_, (GUIDSTRING)_, _Victim, (INTEGER)_ )
AND
DB_DEN_DruidAttack_OpposedDruids(_Victim, _AssaultCrime)
AND
QRY_DEN_CheckBeforeState("DEN_State_DruidAttack")
THEN
NOT DB_DEN_DruidAttack_NonDruids(S_DEN_DruidOpposed_322cf8d2-32ee-453f-987e-f12b32652b5d,"Special","DEN_DRUIDATTACK_RAMP",DEN_DruidAttack_DruidOpposed_e51bc513-8bb9-bde2-678a-8228bc5964a6); //Rath sides with the Tieflings
NOT DB_DEN_DruidAttack_NonDruids(S_DEN_PetWolf_63471e30-7413-4496-97de-0bdf67c2f753,"Special","DEN_DRUIDATTACK_RAMP",DEN_DruidAttack_PetWolf_8bbde966-95a6-e8fb-4d45-644324309a6e); //Silver sides with the Tieflings
DB_DEN_DruidAttack_Druids(S_DEN_DruidOpposed_322cf8d2-32ee-453f-987e-f12b32652b5d,"DEN_DRUIDATTACK_TIEFLINGQUARTERS",NULL_00000000-0000-0000-0000-000000000000); //added here after an assault
DB_DEN_DruidAttack_Druids(S_DEN_PetWolf_63471e30-7413-4496-97de-0bdf67c2f753,"DEN_DRUIDATTACK_TIEFLINGQUARTERS",NULL_00000000-0000-0000-0000-000000000000); //added here after an assault

//Rath and Silver behave the same as other Druids exiting the Druid Lair subregion, but will side with the Outsiders in the combat and instead behave like them during the fight.
PROC
PROC_DEN_DruidAttack_Init()
AND
DB_DEN_DruidAttack_OpposedDruids(_Druid, _)
AND
DB_DEN_NPC(_Druid, "Lair", _Dialog)
THEN
TriggerRegisterForCharacter(S_DEN_Cave_SUB_adecafa4-27c6-4b2f-bf9e-6ffd7c81a766,_Druid);
TriggerRegisterForCharacter(S_DEN_DruidAttack_PrisonApproach_7fe8992c-fd24-439c-9d42-8cc5ec368cd0,_Druid);
TriggerRegisterForCharacter(S_DEN_DruidLair_SUB_a9794f19-187a-4d79-b739-443548411d29,_Druid);
SetFlag(DEN_DruidAttack_Event_DruidsPrepare_4faee0c9-018a-47e2-a754-d331c746a67f,_Druid);
NOT DB_DEN_NPC(_Druid, "Lair", _Dialog);
DB_DEN_NPC(_Druid, "Cave", _Dialog);

PROC
PROC_DEN_DruidAttack_Init()
AND
DB_DEN_DruidAttack_OpposedDruids(_Druid, _)
AND
NOT DB_Is_InCombat(_Druid,_)
THEN
PROC_CharacterMoveTo(_Druid,S_DEN_LairMainInPoint_195062b4-ff6c-46cc-aae1-961fcf4ecf56,"Run","DEN_DruidAttack_ExitLair");

PROC
PROC_DEN_DruidAttack_Init()
AND
DB_DEN_DruidAttack_OpposedDruids(_Druid, _)
AND
DB_DEN_DruidAttack_NonDruids(_Druid,_,_Group,_Dialog)
THEN
PROC_DEN_DruidAttack_SetNewDialog(_Druid,_Dialog);

//END_REGION

//REGION Special Case: Apprentice

//--- Tadpole Scene cases
//Assaulting/killing Nettie in the tadpole scene context doesn't count as a Druid Attack event trigger
QRY
QRY_DEN_DruidAttack_Crime_BlockDruidAttack(S_DEN_Apprentice_7cabf226-e34b-4556-8903-a45d0fe26caf)
AND
DB_DEN_Apprentice_OverridingCrimes(1)
THEN
DB_NOOP(1);


//Force Nettie to open the door before leaving the lair if she's in the locked up room
QRY
QRY_DEN_DruidAttack_OverrideInitMove(S_DEN_Apprentice_7cabf226-e34b-4556-8903-a45d0fe26caf)
AND
QRY_DEN_Apprentice_MustOpenDoor()
THEN
PROC_ForceStopDialog(S_DEN_Apprentice_7cabf226-e34b-4556-8903-a45d0fe26caf);
PROC_CharacterMoveTo(S_DEN_Apprentice_7cabf226-e34b-4556-8903-a45d0fe26caf,S_DEN_LibraryEntryDoor_df1f2445-3737-4410-8f8c-b7af5967dea6,"Run","DEN_DruidAttack_ApprenticeGotoDoor");

IF
EntityEvent((CHARACTER)_Nettie,"DEN_DruidAttack_ApprenticeGotoDoor")
AND
NOT DB_Is_InCombat(_Nettie,_)
THEN
PROC_DEN_Apprentice_UnlocksDoor("DEN_DruidAttack_ApprenticeUnlocksDoor"); //TODO: will need to be retested when she gets her final animation for this

IF
EntityEvent((CHARACTER)_Nettie,"DEN_DruidAttack_ApprenticeUnlocksDoor")
AND
NOT DB_Is_InCombat(_Nettie,_)
THEN
PROC_CharacterMoveTo(_Nettie,S_DEN_LairMainInPoint_195062b4-ff6c-46cc-aae1-961fcf4ecf56,"Run","DEN_DruidAttack_ExitLair");

//END_REGION

//REGION Special Case: Snake Kid

// Arabella was killed in the Snake Court
PROC
PROC_DEN_SnakeKid_RemoveFromDruidAttack()
AND
DB_DEN_DruidAttack_NonDruids(S_DEN_SnakeKid_02257c1c-bbec-4ae3-9bcb-31c75a0a982f,_Param2,_Param3,_Param4)
THEN
NOT DB_DEN_DruidAttack_NonDruids(S_DEN_SnakeKid_02257c1c-bbec-4ae3-9bcb-31c75a0a982f,_Param2,_Param3,_Param4);

//END_REGION

//REGION Tracking the missing status of the idol

//when Druid Attack can no longer be triggered, stealing the idol will result in some druids mentioning its absence in dialog
IF
ItemLeftTrigger(S_DEN_SilvanusIdol_a841d36c-9a00-4a26-943e-c0af6895bb16,_Trigger,_)
AND
DB_DEN_DruidAttack_CurrentIdolTrigger(_Trigger)
AND
NOT DB_GlobalFlag(DEN_GroveConflict_State_IdolIsMissing_fbdd1b1c-ef20-ab4a-5371-7b7be10ec4b9)
THEN
SetFlag(DEN_GroveConflict_State_IdolIsMissing_fbdd1b1c-ef20-ab4a-5371-7b7be10ec4b9,NULL_00000000-0000-0000-0000-000000000000);

IF
AddedTo(S_DEN_SilvanusIdol_a841d36c-9a00-4a26-943e-c0af6895bb16, _, _)
AND
NOT DB_GlobalFlag(DEN_GroveConflict_State_IdolIsMissing_fbdd1b1c-ef20-ab4a-5371-7b7be10ec4b9)
THEN
SetFlag(DEN_GroveConflict_State_IdolIsMissing_fbdd1b1c-ef20-ab4a-5371-7b7be10ec4b9,NULL_00000000-0000-0000-0000-000000000000);

IF
ItemEnteredTrigger(S_DEN_SilvanusIdol_a841d36c-9a00-4a26-943e-c0af6895bb16,_Trigger,_)
AND
DB_DEN_DruidAttack_CurrentIdolTrigger(_Trigger)
AND
DB_GlobalFlag(DEN_GroveConflict_State_IdolIsMissing_fbdd1b1c-ef20-ab4a-5371-7b7be10ec4b9)
AND
IsInInventory(S_DEN_SilvanusIdol_a841d36c-9a00-4a26-943e-c0af6895bb16, 0)
THEN
ClearFlag(DEN_GroveConflict_State_IdolIsMissing_fbdd1b1c-ef20-ab4a-5371-7b7be10ec4b9,NULL_00000000-0000-0000-0000-000000000000);

//END_REGION

//REGION Trigger State - Crime Overrides

//Block regular crimes related to stealing/moving the druid idol after druids are pacified (Druid Attack no longer triggerable)
QRY
QRY_CRIME_BlockRegisterCrime((CHARACTER)_Char,(STRING)_CrimeType,S_DEN_SilvanusIdol_a841d36c-9a00-4a26-943e-c0af6895bb16,(CHARACTER)_Victim,(INTEGER)_CrimeID)
AND
_CrimeType != "DEN_GroveConflict_IdolStolen"
AND
DB_GlobalFlag(DEN_SacredPond_Event_StopRitual_c9f24eda-2847-4620-9fa2-974b004ac147)
AND
QRY_CRIME_IsCrimeFamilyMember(_CrimeType,"Steal")
THEN
DB_NOOP(1);

//Block regular crimes related to stealing/moving the druid idol after druids are pacified (Druid Attack no longer triggerable)
QRY
QRY_CRIME_BlockRegisterCrime((CHARACTER)_Char,"MoveForbiddenItem",S_DEN_SilvanusIdol_a841d36c-9a00-4a26-943e-c0af6895bb16,(CHARACTER)_Victim,(INTEGER)_CrimeID)
AND
DB_GlobalFlag(DEN_SacredPond_Event_StopRitual_c9f24eda-2847-4620-9fa2-974b004ac147)
THEN
DB_NOOP(1);

QRY
QRY_CRIME_AllowRequestOnReactionCustom(_Player, _CrimeID, _RequestID, _RequestAllowed)
AND
CrimeGetType(_CrimeID, "DEN_GroveConflict_IdolStolen")
THEN
DB_QRYRTN_CRIME_AllowRequestOnReactionCustom(0);

PROC
PROC_BlockMoveOfItem((CHARACTER)_Player, S_DEN_SilvanusIdol_a841d36c-9a00-4a26-943e-c0af6895bb16, (INTEGER)_RequestID)
AND
DB_GlobalFlag(DEN_SacredPond_Event_StopRitual_c9f24eda-2847-4620-9fa2-974b004ac147)
AND
CrimeGetNewID(_CrimeID)
THEN
DB_HandledRequest(_Player, S_DEN_SilvanusIdol_a841d36c-9a00-4a26-943e-c0af6895bb16, _RequestID);
DB_DEN_DruidAttack_TakeMoveRequest(_Player, _CrimeID, _RequestID);
PROC_CharacterRegisterCrime(_Player, "DEN_GroveConflict_IdolStolen", S_DEN_SilvanusIdol_a841d36c-9a00-4a26-943e-c0af6895bb16, NULL_00000000-0000-0000-0000-000000000000, _CrimeID);

PROC
PROC_BlockPickupOfItem((CHARACTER)_Player, S_DEN_SilvanusIdol_a841d36c-9a00-4a26-943e-c0af6895bb16, (INTEGER)_RequestID)
AND
DB_GlobalFlag(DEN_SacredPond_Event_StopRitual_c9f24eda-2847-4620-9fa2-974b004ac147)
AND
CrimeGetNewID(_CrimeID)
THEN
DB_HandledRequest(_Player, S_DEN_SilvanusIdol_a841d36c-9a00-4a26-943e-c0af6895bb16, _RequestID);
DB_DEN_DruidAttack_TakeMoveRequest(_Player, _CrimeID, _RequestID);
PROC_CharacterRegisterCrime(_Player, "DEN_GroveConflict_IdolStolen", S_DEN_SilvanusIdol_a841d36c-9a00-4a26-943e-c0af6895bb16, NULL_00000000-0000-0000-0000-000000000000, _CrimeID);

//Not noticed, let the request happen.
IF
CrimeProcessingStarted(_CrimeID, 0)
AND
DB_DEN_DruidAttack_TakeMoveRequest(_Player, _CrimeID, _RequestID)
THEN
RequestProcessed(_Player, _RequestID, 1);
NOT DB_DEN_DruidAttack_TakeMoveRequest(_Player, _CrimeID, _RequestID);

// Noticed, block the request, dialog will start.
IF
CrimeProcessingStarted(_CrimeID, 1)
AND
DB_DEN_DruidAttack_TakeMoveRequest(_Player, _CrimeID, _RequestID)
THEN
RequestProcessed(_Player, _RequestID, 0);
NOT DB_DEN_DruidAttack_TakeMoveRequest(_Player, _CrimeID, _RequestID);

IF
FlagSet(DEN_GroveConflict_Event_ReturnIdol_20eab142-2acf-6ccb-f1c2-4f06b45f1ab9, _Character, _ID)
THEN
ClearFlag(DEN_GroveConflict_Event_ReturnIdol_20eab142-2acf-6ccb-f1c2-4f06b45f1ab9, _Character, _ID);
TeleportTo(S_DEN_SilvanusIdol_a841d36c-9a00-4a26-943e-c0af6895bb16, S_DEN_RiteInterruptedEffectPoint_6a341eea-df2d-4a97-8a4d-53d253e9ae28, "");

//Block all crimes related to tampering with the druid idol and initiate override
QRY
QRY_CRIME_BlockRegisterCrime((CHARACTER)_Char,(STRING)_CrimeType,S_DEN_SilvanusIdol_a841d36c-9a00-4a26-943e-c0af6895bb16,(CHARACTER)_Victim,(INTEGER)_CrimeID)
AND
NOT DB_GlobalFlag(DEN_SacredPond_Event_StopRitual_c9f24eda-2847-4620-9fa2-974b004ac147)
AND
NOT DB_State_Current(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_AttackOnDen")
AND
NOT DB_DEN_DruidAttack_IdolCrimes(_, _CrimeType,_)
AND
QRY_CRIME_GetCrimeFamily(_CrimeType)
AND
DB_QRYRTN_CRIME_GetCrimeFamily(_CrimeFamily)
AND
DB_DEN_DruidAttack_IdolCrimes(_CrimeFamily, _NewCrimeType, _)
AND
GetPosition(S_DEN_SilvanusIdol_a841d36c-9a00-4a26-943e-c0af6895bb16,_X,_Y,_Z)
AND
CrimeGetNewID(_Id)
THEN
PROC_CharacterRegisterCrime(_Char,_NewCrimeType,S_DEN_SilvanusIdol_a841d36c-9a00-4a26-943e-c0af6895bb16,_Victim,_Id);
DB_CRIME_CrimeInvestigationPos(_Id,_X,_Y,_Z);

//Block follow-up crime (its unnecessary since Druid Attack is starting)
QRY
QRY_CRIME_KeepingAnEyeOut_Block((CHARACTER)_Druid, (INTEGER)_ID)
AND
DB_DEN_DruidAttack_Druids(_Druid, _, _)
AND
QRY_DEN_CheckBeforeState("DEN_State_DruidAttack")
AND
DB_OnlyOnce("DEN_DruidAttack_Start")
THEN
DB_NOOP(1);

//END_REGION

//REGION dialog button-attacking a druid

QRY
QRY_DialogAttackRequested_CustomResponse(_Druid, _Player)
AND
QRY_DEN_DruidAttack_ValidDruidVictim(_Druid)
AND
NOT QRY_DEN_DruidAttack_BlockDruidAttack(_Druid)
AND
QRY_OnlyOnce("DEN_DruidAttack_Start")
THEN
PROC_DEN_DruidAttack_AttackButtonResponse(_Druid, _Player);

PROC
PROC_DEN_DruidAttack_AttackButtonResponse((CHARACTER)_Druid, (CHARACTER)_Player)
THEN
DB_DEN_DruidAttack_DialogAttackRequest(_Druid, _Player);
PROC_TryStopDialogFor(_Player);

IF
DB_DEN_DruidAttack_DialogAttackRequest(_Druid, _Player)
AND
NOT DB_InteractiveDialogSpeaker(_, _Player)
THEN
NOT DB_DEN_DruidAttack_DialogAttackRequest(_Druid, _Player);
PROC_DEN_DruidAttack_CheckStartConflict(_Druid, _Player);

//END_REGION

//REGION Trigger State - Launch transition dialog & attack

//Idol crime is reacted to.
IF
CharacterOnCrimeSensibleActionNotification(_Druid,_,_CrimeID,"CRIME_OsirisDENIdolReaction",_Dialog,_Criminal1,_Criminal2,_Criminal3,_Criminal4, 1)
AND
QRY_DEN_CheckBeforeState("DEN_State_DruidAttack")
AND
QRY_OnlyOnce("DEN_DruidAttack_Start")
THEN
PROC_DEN_DruidAttack_CheckIdolMissingBeforeConflictStart();
SetFlag(DEN_DruidAttack_Event_IdolCrimeReaction_f2270b24-9179-47ff-be9b-e053a7280fe6);
PROC_DEN_DruidAttack_CheckStartConflict(_Druid, _Criminal1);

PROC
PROC_DEN_DruidAttack_CheckIdolMissingBeforeConflictStart()
AND
DB_GlobalFlag(DEN_GroveConflict_State_IdolIsMissing_fbdd1b1c-ef20-ab4a-5371-7b7be10ec4b9)
THEN
SetFlag(DEN_GroveConflict_Event_IdolMissingReaction_ddf6e447-9646-7d5c-c207-cf37bb218c01, NULL_00000000-0000-0000-0000-000000000000, 0);

IF
CharacterOnCrimeSensibleActionNotification(_Druid,_ ,_CrimeID,"CRIME_OsirisDENIdolReaction",_Dialog,_Criminal1,_Criminal2,_Criminal3,_Criminal4, _)
THEN
CrimeConfrontationDone(_CrimeID, _Druid);

QRY
QRY_CrimeGetCustomWarning(_Druid, _CrimeName, _WarningDialog, _CrimeID)
AND
QRY_CRIME_GetCrimeFamily(_CrimeName)
AND
DB_QRYRTN_CRIME_GetCrimeFamily(_Family)
AND
DB_DEN_DruidAttack_AttackStartCrimes(_Family)
AND
QRY_DEN_DruidAttack_OtherDruidInSight(_Druid)	//Isolated druids don't trigger the event.
AND
NOT QRY_DEN_DruidAttack_BlockDruidAttack(_Druid)
AND
CrimeGetVictim(_CrimeID,_Victim)
AND
QRY_DEN_DruidAttack_ValidDruidVictim(_Victim)
AND
CrimeGetCriminal(_CrimeID, 1, _Player)
AND
QRY_DEN_CheckBeforeState("DEN_State_DruidAttack")
AND
QRY_OnlyOnce("DEN_DruidAttack_Start")
THEN
DB_DEN_DruidAttack_CrimeVictim(_Victim);
DB_CrimeWarning_Block(_Druid, _CrimeName, _WarningDialog, _CrimeID);
PROC_DEN_DruidAttack_CheckStartConflict(_Druid, _Player);

QRY
QRY_DEN_DruidAttack_BlockDruidAttack((CHARACTER)_Druid)
AND
NOT QRY_State_IsBeforeState(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211,"DEN","DEN_State_PostDruidAttack")
THEN
DB_NOOP(1);

QRY
QRY_DEN_DruidAttack_ValidDruidVictim((CHARACTER)_Victim)
AND
DB_DEN_DruidAttack_DruidVictims(_Victim)
AND
_Victim != S_DEN_Apprentice_7cabf226-e34b-4556-8903-a45d0fe26caf
THEN
DB_NOOP(1);

QRY
QRY_DEN_DruidAttack_ValidDruidVictim((CHARACTER)S_DEN_Apprentice_7cabf226-e34b-4556-8903-a45d0fe26caf)
AND
DB_DEN_DruidAttack_DruidVictims(S_DEN_Apprentice_7cabf226-e34b-4556-8903-a45d0fe26caf)
AND
NOT DB_DEN_Apprentice_OverridingCrimes(1)
THEN
DB_NOOP(1);

QRY
QRY_DEN_DruidAttack_ValidDruidVictim((CHARACTER)_Victim) //include the Shadow Druids otherwise attacking them leads to an awkward combat until DA kicks in
AND
DB_DEN_ShadowDruid_Originals(_Victim)
THEN
DB_NOOP(1);

PROC
PROC_DEN_DruidAttack_CheckStartConflict((CHARACTER)_Druid, (CHARACTER)_Player)
THEN
PROC_DEN_ForceStopDialogAllDenPlayers();	//Den-wide scene. Remove all current dialogs and let the auto-include throw all players in after.
DB_DEN_DruidAttack_ConflictAnchors(_Druid, _Player);

//Try to change Druid anchor to Kagha.
PROC
PROC_DEN_DruidAttack_CheckStartConflict((CHARACTER)_Druid, (CHARACTER)_Player)
AND
DB_DEN_LairDruid(_Druid)
AND
NOT DB_Defeated(S_DEN_DruidLeader_95eb2b0b-a522-4ea5-8167-c5f4d1418156)
AND
NOT DB_CantAct(S_DEN_DruidLeader_95eb2b0b-a522-4ea5-8167-c5f4d1418156)
AND
QRY_SpeakerIsAvailable(S_DEN_DruidLeader_95eb2b0b-a522-4ea5-8167-c5f4d1418156)
AND
QRY_IsInRange(S_DEN_DruidLeader_95eb2b0b-a522-4ea5-8167-c5f4d1418156, _Player, 30.0)
AND
DB_DEN_DruidAttack_ConflictAnchors(_ActualDruid, _ActualPlayer)
THEN
NOT DB_DEN_DruidAttack_ConflictAnchors(_Druid, _Player);
DB_DEN_DruidAttack_ConflictAnchors(S_DEN_DruidLeader_95eb2b0b-a522-4ea5-8167-c5f4d1418156, _ActualPlayer);

//Conflict instigator is not a player.
PROC
PROC_DEN_DruidAttack_CheckStartConflict((CHARACTER)_Druid, (CHARACTER)_Player)
AND
DB_DEN_DruidAttack_ConflictAnchors(_ActualDruid, _NotPlayer)
AND
NOT DB_Players(_NotPlayer)
AND
CharacterGetOwner(_NotPlayer, _Player)
THEN
NOT DB_DEN_DruidAttack_ConflictAnchors(_ActualDruid, _NotPlayer);
DB_DEN_DruidAttack_ConflictAnchors(_ActualDruid, _Player);

//Conflict instigator is not available, try to find someone else.
PROC
PROC_DEN_DruidAttack_CheckStartConflict((CHARACTER)_Druid, (CHARACTER)_Player)
AND
DB_DEN_DruidAttack_ConflictAnchors(_ActualDruid, _ActualPlayer)
AND
NOT QRY_SpeakerIsAvailable(_ActualPlayer)
AND
QRY_GetClosestAvailableCharacterTo(_ActualDruid, 0, 1, _ActualPlayer, _ActualPlayer, 1, 0, 0)
AND
DB_ClosestAvailableCharacterTo(_NewPlayer, _ActualDruid, _Dist)
THEN
NOT DB_DEN_DruidAttack_ConflictAnchors(_ActualDruid, _ActualPlayer);
DB_DEN_DruidAttack_ConflictAnchors(_ActualDruid, _NewPlayer);

PROC
PROC_DEN_DruidAttack_CheckStartConflict((CHARACTER)_Druid, (CHARACTER)_Player)
AND
DB_DEN_DruidAttack_ConflictAnchors(_ActualDruid, _ActualPlayer)
THEN
PROC_DEN_DruidAttack_StartConflictDialog(_ActualDruid, _ActualPlayer);

//Conflict instigator druid is Kagha.
PROC
PROC_DEN_DruidAttack_StartConflictDialog((CHARACTER)S_DEN_DruidLeader_95eb2b0b-a522-4ea5-8167-c5f4d1418156, (CHARACTER)_Player)
AND
NOT DB_OnlyOnce("DEN_DruidAttack_DruidToCombatDialog")
AND
QRY_StartDialogCustom_Fixed(DEN_DruidAttack_LINE_DruidToCombat_5a00d684-3cc6-fede-ad99-4d12ce8487a7, 
	S_DEN_DruidAttackVoice1_28b2495f-ef5e-4917-bbf7-9822aacd1d8f, S_DEN_DruidAttackAlertCaller_cf751b79-3e36-483b-9a4b-b5ef017a2d00, S_DEN_DruidAttackVoice2_7348d6f0-b16a-4a37-b785-9bedf5b3639c,
	S_DEN_DruidLeader_95eb2b0b-a522-4ea5-8167-c5f4d1418156, _Player, 0, 0, 0, 0)
THEN
DB_OnlyOnce("DEN_DruidAttack_DruidToCombatDialog");

//Conflict instigator druid is not Kagha or dialog failed to start with Kagha.
PROC
PROC_DEN_DruidAttack_StartConflictDialog((CHARACTER)_Druid, (CHARACTER)_Player)
AND
NOT DB_OnlyOnce("DEN_DruidAttack_DruidToCombatDialog")
AND
QRY_StartDialogCustom_Fixed(DEN_DruidAttack_LINE_DruidToCombat_5a00d684-3cc6-fede-ad99-4d12ce8487a7, 
	S_DEN_DruidAttackVoice1_28b2495f-ef5e-4917-bbf7-9822aacd1d8f, S_DEN_DruidAttackAlertCaller_cf751b79-3e36-483b-9a4b-b5ef017a2d00, S_DEN_DruidAttackVoice2_7348d6f0-b16a-4a37-b785-9bedf5b3639c,
	NULL_00000000-0000-0000-0000-000000000000, _Player, 0, 0, 0, 0)
THEN
DB_OnlyOnce("DEN_DruidAttack_DruidToCombatDialog");

//Dialog did not start.
PROC
PROC_DEN_DruidAttack_StartConflictDialog((CHARACTER)_Druid, (CHARACTER)_Player)
AND
NOT DB_OnlyOnce("DEN_DruidAttack_DruidToCombatDialog")
THEN
SetFlag(DEN_DruidAttack_State_DruidSetup_96fc1420-fa07-4235-98c3-ecb34fcb6b0a, NULL_00000000-0000-0000-0000-000000000000, 0);	//Dialog failed, add fallback.

//dialog ended -> progress
IF
DialogEnded(DEN_DruidAttack_LINE_DruidToCombat_5a00d684-3cc6-fede-ad99-4d12ce8487a7,_)
THEN
SetFlag(DEN_DruidAttack_State_DruidSetup_96fc1420-fa07-4235-98c3-ecb34fcb6b0a, NULL_00000000-0000-0000-0000-000000000000, 0);

//END_REGION

//REGION Trigger State - forced conditions (combat & ritual druid defeated)

PROC
PROC_DEN_DruidAttack_TryStart((CHARACTER)_Druid, (CHARACTER)_Player)
AND
QRY_DEN_CheckBeforeState("DEN_State_DruidAttack")
AND
QRY_OnlyOnce("DEN_DruidAttack_Start")
THEN
PROC_DEN_DruidAttack_CheckStartConflict(_Druid, _Player);

//Last fallback: If a druid starts a combat turn and there are other druids in the combat and the combat has enemy players.
IF
TurnStarted((CHARACTER)_Druid)
AND
DB_DEN_DruidAttack_Druids(_Druid, _, _)
AND
DB_Is_InCombat(_Druid, _ID)
AND
DB_Players(_Player)
AND
DB_Is_InCombat(_Player, _ID)
AND
NOT DB_OnlyOnce("DEN_DruidAttack_Start")
AND
QRY_DEN_DruidAttack_OtherDruidInSight(_Druid)
AND
IsEnemy(_Druid, _Player, 1)
THEN
PROC_DEN_DruidAttack_TryStart(_Druid, _Player);

QRY
QRY_DEN_DruidAttack_OtherDruidInSight((CHARACTER)_Druid)
AND
DB_DEN_DruidAttack_Druids(_OtherDruid,_,_)
AND
_Druid!=_OtherDruid
AND
DB_Sees(_OtherDruid,_Druid)
THEN
DB_NOOP(1);

//END_REGION

//REGION Kill Goblin

//if the captured goblin sazza is still alive when the event starts, have the first cowerer entering the region kill her

IF
EnteredTrigger(_Character,S_DEN_Prison_Sub_f46dfea0-d7bf-4af7-aa5b-26edca7a8043)
AND
DB_DEN_NPC(_Character,_,_Dialog)
AND
_Dialog != NULL_00000000-0000-0000-0000-000000000000
AND
DB_GlobalFlag(DEN_DruidAttack_State_DruidSetup_96fc1420-fa07-4235-98c3-ecb34fcb6b0a)
AND
NOT DB_Dead(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb)
AND
NOT DB_GlobalFlag(DEN_CapturedGoblin_State_Released_63535870-e8f0-6b53-4194-0ca66bc2416e)
AND
NOT DB_Is_InCombat(_Character,_)
AND
NOT DB_DEN_DruidAttack_GoblinKiller(_Character)
THEN
DB_DEN_DruidAttack_GoblinKiller(_Character);

IF
DB_DEN_DruidAttack_GoblinKiller(_Character)
THEN
PROC_CharacterMoveTo(_Character,S_DEN_DruidAttack_GoblinKillPoint_cb9889c4-2e97-45d3-8a50-a123d512d375,"Run","DEN_DruidAttack_KillGoblin");

IF
EntityEvent((CHARACTER)_Character,"DEN_DruidAttack_KillGoblin")
AND
NOT DB_Dead(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb)
AND
NOT DB_GlobalFlag(DEN_CapturedGoblin_State_Released_63535870-e8f0-6b53-4194-0ca66bc2416e)
THEN
Attack(_Character,S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb,1);

IF
AttackedBy(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb,(CHARACTER)_Character,_,_Amount,_,_,_)
AND
DB_DEN_DruidAttack_GoblinKiller(_Character)
THEN
Die(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb,DEATHTYPE.Physical,_Character,1,1);
NOT DB_DEN_DruidAttack_GoblinKiller(_Character);

//END_REGION

//REGION Initial encounter

PROC
PROC_DEN_DruidAttack_Init()
AND
DB_DEN_DruidAttack_ConflictAnchors(_Druid, _Player)
THEN
PROC_DEN_DruidAttack_StartInitialEncounter(_Druid, _Player);

PROC
PROC_DEN_DruidAttack_StartInitialEncounter((CHARACTER)_Druid, (CHARACTER)_Player)
THEN
DB_DEN_DruidAttack_Attackers(_Druid);
DB_DEN_DruidAttack_QueuedInitialEncounter(_Druid, _Player);
SetFaction(_Druid, Act1_DEN_DruidAttack_Druids_Hostile_b5ea4bfc-220c-41b0-beff-b568efae670f);

PROC
PROC_DEN_DruidAttack_StartInitialEncounter((CHARACTER)_Druid, (CHARACTER)_Player)
AND
DB_DEN_DruidAttack_CrimeVictim(_Victim)
THEN
DB_DEN_DruidAttack_Attackers(_Victim);
DB_DEN_DruidAttack_QueuedInitialEncounter(_Victim, _Player);
SetFaction(_Victim, Act1_DEN_DruidAttack_Druids_Hostile_b5ea4bfc-220c-41b0-beff-b568efae670f);

//Every druid of the same "group" that sees the initial druid anchor when the event begins will join the initial encounter.
//MAYBE: Add extra distance check if necessary.
PROC
PROC_DEN_DruidAttack_StartInitialEncounter((CHARACTER)_Druid, (CHARACTER)_Player)
AND
DB_DEN_DruidAttack_Druids(_Druid, _, _)
AND
DB_DEN_DruidAttack_Druids(_OtherDruid, _, _)
AND
_Druid != _OtherDruid
AND
GetDistanceTo(_Druid, _OtherDruid, _DistToNPC)
AND
GetDistanceTo(_Player, _OtherDruid, _DistToPlayer)
AND
_DistToNPC < 20.0
AND
_DistToPlayer < 15.0
THEN
DB_DEN_DruidAttack_Attackers(_OtherDruid);
DB_DEN_DruidAttack_QueuedInitialEncounter(_OtherDruid, _Player);
SetFaction(_OtherDruid, Act1_DEN_DruidAttack_Druids_Hostile_b5ea4bfc-220c-41b0-beff-b568efae670f);

//Same for the victim
PROC
PROC_DEN_DruidAttack_StartInitialEncounter((CHARACTER)_Druid, (CHARACTER)_Player)
AND
DB_DEN_DruidAttack_CrimeVictim(_Victim)
AND
DB_DEN_DruidAttack_Druids(_OtherDruid, _, _)
AND
_Victim != _OtherDruid
AND
NOT DB_DEN_DruidAttack_Attackers(_OtherDruid)
AND
GetDistanceTo(_Victim, _OtherDruid, _DistToNPC)
AND
GetDistanceTo(_Player, _OtherDruid, _DistToPlayer)
AND
_DistToNPC < 20.0
AND
_DistToPlayer < 15.0
THEN
DB_DEN_DruidAttack_Attackers(_OtherDruid);
DB_DEN_DruidAttack_QueuedInitialEncounter(_OtherDruid, _Player);
SetFaction(_OtherDruid, Act1_DEN_DruidAttack_Druids_Hostile_b5ea4bfc-220c-41b0-beff-b568efae670f);

PROC
PROC_DEN_DruidAttack_StartInitialEncounter((CHARACTER)_Druid, (CHARACTER)_Player)
AND
DB_DEN_DruidAttack_CrimeVictim(_Victim)
THEN
NOT DB_DEN_DruidAttack_CrimeVictim(_Victim);

IF
BaseFactionChanged(_Druid, _, Act1_DEN_DruidAttack_Druids_Hostile_b5ea4bfc-220c-41b0-beff-b568efae670f)
AND
DB_DEN_DruidAttack_QueuedInitialEncounter(_Druid, _Player)
THEN
NOT DB_DEN_DruidAttack_QueuedInitialEncounter(_Druid, _Player);
EnterCombat(_Druid, _Player);

//END_REGION

//REGION Combat Setup

//formally begin druid attack DEN STATE
IF
FlagSet(DEN_DruidAttack_State_DruidSetup_96fc1420-fa07-4235-98c3-ecb34fcb6b0a,NULL_00000000-0000-0000-0000-000000000000,_)
THEN
PROC_State_Progress(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_DruidAttack");

PROC
PROC_State_Changed(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_DruidAttack")
THEN
PROC_DEN_DruidAttack_Init(); //triggered only once here
PROC_DEN_DruidAttack_Init_JournalHook();

PROC
PROC_DEN_DruidAttack_Init_JournalHook()
THEN
DB_NOOP(1); //caught in other goals to update quests

//Adjust tiefling death treshold value
PROC
PROC_DEN_DruidAttack_Init()
AND
DB_DEN_Misc_TieflingCountTreshold(_Treshold)
THEN
NOT DB_DEN_Misc_TieflingCountTreshold(_Treshold);
DB_DEN_Misc_TieflingCountTreshold(28);


//set up kill counters for valid druid attack participants on either side
PROC
PROC_DEN_DruidAttack_Init()
THEN
PROC_DEN_DruidAttack_LoadKillCounters();

PROC
PROC_DEN_DruidAttack_Init()
AND
DB_DEN_DruidAttack_Druids(_Character,_,_)
THEN
TriggerRegisterForCharacter(S_DEN_Cave_SUB_adecafa4-27c6-4b2f-bf9e-6ffd7c81a766, _Character);
TriggerRegisterForCharacter(S_DEN_DruidAttack_PrisonApproach_7fe8992c-fd24-439c-9d42-8cc5ec368cd0,_Character);
TriggerRegisterForCharacter(S_DEN_DruidLair_SUB_a9794f19-187a-4d79-b739-443548411d29, _Character);
SetFlag(DEN_DruidAttack_Event_DruidsPrepare_4faee0c9-018a-47e2-a754-d331c746a67f,_Character);

//play sound
PROC
PROC_DEN_DruidAttack_Init()
AND
DB_Players((CHARACTER)_Player)
AND
DB_InRegion(_Player,(TRIGGER)S_DEN_SacredPond_SUB_2303e19f-549f-434f-bee0-b886fb34c46a)
THEN
PlayHUDSound(_Player,"SE_DEN_RiteofThorns_Interruption_QD");

//play effect
PROC
PROC_DEN_DruidAttack_Init()
THEN
PlayEffect(S_DEN_RiteInterruptedEffectPoint_6a341eea-df2d-4a97-8a4d-53d253e9ae28, VFX_Script_DEN_RiteOfThorns_Idol_Interrupted_01_198fece2-25ec-2880-4fa2-ae391ec13986, "", 1.0);

//manually wake up bears
PROC
PROC_DEN_DruidAttack_Init()
THEN
SetFlag(DEN_General_Event_ElevatorBearMoves_1c1694b8-c0b9-edad-9fdc-cdeedff0512e, NULL_00000000-0000-0000-0000-000000000000, 0);
RemoveStatus(S_DEN_ElevatorBear_04b7ef23-1002-4682-b962-33a2328bcd5c, "SLEEPING");
RemoveStatus(S_DEN_VoloBear_893c5f40-a760-4b04-bd86-c8fb8f5dd08a, "SLEEPING");

//set druid factions for event
PROC
PROC_DEN_DruidAttack_Init()
AND
DB_DEN_DruidAttack_Druids(_Druid,_,_)
AND
NOT DB_DEN_DruidAttack_Attackers(_Druid)
THEN
SetFaction(_Druid, Act1_DEN_DruidAttack_Druids_Neutral_6e6d99c5-839a-42e6-b0ef-0f6c74029955);

//set outsider factions for event
PROC
PROC_DEN_DruidAttack_Init()
AND
DB_DEN_DruidAttack_NonDruids(_NonDruid, _Type, _, _)
AND
_Type != "Flee"
THEN
SetFaction(_NonDruid, Act1_DEN_DruidAttack_Refugees_Neutral_fc901c7b-cc33-445c-9b7d-2cd290368932);

PROC
PROC_DEN_DruidAttack_Init()
AND
DB_DEN_DruidAttack_Druids(_Druid,_,_Dialog)
AND
_Dialog != NULL_00000000-0000-0000-0000-000000000000
THEN
PROC_DEN_DruidAttack_SetNewDialog(_Druid,_Dialog);

//druids will attempt to break down the door to the prison when near it to attack the cowering outsiders within
PROC
PROC_DEN_DruidAttack_Init()
AND
DB_DEN_DruidAttack_Druids(_Druid,_,_)
THEN
AiAddInterestingItem(_Druid,S_DEN_PrisonMainDoor_c166068b-38dd-4891-b811-c4b2fde19e1c);

PROC
PROC_DEN_DruidAttack_Init()
AND
DB_DEN_DruidAttack_NonDruids(_Character, _, _, _)
AND
NOT DB_DEN_DruidAttack_SwarmExcluded(_Character)
THEN
RequestSetSwarmGroup(_Character, "DEN_DruidAttack_NonDruids");

PROC
PROC_DEN_DruidAttack_Init()
AND
DB_DEN_DruidAttack_DruidAnimals(_Animal)
THEN
RequestSetSwarmGroup(_Animal, "DEN_DruidAttack_Animals");

//begin setup for outsiders throughout grove
PROC
PROC_DEN_DruidAttack_Init()
AND
NOT DB_GlobalFlag(DEN_DruidAttack_State_TieflingSetup_71dfdbe0-558d-443f-a033-8c86c34723e1)
THEN
SetFlag(DEN_DruidAttack_State_TieflingSetup_71dfdbe0-558d-443f-a033-8c86c34723e1,NULL_00000000-0000-0000-0000-000000000000);

//characters that FLEE during event will be processed as usual characters leaving the region
IF
EntityEvent((CHARACTER)_Char,"DEN_NPC_LeftDen")
THEN
PROC_DEN_DruidAttack_NPCLeft(_Char);

PROC
PROC_DEN_DruidAttack_NPCLeft((CHARACTER)_Char)
AND
DB_DEN_DruidAttack_Druids(_Char,_Combat,_Dialog)
THEN
NOT DB_DEN_DruidAttack_Druids(_Char,_Combat,_Dialog);

PROC
PROC_DEN_DruidAttack_NPCLeft((CHARACTER)_Char)
AND
DB_DEN_DruidAttack_NonDruids(_Char,_Role,_Group,_Dialog)
THEN
NOT DB_DEN_DruidAttack_NonDruids(_Char,_Role,_Group,_Dialog);

//END_REGION

//REGION Characters move to their initial combat destination

//All druids move.
PROC
PROC_DEN_DruidAttack_Init()
AND
DB_DEN_DruidAttack_Druids(_Druid, _, _)
THEN
PROC_DEN_DruidAttack_SetupMovement(_Druid);
PROC_DEN_DruidAttack_DoMovement(_Druid);

PROC
PROC_DEN_DruidAttack_SetupMovement((CHARACTER)_Character)
AND
DB_DEN_DruidAttack_Druids(_Character, _Combat, _)
AND
DB_DEN_DruidAttack_AttackPath(_Character, _FinalPosition, _OutOfPond, _UpRamp)
THEN
DB_DEN_DruidAttack_MovingToCombat(_Character, _Combat);
PROC_DEN_DruidAttack_QueueMovement(_Character, "OutOfPond", _OutOfPond);
PROC_DEN_DruidAttack_QueueMovement(_Character, "UpRamp", _UpRamp);
PROC_DEN_DruidAttack_QueueMovement(_Character, _FinalPosition);

PROC
PROC_DEN_DruidAttack_QueueMovement((CHARACTER)_Character, (STRING)_TransitionArea, (INTEGER)_Index)
AND
DB_DEN_DruidAttack_PathPositions(_TransitionArea, _Index, _Position)
THEN
DB_DEN_DruidAttack_Movement(_Character, _Position);

PROC
PROC_DEN_DruidAttack_QueueMovement((CHARACTER)_Character, (TRIGGER)_FinalPosition)
THEN
DB_DEN_DruidAttack_Movement(_Character, _FinalPosition);

//A druid instructed to move but can't move for the first time is ready for combat. 
PROC
PROC_DEN_DruidAttack_DoMovement((CHARACTER)_Druid)
AND
DB_DEN_DruidAttack_Druids(_Druid, _, _)
AND
NOT DB_DEN_DruidAttack_Movement(_Druid, _)
AND
NOT DB_DEN_DruidAttack_Attackers(_Druid)
THEN
DB_DEN_DruidAttack_DruidReadyForAttack(_Druid);

PROC
PROC_DEN_DruidAttack_DoMovement((CHARACTER)_Character)
AND
DB_DEN_DruidAttack_Movement(_Character, _Position)
AND
NOT DB_DEN_DruidAttack_Moving(_Character)
THEN
NOT DB_DEN_DruidAttack_Movement(_Character, _Position);
DB_DEN_DruidAttack_Moving(_Character);
PROC_CharacterMoveTo(_Character, _Position, "Run", "DEN_DruidAttack_MovementDone");

//Try to move again when a movement is done. This is because the movement in the grove can sometimes be long chains.
IF
EntityEvent((CHARACTER)_Character, "DEN_DruidAttack_MovementDone")
THEN
NOT DB_DEN_DruidAttack_Moving(_Character);
PROC_DEN_DruidAttack_DoMovement((CHARACTER)_Character);

//fake 'using' the door object. it's messy to have them do it for real.
IF
EntityEvent(_Druid,"DEN_DruidAttack_ExitLair")
THEN
TeleportTo(_Druid,S_DEN_LairMainOutDoor_1f76e748-d0d5-4cb5-8d0f-7fd96f14285b);
SetOnStage(_Druid,1);

//END_REGION

//REGION Tracking

//cleaning + checks if a druid is perma-defeated
PROC
PROC_StateSet_Defeated((CHARACTER)_Druid)
AND
DB_DEN_DruidAttack_Druids(_Druid,_Combat,_Dialog)
THEN
NOT DB_DEN_DruidAttack_Druids(_Druid,_Combat,_Dialog);

//cleaning + checks if an outsider is defeated
PROC
PROC_StateSet_Defeated((CHARACTER)_Char)
AND
DB_DEN_DruidAttack_NonDruids(_Char,_Role,_Group,_Dialog)
AND
_Char != S_Player_Wyll_c774d764-4a17-48dc-b470-32ace9ce447d
AND
_Char != S_Player_ShadowHeart_3ed74f06-3c60-42dc-83f6-f034cb47c679
THEN
NOT DB_DEN_DruidAttack_NonDruids(_Char,_Role,_Group,_Dialog);

//END_REGION

//REGION Disable Cowering
PROC
PROC_DEN_DruidAttack_Init()
AND
DB_DEN_DruidAttack_Druids(_Char,_,_)
AND
GetFlag(GLO_State_NoCower_8180293e-4d0d-4e9b-9dfc-b195d4c67ddb,_Char,0)
THEN
SetFlag(GLO_State_NoCower_8180293e-4d0d-4e9b-9dfc-b195d4c67ddb,_Char);
DB_DEN_DruidAttack_NoCower(_Char);

PROC
PROC_DEN_DruidAttack_Init()
AND
DB_DEN_DruidAttack_NonDruids(_Char,_,_,_)
AND
GetFlag(GLO_State_NoCower_8180293e-4d0d-4e9b-9dfc-b195d4c67ddb,_Char,0)
THEN
SetFlag(GLO_State_NoCower_8180293e-4d0d-4e9b-9dfc-b195d4c67ddb,_Char);
DB_DEN_DruidAttack_NoCower(_Char);

PROC
PROC_DEN_DruidAttack_PostAttackSetup()
AND
DB_DEN_DruidAttack_NoCower(_Char)
THEN
ClearFlag(GLO_State_NoCower_8180293e-4d0d-4e9b-9dfc-b195d4c67ddb,_Char);
NOT DB_DEN_DruidAttack_NoCower(_Char);
//END_REGION

//REGION NonDruids Move to Position

IF
FlagSet(DEN_DruidAttack_State_TieflingSetup_71dfdbe0-558d-443f-a033-8c86c34723e1,NULL_00000000-0000-0000-0000-000000000000,_)
THEN
PROC_DEN_DruidAttack_GroveNPCSetup();

PROC
PROC_DEN_DruidAttack_GroveNPCSetup()
AND
DB_DEN_DruidAttack_NonDruids(_Character,_,_,_Dialog)
AND
_Dialog != NULL_00000000-0000-0000-0000-000000000000
THEN
PROC_DEN_DruidAttack_SetNewDialog(_Character,_Dialog);

PROC
PROC_DEN_DruidAttack_GroveNPCSetup()
AND
DB_DEN_DruidAttack_NonDruids(_Character,_,_,NULL_00000000-0000-0000-0000-000000000000)
THEN
PROC_DEN_DruidAttack_SetNoDialog(_Character);

PROC
PROC_DEN_DruidAttack_GroveNPCSetup()
THEN
SetFlag(DEN_GruntingKid_State_HatchOpened_0ff8129d-c04b-4b7d-bf9b-60b55b40fbcc,NULL_00000000-0000-0000-0000-000000000000);

PROC
PROC_DEN_DruidAttack_GroveNPCSetup()
AND
DB_DEN_DruidAttack_NonDruids(_Character,"Flee",_,_)
AND
NOT DB_Defeated(_Character)		//For origin characters.
THEN
PROC_DEN_LeaveDen(_Character);

PROC
PROC_DEN_DruidAttack_GroveNPCSetup()
AND
DB_DEN_DruidAttack_NonDruids(_Character,_,_,_)
AND
NOT DB_DEN_DruidAttack_OpposedDruids(_Character, _)
AND
Random(6000,_Random)
AND
IntegerSum(0,_Random,_Wait)
THEN
TriggerRegisterForCharacter(S_DEN_Cave_SUB_adecafa4-27c6-4b2f-bf9e-6ffd7c81a766, _Character);
TriggerRegisterForCharacter(S_DEN_Prison_Sub_f46dfea0-d7bf-4af7-aa5b-26edca7a8043,_Character);
TriggerRegisterForCharacter(S_DEN_DruidAttack_PrisonDefendArea_61c737ce-3ef6-47ce-b7ef-91d289d348f3,_Character);
ObjectTimerLaunch(_Character, "DEN_DruidAttack_TieflingMoveTimer",_Wait);

PROC
PROC_DEN_DruidAttack_GroveNPCSetup()
AND
DB_DEN_DruidAttack_NonDruids(_NonDruid,"Kid","",_Dialog)
AND
NOT IsInTrigger(_NonDruid,S_DEN_Hideout_SUB_8016de65-4be3-4083-960f-4d14a7455d4b,1)
THEN
PROC_CharacterMoveTo(_NonDruid,S_DEN_DruidAttack_KidHideoutArea_e8a80f38-6bfa-45d7-9ca9-b31d3be98495,"Run","");

IF
ObjectTimerFinished((CHARACTER)_Character,"DEN_DruidAttack_TieflingMoveTimer")
AND
DB_DEN_DruidAttack_NonDruids(_Character, _, "DEN_DRUIDATTACK_PRISONCOWER", _)
THEN
PROC_CharacterMoveTo(_Character,S_DEN_DruidAttack_PrisonCowerArea_4597f504-b855-462c-80f9-33a606b76138,"Run","");
SetFlag(DEN_DruidAttack_Event_TieflingsPrepare_6a8c217f-adf6-46d2-8cfd-d2e9a437c3d4,_Character, 0, 1);

IF
ObjectTimerFinished((CHARACTER)_Character,"DEN_DruidAttack_TieflingMoveTimer")
AND
NOT DB_DEN_DruidAttack_NonDruids(_Character,"Special","",_)
THEN
SetFlag(DEN_DruidAttack_Event_TieflingsPrepare_6a8c217f-adf6-46d2-8cfd-d2e9a437c3d4,_Character, 0, 1);


IF
EntityEvent((CHARACTER)_Character,"DEN_NPC_LeftDen")
AND
DB_DEN_DruidAttack_NonDruids(_Character,"Flee",_Group,_Dialog)
THEN
NOT DB_DEN_DruidAttack_NonDruids(_Character,"Flee",_Group,_Dialog);

PROC
PROC_DEN_DruidAttack_GroveNPCSetup()
AND
QRY_OnlyOnce("DEN_DruidAttack_RelieveGatekeeper")
THEN
PROC_DEN_Gate_OpenOrCloseGate(0);
SetFlag(DEN_DruidAttack_Event_BypassDone_a66b1d52-046d-41e2-909c-e01045126e77,S_DEN_Gatekeeper_847717b3-82eb-45a7-b875-78665c12ce9a);
NOT DB_DEN_DruidAttack_NonDruids(S_DEN_Gatekeeper_847717b3-82eb-45a7-b875-78665c12ce9a,"Special","",DEN_DruidAttack_Gatekeeper_b2017c64-1221-362d-794d-16fae9bdb765);
DB_DEN_DruidAttack_NonDruids(S_DEN_Gatekeeper_847717b3-82eb-45a7-b875-78665c12ce9a,"Fight","DEN_DRUIDATTACK_CAVEENTRANCE",DEN_DruidAttack_Gatekeeper_b2017c64-1221-362d-794d-16fae9bdb765);
SetFlag(DEN_DruidAttack_Event_TieflingsPrepare_6a8c217f-adf6-46d2-8cfd-d2e9a437c3d4,S_DEN_Gatekeeper_847717b3-82eb-45a7-b875-78665c12ce9a, 0, 1);

IF
EnteredTrigger(_NonDruid,S_DEN_Prison_Sub_f46dfea0-d7bf-4af7-aa5b-26edca7a8043)
AND
DB_GlobalFlag(DEN_DruidAttack_State_TieflingSetup_71dfdbe0-558d-443f-a033-8c86c34723e1)
AND
DB_DEN_DruidAttack_NonDruids(_NonDruid,_,_,_)
AND
IsDestroyed(S_DEN_PrisonMainDoor_c166068b-38dd-4891-b811-c4b2fde19e1c,0)
AND
NOT QRY_DEN_DruidAttack_CowerersInPrison()
AND
QRY_OnlyOnce("DEN_DruidAttack_LockPrison")
THEN
PROC_DEN_DruidAttack_LockPrison();

PROC
PROC_DEN_DruidAttack_LockPrison()
AND
IsOpening(S_DEN_PrisonMainDoor_c166068b-38dd-4891-b811-c4b2fde19e1c,1)
THEN
Close(S_DEN_PrisonMainDoor_c166068b-38dd-4891-b811-c4b2fde19e1c);

PROC
PROC_DEN_DruidAttack_LockPrison()
AND
IsOpened(S_DEN_PrisonMainDoor_c166068b-38dd-4891-b811-c4b2fde19e1c,1)
THEN
Close(S_DEN_PrisonMainDoor_c166068b-38dd-4891-b811-c4b2fde19e1c);

PROC
PROC_DEN_DruidAttack_LockPrison()
AND
IsLocked(S_DEN_PrisonMainDoor_c166068b-38dd-4891-b811-c4b2fde19e1c,0)
THEN
Lock(S_DEN_PrisonMainDoor_c166068b-38dd-4891-b811-c4b2fde19e1c,"NOKEY");

QRY
QRY_DEN_DruidAttack_CowerersInPrison()
AND
DB_DEN_DruidAttack_NonDruids(_NonDruid, _,"DEN_DRUIDATTACK_PRISONCOWER",_)
AND
IsInTrigger(_NonDruid,S_DEN_Prison_Sub_f46dfea0-d7bf-4af7-aa5b-26edca7a8043,0)
THEN
DB_NOOP(1);

//END_REGION

//REGION Combat areas and combat start conditions

IF
DB_DEN_DruidAttack_DruidReadyForAttack(_Druid)
AND
DB_DEN_DruidAttack_Druids(_Druid, _Combat, _)
THEN
SetFlag((FLAG)DEN_DruidAttack_State_InPosition_fb382926-afc1-492c-85ba-65198765b3fd, _Druid, 0, 1);
DB_DEN_DruidAttack_ReadyCombatParticipant(_Druid, _Combat);

IF
FlagSet(DEN_DruidAttack_State_InPosition_fb382926-afc1-492c-85ba-65198765b3fd, (CHARACTER)_Refugee, _)
AND
DB_DEN_DruidAttack_NonDruids(_Refugee, _, _Combat, _)
AND
_Combat != "DEN_DRUIDATTACK_PRISONCOWER"
THEN
DB_DEN_DruidAttack_ReadyCombatParticipant(_Refugee, _Combat);

//Once a ready druid and a refugee are ready, start a timer to give time for others to arrive.
IF
DB_DEN_DruidAttack_ReadyCombatParticipant(_Druid, _Combat)
AND
DB_DEN_DruidAttack_DruidReadyForAttack(_Druid)
AND
DB_DEN_DruidAttack_ReadyCombatParticipant(_Refugee, _Combat)
AND
DB_DEN_DruidAttack_NonDruids(_Refugee, _, _, _)
AND
NOT DB_OnlyOnce(_Combat)
THEN
DB_OnlyOnce(_Combat);
DB_DEN_DruidAttack_CheckPrecipitateCombat(_Combat);
TimerLaunch(_Combat, 12000);

//All in position.
IF
DB_DEN_DruidAttack_CheckPrecipitateCombat(_Combat)
AND
NOT DB_DEN_DruidAttack_MovingToCombat(_, _Combat)
THEN
NOT DB_DEN_DruidAttack_CheckPrecipitateCombat(_Combat);
TimerCancel(_Combat);
PROC_DEN_DruidAttack_StartCombat((STRING)_Combat);

IF
TimerFinished(_Combat)
AND
DB_DEN_DruidAttack_Combats(_Combat)
THEN
PROC_DEN_DruidAttack_StartCombat((STRING)_Combat);

PROC
PROC_DEN_DruidAttack_StartCombat((STRING)_Combat)
AND
NOT DB_DEN_DruidAttack_CombatStarted(_Combat)
THEN
DB_DEN_DruidAttack_CombatStarted(_Combat);

IF
DB_DEN_DruidAttack_CombatStarted(_Combat)
AND
DB_DEN_DruidAttack_ReadyCombatParticipant(_Druid, _Combat)
AND
DB_DEN_DruidAttack_Druids(_Druid, _Combat, _)
THEN
DB_DEN_DruidAttack_Attackers(_Druid);
SetFaction(_Druid, Act1_DEN_DruidAttack_Druids_Hostile_b5ea4bfc-220c-41b0-beff-b568efae670f);

IF
DB_DEN_DruidAttack_CombatStarted(_Combat)
AND
DB_DEN_DruidAttack_NonDruids(_Refugee, _, _Combat, _)
AND
DB_DEN_DruidAttack_ReadyCombatParticipant(_Refugee, _Combat)
THEN
SetFaction(_Refugee, (FACTION)Act1_DEN_DruidAttack_Refugees_Hostile_dc08ee59-42d6-40d9-a3e0-5cca99e66746);

PROC
PROC_DEN_DruidAttack_StartCombat((STRING)_Combat)
AND
NOT DB_DEN_DruidAttack_CombatStarted(_Combat)
THEN
DB_DEN_DruidAttack_CombatStarted(_Combat);

//END_REGION

//REGION End of individual combats

//If a ready druid leaves any combat, it means their original combat is over, end it.
IF
LeftCombat((CHARACTER)_Druid, _)
AND
DB_DEN_DruidAttack_ReadyCombatParticipant(_Druid, _Combat)
AND
NOT DB_Defeated(_Druid)
AND
NOT DB_DEN_DruidAttack_CombatEnded(_Combat)
THEN
DB_DEN_DruidAttack_CombatEnded(_Combat);

//If in position and a combat has ended, it's time to go to prison and kill remaining tieflings.
IF
DB_DEN_DruidAttack_CombatEnded(_Combat)
AND
DB_DEN_DruidAttack_ReadyCombatParticipant(_Druid, _Combat)
THEN
PROC_DEN_DruidAttack_GoToPrison(_Druid, _Combat);

//Druids ALWAYS go for the prison when their combat is over. Give interesting path that will ram them into other combats on the way there if need be.
PROC
PROC_DEN_DruidAttack_GoToPrison((CHARACTER)_Druid, (STRING)_Combat)
THEN
SetFlag(DEN_DruidAttack_State_ToPrison_41e02f5e-e390-424e-ba8f-38fd6c4c1121, _Druid, 0, 0);
PROC_CharacterMoveTo(_Druid, S_DEN_DruidAttack_PrisonDefendArea_61c737ce-3ef6-47ce-b7ef-91d289d348f3, "Run", "DEN_DruidAttack_DruidAtPrisonDoor");

//END_REGION

//REGION Approaching prison

PROC
PROC_DEN_DruidAttack_TieflingsInPrisonBecomeHostile()
AND
QRY_OnlyOnce("DEN_DruidAttack_PrisonCowerHostile")
AND
DB_DEN_DruidAttack_NonDruids(_Refugee, _, "DEN_DRUIDATTACK_PRISONCOWER", _)
THEN
SetFaction(_Refugee, Act1_DEN_DruidAttack_Refugees_Hostile_dc08ee59-42d6-40d9-a3e0-5cca99e66746);

//Characters in prison become hostile against druids if prison door is destroyed or unlocked
IF
DestroyedBy(S_DEN_PrisonMainDoor_c166068b-38dd-4891-b811-c4b2fde19e1c, _, _, _)
AND
DB_State_Current(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_DruidAttack")
THEN
PROC_DEN_DruidAttack_TieflingsInPrisonBecomeHostile();

IF
Unlocked(S_DEN_PrisonMainDoor_c166068b-38dd-4891-b811-c4b2fde19e1c, _, _)
AND
DB_State_Current(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_DruidAttack")
THEN
PROC_DEN_DruidAttack_TieflingsInPrisonBecomeHostile();

IF
FlagSet((FLAG)DEN_DruidAttack_State_InPosition_fb382926-afc1-492c-85ba-65198765b3fd, (CHARACTER)_Refugee, _)
AND
DB_DEN_DruidAttack_NonDruids(_Refugee, _, "DEN_DRUIDATTACK_PRISONCOWER", _)
AND
IsDestroyed(S_DEN_PrisonMainDoor_c166068b-38dd-4891-b811-c4b2fde19e1c, 1)
THEN
SetFaction(_Refugee, Act1_DEN_DruidAttack_Refugees_Hostile_dc08ee59-42d6-40d9-a3e0-5cca99e66746);

//END_REGION

//REGION Misc Utilities

IF
Unlocked(S_DEN_PrisonMainDoor_c166068b-38dd-4891-b811-c4b2fde19e1c,_,_)
AND
IsDestroyed(S_DEN_PrisonMainDoor_c166068b-38dd-4891-b811-c4b2fde19e1c,0)
AND
DB_DEN_DruidAttack_Druids(_Druid,_,_)
THEN
AiRemoveInterestingItem(_Druid,S_DEN_PrisonMainDoor_c166068b-38dd-4891-b811-c4b2fde19e1c);

PROC
PROC_DEN_DruidAttack_SetNewDialog((CHARACTER)_Character,(DIALOGRESOURCE)_Dialog)
THEN
PROC_RemoveDialog(_Character);
DB_Dialogs(_Character,_Dialog);

PROC
PROC_DEN_DruidAttack_SetNoDialog((CHARACTER)_Character)
THEN
PROC_RemoveDialog(_Character);

PROC
PROC_DEN_DruidAttack_LoadKillCounters()
AND
DB_DEN_DruidAttack_NonDruids(_Character,_Type,_,_)
AND
_Type!="Special"
AND
_Type!="Kid"
AND
_Type!="Flee"
AND
NOT DB_Defeated(_Character)
AND
NOT DB_DEN_DruidAttack_ValidNonDruids(_Character)
THEN
DB_DEN_DruidAttack_ValidNonDruids(_Character);

PROC
PROC_DEN_DruidAttack_LoadKillCounters()
AND
DB_DEN_DruidAttack_OpposedDruids(_Druid, _)
AND
NOT DB_DEN_DruidAttack_Druids(_Druid,_,_)
AND
NOT DB_DEN_DruidAttack_ValidNonDruids(_Druid)
THEN
DB_DEN_DruidAttack_ValidNonDruids(_Druid);

PROC
PROC_DEN_DruidAttack_LoadKillCounters()
AND
DB_DEN_DruidAttack_Druids(_Character,_,_)
AND
NOT DB_DEN_DruidAttack_ValidDruids(_Character)
THEN
DB_DEN_DruidAttack_ValidDruids(_Character);

PROC
PROC_DEN_DruidAttack_LoadKillCounters()
AND
DB_DEN_DruidAttack_ValidNonDruids(_Character)
THEN
DB_GLO_DefeatCounter(_Character, "DEN_DruidAttack_NonDruids");

PROC
PROC_DEN_DruidAttack_LoadKillCounters()
AND
DB_DEN_DruidAttack_ValidDruids(_Character)
THEN
DB_GLO_DefeatCounter(_Character, "DEN_DruidAttack_Druids");

PROC
PROC_DEN_DruidAttack_LoadKillCounters()
THEN
DB_GLO_DefeatCounter(S_DEN_Gatekeeper_847717b3-82eb-45a7-b875-78665c12ce9a, "DEN_DruidAttack_NonDruids");

//END_REGION

//REGION End of DruidAttack state

PROC
PROC_GLO_DefeatCounter_AllDefeated("DEN_DruidAttack_Druids")
THEN
PROC_DEN_DruidAttack_AttackOver(S_DEN_TieflingLeader_475200ee-cc3c-4dbe-84b1-1820c02ea26a,S_DEN_Trainer_02025646-347a-4235-aef7-e46b7c94b435,DEN_DruidAttack_State_PrepAfterDeathOfDruids_b4754af7-07ec-433c-87d2-e78ef4c79e6e);

PROC
PROC_DEN_DruidAttack_AttackOver((CHARACTER)_Leader,(CHARACTER)_Backup,(FLAG)_Flag)
AND
NOT DB_Defeated(_Leader)
AND
NOT DB_GlobalFlag(DEN_DruidAttack_Event_FactionDeathCheckin_2d908dbc-1d30-ef8b-6c16-dd4cbce00505)
THEN
SetFlag(DEN_DruidAttack_Event_FactionDeathCheckin_2d908dbc-1d30-ef8b-6c16-dd4cbce00505, NULL_00000000-0000-0000-0000-000000000000);
PROC_DEN_DruidAttack_LeaderCheckin(_Leader);

PROC
PROC_DEN_DruidAttack_AttackOver((CHARACTER)_Leader,(CHARACTER)_Backup,(FLAG)_Flag)
AND
DB_Defeated(_Leader)
AND
NOT DB_Dead(_Backup)
AND
NOT DB_GlobalFlag(DEN_DruidAttack_Event_FactionDeathCheckin_2d908dbc-1d30-ef8b-6c16-dd4cbce00505)
THEN
SetFlag(DEN_DruidAttack_Event_FactionDeathCheckin_2d908dbc-1d30-ef8b-6c16-dd4cbce00505, NULL_00000000-0000-0000-0000-000000000000);
PROC_DEN_DruidAttack_LeaderCheckin(_Backup);

PROC
PROC_DEN_DruidAttack_AttackOver((CHARACTER)_Leader,(CHARACTER)_Backup,(FLAG)_Flag)
AND
DB_Defeated(_Leader)
AND
DB_Defeated(_Backup)
THEN
SetFlag(_Flag, NULL_00000000-0000-0000-0000-000000000000);

PROC
PROC_DEN_DruidAttack_LeaderCheckin((CHARACTER)_Character)
AND
DB_Dialogs(_Character,_Dialog)
AND
QRY_GetClosestAvailableCharacterTo(_Character,0,0,NULL_00000000-0000-0000-0000-000000000000,NULL_00000000-0000-0000-0000-000000000000,0,1)
AND
DB_ClosestAvailableCharacterTo(_Player,_Character,_)
AND
DB_InRegion(_Player,S_DEN_Cave_SUB_adecafa4-27c6-4b2f-bf9e-6ffd7c81a766)
THEN
PROC_CharacterMoveToAndTalk(_Character,_Player,_Dialog,"DEN_DruidAttack_LeaderCheckin","Sprint",20.0);

IF
CharacterMoveToAndTalkRequestDialog(_,(CHARACTER)_Player,_,"DEN_DruidAttack_LeaderCheckin")
AND
DB_Is_Wildshaped(_Player)
THEN
PROC_RemoveMutingPolymorphs(_Player);

PROC
PROC_DEN_DruidAttack_LeaderCheckin((CHARACTER)_Character)
THEN
ObjectTimerLaunch(_Character,"DEN_DruidAttack_NoAttackEndFollowup",20000);

IF
ObjectTimerFinished((CHARACTER)_Leader,"DEN_DruidAttack_NoAttackEndFollowup")
AND
DB_DEN_DruidAttack_FactionLeaders(_Leader,_Flag)
AND
NOT DB_GlobalFlag(_Flag)
AND
DB_State_Current(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_DruidAttack")
THEN
SetFlag(_Flag, NULL_00000000-0000-0000-0000-000000000000);

IF
CharacterMoveToAndTalkFailed((CHARACTER)_Leader,_,"DEN_DruidAttack_LeaderCheckin",_)
AND
DB_DEN_DruidAttack_FactionLeaders(_Leader,_Flag)
AND
DB_State_Current(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_DruidAttack")
THEN
SetFlag(_Flag,NULL_00000000-0000-0000-0000-000000000000);

PROC
PROC_GLO_DefeatCounter_AllDefeated("DEN_DruidAttack_Druids")
AND
DB_DEN_DruidAttack_NonDruids(_Character, _, _, _)
THEN
RequestSetSwarmGroup(_Character, "");
//END_REGION

//REGION Post-Assault (Outsiders Won Processing)

IF
FlagSet(DEN_DruidAttack_State_PrepAfterDeathOfDruids_b4754af7-07ec-433c-87d2-e78ef4c79e6e, _, _)
THEN
PROC_State_Progress(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_PostDruidAttack");

PROC
PROC_State_Changed(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_PostDruidAttack")
THEN
PROC_DEN_DruidAttack_PostAttackSetup();
PROC_DEN_DruidAttack_PostAttack_JournalHook();

PROC
PROC_DEN_DruidAttack_PostAttack_JournalHook()
THEN
DB_NOOP(1);

PROC
PROC_DEN_DruidAttack_PostAttackSetup()
THEN
PROC_DEN_LeaveDen((CHARACTER)S_DEN_Tiefling_011_77439e86-3f60-4456-bd55-931e2f45654f);

PROC
PROC_DEN_DruidAttack_PostAttackSetup()
AND
GetClosestPlayer(S_DEN_Tiefling_011_77439e86-3f60-4456-bd55-931e2f45654f,_,_Dist)
AND
_Dist < 20.0
THEN
PROC_TryStartAD(DEN_DruidAttack_AD_FleeAfter_f4e5be3f-329d-45ff-58ca-52dcfb047a9c,S_DEN_Tiefling_011_77439e86-3f60-4456-bd55-931e2f45654f);

PROC
PROC_DEN_DruidAttack_DebugSetupDialogs()
AND
DB_DEN_DruidAttack_NonDruids(_Character, _, _, _Dialog)
THEN
PROC_RemoveAllDialogEntriesForSpeaker(_Character);
DB_Dialogs(_Character, _Dialog);

//END_REGION

//REGION Post-Assault (Druids Won Processing)

//Leaving the grove/resting while the event is going on will forcefully end it with a Druid victory.
PROC
PROC_DEN_AllPlayersLeftDen()
AND
DB_State_Current(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_DruidAttack")
THEN
PROC_State_Progress(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_DruidsHostileNoTieflings");

PROC
PROC_LongRestOrLevelUnloading("WLD_Main_A")
AND
DB_State_Current(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_DruidAttack")
THEN
PROC_State_Progress(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_DruidsHostileNoTieflings");

PROC
PROC_State_Changed(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_DruidsHostileNoTieflings")
THEN
PROC_DEN_DruidAttack_ForceAttackEnd();

PROC
PROC_State_Changed(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_DruidsHostileNoTieflings")
AND
NOT DB_DEN_PlayerInDen(_)
AND
QRY_DEN_Lockdown_CanDoRitual()
THEN
PROC_State_Progress(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_Lockdown");

PROC
PROC_DEN_DruidAttack_ForceAttackEnd()
THEN
SetFlag(DEN_GroveConflict_State_TooLowTieflings_ed9fe6c4-5037-4f74-968c-a166aeb29d9c, NULL_00000000-0000-0000-0000-000000000000, 0);

//Gatekeeper leaves post.
PROC
PROC_DEN_DruidAttack_ForceAttackEnd()
AND
QRY_OnlyOnce("DEN_DruidAttack_RelieveGatekeeper")
THEN
PROC_DEN_Gate_OpenOrCloseGate(0);
SetFlag(DEN_DruidAttack_Event_BypassDone_a66b1d52-046d-41e2-909c-e01045126e77,S_DEN_Gatekeeper_847717b3-82eb-45a7-b875-78665c12ce9a);
NOT DB_DEN_DruidAttack_NonDruids(S_DEN_Gatekeeper_847717b3-82eb-45a7-b875-78665c12ce9a,"Special","",DEN_DruidAttack_Gatekeeper_b2017c64-1221-362d-794d-16fae9bdb765);
DB_DEN_DruidAttack_NonDruids(S_DEN_Gatekeeper_847717b3-82eb-45a7-b875-78665c12ce9a,"Fight","DEN_DRUIDATTACK_CAVEENTRANCE",DEN_DruidAttack_Gatekeeper_b2017c64-1221-362d-794d-16fae9bdb765);
SetFlag(DEN_DruidAttack_Event_TieflingsPrepare_6a8c217f-adf6-46d2-8cfd-d2e9a437c3d4,S_DEN_Gatekeeper_847717b3-82eb-45a7-b875-78665c12ce9a, 0, 1);

//this will trigger the lockdown state
PROC
PROC_DEN_DruidAttack_ForceAttackEnd()
AND
DB_DEN_DruidAttack_NonDruids(_Char,_Type,_,_)
AND
_Type!="Special"
AND
_Type!="Flee"
AND
_Type!="Kid"
AND
NOT DB_Dead(_Char)
THEN
Die(_Char,DEATHTYPE.DoT,NULL_00000000-0000-0000-0000-000000000000,1,1);

//Kill special cases that refugees are allied with
PROC
PROC_DEN_DruidAttack_ForceAttackEnd()
AND
DB_DEN_DruidAttack_NonDruids(_Char, "Special", _, _)
AND
GetFaction(_Char, _Faction)
AND
GetRelation(Act1_DEN_DruidAttack_Refugees_dc3cbc03-a072-4cf7-b650-d0c43158b773, _Faction, _Relation)
AND
_Relation == 100
THEN
Die(_Char, DEATHTYPE.DoT, NULL_00000000-0000-0000-0000-000000000000, 1, 1);

PROC
PROC_DEN_DruidAttack_ForceAttackEnd()
AND
DB_DEN_NPC(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, _, _)
THEN
Die(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, DEATHTYPE.DoT, NULL_00000000-0000-0000-0000-000000000000, 1, 1);

//Fallback in case Druids haven't been set to hostile because players left too quickly.
PROC
PROC_DEN_DruidAttack_ForceAttackEnd()
THEN
PROC_SetRelationToPlayers((FACTION)Act1_DEN_DruidAttack_Druids_39c37b11-bd64-428b-a733-ecd2365be5d6, 0);

IF
FlagSet(_Flag,NULL_00000000-0000-0000-0000-000000000000,_)
AND
DB_DEN_DruidAttack_EndFlags(_Flag)
THEN
PROC_DEN_DruidAttack_CombatEndedCleaning(_Flag);

PROC
PROC_DEN_DruidAttack_CombatEndedCleaning((FLAG)_Flag)
AND
IsDestroyed(S_DEN_PrisonMainDoor_c166068b-38dd-4891-b811-c4b2fde19e1c,0)
AND
IsClosed(S_DEN_PrisonMainDoor_c166068b-38dd-4891-b811-c4b2fde19e1c,1)
AND
IsLocked(S_DEN_PrisonMainDoor_c166068b-38dd-4891-b811-c4b2fde19e1c,1)
THEN
Unlock(S_DEN_PrisonMainDoor_c166068b-38dd-4891-b811-c4b2fde19e1c);


PROC
PROC_DEN_DruidAttack_CombatEndedCleaning(DEN_DruidAttack_State_PrepAfterDeathOfTieflings_79826e3c-1dd7-4a8b-a5ca-cf4dfde51d12)
AND
DB_DEN_DruidAttack_Druids(_Druid,_,_)
THEN
AiRemoveInterestingItem(_Druid,S_DEN_PrisonMainDoor_c166068b-38dd-4891-b811-c4b2fde19e1c);

PROC
PROC_DEN_DruidAttack_CombatEndedCleaning(DEN_DruidAttack_State_PrepAfterDeathOfTieflings_79826e3c-1dd7-4a8b-a5ca-cf4dfde51d12)
AND
DB_DEN_DruidAttack_Druids(_Druid,_,_)
THEN
ClearFlag(DEN_DruidAttack_State_ToPrison_41e02f5e-e390-424e-ba8f-38fd6c4c1121, _Druid, 0, 0);

PROC
PROC_DEN_DruidAttack_CombatEndedCleaning((FLAG)_Flag)
THEN
DB_DEN_DruidAttack_HealGroveNextRest(_Flag);

//END_REGION

//REGION Resting After DruidAttack

//if event is done, clean region on next rest depending on the victors
PROC
PROC_LongRest()
AND
DB_DEN_DruidAttack_HealGroveNextRest(_Flag)
THEN
DB_ExecuteInLevel("DEN_DruidAttack_HealGroveNextRest","WLD_Main_A");

PROC
PROC_ExecuteInLevel("DEN_DruidAttack_HealGroveNextRest","WLD_Main_A")
AND
DB_DEN_DruidAttack_HealGroveNextRest(_Flag)
THEN
PROC_DEN_DruidAttack_ResetGrove(_Flag);

PROC
PROC_DEN_DruidAttack_ResetGrove(DEN_DruidAttack_State_PrepAfterDeathOfDruids_b4754af7-07ec-433c-87d2-e78ef4c79e6e)
AND
DB_DEN_DruidAttack_NonDruids(_NonDruid,_,_,_)
THEN
SetHitpointsPercentage(_NonDruid,100.0);

PROC
PROC_DEN_DruidAttack_ResetGrove(DEN_DruidAttack_State_PrepAfterDeathOfTieflings_79826e3c-1dd7-4a8b-a5ca-cf4dfde51d12)
AND
DB_DEN_DruidAttack_Druids(_Druid,_,_)
THEN
SetHitpointsPercentage(_Druid,100.0);

PROC
PROC_DEN_DruidAttack_ResetGrove(DEN_DruidAttack_State_PrepAfterDeathOfTieflings_79826e3c-1dd7-4a8b-a5ca-cf4dfde51d12)
AND
DB_DEN_DruidAttack_NonDruids(_NonDruid,_,_,_)
AND
NOT DB_Dead(_NonDruid)
AND
DB_Defeated(_NonDruid)
THEN
SetOnStage(_NonDruid,0);

//END_REGION

//REGION Blocking druid corpse ownership

QRY
QRY_CorpseLooting_BlockMakeOwned(_Druid)
AND
DB_State_Current(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_DruidAttack")
AND
DB_DEN_DruidAttack_DruidVictims(_Druid)
THEN
DB_NOOP(1);

PROC
PROC_State_Changed(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_DruidAttack")
AND
DB_Dead(_Druid)
AND
DB_DEN_DruidAttack_DruidVictims(_Druid)
THEN
PROC_ClearCorpseOwner(_Druid);

//END_REGION

//REGION Debug

//immediately start druid attack
IF
TextEvent("startdruidattack")
THEN
SetFlag(DEN_DruidAttack_State_DruidSetup_96fc1420-fa07-4235-98c3-ecb34fcb6b0a,NULL_00000000-0000-0000-0000-000000000000);

//immediately start druid attack, but have all possible participants in the combat (should trigger this shortly after entering grove to avoid conflicts)
IF
TextEvent("startdruidattackallstay")
THEN
SetFlag(DEN_Prodigy_State_Staying_479db0b1-cc1b-78bf-3e7b-9840747fbd4f,NULL_00000000-0000-0000-0000-000000000000);
SetFlag(DEN_ShadowDruid_Debug_ResolveKidAlive_dfcf720f-16ce-b7e6-bfeb-d111b90b2f0f,NULL_00000000-0000-0000-0000-000000000000);
PROC_DEN_HarpyMeal_DebugEnd();
SetHitpointsPercentage(S_DEN_ScoutCaptive_f5b5819f-1636-4f2e-82bb-709522cc399f,100.0);
PROC_DisappearOutOfSightTo(S_DEN_ScoutCaptive_f5b5819f-1636-4f2e-82bb-709522cc399f,S_DEN_TunnelSideIn_0c63cc6f-e5d6-4561-a952-cf44e8ffac57,"Walk",1,"DEN_GoblinScouts_CaptiveLeft");
SetFlag(DEN_DruidAttack_State_DruidSetup_96fc1420-fa07-4235-98c3-ecb34fcb6b0a,NULL_00000000-0000-0000-0000-000000000000);

// text going into combat with a druid for no reason
IF
TextEvent("setdruidevil")
AND
DB_DEN_DruidAttack_Druids(_Druid,_,_)
THEN
SetFaction(_Druid, (FACTION)Evil_NPC_64321d50-d516-b1b2-cfac-2eb773de1ff6);

//trigger the proper crime reaction to begin the event. launching will differ whether the criminal is caught or the crime investigation times out.
IF
TextEvent("startdruidcrime")
AND
GetHostCharacter(_Player)
AND
GetPosition(S_DEN_SilvanusIdol_a841d36c-9a00-4a26-943e-c0af6895bb16,_x,_y,_z)
THEN
ToInventory(S_DEN_SilvanusIdol_a841d36c-9a00-4a26-943e-c0af6895bb16,_Player,1,0,0);
PROC_CharacterRegisterCrimeWithPosition(_Player,"Steal",S_DEN_SilvanusIdol_a841d36c-9a00-4a26-943e-c0af6895bb16,_x,_y,_z,NULL_00000000-0000-0000-0000-000000000000,0);

//set flag as if event ended and all druids died
IF
TextEvent("druidattackdeaddruids")
THEN
SetFlag(DEN_DruidAttack_State_PrepAfterDeathOfDruids_b4754af7-07ec-433c-87d2-e78ef4c79e6e, NULL_00000000-0000-0000-0000-000000000000);

//set flag as if event ended and all outsiders died
IF
TextEvent("druidattackdeadrefugees")
THEN
SetFlag(DEN_DruidAttack_State_PrepAfterDeathOfTieflings_79826e3c-1dd7-4a8b-a5ca-cf4dfde51d12, NULL_00000000-0000-0000-0000-000000000000);

//kill all the druids when the event is active
IF
TextEvent("druidattackkilldruids")
AND
DB_DEN_DruidAttack_Druids(_Character,_,_)
THEN
Die(_Character,DEATHTYPE.Physical,_Character,1,1);

//kill all the outsiders when the event is active
IF
TextEvent("druidattackkillnondruids")
AND
DB_DEN_DruidAttack_NonDruids(_Character,_,_,_)
THEN
Die(_Character,DEATHTYPE.Physical,_Character,1,1);

IF
TextEvent("debugpostdruidattack")
THEN
PROC_DEN_DruidAttack_DebugSetupDialogs();
SetFlag(DEN_DruidAttack_State_PrepAfterDeathOfDruids_b4754af7-07ec-433c-87d2-e78ef4c79e6e, NULL_00000000-0000-0000-0000-000000000000, 0);

//harpy 
IF
TextEvent("harpiestodruids")
AND
DB_DEN_HarpyMeal_Harpies(_Harpy, _)
AND
IsOnStage(_Harpy, 1)
THEN
TeleportTo(_Harpy, S_DEN_HarpyDebugTeleportToDruids_f024964d-f50b-4018-962d-491d23c3a378);

IF
TextEvent("harpiestoidol")
AND
DB_DEN_HarpyMeal_Harpies(_Harpy, _)
AND
IsOnStage(_Harpy, 1)
THEN
TeleportTo(_Harpy, S_DEN_HarpyDebugTeleportToIdol_e8f0ead5-e196-4542-9feb-c44988f67c16);

//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "Act1"
