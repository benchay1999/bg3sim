Version 1
SubGoalCombiner SGC_AND
INITSECTION
//REGION Grove Conflict

//Objective: DEN_Conflict_HelpGrove
DB_QuestDef_ChainedState("DEN_Conflict", "FoundHalsin_Unknown_KillLeaders", "HalsinGaveQuest");
DB_QuestDef_ChainedState("DEN_Conflict", "FoundHalsin_Known_KillLeaders", "HalsinGaveQuest");
DB_QuestDef_ChainedState("DEN_Conflict", "FoundHalsin_Unknown_AoD", "HalsinGaveQuest");
DB_QuestDef_ChainedState("DEN_Conflict", "FoundHalsin_Known_AoD", "HalsinGaveQuest");


//Objective: DEN_Conflict_ResolveConflict
DB_QuestDef_ChainedState("DEN_Conflict", "ZevGaveQuest", "DEN_LearntGoblinLeaderZevlor");
DB_QuestDef_ConditionalState("DEN_Conflict", "LearnedHalsinMissing", "DEN_Conflict", "RathGaveQuest_BeforeZev", "ZevGaveQuest", 0);
DB_QuestDef_ConditionalState("DEN_Conflict", "LearnedHalsinMissing", "RathGaveQuest_AfterZev", "ZevGaveQuest", 1);
DB_QuestDef_ConditionalState("DEN_Conflict", "LearnedHalsinMissing", "RathGaveQuest_AfterZev", "RathGaveQuest_BeforeZev", 0);

//--- subquest: DEN_Conflict_SUB_Druid - very similar to GLO_Tadpole
DB_QuestDef_State(DEN_AttackOnDen_Event_HalsinSpotted_40e35270-1762-2c46-ca80-c449802b755f, "DEN_Conflict", "HalsinReturned_Known");
DB_QuestDef_ChainedState("GLO_Tadpole", "LearnedLostHalsin", "DEN_Conflict", "LearnedLostHalsin");
DB_QuestDef_ChainedState("GLO_Tadpole", "LearnedBear", "DEN_Conflict", "LearnedBear");
DB_QuestDef_ChainedState("GLO_Tadpole", "LearnedEscaped", "DEN_Conflict", "LearnedEscaped");
DB_QuestDef_ChainedState("GLO_Tadpole", "LearnedPit", "DEN_Conflict", "LearnedPit");
DB_QuestDef_ChainedState("GLO_Tadpole", "LearnedHalsinPosition", "DEN_Conflict", "LearnedHalsinPosition");
DB_QuestDef_ChainedState("GLO_Tadpole", "LearnedKilledOrCaptured", "DEN_Conflict", "LearnedHalsinPosition");
DB_QuestDef_ChainedState("GLO_Tadpole", "FoundHalsin_Unknown_KillLeaders", "DEN_Conflict", "FoundHalsin_Unknown_KillLeaders");
DB_QuestDef_ChainedState("GLO_Tadpole", "FoundHalsin_Known_KillLeaders", "DEN_Conflict", "FoundHalsin_Known_KillLeaders");
DB_QuestDef_ChainedState("GLO_Tadpole", "FoundHalsin_Unknown_LeadershipDead", "DEN_Conflict", "FoundHalsin_Unknown_LeadershipDead");
DB_QuestDef_ChainedState("GLO_Tadpole", "FoundHalsin_Known_LeadershipDead", "DEN_Conflict", "FoundHalsin_Known_LeadershipDead");
DB_QuestDef_ChainedState("GLO_Tadpole", "FoundHalsin_KingDead", "DEN_Conflict", "FoundHalsin_KingDead");
DB_QuestDef_ChainedState("GLO_Tadpole", "FoundHalsin_DrowDead", "DEN_Conflict", "FoundHalsin_DrowDead");
DB_QuestDef_ChainedState("GLO_Tadpole", "FoundHalsin_PriestessDead", "DEN_Conflict", "FoundHalsin_PriestessDead");
DB_QuestDef_ChainedState("GLO_Tadpole", "FoundHalsin_Unknown_AoD", "DEN_Conflict", "FoundHalsin_Unknown_AoD");
DB_QuestDef_ChainedState("GLO_Tadpole", "FoundHalsin_Known_AoD", "DEN_Conflict", "FoundHalsin_Known_AoD");
DB_QuestDef_ChainedState("GLO_Tadpole", "HalsinLeft_KilledLeaders", "DEN_Conflict", "HalsinLeft_KilledLeaders");
DB_QuestDef_ChainedState("GLO_Tadpole", "HalsinLeft_AoDStarted", "DEN_Conflict", "HalsinLeft_AoDStarted");
DB_QuestDef_ChainedState("GLO_Tadpole", "DruidLeaderDied_Research", "DEN_Conflict", "DruidLeaderDied");
DB_QuestDef_ChainedState("GLO_Tadpole", "DruidLeaderDied_NoResearch", "DEN_Conflict", "DruidLeaderDied");
DB_QuestDef_ChainedState("GLO_Tadpole", "HalsinLeft_AoDStarted", "DEN_Conflict", "HalsinLeft_AoDStarted");
DB_QuestDef_ChainedState("GLO_Tadpole", "HalsinLeft_EndedAoD", "DEN_Conflict", "HalsinLeft_EndedAoD");
DB_QuestDef_ChainedState("GLO_Tadpole", "HalsinReturned_Known", "DEN_Conflict", "HalsinReturned_Known");
DB_QuestDef_ChainedState("GLO_Tadpole", "ReportHalsin_LeadersDefeated", "DEN_Conflict", "ReportHalsin_LeadersDefeated");
DB_QuestDef_ChainedState("GLO_Tadpole", "ReportHalsin_AoDStarted", "DEN_Conflict", "ReportHalsin_AoDStarted");
//--- subquest: DEN_Conflict_SUB_Goblin

// See the goal Act1_GUB_GoblinHunt

//--- subquest: DEN_Conflit_SUB_Ritual
DB_DEN_Conflict_RitualKnowsAboutKagha("MetZevlor");
DB_DEN_Conflict_RitualKnowsAboutKagha("AllowedInUnknown");
DB_DEN_Conflict_RitualKnowsAboutKagha("MetKagha");
DB_DEN_Conflict_RitualKaghaBooks((ITEM)S_DEN_ShadowMeetingNote_fbe59587-8dec-440c-94d2-2748727c4cf5); //FoundNote
DB_DEN_Conflict_RitualKaghaBooks((ITEM)S_DEN_ShadowDruidsLetter_b0da8ce3-139f-425b-bbce-ae67663b8a2c);
DB_DEN_Conflict_RitualLetterFound(1,"FoundLetterAfterNote"); // 1 == Has the quest update "FoundNote"
DB_DEN_Conflict_RitualLetterFound(0,"FoundLetterFirst");
DB_DEN_Conflict_RitualMainUpdate("FoundNote", 0, 0, "MetKagha_FoundNote");
DB_DEN_Conflict_RitualMainUpdate("FoundNote", 1, 0, "FoundKaghaDoc_AfterZev");
DB_DEN_Conflict_RitualMainUpdate("FoundLetterFirst", 1, 0, "FoundKaghaDoc_AfterZev");
DB_DEN_Conflict_RitualDenouncingCombat(1,"FightGood"); // 1 == Kagha is persuaded, there's less Shadow Druids
DB_DEN_Conflict_RitualDenouncingCombat(0,"FightBad");
DB_DEN_Conflict_RitualCombatEnded(1, "FightEndedBad"); //kagha dead
DB_DEN_Conflict_RitualCombatEnded(0, "FightEndedGood"); //kagha alive

//--- subquest: DEN_Conflict_SUB_AoD
DB_QuestDef_State(GOB_DrowCommander_Event_RaidersSortie_26816b01-2d64-b50c-3bf6-bffd7dc5f0b9,"DEN_Conflict","AoD_Started");
DB_DEN_Conflict_AoDLeader(S_DEN_TieflingLeader_475200ee-cc3c-4dbe-84b1-1820c02ea26a,"VictoryZevlor");
DB_DEN_Conflict_AoDLeader(S_DEN_Trainer_02025646-347a-4235-aef7-e46b7c94b435,"VictoryAsharak");
DB_DEN_Conflict_AoDLeader(S_DEN_BackupLeader_b304e07d-019c-4ec6-b5ea-c4ccb29ed892,"VictoryBackup");
DB_QuestDef_ChainedState("DEN_Conflict","CelebrationGoblins","Betrayal");
DB_QuestDef_ChainedState("DEN_Conflict","MintharaDiedLate","Betrayal");

//--- subquest: DEN_Conflict_SUB_Murder
DB_QuestDef_State(DEN_TieflingLeader_State_PermaDefeated_b8eac5ee-2c63-9924-91c2-668d5bffa74c,"DEN_Conflict","ZevlorDied");

//--- subquest: DEN_Conflict_SUB_Halsin
DB_QuestDef_ChainedState("DEN_Conflict", "Betrayal_DruidDead_Halsin", "GLO_Tadpole", "Betrayal_DruidDead_Halsin");

//Close snake court explicitely on lockdown. It has updates to resolve the other states naturally otherwise.
DB_QuestDef_ChainedState("DEN_Conflict","Lockdown","DEN_SnakeCourt","GroveChanged");

//Close Harpy meal explicitely on lockdown, leave it open otherwise regardless as players can investigate the beach, still.
DB_QuestDef_ChainedState("DEN_Conflict","Lockdown","DEN_HarpyMeal","GroveChanged");

//DiedEarly entries
DB_DEN_Conflict_DiedEarlyConditions("ZevlorDiedEarly", (CHARACTER)S_DEN_TieflingLeader_475200ee-cc3c-4dbe-84b1-1820c02ea26a, "MetKagha");
DB_DEN_Conflict_DiedEarlyConditions("ZevlorDiedEarly", (CHARACTER)S_DEN_TieflingLeader_475200ee-cc3c-4dbe-84b1-1820c02ea26a, "MetZevlor");
DB_DEN_Conflict_DiedEarlyConditions("ZevlorDiedEarly", (CHARACTER)S_DEN_TieflingLeader_475200ee-cc3c-4dbe-84b1-1820c02ea26a, "DADruidsDead_NoMet");
DB_DEN_Conflict_DiedEarlyConditions("KaghaDiedEarly", (CHARACTER)S_DEN_DruidLeader_95eb2b0b-a522-4ea5-8167-c5f4d1418156, "MetKagha");
DB_DEN_Conflict_DiedEarlyConditions("KaghaDiedEarly", (CHARACTER)S_DEN_DruidLeader_95eb2b0b-a522-4ea5-8167-c5f4d1418156, "MetZevlor");
DB_DEN_Conflict_DiedEarlyConditions("KaghaDiedEarly", (CHARACTER)S_DEN_DruidLeader_95eb2b0b-a522-4ea5-8167-c5f4d1418156, "AllowedInUnknown");

DB_QuestDef_ChainedState("DEN_Conflict", "VictoryZevlor", "VictoryGrove_ParentUpdate");
DB_QuestDef_ChainedState("DEN_Conflict", "VictoryAsharak", "VictoryGrove_ParentUpdate_Asharak");
DB_QuestDef_ChainedState("DEN_Conflict", "VictoryBackup", "VictoryGrove_ParentUpdate_Cerys");
DB_QuestDef_ChainedState("DEN_Conflict", "GOB_Last_KilledPriest", "VictoryGrove_ParentUpdate");
DB_QuestDef_ChainedState("DEN_Conflict", "GOB_Last_KilledKing", "VictoryGrove_ParentUpdate");
DB_QuestDef_ChainedState("DEN_Conflict", "GOB_Last_KilledDrow", "VictoryGrove_ParentUpdate");
DB_QuestDef_ChainedState("DEN_Conflict", "GOB_Last_KilledPriest_Asharak", "VictoryGrove_ParentUpdate_Asharak");
DB_QuestDef_ChainedState("DEN_Conflict", "GOB_Last_KilledKing_Asharak", "VictoryGrove_ParentUpdate_Asharak");
DB_QuestDef_ChainedState("DEN_Conflict", "GOB_Last_KilledDrow_Asharak", "VictoryGrove_ParentUpdate_Asharak");
DB_QuestDef_ChainedState("DEN_Conflict", "GOB_Last_KilledPriest_Cerys", "VictoryGrove_ParentUpdate_Cerys");
DB_QuestDef_ChainedState("DEN_Conflict", "GOB_Last_KilledKing_Cerys", "VictoryGrove_ParentUpdate_Cerys");
DB_QuestDef_ChainedState("DEN_Conflict", "GOB_Last_KilledDrow_Cerys", "VictoryGrove_ParentUpdate_Cerys");

DB_QuestDef_ChainedState("DEN_Conflict", "SidedGoblins", "SidedGoblins_ParentUpdate");

DB_GlobalFlagReactionAfterDialog((FLAG)DEN_HalsinReturns_Event_SeekRath_07039747-ebb1-9a3f-fb7a-052b6848826f, (DIALOGRESOURCE)DEN_AttackOnDen_HalsinReturns_d9c2a89e-13fa-57f7-0fcf-4dfada32d693);
DB_GlobalFlagReactionAfterDialog((FLAG)DEN_HalsinReturns_Event_SeekRath_07039747-ebb1-9a3f-fb7a-052b6848826f, (DIALOGRESOURCE)DEN_AttackOnDen_HalsinAndDruidLeader_790030b5-e20e-ff34-30e4-740e904fa6c7);

//END_REGION
//REGION Snake Court

DB_DEN_SnakeCourt_KidFate_JournalUpdate("KidFreed", "KidFreedFirst", 0);
//DB_DEN_SnakeCourt_KidFate_JournalUpdate("SnakeBite", "KidDiedFirst", 0); //only when spotted
DB_DEN_SnakeCourt_KidFate_JournalUpdate("KidFreed", "KidFreed", 1);
DB_DEN_SnakeCourt_KidFate_JournalUpdate("SnakeBite", "KidDied", 1);

//Works with the flag 'DEN_ShadowDruid_State_KidFreed'. 0 == dead; 1 == alive
DB_DEN_SnakeCourt_AutoResolve_JournalUpdate(0, "ParentMovedOn");
DB_DEN_SnakeCourt_AutoResolve_JournalUpdate(1, "ParentAutoReunited");

//END_REGION
KBSECTION
//REGION Debug

IF
TextEvent("getkaghabooks")
AND
GetHostCharacter(_Char)
THEN
ToInventory(S_DEN_ShadowMeetingNote_fbe59587-8dec-440c-94d2-2748727c4cf5, _Char, 1, 1, 1);
ToInventory(S_DEN_ShadowDruidsLetter_b0da8ce3-139f-425b-bbce-ae67663b8a2c, _Char, 1, 1, 1);

//END_REGION

//REGION Conflict - main

//--- Guards mention that Kagha wants to see the player
IF
FlagSet(DEN_GroveConflict_Knows_KaghaRequestedPlayers_28c1365b-4c37-f810-8104-1bc50f261c30,NULL_00000000-0000-0000-0000-000000000000,_Inst)
AND
NOT DB_GlobalFlag(DEN_GroveConflict_Knows_ZevlorSentToSagha_6062ca3d-4bd1-feaa-3b1f-b89d80f59206)
AND
DB_DialogPlayers(_Inst, _Player, _)
THEN
QuestUpdate((CHARACTER)_Player,"DEN_Conflict", "AllowedInUnknown");

//--- Party at camp
PROC
PROC_CAMP_GoblinHuntCelebration_Tiefling_JournalHook()
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player, "DEN_Conflict", "SidedTieflings_Celebrate");

//--- DiedEarly entries
IF
QuestUpdateUnlocked(_, "DEN_Conflict", _DiedEarlyCondition)
AND
DB_DEN_Conflict_DiedEarlyConditions(_DiedEarlyEntry, _Character, _DiedEarlyCondition)
THEN
DB_QuestDef_SawDeadState("DEN_Conflict", _DiedEarlyEntry, _Character); //Zevlor or Kagha died before starting AoD or Departure
PROC_DEN_Conflict_ClearDiedEarlyConditions(_DiedEarlyEntry);

PROC
PROC_DEN_Conflict_ClearDiedEarlyConditions((STRING)_DiedEarlyEntry)
AND
DB_DEN_Conflict_DiedEarlyConditions(_DiedEarlyEntry, _Character, _DiedEarlyCondition)
THEN
NOT DB_DEN_Conflict_DiedEarlyConditions(_DiedEarlyEntry, _Character, _DiedEarlyCondition);

IF
QuestUpdateUnlocked(_, "DEN_Conflict", "RathGaveQuest_BeforeZev")
THEN
DB_QuestDef_ChainedState("DEN_Conflict", "FoundHalsin_Unknown_KillLeaders", "FoundHalsin_ParentUpdate");
DB_QuestDef_ChainedState("DEN_Conflict", "FoundHalsin_Known_KillLeaders", "FoundHalsin_ParentUpdate");
NOT DB_QuestDef_ChainedState("DEN_Conflict", "FoundHalsin_Unknown_KillLeaders", "HalsinGaveQuest");
NOT DB_QuestDef_ChainedState("DEN_Conflict", "FoundHalsin_Known_KillLeaders", "HalsinGaveQuest");
NOT DB_QuestDef_ChainedState("DEN_Conflict", "FoundHalsin_Unknown_AoD", "HalsinGaveQuest");
NOT DB_QuestDef_ChainedState("DEN_Conflict", "FoundHalsin_Known_AoD", "HalsinGaveQuest");

//END_REGION
//REGION Conflict - state changes in Grove (DA, GobHunt, AoD, Lockdown)

//--- Druid Attack
//DA starts
PROC
PROC_DEN_DruidAttack_Init_JournalHook()
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player,"DEN_Conflict", "Ritual_DAStarted");

//DA ends
PROC
PROC_DEN_DruidAttack_PostAttack_JournalHook()
AND
NOT QRY_DEN_Conflict_GiveDADruidsDeadAlt()
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player,"DEN_Conflict", "DADruidsDead");

QRY
QRY_DEN_Conflict_GiveDADruidsDeadAlt()
AND
DB_Players(_Player)
AND
NOT DB_Defeated(S_DEN_TieflingLeader_475200ee-cc3c-4dbe-84b1-1820c02ea26a)
AND
QuestUpdateIsUnlocked(_Player, "DEN_Conflict", "MetZevlor", 0)
AND
QuestUpdateIsUnlocked(_Player, "DEN_Conflict", "MetKagha", 0)
AND
QuestUpdateIsUnlocked(_Player, "DEN_Conflict", "MetKagha_ZevlorDead", 0)
AND
QuestUpdateIsUnlocked(_Player, "DEN_Conflict", "ToldKaghaZevlorDead_After", 0)
THEN
QuestUpdate(_Player,"DEN_Conflict", "DADruidsDead_NoMet");

//Update druid attack ended - update sub
PROC
PROC_DEN_DruidAttack_PostAttack_JournalHook()
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player,"DEN_Conflict", "Murder_DADruidsDead");


//--- Goblin Hunt
PROC
PROC_DEN_TieflingRefugees_GobHuntVictory_JournalHook()
THEN
PROC_DEN_Conflict_ClearDiedEarlyConditions("ZevlorDiedEarly");
PROC_DEN_Conflict_ClearDiedEarlyConditions("KaghaDiedEarly");
NOT DB_QuestDef_SawDeadState("DEN_Conflict","ZevlorDiedEarly",S_DEN_TieflingLeader_475200ee-cc3c-4dbe-84b1-1820c02ea26a); //Zevlor died before starting AoD or completing Goblin Hunt
NOT DB_QuestDef_SawDeadState("DEN_Conflict","KaghaDiedEarly",S_DEN_DruidLeader_95eb2b0b-a522-4ea5-8167-c5f4d1418156); //Kagha died before starting AoD or completing Goblin Hunt

PROC
PROC_DEN_TieflingRefugees_GobHuntVictory_JournalHook()
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player,"DEN_Conflict", "KilledLeaders");
QuestUpdate(_Player,"DEN_Conflict", "Murder_GobHuntDone");
QuestUpdate(_Player,"DEN_Conflict", "Ritual_GobHuntDone");


//--- Attack on Den
IF
QuestAccepted(_, "DEN_Conflict_SUB_AoD")
THEN
DB_QuestDef_SawDeadState("DEN_Conflict","MintharaDied",S_GOB_DrowCommander_25721313-0c15-4935-8176-9f134385451b);

PROC
PROC_DEN_AttackOnDen_Start_JournalHook()
THEN
NOT DB_QuestDef_SawDeadState("DEN_Conflict","MintharaDied",S_GOB_DrowCommander_25721313-0c15-4935-8176-9f134385451b);
PROC_DEN_Conflict_ClearDiedEarlyConditions("ZevlorDiedEarly");
PROC_DEN_Conflict_ClearDiedEarlyConditions("KaghaDiedEarly");
NOT DB_QuestDef_SawDeadState("DEN_Conflict","ZevlorDiedEarly",S_DEN_TieflingLeader_475200ee-cc3c-4dbe-84b1-1820c02ea26a); //Zevlor died before starting AoD or completing Goblin Hunt
NOT DB_QuestDef_SawDeadState("DEN_Conflict","KaghaDiedEarly",S_DEN_DruidLeader_95eb2b0b-a522-4ea5-8167-c5f4d1418156); //Kagha died before starting AoD or completing Goblin Hunt

PROC
PROC_DEN_AttackOnDen_Start_JournalHook()
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player,"DEN_Conflict", "AoD_Ready");
QuestUpdate(_Player,"DEN_Conflict", "AoD_Started_ParentUpdate");
QuestUpdate(_Player,"DEN_Conflict", "Murder_StartedAoD");
QuestUpdate(_Player,"DEN_Conflict", "Goblin_StartedAoD");
QuestUpdate(_Player,"DEN_Conflict", "Ritual_StartedAoD");

PROC
PROC_DEN_AttackOnDen_HornBlown_JournalHook()
AND
QuestUpdateIsUnlocked(NULL_00000000-0000-0000-0000-000000000000, "DEN_Conflict", "HalsinGaveQuest", 1)
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player, "DEN_Conflict", "HalsinLeft_AoDStarted");

IF
QuestUpdateUnlocked(_Char, "DEN_Conflict", "HeardAboutAoD")
AND
DB_PermaDefeated(S_GOB_DrowCommander_25721313-0c15-4935-8176-9f134385451b)
AND
NOT DB_GlobalFlag(DEN_AttackOnDen_Event_Start_c641da6a-b3f5-4873-bd34-c53768d30d6f)
THEN
QuestUpdate(_Char, "DEN_Conflict", "MintharaDiedEarly");

IF
QuestUpdateUnlocked(_, "DEN_Conflict", "HeardAboutAoD")
AND
NOT DB_GlobalFlag(DEN_AttackOnDen_Event_Start_c641da6a-b3f5-4873-bd34-c53768d30d6f)
THEN
DB_QuestDef_SawDeadState("DEN_Conflict", "MintharaDiedEarly", S_GOB_DrowCommander_25721313-0c15-4935-8176-9f134385451b);

IF
FlagSet(DEN_AttackOnDen_Event_Start_c641da6a-b3f5-4873-bd34-c53768d30d6f, _, _)
THEN
NOT DB_QuestDef_SawDeadState("DEN_Conflict", "MintharaDiedEarly", S_GOB_DrowCommander_25721313-0c15-4935-8176-9f134385451b);

IF
FlagSet(DEN_AttackOnDen_State_HostileTieflings_c5641caa-4409-4739-a1fe-8263b8271f4e, _, _)
THEN
DB_QuestDef_SawDeadState("DEN_Conflict", "MintharaDiedLate", S_GOB_DrowCommander_25721313-0c15-4935-8176-9f134385451b);

IF
FlagSet(DEN_AttackOnDen_State_RaiderVictory_abe1bce8-c234-4afe-a490-76210d98a078, _, _)
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player, "DEN_Conflict", "Betrayal_DruidDead_Halsin");

IF
FlagSet(DEN_AttackOnDen_State_RaiderVictory_abe1bce8-c234-4afe-a490-76210d98a078, _, _)
THEN
QuestUpdate("GLO_Tadpole", "Betrayal_DruidDead_Halsin");

IF
FlagSet(GLO_Halsin_State_Returned_5af86099-47f9-ba69-199a-fe91292a41bd, _, _)
AND
DB_GlobalFlag((FLAG)GLO_AttackOnDen_State_RaidReady_eb361773-da88-dee4-f4c8-a22acae60948)
AND
QuestUpdateIsUnlocked(NULL_00000000-0000-0000-0000-000000000000, "DEN_Conflict", "HalsinGaveQuest", 1)
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player, "DEN_Conflict", "HalsinLeft_EndedAoD");


//--- Victory/Tieflings Gone

PROC
PROC_DEN_Victory_LeftSafe_JournalHook()
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player, "DEN_Conflict", "LeftSafe");

//--- Lockdown
PROC
PROC_DEN_Lockdown_JournalHook()
AND
QuestUpdateIsUnlocked(NULL_00000000-0000-0000-0000-000000000000,"DEN_Conflict","SidedGoblins",0)
AND
DB_GlobalFlag(DEN_GroveConflict_State_TooLowTieflings_ed9fe6c4-5037-4f74-968c-a166aeb29d9c)
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player,"DEN_Conflict", "Murder_Lockdown");
QuestUpdate(_Player,"DEN_Conflict", "Ritual_Lockdown");
QuestUpdate(_Player,"DEN_Conflict", "Goblin_Lockdown");
QuestUpdate(_Player,"DEN_Conflict", "Lockdown");

PROC
PROC_State_Changed(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_LockdownComplete")
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player, "DEN_Conflict", "Halsin_Lockdown");

//No Tieflings quest closure
PROC
PROC_DEN_Misc_NoTieflings_JournalHook()
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player, "DEN_Conflict", "Goblin_NoTieflings");
QuestUpdate(_Player, "DEN_Conflict", "Halsin_NoTieflings");
QuestUpdate(_Player, "DEN_Conflict", "NoTieflings");

//Left Region quest closure

PROC
PROC_DEN_LeftRegion_JournalHook()
THEN
QuestUpdate("DEN_Conflict", "LeftRegion");

//--- Non-essential entries
IF
QuestUpdateUnlocked(_, _, "VictoryGrove_ParentUpdate")
THEN
NOT DB_QuestDef_ChainedState("DEN_Conflict", "SidedGoblins", "SidedGoblins_ParentUpdate");

IF
QuestUpdateUnlocked(_, _, "SidedGoblins_ParentUpdate")
THEN
NOT DB_QuestDef_ChainedState("DEN_Conflict", "VictoryZevlor", "VictoryGrove_ParentUpdate");
NOT DB_QuestDef_ChainedState("DEN_Conflict", "VictoryAsharak", "VictoryGrove_ParentUpdate");
NOT DB_QuestDef_ChainedState("DEN_Conflict", "VictoryBackup", "VictoryGrove_ParentUpdate");
NOT DB_QuestDef_ChainedState("DEN_Conflict", "GOB_Last_KilledPriest", "VictoryGrove_ParentUpdate");
NOT DB_QuestDef_ChainedState("DEN_Conflict", "GOB_Last_KilledKing", "VictoryGrove_ParentUpdate");
NOT DB_QuestDef_ChainedState("DEN_Conflict", "GOB_Last_KilledDrow", "VictoryGrove_ParentUpdate");
//END_REGION
//REGION Conflict - SUB_Murder

//--- Triggering DA by attacking Kagha
IF
AttackedBy(S_DEN_DruidLeader_95eb2b0b-a522-4ea5-8167-c5f4d1418156,(CHARACTER)_Player,_,_,_,_,_)
AND
DB_Players(_Player)
AND
QRY_DEN_CheckPeaceState()
THEN
DB_DEN_Conflict_Murder_AttackedKagha(1);

PROC
PROC_OnDialogAttack_GoingHostile(S_DEN_DruidLeader_95eb2b0b-a522-4ea5-8167-c5f4d1418156,(CHARACTER)_Player)
THEN
DB_DEN_Conflict_Murder_AttackedKagha(1); //the DB Is also set in Act1_DEN_ShadowDruid when the attack is delayed to after Kagha's dialog

PROC
PROC_DEN_DruidAttack_Init_JournalHook()
AND
DB_DEN_Conflict_Murder_AttackedKagha(1)
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player,"DEN_Conflict", "Murder_DAStarted");


//--- Kagha doesn't have to be killed anymore
PROC
PROC_DEN_ShadowDruid_KaghaTurnedGood_JournalHook()
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player,"DEN_Conflict", "KaghaTurnedGood");


//--- Kagha killed
IF
FlagSet(DEN_ShadowDruid_State_PlayerKilledKagha_361be740-5c39-49c1-9d3a-ec6a46e3e134,NULL_00000000-0000-0000-0000-000000000000,_)
AND
DB_DEN_ShadowDruid_SetKaghaKilled(1)
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player,"DEN_Conflict", "Murder_BadKaghaDead");


//END_REGION
//REGION Conflict - SUB_AoD

IF
FlagSet(DEN_GroveConflict_Quest_SentToMinthara_a9e37be5-e592-7a6d-9f71-bab72363c4be, _, _)
AND
NOT DB_PermaDefeated(S_GOB_DrowCommander_25721313-0c15-4935-8176-9f134385451b)
THEN
QuestUpdate("DEN_Conflict", "King_SentToMinthara");

IF
FlagSet(GOB_HappyTorturers_Knows_PlayersKnowDenLocation_8073afea-102a-44da-a4b6-12ef0f587795,_,_)
AND
QRY_QuestUpdateIsUnlockedForAny("DEN_Conflict", "AskedTorture")
AND
NOT QRY_QuestUpdateIsUnlockedForAny("DEN_Conflict", "SazzaToldMinthara")
THEN
QuestUpdate("DEN_Conflict", "GotGroveLocation");

IF
QuestUpdateUnlocked(_, "DEN_Conflict", "AskedTorture")
AND
DB_GlobalFlag(GOB_HappyTorturers_Knows_PlayersKnowDenLocation_8073afea-102a-44da-a4b6-12ef0f587795)
AND
NOT QRY_QuestUpdateIsUnlockedForAny("DEN_Conflict", "SazzaToldMinthara")
THEN
QuestUpdate("DEN_Conflict", "GotGroveLocation");

//--- Lockdown active
PROC
PROC_DEN_AttackOnDen_LockdownStart_JournalHook()
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player,"DEN_Conflict", "AoD_Lockdown");

PROC
PROC_DEN_AttackOnDen_LockdownCombat_JournalHook()
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player,"DEN_Conflict", "AoD_LockdownEnd");


//--- Picking tieflings side
PROC
PROC_DEN_AttackOnDen_SideWithTieflings_JournalHook()
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player,"DEN_Conflict", "SidedTieflings");


//--- Picking goblins side
PROC
PROC_DEN_AttackOnDen_TieflingBetrayal_JournalHook()
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player,"DEN_Conflict", "SidedGoblins");

// No tieflings
PROC
PROC_DEN_AttackOnDen_AoD_NoTieflings_JournalHook()
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player,"DEN_Conflict", "AoD_NoTieflings");

// Returning to Minthara
IF
DB_GlobalFlag(DEN_AttackOnDen_State_RaiderVictory_abe1bce8-c234-4afe-a490-76210d98a078)
AND
NOT DB_GlobalFlag(DEN_AttackOnDen_Event_RaidersWinByDefault_e0f44496-90a3-46d1-a1c9-1fbe19ca7632)
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player,"DEN_Conflict", "VictoryMinthara");


//--- Tieflings won
PROC
PROC_DEN_AttackOnDen_Victory()
THEN
DB_DEN_Conflict_AoDVictoryEntry(1);

IF
DB_DEN_Conflict_AoDVictoryEntry(1)
AND
DB_DEN_CurrentDefenderLeader(_Leader)
AND
DB_DEN_Conflict_AoDLeader(_Leader,_Entry)
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player,"DEN_Conflict", _Entry);


//--- Close at Celebration
PROC
PROC_DEN_AttackOnDen_Celebration_JournalHook()
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player,"DEN_Conflict", "CelebrationTieflings");

PROC
PROC_DEN_AttackOnDen_RaiderCelebration_JournalHook()
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player, "DEN_Conflict", "CelebrationGoblins");

IF
DB_OnlyOnce("DEN_AttackOnDen_BetrayTieflingsAfterVictory")
THEN
QuestUpdate("DEN_Conflict", "BetrayalAfterVictory");


//END_REGION
//REGION Conflict - SUB_Ritual

//--- finding Kagha's incriminating letter / update following the note
IF
QuestUpdateUnlocked(_Player,"DEN_Conflict",_Entry)
AND
DB_DEN_Conflict_RitualKnowsAboutKagha(_Entry)
AND
NOT DB_DEN_Conflict_RitualNoteLetterEntryEnabled(_)
THEN
DB_DEN_Conflict_RitualNoteLetterEntryEnabled(1);
PROC_DEN_Conflict_Ritual_CheckGiveNoteLetterEntry(_Player);

IF
GameBookInterfaceClosed(_Book,_Player)
AND
DB_DEN_Conflict_RitualKaghaBooks(_Book)
AND
NOT DB_DEN_Conflict_RitualKaghaBooks_Read(_Book)
THEN
DB_DEN_Conflict_RitualKaghaBooks_Read(_Book);
PROC_DEN_Conflict_Ritual_CheckGiveNoteLetterEntry(_Player);

PROC
PROC_DEN_Conflict_Ritual_CheckGiveNoteLetterEntry((CHARACTER)_Player)
AND
DB_DEN_Conflict_RitualKaghaBooks_Read(_)
THEN
PROC_DEN_Conflict_Ritual_GiveNoteLetterEntry((CHARACTER)_Player);

PROC
PROC_DEN_Conflict_Ritual_GiveNoteLetterEntry((CHARACTER)_Player)
AND
DB_DEN_Conflict_RitualKaghaBooks_Read(S_DEN_ShadowDruidsLetter_b0da8ce3-139f-425b-bbce-ae67663b8a2c)
AND
QuestUpdateIsUnlocked(_Player,"DEN_Conflict","FoundNote",_FoundNoteFirst)
AND
DB_DEN_Conflict_RitualLetterFound(_FoundNoteFirst,_Update)
THEN
QuestUpdate(_Player,"DEN_Conflict", _Update);
NOT DB_DEN_Conflict_RitualNoteLetterEntryEnabled(1);
PROC_DEN_Conflict_Ritual_NoteLetterCleanUp();
PROC_DEN_Conflict_Ritual_NoteLetterUpdateMain(_Player, _Update);

PROC
PROC_DEN_Conflict_Ritual_GiveNoteLetterEntry((CHARACTER)_Player)
AND
DB_DEN_Conflict_RitualKaghaBooks_Read(S_DEN_ShadowMeetingNote_fbe59587-8dec-440c-94d2-2748727c4cf5)
THEN
QuestUpdate(_Player,"DEN_Conflict", "FoundNote");
PROC_DEN_Conflict_Ritual_NoteLetterUpdateMain(_Player, "FoundNote");

/*
- 	MetKagha_FoundNote should only be triggered once we get FoundNote and don't have ZevGaveQuest yet.
- 	FoundKaghaDoc_AfterZev should only be triggered once we get either FoundNote or FoundLetterFirst, and previously have triggered ZevGaveQuest. 
	It's roughly the same entry as MetKagha_FoundNote so we shouldn't be triggering FoundKaghaDoc_AfterZev if we already have received MetKagha_FoundNote.
*/
PROC
PROC_DEN_Conflict_Ritual_NoteLetterUpdateMain((CHARACTER)_Player, (STRING)_NewEntry)
AND
DB_DEN_Conflict_RitualMainUpdate(_NewEntry, _ZevGaveQuest, _MetKagha_FoundNote, _MainEntry)
AND
QuestUpdateIsUnlocked(_Player, "DEN_Conflict", "ZevGaveQuest", _ZevGaveQuest)
AND
QuestUpdateIsUnlocked(_Player, "DEN_Conflict", "MetKagha_FoundNote", _MetKagha_FoundNote)
THEN
QuestUpdate(_Player, "DEN_Conflict", _MainEntry);

PROC
PROC_StateSet_PermaDefeated(S_DEN_TieflingLeader_475200ee-cc3c-4dbe-84b1-1820c02ea26a)
THEN
NOT DB_DEN_Conflict_RitualMainUpdate("FoundNote", 0, 0, "MetKagha_FoundNote");

PROC
PROC_DEN_Conflict_Ritual_NoteLetterCleanUp()
AND
DB_DEN_Conflict_RitualKnowsAboutKagha(_Entry)
THEN
NOT DB_DEN_Conflict_RitualKnowsAboutKagha(_Entry);

PROC
PROC_DEN_Conflict_Ritual_NoteLetterCleanUp()
AND
DB_DEN_Conflict_RitualKaghaBooks(_Book)
THEN
NOT DB_DEN_Conflict_RitualKaghaBooks(_Book);
NOT DB_DEN_Conflict_RitualKaghaBooks_Read(_Book);


//--- Shadow Druid fight starts
PROC
PROC_DEN_GroveConflict_SDCombat_JournalHook((INTEGER)_IsPersuaded)
AND
DB_DEN_Conflict_RitualDenouncingCombat(_IsPersuaded,_Update)
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player,"DEN_Conflict", _Update);


//--- Fight ends
PROC
PROC_DEN_ShadowDruid_FightEnded_JournalHook()
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player,"DEN_Conflict", "DADruidsDead");

PROC
PROC_DEN_ShadowDruid_FightEnded_JournalHook()
THEN
DB_DEN_Conflict_NeedToCloseSUB_Druid(1);
PROC_DEN_Conflict_SUB_Ritual_FightEnded();

//close immediately if doesn't really know Zevlor or Kagha...
PROC
PROC_DEN_Conflict_SUB_Ritual_FightEnded()
AND
GetClosestPlayer(S_DEN_DruidLeader_95eb2b0b-a522-4ea5-8167-c5f4d1418156, _Player, _)
AND
QuestUpdateIsUnlocked(_Player, "DEN_Conflict", "MetZevlor", 0)
AND
QuestUpdateIsUnlocked(_Player, "DEN_Conflict", "MetKagha", 0)
AND
QuestUpdateIsUnlocked(_Player, "DEN_Conflict", "MetKagha_ZevlorDead", 0)
AND
QuestUpdateIsUnlocked(_Player, "DEN_Conflict", "ToldKaghaZevlorDead_After", 0)
THEN
PROC_DEN_Conflict_SUB_Ritual_CloseFightEnded();
NOT DB_DEN_Conflict_NeedToCloseSUB_Druid(1);

//... or because Zevlor is already dead
PROC
PROC_DEN_Conflict_SUB_Ritual_FightEnded()
AND
DB_DEN_Conflict_NeedToCloseSUB_Druid(1)
AND
DB_Defeated(S_DEN_TieflingLeader_475200ee-cc3c-4dbe-84b1-1820c02ea26a)
THEN
PROC_DEN_Conflict_SUB_Ritual_CloseFightEnded();
NOT DB_DEN_Conflict_NeedToCloseSUB_Druid(1);

//... or update by sending to Zevlor if he is alive...
PROC
PROC_DEN_Conflict_SUB_Ritual_FightEnded()
AND
DB_DEN_Conflict_NeedToCloseSUB_Druid(1)
AND
DB_Players(_Player)
THEN
NOT DB_DEN_Conflict_NeedToCloseSUB_Druid(1);
DB_DEN_Conflict_NeedToCloseSUB_Druid(2);
QuestUpdate(_Player,"DEN_Conflict","RitualStopped");

//... then close when telling him
IF
FlagSet(DEN_TieflingLeader_HasMet_DruidsPacified_e74df993-01ca-1ab1-cd24-fa7e7780da08, NULL_00000000-0000-0000-0000-000000000000, _)
AND
DB_DEN_Conflict_NeedToCloseSUB_Druid(2)
THEN
NOT DB_DEN_Conflict_NeedToCloseSUB_Druid(2);
PROC_DEN_Conflict_SUB_Ritual_CloseFightEnded();

//... or when he dies
PROC
PROC_StateSet_Defeated(S_DEN_TieflingLeader_475200ee-cc3c-4dbe-84b1-1820c02ea26a)
AND
DB_DEN_Conflict_NeedToCloseSUB_Druid(2)
THEN
NOT DB_DEN_Conflict_NeedToCloseSUB_Druid(2);
PROC_DEN_Conflict_SUB_Ritual_CloseFightEnded();

//--- Giving closing entries:
PROC
PROC_DEN_Conflict_SUB_Ritual_CloseFightEnded()
AND
IsDead(S_DEN_DruidLeader_95eb2b0b-a522-4ea5-8167-c5f4d1418156,_KaghaIsDead)
AND
DB_DEN_Conflict_RitualCombatEnded(_KaghaIsDead,_Update)
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player,"DEN_Conflict",_Update);

//END_REGION
//REGION Conflict - SUB_Halsin

//--- Halsin met at the celebration
IF
DialogStarted(CAMP_GoblinHuntCelebration_Halsin_13f1ee23-9785-aa5a-1c90-69d462b65090, _)
THEN
DB_GLO_Halsin_MetAtCelebration(1);

PROC
PROC_State_Changed(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_TieflingsGone")
AND
DB_GLO_Halsin_MetAtCelebration(1)
AND
NOT DB_GLO_Halsin_MetAtDen(1)
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player, "DEN_Conflict", "Celebration_MetHalsin");

//--- Tieflings left halsin not met
IF
DialogStarted(DEN_AttackOnDen_HalsinReturns_d9c2a89e-13fa-57f7-0fcf-4dfada32d693, _)
THEN
DB_GLO_Halsin_MetAtDen(1);

PROC
PROC_State_Changed(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_TieflingsGone")
AND
NOT DB_GLO_Halsin_MetAtCelebration(1)
AND
NOT DB_GLO_Halsin_MetAtDen(1)
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player, "DEN_Conflict", "LeftSafe_NotMetHalsin");

//--- tieflings left halsin was met and sent to rath
PROC
PROC_State_Changed(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_TieflingsGone")
AND
DB_GlobalFlag(DEN_HalsinReturns_Event_SeekRath_07039747-ebb1-9a3f-fb7a-052b6848826f)
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player, "DEN_Conflict", "LeftSafe_MetHalsin");

//--- Halsin sent to rath
PROC
PROC_GlobalFlagReactionAfterDialog(DEN_HalsinReturns_Event_SeekRath_07039747-ebb1-9a3f-fb7a-052b6848826f)
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player,"DEN_Conflict", "HalsinSentToRath");

//--- rath died (after receiving instructions to seek him out)
PROC
PROC_StateSet_PermaDefeated(S_DEN_DruidOpposed_322cf8d2-32ee-453f-987e-f12b32652b5d)
AND
DB_GlobalFlag(DEN_HalsinReturns_Event_SeekRath_07039747-ebb1-9a3f-fb7a-052b6848826f)
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player, "DEN_Conflict", "RathDied");

//--- halsin sent to rath alt (cannot send to rath)
IF
DialogEnded(DEN_AttackOnDen_HalsinReturns_d9c2a89e-13fa-57f7-0fcf-4dfada32d693, _)
AND
NOT DB_GlobalFlag((FLAG)DEN_HalsinReturns_Event_SeekRath_07039747-ebb1-9a3f-fb7a-052b6848826f)
AND
QRY_OnlyOnce("DEN_HalsinReturns_NoRathJournalUpdate")
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player, "DEN_Conflict", "HalsinSentToRathAlt");

//END_REGION

//REGION Snake Court

// spotting Arabella
IF
EnteredTrigger(_Player, S_DEN_SnakesCourtProxSphere_8456dca4-15a1-44b6-93e6-63a7a8a75f06)
AND
DB_Players(_Player)
AND
QuestUpdateIsUnlocked(_Player,"DEN_SnakeCourt","KidFreedFirst",0)
AND
QuestUpdateIsUnlocked(_Player,"DEN_SnakeCourt","KidDiedFirst",0)
THEN
QuestUpdate(_Player,"DEN_SnakeCourt", "EnteredLair");

// Arabella dead or alive
PROC
PROC_State_Changed(S_DEN_SnakeKid_02257c1c-bbec-4ae3-9bcb-31c75a0a982f, "DEN_SnakeCourt", _State)
AND
DB_State_Current(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_Peace")
AND
DB_Players(_Player)
AND
QuestIsAccepted(_Player, "DEN_SnakeCourt", _NotFirst)
AND
DB_DEN_SnakeCourt_KidFate_JournalUpdate(_State, _Entry, _NotFirst)
THEN
QuestUpdate(_Player,"DEN_SnakeCourt", _Entry);
SysClear("DB_DEN_SnakeCourt_KidFate_JournalUpdate", 3);

IF
DB_Sees(_Player,S_DEN_SnakeKid_02257c1c-bbec-4ae3-9bcb-31c75a0a982f)
AND
DB_Dead(S_DEN_SnakeKid_02257c1c-bbec-4ae3-9bcb-31c75a0a982f)
AND
DB_Players(_Player)
AND
QuestIsAccepted(_Player, "DEN_SnakeCourt", 0)
THEN
QuestUpdate(_Player,"DEN_SnakeCourt","KidDiedFirst");
SysClear("DB_DEN_SnakeCourt_KidFate_JournalUpdate", 3);

//--- Parents learning the news
//edge-case: dropping corpse at their feet
PROC
PROC_DEN_GuardedEntrance_ParentsSeeCorpse()
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player,"DEN_SnakeCourt", "ParentDevastated");

//when the grove changed state before it was resolved
PROC
PROC_DEN_GuardedEntrance_MovedOn_JournalHook((CHARACTER)_Player, (INTEGER)_IsFreed)
AND
DB_DEN_SnakeCourt_AutoResolve_JournalUpdate(_IsFreed, _Entry)
THEN
QuestUpdate(_Player,"DEN_SnakeCourt", _Entry);


//--- Closing
PROC
PROC_DEN_GuardedEntrance_ParentsGone_JournalHook()
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player,"DEN_SnakeCourt", "ParentGone");


//END_REGION

//REGION Idol Theft
IF
FlagSet(DEN_Thieflings_Event_AgreedStealIdol_9d027b80-7b47-5115-2f12-a3b2c9957350,_,_ID)
AND
DB_DialogPlayers(_ID,_Char,_)
AND
GetFlag(DEN_Thieflings_State_HasIdol_9b6a429f-3e24-4569-ba30-de7bf2b12ace,_Char,0)
THEN
QuestUpdate((CHARACTER)_Char,"DEN_IdolTheft","TheftRequest");

IF
FlagSet(DEN_Thieflings_Event_AgreedStealIdol_9d027b80-7b47-5115-2f12-a3b2c9957350,_,_ID)
AND
DB_DialogPlayers(_ID,_Char,_)
AND
GetFlag(DEN_Thieflings_State_HasIdol_9b6a429f-3e24-4569-ba30-de7bf2b12ace,_Char,1)
THEN
QuestUpdate((CHARACTER)_Char,"DEN_IdolTheft","TheftRequest_AlreadyHad");

IF
FlagSet((FLAG)DEN_Thieflings_State_HasIdol_9b6a429f-3e24-4569-ba30-de7bf2b12ace, _Player, _)
AND
DB_Players((CHARACTER)_Player)
AND
DB_GlobalFlag(DEN_SacredPond_Event_StopRitual_c9f24eda-2847-4620-9fa2-974b004ac147)
AND
QRY_QuestUpdateIsUnlockedForAny("DEN_IdolTheft","TheftRequest")
AND
QRY_OnlyOnce("DEN_IdolTheft_StoleIdolUpdate")
THEN
QuestUpdate("DEN_IdolTheft","NoAttackTheft");

PROC
PROC_CharacterRegisterCrime_Success(_Player, "DEN_DruidAttack_StoleIdol", _, _, _, _)
AND
QRY_QuestUpdateIsUnlockedForAny("DEN_IdolTheft","TheftRequest")
AND
QRY_OnlyOnce("DEN_IdolTheft_StoleIdolUpdate")
THEN
QuestUpdate("DEN_IdolTheft","AttackTriggered");

IF
FlagSet((FLAG)DEN_Thieflings_State_HasIdol_9b6a429f-3e24-4569-ba30-de7bf2b12ace, _Player, _)
AND
DB_Players((CHARACTER)_Player)
AND
DB_GlobalFlag(DEN_DruidAttack_State_PrepAfterDeathOfDruids_b4754af7-07ec-433c-87d2-e78ef4c79e6e)
AND
QRY_QuestUpdateIsUnlockedForAny("DEN_IdolTheft","TheftRequest")
AND
QRY_OnlyOnce("DEN_IdolTheft_StoleIdolDeadDruidsUpdate")
THEN
QuestUpdate("DEN_IdolTheft","AttackFinished");

IF
FlagSet(DEN_DruidAttack_State_PrepAfterDeathOfDruids_b4754af7-07ec-433c-87d2-e78ef4c79e6e,_,_)
AND
DB_Players(_Char)
AND
QuestUpdateIsUnlocked(_Char,"DEN_IdolTheft","AttackTriggered",1)
THEN
QuestUpdate("DEN_IdolTheft","AttackFinished");

IF
FlagSet(DEN_Thieflings_Event_GaveMolIdol_ff9f8a2e-4986-ca1e-4599-68b8d549cbeb,_,_ID)
AND
DB_DialogPlayers(_ID,_Char,_)
THEN
QuestUpdate((CHARACTER)_Char,"DEN_IdolTheft","GaveIdol");

IF
FlagSet(DEN_Hideout_Event_TurnedKidsHostile_17cfabeb-f1d7-9432-0e29-5aecfcef1a18,_,_)
THEN
PROC_DEN_IdolTheft_UpdateIfActive("KidsHostile");

IF
FlagSet(DEN_Thieflings_Event_RefusedGiveIdol_b4a0d6dd-c214-8f38-5e5f-b55704177ef5,_,_ID)
AND
DB_DialogPlayers(_ID,_Char,_)
THEN
QuestUpdate((CHARACTER)_Char,"DEN_IdolTheft","KeptIdol");

IF
FlagSet(DEN_DruidAttack_State_PrepAfterDeathOfTieflings_79826e3c-1dd7-4a8b-a5ca-cf4dfde51d12,_,_)
THEN
PROC_DEN_IdolTheft_UpdateIfActive("LostAttack");

PROC
PROC_LevelUnloading("WLD_Main_A")
THEN
PROC_DEN_IdolTheft_UpdateIfActive("NoIdolTheft");

PROC
PROC_DEN_IdolTheft_UpdateIfActive((STRING)_Update)
AND
DB_Players(_Char)
AND
QuestIsAccepted(_Char,"DEN_IdolTheft",1)
AND
QuestUpdateIsUnlocked(_Char,"DEN_IdolTheft","GaveIdol",0)
AND
QuestUpdateIsUnlocked(_Char,"DEN_IdolTheft","TieflingsLeftBefore",0)
THEN
QuestUpdate(_Char,"DEN_IdolTheft",_Update);

//Can't return the idol in certain states
PROC
PROC_State_Changed(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_Lockdown")
AND
DB_QuestIsOpened("DEN_IdolTheft")
THEN
QuestUpdate("DEN_IdolTheft", "GroveChanged");

PROC
PROC_State_Changed(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_TieflingsGone")
AND
DB_QuestIsOpened("DEN_IdolTheft")
THEN
QuestUpdate("DEN_IdolTheft","TieflingsLeftBefore");

PROC
PROC_State_Changed(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_RitualStoppedNoTieflings")
AND
DB_QuestIsOpened("DEN_IdolTheft")
THEN
QuestUpdate("DEN_IdolTheft", "GroveChanged");

PROC
PROC_State_Changed(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_DruidsHostileNoTieflings")
AND
DB_QuestIsOpened("DEN_IdolTheft")
THEN
QuestUpdate("DEN_IdolTheft", "GroveChanged");

PROC
PROC_LevelLoadedOnce("SCL_Main_A")
AND
DB_QuestIsOpened("DEN_IdolTheft")
THEN
QuestUpdate("DEN_IdolTheft", "GroveChanged");


PROC
PROC_State_Changed(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_AttackOnDen")
AND
QRY_DEN_IdolTheft_CheckGiveIdol()
THEN
QuestUpdate("DEN_IdolTheft", "RaidStarted");

PROC
PROC_DEN_AttackOnDen_BetrayTieflings()
AND
NOT DB_GlobalFlag(DEN_AttackOnDen_State_DenVictory_71c7f23e-3ff1-c9b8-3ef5-d75fa1b42c8d)
THEN
QuestUpdate("DEN_IdolTheft", "JoinedRaiders");

QRY
QRY_DEN_IdolTheft_CheckGiveIdol()
AND
QRY_QuestUpdateIsUnlockedForAny("DEN_IdolTheft", "AttackFinished")
THEN
DB_NOOP(1);

QRY
QRY_DEN_IdolTheft_CheckGiveIdol()
AND
QRY_QuestUpdateIsUnlockedForAny("DEN_IdolTheft", "TheftRequest_AlreadyHad")
THEN
DB_NOOP(1);

QRY
QRY_DEN_IdolTheft_CheckGiveIdol()
AND
QRY_QuestUpdateIsUnlockedForAny("DEN_IdolTheft", "NoAttackTheft")
THEN
DB_NOOP(1);

PROC
PROC_State_Changed(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", "DEN_State_AttackOnDenVictory")
AND
QRY_QuestUpdateIsUnlockedForAny("DEN_IdolTheft", "RaidStarted")
THEN
QuestUpdate("DEN_IdolTheft", "RaidFinished");

//END_REGION

//REGION Finding Doni

PROC
PROC_DEN_AttackOnDen_FoundDoni_JournalHook()
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player,"DEN_FindingDoni","FoundDoni");

IF
FlagSet(DEN_AttackOnDen_Event_HornBlown_92dd6f14-e011-4c21-9738-5d49c720a24e, _, _)
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player,"DEN_FindingDoni","AoDStarted");

PROC
PROC_StateSet_PermaDefeated(S_DEN_Tiefling_001_82f8662d-76da-4352-b37e-01ba433b5d43)
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player,"DEN_FindingDoni","RikkaDied");

IF
FlagSet(DEN_AttackOnDen_Event_TieflingsGoHostile_1de63f35-f895-ee70-93b3-55aec390a976, _, _)
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player,"DEN_FindingDoni","BetrayedTieflings");

//END_REGION

//REGION Thieflings

//Can't recover goods past default states. (Still possible to do it by checking out the secret stash, but the journal leads don't work anymore so close the quest.)
PROC
PROC_State_Changed(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", _State)
AND
NOT DB_DEN_DefaultStates(_State)
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player, "DEN_Thieflings", "GroveChanged");

//END_REGION

//REGION Robbed Adventurer

//Leaves as soon as the grove leaves a default state, robbed adventurer leaves so quest should close.
PROC
PROC_State_Changed(S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "DEN", _State)
AND
NOT DB_DEN_DefaultStates(_State)
AND
DB_Players(_Player)
THEN
QuestUpdate(_Player, "DEN_RobbedAdventurer", "GroveChanged");

//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "Act1"
