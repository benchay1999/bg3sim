Version 1
SubGoalCombiner SGC_AND
INITSECTION
DB_CheckPoint((CHARACTER)S_GOB_Checkpoint_Guard_001_6d69a347-9b3f-4b64-818e-013f849c6ae4, (CHARACTER)S_GOB_Checkpoint_Guard_002_022f8eb4-62ff-4770-b5b6-87eeed807f44, (TRIGGER)S_GOB_Checkpoint_WarningTrigger_001_566901c8-caba-46bf-8a07-8a47258f42b1, (TRIGGER)S_GOB_Checkpoint_WarningTrigger_002_d9a69b9b-4360-4d04-8a8f-f87bdc50d9e7,(TRIGGER)S_GOB_Checkpoint_TrespassingTrigger_f7831486-101d-4a7d-91d2-0c0acdc5cf02, "GOB_Checkpoint", (FLAG)GOB_Checkpoint_State_GainedAccess_46279ae3-9662-01b0-25a5-a46e1b80d057, "GOB_Checkpoint_Trespassing");
DB_CheckPoint((CHARACTER)S_GOB_Checkpoint_Guard_005_c82d1d05-0bf6-4dac-a484-e597644ed8cd, (CHARACTER)S_GOB_Checkpoint_Guard_005_c82d1d05-0bf6-4dac-a484-e597644ed8cd, (TRIGGER)S_GOB_Checkpoint_Cliff_Warning_aa193fa1-d6f5-408f-957f-7116fc41163c, (TRIGGER)NULL_00000000-0000-0000-0000-000000000000, (TRIGGER)S_GOB_Checkpoint_Cliff_Trespassing_4f3b8c1e-ac3a-462e-84cd-3924be26dd3d, "GOB_CliffCheckpoint", (FLAG)GOB_Checkpoint_State_GainedAccess_46279ae3-9662-01b0-25a5-a46e1b80d057, "GOB_Checkpoint_CliffTrespassing", (TRIGGER)S_GOB_Checkpoint_BridgeTP_c40ac14f-6ffd-4280-9627-df98dc1ddf70);

DB_CheckPointPassTrigger("GOB_Checkpoint", "GOB_Checkpoint_Past", (TRIGGER)S_GOB_Checkpoint_PassTrigger_1a43aeee-066c-4dd1-b105-9d63db0ecbfd);
DB_CheckPointPassTrigger("GOB_CliffCheckpoint", "GOB_CliffCheckpoint_Past", (TRIGGER)S_GOB_Checkpoint_PassTrigger_1a43aeee-066c-4dd1-b105-9d63db0ecbfd);

DB_Dialogs(S_GOB_Checkpoint_AlarmSystem_17ec4677-d265-43b5-99d1-f62b7051b5f2, GOB_Checkpoint_AlarmSystem_e8ab5334-e6dd-2901-3624-2f161684004c);
DB_Dialogs(S_GOB_Checkpoint_Guard_001_6d69a347-9b3f-4b64-818e-013f849c6ae4, GOB_Checkpoint_Guard001_4832f6ad-2b2e-203e-42ef-9837c8eb8146);
DB_Dialogs(S_GOB_Checkpoint_Guard_002_022f8eb4-62ff-4770-b5b6-87eeed807f44, GOB_Checkpoint_Guard002_f6dfacee-f562-7f7a-237f-210324f2eaac);
DB_Dialogs(S_GOB_Checkpoint_Guard_003_bbeb9839-47c5-419d-9a44-9217b9e8892f, GOB_Checkpoint_Guard003_8f6112ec-95fe-6e8b-e20e-0e0921b1d71d);
DB_Dialogs(S_GOB_Checkpoint_Guard_004_a70d559c-24e3-409d-b964-34811092ecac, GOB_Checkpoint_Guard004_05b65742-f842-ae6a-6e2d-88f3280f3441);
DB_Dialogs(S_GOB_Checkpoint_Guard_005_c82d1d05-0bf6-4dac-a484-e597644ed8cd, GOB_Checkpoint_Guard005_0d83c7d6-9831-9122-dc29-96a172aec36f);

DB_GOB_Checkpoint_Guards((CHARACTER)S_GOB_Checkpoint_Guard_001_6d69a347-9b3f-4b64-818e-013f849c6ae4);
DB_GOB_Checkpoint_Guards(S_GOB_Checkpoint_Guard_002_022f8eb4-62ff-4770-b5b6-87eeed807f44);
DB_GOB_Checkpoint_Guards(S_GOB_Checkpoint_Guard_003_bbeb9839-47c5-419d-9a44-9217b9e8892f);
DB_GOB_Checkpoint_Guards(S_GOB_Checkpoint_Guard_004_a70d559c-24e3-409d-b964-34811092ecac);
DB_GOB_Checkpoint_Guards(S_GOB_Checkpoint_Guard_005_c82d1d05-0bf6-4dac-a484-e597644ed8cd);

DB_GOB_Checkpoint_AlarmGuardPriority((CHARACTER)S_GOB_Checkpoint_Guard_005_c82d1d05-0bf6-4dac-a484-e597644ed8cd);
DB_GOB_Checkpoint_AlarmGuardPriority(S_GOB_Checkpoint_Guard_004_a70d559c-24e3-409d-b964-34811092ecac);
DB_GOB_Checkpoint_AlarmGuardPriority(S_GOB_Checkpoint_Guard_003_bbeb9839-47c5-419d-9a44-9217b9e8892f);

DB_GOB_Checkpoint_Worgs((CHARACTER)S_GOB_Checkpoint_Worg_001_e712ad95-2107-4def-a22d-0afb268b6a63);
DB_GOB_Checkpoint_Worgs((CHARACTER)S_GOB_Checkpoint_Worg_002_c546e62e-0a9d-4695-a5d4-19f2fb607f68);

DB_FlagReactionAfterDialog(GOB_Checkpoint_Event_ReactOnPlayerRaisingAlarm_2fba0bc9-1053-07a5-7ecc-7195cac3cd70, DIALOGRESOURCEGUID_GOB_Checkpoint_AlarmSystem_e8ab5334-e6dd-2901-3624-2f161684004c);
DB_FlagReactionAfterDialog(GOB_Checkpoint_Event_ReactOnPerformingSong_fa4c345b-b443-4d6f-8ae7-51144b29f261, DIALOGRESOURCEGUID_GOB_Checkpoint_AlarmSystem_e8ab5334-e6dd-2901-3624-2f161684004c);
DB_FlagReactionAfterDialog(GOB_Checkpoint_Event_MoveToCamp_d7f21056-f1aa-4b4e-5626-c44de303d407, DIALOGRESOURCEGUID_GOB_CheckpointThreeWayDialogWithCapturedGoblin_66247460-b5d8-095b-6a46-1c52ad952e6f);
DB_FlagReactionAfterDialog(GOB_Checkpoint_Event_MakeBlind_010f875d-64fc-2699-fdfd-5621667c1838, DIALOGRESOURCEGUID_GOB_Checkpoint_Guard001_4832f6ad-2b2e-203e-42ef-9837c8eb8146);
DB_FlagReactionAfterDialog(GOB_Checkpoint_State_Paint_9e0c9f92-6563-3e2c-a79c-1e4f77f787a0, DIALOGRESOURCEGUID_GOB_Checkpoint_Guard001_4832f6ad-2b2e-203e-42ef-9837c8eb8146);
DB_FlagReactionAfterDialog(GOB_Checkpoint_Event_BreakAlarm_c8da8ee9-9bb9-ba63-f67c-9071f4777c6e, DIALOGRESOURCEGUID_GOB_Checkpoint_AlarmSystem_e8ab5334-e6dd-2901-3624-2f161684004c);

DB_GOB_Checkpoint_AlarmFlags((FLAG)GOB_Checkpoint_Event_ReactOnPlayerPerformingSong_fa4c345b-b443-4d6f-8ae7-51144b29f261, (FLAG)GOB_Checkpoint_State_PlayerPerformedSong_7f5e3c61-7f9f-3f40-2685-40f3eafe88b7);
DB_GOB_Checkpoint_AlarmFlags(GOB_Checkpoint_Event_ReactOnPlayerRaisingAlarm_2fba0bc9-1053-07a5-7ecc-7195cac3cd70, GOB_Checkpoint_State_PlayerRaisedAlarm_37459e86-6fc1-41b3-9171-b17d263a3cee);

DB_GlobalFlagReactionAfterDialog(GOB_Checkpoint_Event_RaiseAlarm_7c71c2ef-476a-3fd7-47a3-124c8ca1c03a, DIALOGRESOURCEGUID_GOB_Checkpoint_AlarmSystem_e8ab5334-e6dd-2901-3624-2f161684004c);

PROC_TriggerRegisterForPlayers(S_GOB_Checkpoint_AlarmSystemRecognitionArea_5aa1c089-4100-440b-9407-cf32473f9827);
PROC_TriggerRegisterForPlayers(S_GOB_CampFirstHalfArea_d98ba3fa-743e-4d0e-98d8-2b3f79c17647);
PROC_TriggerRegisterForPlayers(S_GOB_Checkpoint_PartySpottingTrigger_8a9bff81-8082-4a80-8e24-bb65cb2ea457);
PROC_TriggerRegisterForPlayers(S_GOB_Checkpoint_DangerousSurfaceTrigger_847d18ca-4188-4e86-8e53-86fdd5cdb740);
PROC_TriggerRegisterForPlayers(S_GOB_Checkpoint_SneakJumpArea_f8c60c9f-a525-474e-8363-8a7c8488ceab);

DB_ItemOwnerShipTriggers("WLD_Main_A", S_GOB_Checkpoint_OwnershipTrigger_a8712461-d62e-459b-a7f1-7304e72aa3a7, S_GOB_Checkpoint_Guard_001_6d69a347-9b3f-4b64-818e-013f849c6ae4);
DB_ItemOwnerShipTriggers("WLD_Main_A", S_GOB_Checkpoint_BackupOwnershipTrigger_2ea21424-bad2-42ad-a97a-ed2e2d683182, S_GOB_Checkpoint_Backup_001_87bc228e-30d2-4f23-a96e-7e3569a4fb6c);

DB_GLO_DefeatCounter(S_GOB_Checkpoint_Guard_001_6d69a347-9b3f-4b64-818e-013f849c6ae4, "GOB_Checkpoint_Guards");
DB_GLO_DefeatCounter(S_GOB_Checkpoint_Guard_002_022f8eb4-62ff-4770-b5b6-87eeed807f44, "GOB_Checkpoint_Guards");
DB_GLO_DefeatCounter(S_GOB_Checkpoint_Guard_003_bbeb9839-47c5-419d-9a44-9217b9e8892f, "GOB_Checkpoint_Guards");
DB_GLO_DefeatCounter(S_GOB_Checkpoint_Guard_004_a70d559c-24e3-409d-b964-34811092ecac, "GOB_Checkpoint_Guards");
DB_GLO_DefeatCounter(S_GOB_Checkpoint_Guard_005_c82d1d05-0bf6-4dac-a484-e597644ed8cd, "GOB_Checkpoint_Guards");
DB_GLO_DefeatCounter(S_GOB_Checkpoint_Worg_001_e712ad95-2107-4def-a22d-0afb268b6a63, "GOB_Checkpoint_Guards");
DB_GLO_DefeatCounter(S_GOB_Checkpoint_Worg_002_c546e62e-0a9d-4695-a5d4-19f2fb607f68, "GOB_Checkpoint_Guards");

DB_GLO_DefeatCounter_AllPermaDefeatedGlobalFlag("GOB_Checkpoint_Guards",GOB_Checkpoint_State_Swept_79c55820-8e11-419f-9a84-3db23eb83cb9);
DB_GLO_DefeatCounter_AllPermaDefeatedGlobalFlag("GOB_Checkpoint_Backup",GOB_Checkpoint_State_BackupSwept_6ef01ebd-ae4f-d7e5-c6e0-3e0c3d47bcb6);

// Group so we can merge in the backup guards in case they join the main guards
DB_CorpseLooting_ClearRedOutlineOnFactionGroupTagged("WLD_Main_A","Act1_GOB_Checkpoint",(FACTION)ACT1_GOB_CheckpointGuards_20cb448e-72b9-d3fe-1567-206038efe6cc,(TAG)PERMA_DEFEATED_867f3a1e-1e4b-48c2-869e-343415231727);

DB_GOB_Checkpoint_Backup((CHARACTER)S_GOB_Checkpoint_Backup_001_87bc228e-30d2-4f23-a96e-7e3569a4fb6c, (TRIGGER)S_GOB_Checkpoint_BackupDefaultPosition_001_4d10e9a4-4b17-44c3-ac3c-a69affb88068, (TRIGGER)S_GOB_Checkpoint_BackupPosition_001_04176570-a515-47e0-9c4c-55a627d8a05b, (ITEM)S_GOB_Checkpoint_BackupStool_001_9361e71a-9856-455c-bc4e-be1f8eeda3f5);
DB_GOB_Checkpoint_Backup(S_GOB_Checkpoint_Backup_002_c7e85da4-2100-4d25-9a54-8feb5edbbb14, S_GOB_Checkpoint_BackupDefaultPosition_002_65206132-0d06-429e-af95-0384263bb64e, (TRIGGER)S_GOB_Checkpoint_BackupPosition_002_1476e5d5-6959-4c8e-97c6-2fd91641445b, (ITEM)S_GOB_Checkpoint_BackupStool_002_22375047-d3e0-4f95-9dbd-9ff1d42d301a);
DB_GOB_Checkpoint_Backup(S_GOB_Checkpoint_Backup_003_436c4c80-76fe-4396-831d-0d279b394810, S_GOB_Checkpoint_BackupDefaultPosition_003_e28db419-994a-4fc9-9ad9-8aefb1f1d630, (TRIGGER)S_GOB_Checkpoint_BackupPosition_003_dea701c4-6d30-4148-a826-294e16fd66b5, (ITEM)S_GOB_Checkpoint_BackupStool_003_929fcca2-089f-4ae2-abf4-8c2b4b994383);

DB_CorpseLooting_ClearRedOutlineOnFactionGroupTagged("WLD_Main_A","Act1_GOB_Checkpoint_Backup",(FACTION)ACT1_GOB_CheckpointBackup_ea8f51bb-4fd3-36f9-0674-5c845474b66e,(TAG)PERMA_DEFEATED_867f3a1e-1e4b-48c2-869e-343415231727);

DB_Dialogs(S_GOB_Checkpoint_Backup_001_87bc228e-30d2-4f23-a96e-7e3569a4fb6c, DIALOGRESOURCEGUID_GOB_Checkpoint_Backup001_192f75e4-52fd-9526-e320-59084bde283b);
DB_Dialogs(S_GOB_Checkpoint_Backup_002_c7e85da4-2100-4d25-9a54-8feb5edbbb14, DIALOGRESOURCEGUID_GOB_Checkpoint_Backup002_c2125ea2-d967-82e2-87bb-a18330ca6a01);
DB_Dialogs(S_GOB_Checkpoint_Backup_003_436c4c80-76fe-4396-831d-0d279b394810, DIALOGRESOURCEGUID_GOB_Checkpoint_Backup003_77cdf658-de5b-8c90-a7c2-91aea149c269);

DB_GLO_DefeatCounter(S_GOB_Checkpoint_Backup_001_87bc228e-30d2-4f23-a96e-7e3569a4fb6c, "GOB_Checkpoint_Backup");
DB_GLO_DefeatCounter(S_GOB_Checkpoint_Backup_002_c7e85da4-2100-4d25-9a54-8feb5edbbb14, "GOB_Checkpoint_Backup");
DB_GLO_DefeatCounter(S_GOB_Checkpoint_Backup_003_436c4c80-76fe-4396-831d-0d279b394810, "GOB_Checkpoint_Backup");

DB_AutoSaveTrigger(S_GOB_Checkpoint_AutosaveTrigger_aa5919a3-5c91-444b-9057-31e2ab0a9aac);

SetOnStage(S_GOB_Checkpoint_CapturedGoblinStash_Pile_d9f47d17-8234-4947-952a-aa5a70b479fb, 0);
//DB_ShovelArea(S_GOB_Checkpoint_CapturedGoblinStash_Pile_d9f47d17-8234-4947-952a-aa5a70b479fb,S_GOB_Checkpoint_CapturedGoblinStash_Stash_c15dd342-2c54-4eb2-a7c4-5e7707bf8fb8);

DB_StatusReaction("GOB_WARPAINT", "GOB_Checkpoint_WarPaint");
DB_CrimeType_CustomWarning((CHARACTER)S_GOB_Checkpoint_Backup_Melee_01_c7e85da4-2100-4d25-9a54-8feb5edbbb14, "GOB_Checkpoint_WarPaint", (DIALOGRESOURCE)GOB_Checkpoint_AD_WarPaint_001_4249195a-b255-5808-1e74-30ba10120c04);
DB_CrimeType_CustomWarning(S_GOB_Checkpoint_Guard_003_bbeb9839-47c5-419d-9a44-9217b9e8892f, "GOB_Checkpoint_WarPaint", GOB_Checkpoint_AD_WarPaint_002_bb67e647-6336-e257-6197-f7949fa9a5ea);
DB_CrimeType_CustomWarning(S_GOB_Festivities_GoblinKid_000_c8de613d-be02-42ab-ae91-3ed7ba5edafa, "GOB_Checkpoint_WarPaint", GOB_Checkpoint_AD_WarPaint_003_789b6376-b709-eefc-b2b9-c692699bf07e);
DB_CrimeType_CustomWarning(S_GOB_GuardTense_97409af2-6e52-4e9d-83df-bd4827ca7992, "GOB_Checkpoint_WarPaint", GOB_Checkpoint_AD_WarPaint_004_ba9de943-fd32-0f45-e66e-c97a798d700e);
DB_CrimeType_CustomWarning(S_GOB_GoblinBrash_35ffa172-7f23-4452-8f90-5dc24fd3bb6d, "GOB_Checkpoint_WarPaint", GOB_Checkpoint_AD_WarPaint_005_b734c31b-9536-99f1-97ad-508c96816582);
DB_CrimeType_CustomWarning(S_GOB_Torturers_Goblet_0f18201e-2836-4642-8a26-d0a6e1a8a8cc, "GOB_Checkpoint_WarPaint", GOB_Checkpoint_AD_WarPaint_006_720155d1-bf37-b32e-a2d2-a88d5d624eb4);
DB_CrimeType_CustomWarning(S_GOB_GuardVulgar_a063d18e-d513-4d30-80ea-40a5bffb4bd7, "GOB_Checkpoint_WarPaint", GOB_Checkpoint_AD_WarPaint_007_c62ac5c0-5b71-ecb1-2ee6-dbdb260ae683);
DB_CrimeType_CustomWarning(S_GOB_WolfPens_Beastmaster_002_1fadb35a-6996-4a6a-bd0d-e695b53a3a14, "GOB_Checkpoint_WarPaint", GOB_Checkpoint_AD_WarPaint_008_8559d75b-f1ec-fb86-207e-9a49fe8bbd96);

DB_GOB_Checkpoint_AlarmVandalizeReactions(S_GOB_Checkpoint_Guard_001_Melee_01_6d69a347-9b3f-4b64-818e-013f849c6ae4, (DIALOGRESOURCE)GOB_Checkpoint_AlarmVandalize_001_d78f50a6-b7fd-780c-b793-ea48ff9eaa30);
DB_GOB_Checkpoint_AlarmVandalizeReactions(S_GOB_Checkpoint_Guard_002_Melee_02_022f8eb4-62ff-4770-b5b6-87eeed807f44, GOB_Checkpoint_AlarmVandalize_002_5fb34fe1-34f8-d65b-7a5e-7a504bcda767);
DB_GOB_Checkpoint_AlarmVandalizeReactions(S_GOB_Checkpoint_Guard_003_Ranger_01_bbeb9839-47c5-419d-9a44-9217b9e8892f, GOB_Checkpoint_AlarmVandalize_003_e018d4f1-175d-2599-ac98-395b640fc3a8);
DB_GOB_Checkpoint_AlarmVandalizeReactions(S_GOB_Checkpoint_Guard_004_Ranger_02_a70d559c-24e3-409d-b964-34811092ecac, GOB_Checkpoint_AlarmVandalize_004_88eb28c8-34eb-a369-d3c4-e0045fbe35ed);
DB_GOB_Checkpoint_AlarmVandalizeReactions(S_GOB_Checkpoint_Guard_005_Ranger_03_c82d1d05-0bf6-4dac-a484-e597644ed8cd, GOB_Checkpoint_AlarmVandalize_005_e3aec18f-44fb-af08-ba89-749048ebcf67);

DB_GOB_Checkpoint_CampEntranceTriggers((TRIGGER)S_GOB_Festivities_BingeArea_f4a4031d-7e0c-45b8-970b-47c62d4908d8);
DB_GOB_Checkpoint_CampEntranceTriggers(S_GOB_ThroneRoom_SUB_bb81678b-641c-43fc-bd41-53295d59be03);

PROC_CharacterDisableCrime(S_GOB_Checkpoint_Guard_002_Melee_02_022f8eb4-62ff-4770-b5b6-87eeed807f44, "VandaliseNoOwner");

DB_CustomDialogRange(S_GOB_Checkpoint_Guard_001_Melee_01_6d69a347-9b3f-4b64-818e-013f849c6ae4, 15);

DB_StatusReaction("GOB_WARPAINT", "GOB_Checkpoint_WarPaint");

DB_GlobalFlagReactionAfterDialog(GOB_Checkpoint_State_GainedAccess_46279ae3-9662-01b0-25a5-a46e1b80d057, (DIALOGRESOURCE)GOB_Checkpoint_Guard001_4832f6ad-2b2e-203e-42ef-9837c8eb8146);

DB_DropMutingStatussesDialog((DIALOGRESOURCE)GOB_Checkpoint_AlarmSystem_e8ab5334-e6dd-2901-3624-2f161684004c);

// Combat NPC Reactivity
DB_CombatReact_AD_OnNextTurn(S_GOB_Checkpoint_Guard_001_6d69a347-9b3f-4b64-818e-013f849c6ae4, (DIALOGRESOURCE)GOB_Checkpoint_AD_Guard_001_TakingTurn_Combat_1adf3952-05b4-2a71-291a-8c53e87ac4b3);
DB_CombatReact_AD_OnTurn(S_GOB_Checkpoint_Guard_004_a70d559c-24e3-409d-b964-34811092ecac, (DIALOGRESOURCE)GOB_Checkpoint_AD_Guard_004_TakingTurn_Combat_19436d7f-629e-0feb-7a39-4f006b33fcb3, 2);
DB_CombatReact_AD_OnNextTurn(S_GOB_Checkpoint_Guard_005_c82d1d05-0bf6-4dac-a484-e597644ed8cd, (DIALOGRESOURCE)GOB_Checkpoint_AD_Guard_005_TakingTurn_Combat_b565bae8-c4b1-0129-9005-28f6a240dfa6);
KBSECTION
//REGION entering the camp area
IF
EnteredTrigger(_Player, _Trigger)
AND
DB_GOB_Checkpoint_CampEntranceTriggers(_Trigger)
AND
NOT DB_GlobalFlag(GLO_GoblinHunt_Quest_CampEntered_58d47a99-0e37-4fe8-a5ff-d47f069a3886)
THEN
PROC_TriggerUnregisterForPlayers(S_GOB_Checkpoint_SneakJumpArea_f8c60c9f-a525-474e-8363-8a7c8488ceab);
SetFlag(GLO_GoblinHunt_Quest_CampEntered_58d47a99-0e37-4fe8-a5ff-d47f069a3886, NULL_00000000-0000-0000-0000-000000000000);
//END_REGION entering the camp area

//REGION Recognition of the Alarm System
IF
EnteredTrigger(_Player, S_GOB_Checkpoint_AlarmSystemRecognitionArea_5aa1c089-4100-440b-9407-cf32473f9827)
THEN
PROC_TriggerUnregisterForPlayers(S_GOB_Checkpoint_AlarmSystemRecognitionArea_5aa1c089-4100-440b-9407-cf32473f9827);
PROC_GOB_Checkpoint_TryToRecognizeAlarm(_Player);

PROC
PROC_GOB_Checkpoint_TryToRecognizeAlarm((CHARACTER)_Player)
THEN
PROC_TryAbilityCheck(_Player, NULL_00000000-0000-0000-0000-000000000000, "Intelligence", (DIFFICULTYCLASS)DC_Legacy_10_625be976-7a67-4394-97c8-14c69715ae4b, "GOB_CheckpointAlarmCheck");

PROC
PROC_RollResult("GOB_CheckpointAlarmCheck", _Player, NULL_00000000-0000-0000-0000-000000000000, 1)
THEN
SetFlag(GOB_Checkpoint_State_RecognizedAlarmSystem_64eeb0ce-c7c1-8103-37a8-8e9530ea6375, NULL_00000000-0000-0000-0000-000000000000);

PROC
PROC_RollResult("GOB_CheckpointAlarmCheck", _Player, NULL_00000000-0000-0000-0000-000000000000, _)
THEN
PROC_PlayPerceptionRevealEffect((ITEM)S_GOB_Checkpoint_AlarmSystem_17ec4677-d265-43b5-99d1-f62b7051b5f2, "GOB_Checkpoint_HighlightAlarmSystem", 18000);
StartVoiceBark((VOICEBARKRESOURCE)GOB_Checkpoint_VB_AlarmSystemRecognition_64c66abc-0061-b310-1bb5-fe3d8ba0883b, _Player);

IF
FlagSet(GOB_Checkpoint_State_GainedAccess_46279ae3-9662-01b0-25a5-a46e1b80d057, NULL_00000000-0000-0000-0000-000000000000, _)
THEN
PROC_TriggerUnregisterForPlayers(S_GOB_Checkpoint_AlarmSystemRecognitionArea_5aa1c089-4100-440b-9407-cf32473f9827);
//END_REGION Recognition of the Alarm System

//REGION Trespassing
PROC
PROC_CheckPointDialogue((CHARACTER)_Player, S_GOB_Checkpoint_Guard_001_6d69a347-9b3f-4b64-818e-013f849c6ae4)
AND
QRY_GLO_SelectFavouredSpeaker_SingleTag(_Player, S_GOB_Checkpoint_Guard_001_6d69a347-9b3f-4b64-818e-013f849c6ae4, (TAG)DROWELF_a672ac1d-d088-451a-9537-3da4bf74466c, 1)
AND
DB_QRYRTN_GLO_SelectFavouredSpeaker(_Speaker)
AND
NOT QRY_GOB_Checkpoint_CapturedGoblinWaitingAtCheckpoint()
AND
QRY_StartCheckpointWarningDialog("GOB_Checkpoint", GOB_Checkpoint_Guard001_4832f6ad-2b2e-203e-42ef-9837c8eb8146, S_GOB_Checkpoint_Guard_001_6d69a347-9b3f-4b64-818e-013f849c6ae4, _Speaker)
THEN
DB_NOOP(1);

PROC
PROC_CheckPointDialogue((CHARACTER)_Player, S_GOB_Checkpoint_Guard_001_6d69a347-9b3f-4b64-818e-013f849c6ae4)
AND
QRY_GOB_Checkpoint_CapturedGoblinWaitingAtCheckpoint()
THEN
PROC_ClearStoryMove(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb);
PROC_GOB_Checkpoint_StartThreewayDialogWithCapturedGoblin(_Player);

PROC
PROC_CheckPointDialogue((CHARACTER)_Player, S_GOB_Checkpoint_Guard_002_022f8eb4-62ff-4770-b5b6-87eeed807f44)
AND
QRY_StartCheckpointWarningDialog("GOB_Checkpoint", GOB_Checkpoint_Guard002_f6dfacee-f562-7f7a-237f-210324f2eaac, S_GOB_Checkpoint_Guard_002_022f8eb4-62ff-4770-b5b6-87eeed807f44, _Player)
THEN
DB_NOOP(1);

PROC
PROC_CheckPointDialogue((CHARACTER)_Char, S_GOB_Checkpoint_Guard_005_c82d1d05-0bf6-4dac-a484-e597644ed8cd)
AND
NOT DB_GlobalFlag(GOB_Checkpoint_Event_WarnedAtCliff_048d7957-079e-489f-9bf0-241c0e29db3f)
AND
QRY_StartCheckpointWarningDialog("GOB_CliffCheckpoint", GOB_Checkpoint_CliffWarning_6311c39a-2353-fc29-d95b-2cd60ad1f234, S_GOB_Checkpoint_Guard_005_c82d1d05-0bf6-4dac-a484-e597644ed8cd, _Char)
THEN
DB_NOOP(1);

PROC
PROC_FlagReactionAfterDialog(_Player, GOB_Checkpoint_State_Paint_9e0c9f92-6563-3e2c-a79c-1e4f77f787a0)
THEN
SetFlag(GOB_Checkpoint_State_WarPaint_49011d08-1dd0-4900-84a3-9aad3a922d52, NULL_00000000-0000-0000-0000-000000000000);
ApplyStatus(_Player, "GOB_WARPAINT", -1.0);

IF
StatusApplied(_Player, "GOB_WARPAINT", _, _)
AND
GetClosestAlivePlayer(_Player, _Companion, _Dist)
AND
QRY_SpeakerIsAvailableAndInDialogRange(_Companion, _Player)
AND
QRY_OnlyOnce("GOB_Checkpoint_Voicebark_WarPaint")
THEN
StartVoiceBark(GOB_Checkpoint_VB_CompanionReactionOnWarPaint_3dffe35b-cc6c-0559-77ad-9bc86a2518d8, _Companion);

PROC
PROC_LongRest()
AND
DB_Players(_Player)
AND
HasActiveStatus(_Player, "GOB_WARPAINT", 1)
THEN
RemoveStatus(_Player, "GOB_WARPAINT");
ClearFlag(GOB_Checkpoint_State_Paint_9e0c9f92-6563-3e2c-a79c-1e4f77f787a0, _Player);

IF
StatusApplied(_Player, "WET", _, _)
AND
HasActiveStatus(_Player, "GOB_WARPAINT", 1)
THEN
RemoveStatus(_Player, "GOB_WARPAINT");
//END_REGION Trespassing

//REGION Alarm System
PROC
PROC_FlagReactionAfterDialog(_Player, GOB_Checkpoint_Event_ReactOnPlayerPerformingSong_fa4c345b-b443-4d6f-8ae7-51144b29f261)
AND
DB_Players(_OtherPlayer)
AND
_Player != _OtherPlayer
AND
QRY_SpeakerIsAvailableAndInDialogRange(_OtherPlayer, _Player)
AND
QRY_OnlyOnce("GOB_Checkpoint_CompanionReactionOnSong")
THEN
StartVoiceBark(VOICEBARKRESOURCEGUID_GOB_Checkpoint_VB_CompanionReactionOnSong_b9db9215-60c3-801e-cccc-6b73cdbcf590, _OtherPlayer);

PROC
PROC_FlagReactionAfterDialog(_Player, _CharacterAlarmFlag)
AND
DB_GOB_Checkpoint_AlarmFlags(_CharacterAlarmFlag, _GlobalAlarmFlag)
THEN
ClearFlag(_CharacterAlarmFlag, _Player); // So we could set it again
SetFlag(_GlobalAlarmFlag);
DB_GOB_Checkpoint_Drummer((CHARACTER)_Player);
PROC_GOB_Checkpoint_AlarmUsed_CheckInProgress();

// goblins can activate the alarm via scripting
IF
FlagSet(GOB_Checkpoint_Event_RaiseAlarm_7c71c2ef-476a-3fd7-47a3-124c8ca1c03a, NULL_00000000-0000-0000-0000-000000000000, _)
THEN
PROC_SetRelationToPlayers((FACTION)ACT1_GOB_CheckpointBackup_ea8f51bb-4fd3-36f9-0674-5c845474b66e, 0);
ClearFlag(GOB_Checkpoint_Event_RaiseAlarm_7c71c2ef-476a-3fd7-47a3-124c8ca1c03a, NULL_00000000-0000-0000-0000-000000000000);
ClearFlag(GOB_Checkpoint_State_AlarmNeedsToBeRaised_f5de774f-7900-4dc1-8cdc-a2ddb4d37dbf, NULL_00000000-0000-0000-0000-000000000000);
ClearFlag(GOB_Checkpoint_State_AlarmRaiserDesignated_764ac264-caa4-4b87-8328-06cbfc598c31, NULL_00000000-0000-0000-0000-000000000000);
PROC_GOB_Checkpoint_ClearDesignatedRunner();
PROC_GOB_Checkpoint_AlarmUsed_CheckInProgress();

PROC
PROC_GOB_Checkpoint_ClearDesignatedRunner()
AND
DB_GOB_Checkpoint_Guards(_Guard)
AND
GetFlag(GOB_Checkpoint_State_RunningToAlarm_bb0185e1-7c5c-479f-a45c-b995d16f476e, _Guard, 1)
THEN
ClearFlag(GOB_Checkpoint_State_RunningToAlarm_bb0185e1-7c5c-479f-a45c-b995d16f476e, _Guard);

PROC
PROC_GOB_Checkpoint_ClearDesignatedRunner()
AND
DB_GOB_Checkpoint_AlarmRunner(_Guard)
THEN
NOT DB_GOB_Checkpoint_AlarmRunner(_Guard);

PROC
PROC_GOB_Checkpoint_AlarmUsed_CheckInProgress()
AND
GetFlag(GOB_Checkpoint_State_AlarmInProgress_93e1b28b-9b50-2108-94c3-4a689745aeda, NULL_00000000-0000-0000-0000-000000000000, 0)
THEN
SetFlag(GOB_Checkpoint_State_AlarmInProgress_93e1b28b-9b50-2108-94c3-4a689745aeda, NULL_00000000-0000-0000-0000-000000000000);
PROC_GOB_Checkpoint_DisableDialogs();
PROC_GOB_Checkpoint_AlarmUsed();

//REGION Disabling and Enabling dialogs
PROC
PROC_GOB_Checkpoint_DisableDialogs()
AND
DB_GOB_Checkpoint_Guards(_Goblin)
THEN
PROC_ForceStopDialog(_Goblin);
SetHasDialog(_Goblin, 0);

PROC
PROC_GOB_Checkpoint_EnableDialogs()
AND
DB_GOB_Checkpoint_Guards(_Goblin)
THEN
SetHasDialog(_Goblin, 1);
//END_REGION Disabling and Enabling dialogs

PROC
PROC_GOB_Checkpoint_AlarmUsed()
THEN
PROC_GOB_Checkpoint_AlarmUsed_HandleBackupGuards();

PROC
PROC_GOB_Checkpoint_AlarmUsed_HandleBackupGuards()
THEN
PROC_GOB_Checkpoint_SendBackupToCheckpoint();

// if the combat is already in progress do nothing
PROC
PROC_GOB_Checkpoint_AlarmUsed()
AND
NOT DB_GOB_Checkpoint_Combat(_)
THEN
PROC_GOB_Checkpoint_AlarmUsed_HandleMainGuards();

// main guards
// - no access -> combat
// - access, no song flag, true soul -> comment
// - access, no song flag, not true soul -> combat
// - access, song flag -> comment, second time - combat
// - SUCCESS then FAILURE -> "Try better the next time"

// backup guards
// - annoyed flag - ignore. Don't need the additonal flag
// - no annoyed flag - send to the checkpoint
PROC
PROC_GOB_Checkpoint_AlarmUsed_HandleMainGuards()
AND
GetFlag(GOB_Checkpoint_State_GainedAccess_46279ae3-9662-01b0-25a5-a46e1b80d057, NULL_00000000-0000-0000-0000-000000000000, 0)
THEN
PROC_GOB_Checkpoint_AlarmUsed_HostileResolution();

PROC
PROC_GOB_Checkpoint_AlarmUsed_HandleMainGuards()
AND
GetFlag(GOB_Checkpoint_State_PretendedToBeTrueSouls_b4a02fb9-e711-0331-c163-a23fe10ee268, NULL_00000000-0000-0000-0000-000000000000, 1)
THEN
PROC_GOB_Checkpoint_AlarmUsed_PeacefulResolution();

PROC
PROC_GOB_Checkpoint_AlarmUsed_HandleMainGuards()
AND
GetFlag(GOB_Checkpoint_State_GainedAccess_46279ae3-9662-01b0-25a5-a46e1b80d057, NULL_00000000-0000-0000-0000-000000000000, 1)
AND
GetFlag(GOB_Checkpoint_State_PretendedToBeTrueSouls_b4a02fb9-e711-0331-c163-a23fe10ee268, NULL_00000000-0000-0000-0000-000000000000, 0)
AND
QRY_GOB_Checkpoint_PerformedSongOnce()
THEN
PROC_GOB_Checkpoint_AlarmUsed_PeacefulResolution();

PROC
PROC_GOB_Checkpoint_AlarmUsed_HandleMainGuards()
AND
GetFlag(GOB_Checkpoint_State_GainedAccess_46279ae3-9662-01b0-25a5-a46e1b80d057, NULL_00000000-0000-0000-0000-000000000000, 1)
AND
GetFlag(GOB_Checkpoint_State_PretendedToBeTrueSouls_b4a02fb9-e711-0331-c163-a23fe10ee268, NULL_00000000-0000-0000-0000-000000000000, 0)
AND
NOT QRY_GOB_Checkpoint_PerformedSongOnce()
THEN
PROC_GOB_Checkpoint_AlarmUsed_HostileResolution();

QRY
QRY_GOB_Checkpoint_PerformedSongOnce()
AND
GetFlag(GOB_Checkpoint_State_PlayerPerformedSong_7f5e3c61-7f9f-3f40-2685-40f3eafe88b7, NULL_00000000-0000-0000-0000-000000000000, 1)
AND
GetFlag(GOB_Checkpoint_State_ForgaveForUsingAlarm_10c2b4eb-5a82-01fc-5a88-06331a789730, NULL_00000000-0000-0000-0000-000000000000, 0)
THEN
DB_NOOP(1);

PROC
PROC_GOB_Checkpoint_AlarmUsed_HostileResolution()
THEN
LookAtEntity(S_GOB_Checkpoint_Guard_001_6d69a347-9b3f-4b64-818e-013f849c6ae4, S_GOB_Checkpoint_AlarmSystem_17ec4677-d265-43b5-99d1-f62b7051b5f2);
PROC_ForceStopDialog(S_GOB_Checkpoint_Guard_001_Melee_01_6d69a347-9b3f-4b64-818e-013f849c6ae4);
PROC_GOB_Checkpoint_AlarmUsed_MainGuardHostileReaction();
DB_GOB_Checkpoint_MakeCheckpointHostile(1);

PROC
PROC_GOB_Checkpoint_AlarmUsed_PeacefulResolution()
AND
DB_GOB_Checkpoint_Guards(_Goblin)
THEN
SetEntityEvent(_Goblin, "GOB_Checkpoint_Event_ReactOnUsingAlarm");

PROC
PROC_GOB_Checkpoint_AlarmUsed_PeacefulResolution()
THEN
LookAtEntity(S_GOB_Checkpoint_Guard_001_6d69a347-9b3f-4b64-818e-013f849c6ae4, S_GOB_Checkpoint_AlarmSystem_17ec4677-d265-43b5-99d1-f62b7051b5f2);
PROC_ForceStopDialog(S_GOB_Checkpoint_Guard_001_Melee_01_6d69a347-9b3f-4b64-818e-013f849c6ae4);
PROC_GOB_Checkpoint_AlarmUsed_MainGuardPeacefulReaction();

PROC
PROC_GOB_Checkpoint_AlarmUsed_MainGuardPeacefulReaction()
AND
DB_GOB_Checkpoint_Drummer(_Player)
AND
QRY_StartDialogWithAvailableSpeakerInRange_TryTargetFirst((DIALOGRESOURCE)GOB_Checkpoint_AlarmUsedReaction_1206f756-5dbd-2cd7-41d1-027e3ebf230c, S_GOB_Checkpoint_Guard_001_Melee_01_6d69a347-9b3f-4b64-818e-013f849c6ae4, _Player, 10.0)
THEN
DB_NOOP(1);

PROC
PROC_GOB_Checkpoint_AlarmUsed_MainGuardHostileReaction()
AND
NOT QRY_GOB_Checkpoint_StartAlarmReactionDialog()
THEN
PROC_GOB_Checkpoint_MakeCheckpointHostile();

QRY
QRY_GOB_Checkpoint_StartAlarmReactionDialog()
AND
DB_GOB_Checkpoint_Drummer(_Player)
AND
QRY_StartDialogWithAvailableSpeakerInRange_TryTargetFirst((DIALOGRESOURCE)GOB_Checkpoint_AlarmUsedReaction_1206f756-5dbd-2cd7-41d1-027e3ebf230c, S_GOB_Checkpoint_Guard_001_Melee_01_6d69a347-9b3f-4b64-818e-013f849c6ae4, _Player, 10.0)
THEN
DB_NOOP(1);

IF
DialogEnded(GOB_Checkpoint_AlarmUsedReaction_1206f756-5dbd-2cd7-41d1-027e3ebf230c, _)
AND
DB_GOB_Checkpoint_MakeCheckpointHostile(1)
THEN
NOT DB_GOB_Checkpoint_MakeCheckpointHostile(1);
PROC_GOB_Checkpoint_MakeCheckpointHostile();

PROC
PROC_GOB_Checkpoint_MakeCheckpointHostile()
THEN
PROC_SetRelationToPlayers((FACTION)ACT1_GOB_CheckpointGuards_20cb448e-72b9-d3fe-1567-206038efe6cc, 0);
//END_REGION

//REGION Alarm System Reset
// If Backup Swept / Annoyed then we reset the alarm as soon as the main guard finishes his conversation
// othwerwise will do that when they go back
PROC
PROC_GOB_Checkpoint_ReturnBackup()
THEN
PROC_GOB_Checkpoint_ResetAlarm();

IF
DialogEnded(GOB_Checkpoint_AlarmUsedReaction_1206f756-5dbd-2cd7-41d1-027e3ebf230c, _)
AND
QRY_GOB_Checkpoint_BackupIsNotActive()
THEN
PROC_GOB_Checkpoint_ResetAlarm();

IF
DialogRequestFailed(GOB_Checkpoint_AlarmUsedReaction_1206f756-5dbd-2cd7-41d1-027e3ebf230c, _)
AND
QRY_GOB_Checkpoint_BackupIsNotActive()
THEN
PROC_GOB_Checkpoint_ResetAlarm();

QRY
QRY_GOB_Checkpoint_BackupIsNotActive()
AND
GetFlag(GOB_Checkpoint_State_BackupSwept_6ef01ebd-ae4f-d7e5-c6e0-3e0c3d47bcb6, NULL_00000000-0000-0000-0000-000000000000, 1)
THEN
DB_NOOP(1);

QRY
QRY_GOB_Checkpoint_BackupIsNotActive()
AND
GetFlag(GOB_Checkpoint_State_BackupAnnoyed_ca4fec38-234e-4af1-a58a-4722ee3fc1e6, NULL_00000000-0000-0000-0000-000000000000, 1)
THEN
DB_NOOP(1);

PROC
PROC_GOB_Checkpoint_ResetAlarm()
THEN
SysClear("DB_GOB_Checkpoint_Drummer", 1);
PROC_GOB_Checkpoint_EnableDialogs();
SetEntityEvent(S_GOB_Checkpoint_Guard_001_Melee_01_6d69a347-9b3f-4b64-818e-013f849c6ae4, "GOB_Checkpoint_RestartAD");
ClearFlag(GOB_Checkpoint_State_AlarmInProgress_93e1b28b-9b50-2108-94c3-4a689745aeda, NULL_00000000-0000-0000-0000-000000000000);
ClearFlag(GOB_Checkpoint_State_PlayerPerformedSong_7f5e3c61-7f9f-3f40-2685-40f3eafe88b7, NULL_00000000-0000-0000-0000-000000000000);
ClearFlag(GOB_Checkpoint_State_PlayerRaisedAlarm_37459e86-6fc1-41b3-9171-b17d263a3cee, NULL_00000000-0000-0000-0000-000000000000);
//END_REGION Alarm System Reset

//REGION Alarm System - reset state after combat
IF
CombatStarted(_CombatID)
AND
QRY_GOB_Checkpoint_CombatAtCheckpoint((GUIDSTRING)_CombatID)
THEN
DB_GOB_Checkpoint_Combat(_CombatID);

IF
CombatEnded(_CombatID)
AND
DB_GOB_Checkpoint_Combat(_CombatID)
THEN
NOT DB_GOB_Checkpoint_Combat(_CombatID);
PROC_GOB_Checkpoint_ResetAlarm();
ClearFlag(GOB_Checkpoint_State_AlarmRaised_4df15c6e-2521-d9a5-1178-c7736a92b1ea, NULL_00000000-0000-0000-0000-000000000000);

QRY
QRY_GOB_Checkpoint_CombatAtCheckpoint((GUIDSTRING)_CombatID)
AND
DB_GOB_Checkpoint_Guards(_Guard)
AND
DB_Is_InCombat(_Guard, _CombatID)
THEN
DB_NOOP(1);
//END_REGION Alarm System - reset state after combat

//REGION Alarm System - clearing state for the Alarm Runner

PROC
PROC_StateSet_PermaDefeated(_Guard)
AND
DB_GOB_Checkpoint_AlarmGuardPriority((CHARACTER)_Guard)
THEN
NOT DB_GOB_Checkpoint_AlarmGuardPriority((CHARACTER)_Guard);

PROC
PROC_StateSet_Defeated(_Guard)
AND
DB_GOB_Checkpoint_Guards((CHARACTER)_Guard)
AND
NOT GetFlag(GOB_Checkpoint_State_Swept_79c55820-8e11-419f-9a84-3db23eb83cb9, NULL_00000000-0000-0000-0000-000000000000, 1)
AND
GetFlag(GOB_Checkpoint_State_AlarmNeedsToBeRaised_f5de774f-7900-4dc1-8cdc-a2ddb4d37dbf, NULL_00000000-0000-0000-0000-000000000000, 0)
THEN
SetFlag(GOB_Checkpoint_State_AlarmNeedsToBeRaised_f5de774f-7900-4dc1-8cdc-a2ddb4d37dbf, NULL_00000000-0000-0000-0000-000000000000);
PROC_GOB_Checkpoint_FindAlarmRunner();

PROC
PROC_GOB_Checkpoint_FindAlarmRunner()
AND
DB_GOB_Checkpoint_AlarmGuardPriority(_Guard)
AND
DB_GOB_Checkpoint_Combat(_ID)
AND
DB_Is_InCombat(_Guard, _ID)
AND
NOT DB_Defeated(_Guard)
AND
NOT DB_CantMove(_Guard)
AND
NOT DB_GOB_Checkpoint_AlarmRunner(_)
AND
QRY_OnlyOnce("GOB_Checkpoint_SwarmGroupsReset")
THEN
NOT DB_GOB_Checkpoint_AlarmGuardPriority(_Guard);
DB_GOB_Checkpoint_AlarmRunner(_Guard);
SetEntityEvent(_Guard, "GOB_Checkpoint_GoToAlarm");

// alarm runners don't do generic combat ADs, they have a custom AD about the alarm
IF
EntityEvent(S_GOB_Checkpoint_Guard_004_a70d559c-24e3-409d-b964-34811092ecac, "GOB_Checkpoint_GoToAlarm")
AND
DB_CombatReact_AD_OnTurn(S_GOB_Checkpoint_Guard_004_a70d559c-24e3-409d-b964-34811092ecac, (DIALOGRESOURCE)GOB_Checkpoint_AD_Guard_004_TakingTurn_Combat_19436d7f-629e-0feb-7a39-4f006b33fcb3, 2)
THEN
NOT DB_CombatReact_AD_OnTurn(S_GOB_Checkpoint_Guard_004_a70d559c-24e3-409d-b964-34811092ecac, (DIALOGRESOURCE)GOB_Checkpoint_AD_Guard_004_TakingTurn_Combat_19436d7f-629e-0feb-7a39-4f006b33fcb3, 2);

IF
EntityEvent(S_GOB_Checkpoint_Guard_005_c82d1d05-0bf6-4dac-a484-e597644ed8cd, "GOB_Checkpoint_GoToAlarm")
AND
DB_CombatReact_AD_OnNextTurn(S_GOB_Checkpoint_Guard_005_c82d1d05-0bf6-4dac-a484-e597644ed8cd, (DIALOGRESOURCE)GOB_Checkpoint_AD_Guard_005_TakingTurn_Combat_b565bae8-c4b1-0129-9005-28f6a240dfa6)
THEN
NOT DB_CombatReact_AD_OnNextTurn(S_GOB_Checkpoint_Guard_005_c82d1d05-0bf6-4dac-a484-e597644ed8cd, (DIALOGRESOURCE)GOB_Checkpoint_AD_Guard_005_TakingTurn_Combat_b565bae8-c4b1-0129-9005-28f6a240dfa6);

IF
EntityEvent(_Guard, "GOB_Checkpoint_FindNewAlarmRaiser")
THEN
NOT DB_GOB_Checkpoint_AlarmRunner((CHARACTER)_Guard);
PROC_GOB_Checkpoint_FindAlarmRunner();

PROC
PROC_StateSet_Defeated(_Guard)
AND
DB_GOB_Checkpoint_AlarmRunner((CHARACTER)_Guard)
THEN
NOT DB_OnlyOnce("GOB_Checkpoint_SwarmGroupsReset");
NOT DB_GOB_Checkpoint_AlarmRunner((CHARACTER)_Guard);
PROC_GOB_Checkpoint_FindAlarmRunner();

IF
FlagSet(GOB_Checkpoint_Knows_AlarmIsBroken_c7ec1406-a7ed-4981-ca56-d40d01b066f1, NULL_00000000-0000-0000-0000-000000000000, _ID)
AND
DB_GlobalFlag(GOB_Checkpoint_State_AlarmNeedsToBeRaised_f5de774f-7900-4dc1-8cdc-a2ddb4d37dbf)
THEN
ClearFlag(GOB_Checkpoint_State_AlarmNeedsToBeRaised_f5de774f-7900-4dc1-8cdc-a2ddb4d37dbf, NULL_00000000-0000-0000-0000-000000000000);

IF
LeftCombat((CHARACTER)_Guard, _CombatID)
AND
DB_GOB_Checkpoint_Guards(_Guard)
AND
GetFlag(GOB_Checkpoint_State_RunningToAlarm_bb0185e1-7c5c-479f-a45c-b995d16f476e, _Guard, 1)
THEN
ClearFlag(GOB_Checkpoint_State_AlarmRaiserDesignated_764ac264-caa4-4b87-8328-06cbfc598c31, NULL_00000000-0000-0000-0000-000000000000); 
ClearFlag(GOB_Checkpoint_State_RunningToAlarm_bb0185e1-7c5c-479f-a45c-b995d16f476e, _Guard); 
//END_REGION Alarm System - clearing state for the Alarm Runner

//REGION Alarm System - Breaking
PROC
PROC_FlagReactionAfterDialog((CHARACTER)_Player, GOB_Checkpoint_Event_BreakAlarm_c8da8ee9-9bb9-ba63-f67c-9071f4777c6e)
AND
IsDestroyed(S_GOB_Checkpoint_AlarmSystem_17ec4677-d265-43b5-99d1-f62b7051b5f2, 0)
THEN
PROC_RemoveAllDialogEntriesForSpeaker(S_GOB_Checkpoint_AlarmSystem_17ec4677-d265-43b5-99d1-f62b7051b5f2);
Transform(S_GOB_Checkpoint_AlarmSystem_17ec4677-d265-43b5-99d1-f62b7051b5f2, DEC_Goblins_Camp_Drum_A_Broken_A_478a8561-c7ff-41a9-8319-a929a941de2c, POLYMORPH_a0ddddc8-255f-4014-9f63-d7608eb1c2a0);
SetFlag(GOB_Checkpoint_State_AlarmIsBroken_1ed76d7c-3abd-4faa-a50d-0194a7eb76f6, NULL_00000000-0000-0000-0000-000000000000);
ObjectTimerLaunch(_Player, "GOB_Checkpoint_AlarmDestroyed", 1000);

IF
ObjectTimerFinished((CHARACTER)_Player, "GOB_Checkpoint_AlarmDestroyed")
THEN
PROC_CrimeVandaliseCheckOwner(S_GOB_Checkpoint_AlarmSystem_17ec4677-d265-43b5-99d1-f62b7051b5f2, _Player, _Player, -1);
PlaySound(S_GOB_Checkpoint_AlarmSystem_17ec4677-d265-43b5-99d1-f62b7051b5f2,"GOB_Checkpoint_AlarmSystem_Destroy");

IF
DestroyingBy(S_GOB_Checkpoint_AlarmSystem_17ec4677-d265-43b5-99d1-f62b7051b5f2,_,_,_)
THEN
SetFlag(GOB_Checkpoint_State_AlarmIsBroken_1ed76d7c-3abd-4faa-a50d-0194a7eb76f6, NULL_00000000-0000-0000-0000-000000000000);

//END_REGION Alarm System - Breaking

//REGION Captured Goblin
IF
EntityEvent((CHARACTER)S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, "DEN_CapturedGoblin_GoblinEscaped")
THEN
PROC_AppearOutOfSightTo(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, S_GOB_Checkpoint_CapturedGoblinAppearPosition_0882ff23-2add-4568-94ca-9e52301dd0a1, S_DEN_RangerDen_SUB_50062397-bf9c-4765-9cbc-e40b5148f211, "GOB_Checkpoint_Event_CapturedGoblinAppeared");
NOT DB_CRIME_Guards_NoSummonBy(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb);
DB_GOB_Checkpoint_CapturedGoblinAppearing(1);

IF
WentOnStage((CHARACTER)S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, 1)
AND
DB_GOB_Checkpoint_CapturedGoblinAppearing(1)
THEN
CharacterStopCrime(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb,"DEN_CapturedGoblinFree",S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb);
NOT DB_GOB_Checkpoint_CapturedGoblinAppearing(1);

IF
EntityEvent((CHARACTER)S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, "GOB_Checkpoint_Event_CapturedGoblinAppeared")
THEN
PROC_CRIME_DisableDangerousShapeshiftReactions((CHARACTER)S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb);
SetHasDialog(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, 0);
SetCanJoinCombat(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, 1);
PROC_CharacterMoveTo(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, S_GOB_Checkpoint_CapturedGoblinWaitingPosition_0691f7e0-da49-4390-9c10-bcccd715d230, "Run", "GOB_Checkpoint_ArrivedToWaitingPosition");

IF
EntityEvent((CHARACTER)S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, "GOB_Checkpoint_ArrivedToWaitingPosition")
THEN
SetHasDialog(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, 0);
SetFlag(GOB_Checkpoint_State_WaitingForPlayer_1da9e319-6f34-48f8-875a-48bb863c81d1, S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb); 
LookFromTrigger(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, S_GOB_Checkpoint_CapturedGoblinWaitingPosition_0691f7e0-da49-4390-9c10-bcccd715d230, 0);
DB_SpotPlayers(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, "GOB_Checkpoint_CapturedGoblin", GOB_Checkpoint_Event_CapturedGoblinStartSpotting_61cac5f0-3b40-494c-8f4a-f6687a4e16d6, GOB_Checkpoint_Event_CapturedGoblinStopSpotting_ff6e93ae-1faa-4d89-ab77-753a93337a2b);
DB_SpotPlayers_SpotTrigger(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, "GOB_Checkpoint_CapturedGoblin", S_GOB_Checkpoint_CapturedGoblinWaitingArea_fe91aad2-1ddc-4a1a-8864-5892fa2c3e71);

PROC
PROC_SpotPlayers_Spotted(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb,"GOB_Checkpoint_CapturedGoblin", _Player)
THEN
ClearFlag(GOB_Checkpoint_State_WaitingForPlayer_1da9e319-6f34-48f8-875a-48bb863c81d1, S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb); 
LookAtEntity(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, _Player);
PROC_TryStartAD(DIALOGRESOURCEGUID_GOB_Checkpoint_AD_CapturedGoblinLeadingWay_db48f687-458a-fc47-3605-e4332a9c9619, S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb);
PROC_GOB_Checkpoint_MoveCapturedGoblinToCamp();

// If we already have access she skips the Checkpoint situation
PROC
PROC_GOB_Checkpoint_MoveCapturedGoblinToCamp()
AND
DB_GlobalFlag(GOB_Checkpoint_State_GainedAccess_46279ae3-9662-01b0-25a5-a46e1b80d057)
THEN
PROC_GOB_Checkpoint_MoveCapturedGoblinToSecondHalf();

// otherwise she'll be waiting at the checkpoint
PROC
PROC_GOB_Checkpoint_MoveCapturedGoblinToCamp()
AND
NOT DB_GlobalFlag(GOB_Checkpoint_State_GainedAccess_46279ae3-9662-01b0-25a5-a46e1b80d057)
THEN
SetFlag(GOB_Checkpoint_State_WantsToEnterCamp_3063f38f-b3d0-432d-a7c0-c440babb465d, S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb); 
PROC_CharacterMoveTo(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, S_GOB_Checkpoint_CapturedGoblinTalkingPosition_25d3b069-a9a6-4895-81c7-7405e1a70c01, "Run", "GOB_Checkpoint_ArrivedToTalkingPosition");

IF
EntityEvent(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, "GOB_Checkpoint_ArrivedToTalkingPosition")
AND
DB_GlobalFlag(GOB_Checkpoint_State_Swept_79c55820-8e11-419f-9a84-3db23eb83cb9)
THEN
PROC_TryStartAD(DIALOGRESOURCEGUID_GOB_Checkpoint_AD_CapturedGoblinRunsAway_50b02072-1657-5037-e63f-1099cfae6c62, S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb);
PROC_DisappearOutOfSight((CHARACTER)S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, "Run", 1, "");

IF
EntityEvent((CHARACTER)S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, "GOB_Checkpoint_ArrivedToTalkingPosition")
AND
NOT DB_GlobalFlag(GOB_Checkpoint_State_Swept_79c55820-8e11-419f-9a84-3db23eb83cb9)
AND
GetFlag(GOB_Checkpoint_State_GainedAccess_46279ae3-9662-01b0-25a5-a46e1b80d057, NULL_00000000-0000-0000-0000-000000000000, 0)
AND 
QRY_SpeakerIsAvailableAndInDialogRange(S_GOB_Checkpoint_Guard_001_6d69a347-9b3f-4b64-818e-013f849c6ae4, S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb)
THEN
PROC_ForceStopDialog(S_GOB_Checkpoint_Guard_001_6d69a347-9b3f-4b64-818e-013f849c6ae4);
PROC_ForceStopDialog(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb);
SetEntityEvent(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, "GOB_Checkpoint_CapturedGoblinADOn");

IF
EntityEvent((CHARACTER)S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, "GOB_Checkpoint_ArrivedToTalkingPosition")
AND
NOT DB_GlobalFlag(GOB_Checkpoint_State_Swept_79c55820-8e11-419f-9a84-3db23eb83cb9)
AND
GetFlag(GOB_Checkpoint_State_GainedAccess_46279ae3-9662-01b0-25a5-a46e1b80d057, NULL_00000000-0000-0000-0000-000000000000, 1)
THEN
PROC_GOB_Checkpoint_MoveCapturedGoblinToSecondHalf();

IF
AutomatedDialogEnded(GOB_Checkpoint_AD_CapturedGoblinGivingAccess_e0910827-f308-d526-7eeb-a40af69f75ae, _)
THEN
PROC_GOB_Checkpoint_MoveCapturedGoblinToSecondHalf();

IF
AutomatedDialogRequestFailed(GOB_Checkpoint_AD_CapturedGoblinGivingAccess_e0910827-f308-d526-7eeb-a40af69f75ae, _)
THEN
SetFlag(GOB_Checkpoint_State_GainedAccess_46279ae3-9662-01b0-25a5-a46e1b80d057, NULL_00000000-0000-0000-0000-000000000000);
PROC_GOB_Checkpoint_MoveCapturedGoblinToSecondHalf();

QRY
QRY_GOB_Checkpoint_CapturedGoblinWaitingAtCheckpoint()
AND
GetFlag(GOB_Checkpoint_State_WantsToEnterCamp_3063f38f-b3d0-432d-a7c0-c440babb465d, S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, 1)
AND
QRY_SpeakerIsAvailableAndInDialogRange(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, S_GOB_Checkpoint_Guard_001_6d69a347-9b3f-4b64-818e-013f849c6ae4)
THEN
DB_NOOP(1);

PROC
PROC_GOB_Checkpoint_StartThreewayDialogWithCapturedGoblin((CHARACTER)_Player)
AND
NOT QRY_StartDialog(DIALOGRESOURCEGUID_GOB_CheckpointThreeWayDialogWithCapturedGoblin_66247460-b5d8-095b-6a46-1c52ad952e6f, S_GOB_Checkpoint_Guard_001_6d69a347-9b3f-4b64-818e-013f849c6ae4, S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, _Player)
THEN
PROC_ForceStopDialog(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb);
PROC_TryStartAD(DIALOGRESOURCEGUID_GOB_Checkpoint_AD_CapturedGoblinGivingAccess_e0910827-f308-d526-7eeb-a40af69f75ae, S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb);

PROC
PROC_FlagReactionAfterDialog(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, GOB_Checkpoint_Event_MoveToCamp_d7f21056-f1aa-4b4e-5626-c44de303d407)
THEN
PROC_GOB_Checkpoint_MoveCapturedGoblinToSecondHalf();

PROC
PROC_GOB_Checkpoint_MoveCapturedGoblinToSecondHalf()
AND
DB_GlobalFlag((FLAG)GOB_GoblinThroneCheckpoint_Pass_a848a6f2-43d6-4e6e-8e17-55d82c1f180b)
THEN
SetEntityEvent(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, "GOB_Checkpoint_CapturedGoblinADOff");
ClearFlag(GOB_Checkpoint_State_WantsToEnterCamp_3063f38f-b3d0-432d-a7c0-c440babb465d, S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb); 
PROC_CharacterMoveTo(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, (TRIGGER)S_GOB_CapturedGoblin_PositionAtDrow_6ec111da-a53a-447a-a29e-8ab4963c0d16, "Run", "GOB_CapturedGoblin_Event_ArrivedToDrow");

PROC
PROC_GOB_Checkpoint_MoveCapturedGoblinToSecondHalf()
AND
NOT DB_GlobalFlag((FLAG)GOB_GoblinThroneCheckpoint_Pass_a848a6f2-43d6-4e6e-8e17-55d82c1f180b)
THEN
SetEntityEvent(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, "GOB_Checkpoint_CapturedGoblinADOff");
ClearFlag(GOB_Checkpoint_State_WantsToEnterCamp_3063f38f-b3d0-432d-a7c0-c440babb465d, S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb); 
PROC_CharacterMoveTo(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, S_GOB_CaptureGoblin_PositionInSecondHalf_246b4bdf-3c83-4854-9b32-4020f98d9d22, "Run", "GOB_CapturedGoblin_Event_ArrivedToSecondHalf");

IF
EntityEvent(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, "GOB_CapturedGoblin_Event_ArrivedToSecondHalf")
THEN
SetHasDialog(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, 1);
SetFlag((FLAG)GOB_GoblinThroneCheckpoint_State_SazzaWaitsAccess_8671f643-37ff-4634-81bb-7cbc809d524d, NULL_00000000-0000-0000-0000-000000000000);
LookFromTrigger(S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, S_GOB_CaptureGoblin_PositionInSecondHalf_246b4bdf-3c83-4854-9b32-4020f98d9d22, 0);

// in case one of the players is in a dialog with the main guard when the captured goblin arrives
IF
DialogEnded(DIALOGRESOURCEGUID_GOB_Checkpoint_Guard001_4832f6ad-2b2e-203e-42ef-9837c8eb8146, _ID)
AND
GetFlag(GOB_Checkpoint_State_WantsToEnterCamp_3063f38f-b3d0-432d-a7c0-c440babb465d, S_DEN_CapturedGoblin_783d7572-a846-455f-b686-247a95263ebb, 1)
AND
DB_DialogPlayers(_ID, _Player, 1)
THEN
PROC_GOB_Checkpoint_StartThreewayDialogWithCapturedGoblin((CHARACTER)_Player);
//END_REGION Captured Goblin

//REGION Hostile Actions

PROC
PROC_FlagReactionAfterDialog(S_GOB_Checkpoint_Guard_001_6d69a347-9b3f-4b64-818e-013f849c6ae4, GOB_Checkpoint_Event_MakeBlind_010f875d-64fc-2699-fdfd-5621667c1838)
THEN
ApplyStatus(S_GOB_Checkpoint_Guard_001_6d69a347-9b3f-4b64-818e-013f849c6ae4, "BLINDNESS", 15.0, 1);
ClearFlag(GOB_Checkpoint_Event_MakeBlind_010f875d-64fc-2699-fdfd-5621667c1838, S_GOB_Checkpoint_Guard_001_6d69a347-9b3f-4b64-818e-013f849c6ae4); 

IF
DB_Dead(S_GOB_Checkpoint_Worg_001_e712ad95-2107-4def-a22d-0afb268b6a63)
AND
DB_GOB_Checkpoint_Combat(_CombatID)
AND
GetDistanceTo(S_GOB_Checkpoint_Guard_001_6d69a347-9b3f-4b64-818e-013f849c6ae4, S_GOB_Checkpoint_Worg_001_e712ad95-2107-4def-a22d-0afb268b6a63, _Dist)
AND
_Dist < 20
AND
QRY_OnlyOnce("GOB_Checkpoint_ReactOnWorgsDeath")
THEN
PROC_TryStartAD(GOB_Checkpoint_AD_Guard001_WorgDeath_5474e437-bf33-19d0-a151-77584bd0db4d, S_GOB_Checkpoint_Guard_001_6d69a347-9b3f-4b64-818e-013f849c6ae4);
//END_REGION Hostile Actions

//REGION Backup Goblins
// those goblins don't care about you trespassing the area behind the main checkpoint
// they are drunk and if you are there -  then the main guards allowed you to be there
IF
DB_GOB_Checkpoint_Backup(_Goblin, _, _, _)
THEN
PROC_CharacterDisableCrime(_Goblin, "Trespassing");

PROC
PROC_GOB_Checkpoint_SendBackupToCheckpoint()
AND
DB_GlobalFlag(GOB_Checkpoint_State_BackupAnnoyed_ca4fec38-234e-4af1-a58a-4722ee3fc1e6)
AND
NOT DB_Defeated(S_GOB_Checkpoint_Backup_001_87bc228e-30d2-4f23-a96e-7e3569a4fb6c)
THEN
PROC_TryStartAD(GOB_Checkpoint_AD_BackupAnnoyed_ef8e5cbe-9665-b52e-840b-d45a4fdd987d, S_GOB_Checkpoint_Backup_001_87bc228e-30d2-4f23-a96e-7e3569a4fb6c);

PROC
PROC_GOB_Checkpoint_SendBackupToCheckpoint()
THEN
DB_CorpseLooting_ClearRedOutlineOnFactionGroupTagged("WLD_Main_A","Act1_GOB_Checkpoint",(FACTION)ACT1_GOB_CheckpointBackup_ea8f51bb-4fd3-36f9-0674-5c845474b66e,(TAG)PERMA_DEFEATED_867f3a1e-1e4b-48c2-869e-343415231727);
NOT DB_CorpseLooting_ClearRedOutlineOnFactionGroupTagged("WLD_Main_A","Act1_GOB_Checkpoint_Backup",(FACTION)ACT1_GOB_CheckpointBackup_ea8f51bb-4fd3-36f9-0674-5c845474b66e,(TAG)PERMA_DEFEATED_867f3a1e-1e4b-48c2-869e-343415231727);

PROC
PROC_GOB_Checkpoint_SendBackupToCheckpoint()
AND
NOT DB_GlobalFlag(GOB_Checkpoint_State_BackupAnnoyed_ca4fec38-234e-4af1-a58a-4722ee3fc1e6)
AND
DB_GOB_Checkpoint_Backup(_Goblin, _, _Point, _)
AND
NOT DB_PermaDefeated(_Goblin)
THEN
SetEntityEvent(_Goblin, "ClearPeaceReturn", 1);
PROC_ForceStopDialog(_Goblin);
PROC_CharacterDisableCrime(_Goblin, "GOB_Checkpoint_WarPaint");
PROC_NotifyWhenReadyToMoveOn(_Goblin, "GOB_Checkpoint_Event_BackupReadyToMove");

PROC
PROC_ReadyToMoveOn(_Goblin, "GOB_Checkpoint_Event_BackupReadyToMove")
AND
DB_GOB_Checkpoint_Backup(_Goblin, _, _Point, _)
THEN
PROC_CharacterMoveTo(_Goblin, _Point, "Run", "GOB_Checkpoint_Event_BackupArrived");

IF
EntityEvent((CHARACTER)_Goblin, "GOB_Checkpoint_Event_BackupArrived")
AND
DB_GOB_Checkpoint_Backup(_Goblin, _, _AtCheckpoint, _)
THEN
LookFromTrigger(_Goblin, _AtCheckpoint, 0);

IF
EntityEvent(S_GOB_Checkpoint_Backup_001_87bc228e-30d2-4f23-a96e-7e3569a4fb6c, "GOB_Checkpoint_Event_BackupArrived")
AND
NOT DB_Is_InCombat(S_GOB_Checkpoint_Guard_001_6d69a347-9b3f-4b64-818e-013f849c6ae4, _)
AND
NOT DB_PermaDefeated(S_GOB_Checkpoint_Guard_001_6d69a347-9b3f-4b64-818e-013f849c6ae4)
THEN
LookAtEntity(S_GOB_Checkpoint_Backup_001_87bc228e-30d2-4f23-a96e-7e3569a4fb6c, S_GOB_Checkpoint_Guard_001_6d69a347-9b3f-4b64-818e-013f849c6ae4);
LookAtEntity(S_GOB_Checkpoint_Guard_001_6d69a347-9b3f-4b64-818e-013f849c6ae4, S_GOB_Checkpoint_Backup_001_87bc228e-30d2-4f23-a96e-7e3569a4fb6c);

IF
EntityEvent(_Goblin, "GOB_Checkpoint_Event_BackupArrived")
THEN
SetHasDialog(_Goblin, 0);

IF
EntityEvent(_Goblin, "GOB_Checkpoint_Event_BackupArrived")
AND
DB_GlobalFlag((FLAG)GOB_Checkpoint_State_Swept_79c55820-8e11-419f-9a84-3db23eb83cb9)
AND
QRY_OnlyOnce("GOB_Checkpoint_BackupArrivedAllDead")
THEN
PROC_SetRelationToPlayers((FACTION)ACT1_GOB_CheckpointBackup_ea8f51bb-4fd3-36f9-0674-5c845474b66e, 0);
PROC_GlobalSetFlagAndCache((FLAG)GOB_Checkpoint_State_BackupReplacedGuards_52b85601-cbfc-420d-b9b7-8a643faf80b8);


IF
DB_GlobalFlag((FLAG)GOB_Checkpoint_State_Swept_79c55820-8e11-419f-9a84-3db23eb83cb9)
AND
DB_GOB_Checkpoint_Backup(_Goblin, _, _, _)
AND
IsInTrigger(_Goblin, S_GOB_Checkpoint_ReplacingGuardsArea_c7fb503f-d499-4c74-bbe2-fc7efbfa09ad, 1)
AND
QRY_OnlyOnce("GOB_Checkpoint_BackupArrivedAllDead")
THEN
PROC_SetRelationToPlayers((FACTION)ACT1_GOB_CheckpointBackup_ea8f51bb-4fd3-36f9-0674-5c845474b66e, 0);
PROC_GlobalSetFlagAndCache((FLAG)GOB_Checkpoint_State_BackupReplacedGuards_52b85601-cbfc-420d-b9b7-8a643faf80b8);

IF
AutomatedDialogEnded(GOB_Checkpoint_AD_BackupArrivedToParty_bca1d2c7-eac7-b181-ce94-30e4c8127dd3, _ID)
THEN
PROC_GOB_Checkpoint_ReturnBackup();

IF
AutomatedDialogRequestFailed(GOB_Checkpoint_AD_BackupArrivedToParty_bca1d2c7-eac7-b181-ce94-30e4c8127dd3, _ID)
THEN
PROC_GOB_Checkpoint_ReturnBackup();

PROC
PROC_GOB_Checkpoint_ReturnBackup()
AND
NOT DB_GlobalFlag((FLAG)GOB_Checkpoint_State_Swept_79c55820-8e11-419f-9a84-3db23eb83cb9)
AND
DB_GOB_Checkpoint_Backup(_Goblin, _ReturnPosition, _, _Seat)
THEN
PROC_CharacterMoveTo(_Goblin, _ReturnPosition, "Run", "GOB_Checkpoint_Event_BackupReturned");

PROC
PROC_GOB_Checkpoint_ReturnBackup()
AND
DB_GlobalFlag((FLAG)GOB_Checkpoint_State_Swept_79c55820-8e11-419f-9a84-3db23eb83cb9)
THEN
PROC_SetRelationToPlayers((FACTION)ACT1_GOB_CheckpointBackup_ea8f51bb-4fd3-36f9-0674-5c845474b66e, 0);
PROC_GlobalSetFlagAndCache((FLAG)GOB_Checkpoint_State_BackupReplacedGuards_52b85601-cbfc-420d-b9b7-8a643faf80b8);

IF
EntityEvent((CHARACTER)_Goblin, "GOB_Checkpoint_Event_BackupReturned")
THEN
PROC_CharacterEnableCrime(_Goblin, "GOB_Checkpoint_WarPaint");
SetHasDialog(_Goblin, 1);

IF
DB_PermaDefeated(_Goblin)
AND
DB_GOB_Checkpoint_Backup((CHARACTER)_Goblin, _, _, _)
AND
NOT DB_GlobalFlag(GOB_Checkpoint_State_BackupLostGuards_a15073e7-e859-4829-9e77-3032572d9684)
THEN
SetFlag(GOB_Checkpoint_State_BackupLostGuards_a15073e7-e859-4829-9e77-3032572d9684, NULL_00000000-0000-0000-0000-000000000000);
//END_REGION Backup Goblins

//REGION Checkpoint guards spot the party
IF
DialogEnded(_Dialog, _)
AND
DB_Dialogs(_Goblin, _Dialog)
AND
DB_GOB_Checkpoint_Guards((CHARACTER)_Goblin)
AND 
NOT DB_GlobalFlag(GOB_Checkpoint_State_PartySpotted_7cdc3478-c655-4997-8c9c-8b746e1ec1af)
THEN
SetFlag(GOB_Checkpoint_State_PartySpotted_7cdc3478-c655-4997-8c9c-8b746e1ec1af, NULL_00000000-0000-0000-0000-000000000000);
//END_REGION Checkpoint guards spot the party

//REGION Creating surfaces
IF
EnteredTrigger(_Player, S_GOB_Checkpoint_DangerousSurfaceTrigger_847d18ca-4188-4e86-8e53-86fdd5cdb740)
AND
DB_Players(_Player)
AND
QRY_OnlyOnce("GOB_Checkpoint_TrapSurface")
THEN
CreateSurface(S_GOB_Checkpoint_DangerousSurfacePoint_001_fdabb0a4-6114-42cd-837a-e6b9f81007d7, "SurfaceWeb", 4.0, -1.0); 
CreateSurface(S_GOB_Checkpoint_DangerousSurfacePoint_002_f399e857-1394-4df0-ad8a-94f666fc9e90, "SurfaceWeb", 2.0, -1.0); 
//END_REGION Creating surfaces

//REGION Alarm System Crimes
IF
FlagSet(GOB_Checkpoint_State_GainedAccess_46279ae3-9662-01b0-25a5-a46e1b80d057, NULL_00000000-0000-0000-0000-000000000000, _)
THEN
ClearOwnership(S_GOB_Checkpoint_AlarmSystem_17ec4677-d265-43b5-99d1-f62b7051b5f2);

IF
FlagSet(GOB_Checkpoint_State_GainedAccess_46279ae3-9662-01b0-25a5-a46e1b80d057, NULL_00000000-0000-0000-0000-000000000000, _)
AND
DB_GOB_Checkpoint_Guards(_Guard)
THEN
DB_NPC_CrimeAttitude_DoNotChange(_Guard, "VandaliseNoOwner");

// WARNING
QRY
QRY_CrimeGetCustomWarning((CHARACTER)_Guard, _VandalismCrime, _Dialog, _CrimeID)
AND
CrimeHasEvidence(_CrimeID, S_GOB_Checkpoint_AlarmSystem_17ec4677-d265-43b5-99d1-f62b7051b5f2, 1)
AND
CrimeGetCriminal(_CrimeID, 1, _Player)
AND
DB_Players(_Player)
AND
DB_GOB_Checkpoint_AlarmVandalizeReactions(_Guard, _CustomDialog)
THEN
DB_CrimeWarning_CustomDialog((CHARACTER)_Guard, _CrimeID, _CustomDialog);

// ARREST
QRY
QRY_CrimeGetCustomArrestDialogCustom(_Guard, _CrimeID, _ArrestDialog, _Player,_ , _, _)
AND
DB_Players(_Player)
AND
CrimeHasEvidence(_CrimeID, S_GOB_Checkpoint_AlarmSystem_17ec4677-d265-43b5-99d1-f62b7051b5f2, 1)
AND
CrimeGetCriminal(_CrimeID, 1, _Player)
AND
DB_GOB_Checkpoint_AlarmVandalizeReactions(_Guard, _CustomDialog)
THEN
DB_CrimeArrest_CustomDialog(_Guard, _CrimeID, _CustomDialog);

IF
DB_PermaDefeated(S_GOB_Checkpoint_Guard_001_Melee_01_6d69a347-9b3f-4b64-818e-013f849c6ae4)
THEN
PROC_CharacterEnableCrime(S_GOB_Checkpoint_Guard_002_Melee_02_022f8eb4-62ff-4770-b5b6-87eeed807f44, "VandaliseNoOwner");

// if we slash the drum then don't react if the players attack the drum again
IF
DialogEnded(_Dialog, _)
AND
DB_GOB_Checkpoint_AlarmVandalizeReactions(_, _Dialog)
AND
IsDestroyed(S_GOB_Checkpoint_AlarmSystem_17ec4677-d265-43b5-99d1-f62b7051b5f2, 0)
THEN
SetTag(S_GOB_Checkpoint_AlarmSystem_17ec4677-d265-43b5-99d1-f62b7051b5f2, IGNOREVANDALISE_7e9915ff-d7a4-4e52-9ac3-806075102ccc);
//END_REGION Alarm System Crimes

//REGION Misc
IF
FlagSet(GOB_Checkpoint_State_Swept_79c55820-8e11-419f-9a84-3db23eb83cb9, NULL_00000000-0000-0000-0000-000000000000, _)
THEN
PROC_GOB_Checkpoint_ResetAlarm();

// These have the MONSTER tag, so by default are not marked as owned
QRY
QRY_CorpseLooting_ShouldMakeOwned((CHARACTER)_Character)
AND
DB_GOB_Checkpoint_Worgs(_Character)
THEN
DB_NOOP(1);
//END_REGION Misc

//REGION Idle Behavior
IF
FlagSet(GOB_Checkpoint_Event_CommentedOnWorgs_51a3ff6c-3266-41a1-ae47-4336c1879213, NULL_00000000-0000-0000-0000-000000000000, _)
AND
NOT DB_CantTalk(S_GOB_Checkpoint_Worg_002_c546e62e-0a9d-4695-a5d4-19f2fb607f68)
THEN
ClearFlag(GOB_Checkpoint_Event_CommentedOnWorgs_51a3ff6c-3266-41a1-ae47-4336c1879213, NULL_00000000-0000-0000-0000-000000000000);
PROC_TryStartAD((DIALOGRESOURCE)GOB_Checkpoint_AD_Worg_002_0c240a5e-c6bc-8f65-0261-37299f3f9594, S_GOB_Checkpoint_Worg_002_c546e62e-0a9d-4695-a5d4-19f2fb607f68);
//END_REGION

//REGION Peaceful Resolution XP
PROC
PROC_GlobalFlagReactionAfterDialog(GOB_Checkpoint_State_GainedAccess_46279ae3-9662-01b0-25a5-a46e1b80d057)
AND
DB_GOB_Checkpoint_Guards(_Guard)
THEN
PROC_PeacefulResolve(_Guard);

PROC
PROC_GlobalFlagReactionAfterDialog(GOB_Checkpoint_State_GainedAccess_46279ae3-9662-01b0-25a5-a46e1b80d057)
AND
DB_GOB_Checkpoint_Worgs(_Worg)
THEN
PROC_PeacefulResolve(_Worg);
//END_REGION Secret quest

//REGION World Gossip Trigger
IF
DB_GlobalFlag(GOB_Checkpoint_State_GainedAccess_46279ae3-9662-01b0-25a5-a46e1b80d057)
AND
DB_GlobalFlag(GOB_Orpheus_State_HadVoiceOfAbsoluteEvent_9546407d-19e3-4f26-88af-5970896997d7)
THEN
PROC_RegisterWorldGossipTrigger(S_PartyBanterTrigger_GOB_BridgeWelcomed_be77230c-3aec-4642-b507-1a7c1c0c054f);

IF
DB_GlobalFlag(GOB_State_LeadersAreDead_a1c5b01f-4b7f-47ab-82b0-d24d9c6d8bc6)
THEN
PROC_UnregisterWorldGossipTrigger(S_PartyBanterTrigger_GOB_BridgeWelcomed_be77230c-3aec-4642-b507-1a7c1c0c054f);

IF
DB_GlobalFlag(GOB_FestivitiesArea_State_Swept_01863b85-a514-473a-9fa9-2869612480a2)
THEN
PROC_UnregisterWorldGossipTrigger(S_PartyBanterTrigger_GOB_BridgeWelcomed_be77230c-3aec-4642-b507-1a7c1c0c054f);
//END_REGION World Gossip Trigger

//REGION Force Hostility Events
IF
DestroyedBy((ITEM)BLD_Goblins_Platform_Wood_4W8D_B_Height_001_PLT_Platform_Goblin_001_06d17ade-e314-80d1-3262-d181b1abea77, _, _, _)
THEN
PROC_GOB_Checkpoint_MakeCheckpointHostile();

IF
DestroyedBy(S_GOB_Checkpoint_CMB_BoulderRope_3705c29b-50fb-405d-a197-bb4f01253ab2, _, _, _)
THEN
PROC_GOB_Checkpoint_MakeCheckpointHostile();

PROC
PROC_StateSet_Defeated(_Worg)
AND
DB_GOB_Checkpoint_Worgs((CHARACTER)_Worg)
THEN
PROC_GOB_Checkpoint_MakeCheckpointHostile();

PROC
PROC_StateSet_Defeated(S_GOB_Checkpoint_Guard_001_6d69a347-9b3f-4b64-818e-013f849c6ae4)
THEN
PROC_GOB_Checkpoint_MakeCheckpointHostile();
//END_REGION Force Hostility Events

//REGION Entered the festivities gives access to the Checkpoint
IF
EnteredTrigger(_Player, S_GOB_Festivities_BingeArea_f4a4031d-7e0c-45b8-970b-47c62d4908d8)
AND
QRY_OnlyOnce("GOB_Checkpoint_GainedAccess")
THEN
SetFlag(GOB_Checkpoint_State_GainedAccess_46279ae3-9662-01b0-25a5-a46e1b80d057, NULL_00000000-0000-0000-0000-000000000000);
//END_REGION Entered the festivities gives access to the Checkpoint

//REGION War Drum
PROC
PROC_BlockUseOfItem(_Player, S_GOB_Checkpoint_AlarmSystem_17ec4677-d265-43b5-99d1-f62b7051b5f2)
AND
DB_Players(_Player)
AND
HasActiveStatus(S_GOB_Checkpoint_AlarmSystem_17ec4677-d265-43b5-99d1-f62b7051b5f2, "SILENCED", 1)
THEN
DB_CustomUseItemResponse(_Player, S_GOB_Checkpoint_AlarmSystem_17ec4677-d265-43b5-99d1-f62b7051b5f2, 0);
PROC_PlayCantUseItemAD(_Player);
//END_REGION War Drum

//REGION Debug
IF
TextEvent("gc_sendbackup")
THEN
PROC_GOB_Checkpoint_SendBackupToCheckpoint();
//END_REGION

//REGION Goal Completion
PROC
PROC_LevelLoadedOnce("BGO_Main_A")
THEN
GoalCompleted;
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "Act1"
