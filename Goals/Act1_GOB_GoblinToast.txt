Version 1
SubGoalCombiner SGC_AND
INITSECTION
DB_Dialogs((CHARACTER)S_GOB_Festivities_Goblin_004_e63401de-04ea-40b6-a988-b2f90a90f748, (DIALOGRESOURCE)GOB_Festivities_Goblin004_f623cf7f-49df-d597-779c-076b9e7d9399);

DB_GOB_GoblinToast_MaxPoisonedGoblins(3);

DB_GOB_GoblinToast_GoblinsToPoison((CHARACTER)S_GOB_Festivities_Goblin_001_774c78ed-1227-48f9-812e-aac0021c71bf, 2000);
DB_GOB_GoblinToast_GoblinsToPoison(S_GOB_Festivities_Goblin_004_e63401de-04ea-40b6-a988-b2f90a90f748, 1000);
DB_GOB_GoblinToast_GoblinsToPoison(S_GOB_Festivities_Goblin_005_a955aea9-9040-4d4c-9264-e46e385dea94, 2500);
DB_GOB_GoblinToast_GoblinsToPoison(S_GOB_Festivities_Goblin_006_f3f416d1-b946-4019-95ba-7053f63dd776, 2700);
DB_GOB_GoblinToast_GoblinsToPoison(S_GOB_Festivities_Goblin_007_10a00987-1dbe-4540-aa34-e96976c7bac0, 3000);
DB_GOB_GoblinToast_GoblinsToPoison(S_GOB_RoastingDwarfOperator_001_3837d519-dc92-459c-ab2d-1eac0b208fc7, 1700);
DB_GOB_GoblinToast_CommentAfterPoison(3, 1000, 4000);
DB_GOB_GoblinToast_CommentAfterPoison_CountDeaths(0);
// added later
// DB_GOB_GoblinToast_GoblinsToPoison(S_GOB_PartyingGoblin_000_69ab2a7d-9035-4e4e-97e5-2d005c9662ee, 11000);

DB_GOB_GoblinToast_ToastParticipants((CHARACTER)S_GOB_Festivities_Goblin_001_774c78ed-1227-48f9-812e-aac0021c71bf);
DB_GOB_GoblinToast_ToastParticipants(S_GOB_Festivities_Goblin_002_bb9c82a2-7ed9-45ed-99b6-58f84520fb8c);
DB_GOB_GoblinToast_ToastParticipants(S_GOB_Festivities_Goblin_003_0296a9f6-b2bc-46a0-8632-ba72679a36d3);
DB_GOB_GoblinToast_ToastParticipants(S_GOB_Festivities_Goblin_005_a955aea9-9040-4d4c-9264-e46e385dea94);
DB_GOB_GoblinToast_ToastParticipants(S_GOB_Festivities_Goblin_006_f3f416d1-b946-4019-95ba-7053f63dd776);
DB_GOB_GoblinToast_ToastParticipants(S_GOB_Festivities_Goblin_007_10a00987-1dbe-4540-aa34-e96976c7bac0);
DB_GOB_GoblinToast_ToastParticipants(S_GOB_RoastingDwarfOperator_000_1fe911f8-c9c9-4405-83fa-d343d59c7be9);
DB_GOB_GoblinToast_ToastParticipants(S_GOB_RoastingDwarfOperator_001_3837d519-dc92-459c-ab2d-1eac0b208fc7);

// added later
// DB_GOB_GoblinToast_ToastParticipants(S_GOB_PartyingGoblin_000_69ab2a7d-9035-4e4e-97e5-2d005c9662ee);
// in case Drunk Goblin is not dead: DB_GOB_GoblinToast_ToastParticipants(S_GOB_PartyingGoblin_001_4aa22ae0-1f97-42e3-8fd7-474f2f3b7269);
// DB_GOB_GoblinToast_ToastParticipants(S_GOB_PartyingGoblin_002_bedb5fe5-2fa7-42f4-82c0-dda23883ff7c);

DB_GOB_GoblinToast_Lead((CHARACTER)S_GOB_Festivities_Goblin_004_e63401de-04ea-40b6-a988-b2f90a90f748);
PROC_TriggerRegisterForPlayers(S_GOB_GoblinToast_ToastArea_d501d299-1d54-4795-b991-eddabac2fc5a);
PROC_TriggerRegisterForPlayers(S_GOB_GoblinToast_MainDialogueArea_73795d7a-a919-46a2-8433-c15011b34bf7);
DB_AddCharactersInTriggerToDialog(GOB_GoblinToast_c8b8655b-8e8d-ddad-0b5b-e2794fa11003, S_GOB_GoblinToast_MainDialogueArea_73795d7a-a919-46a2-8433-c15011b34bf7, 1, 0, 1);

DB_Inclusion_Object(S_GOB_Festivities_Goblin_006_f3f416d1-b946-4019-95ba-7053f63dd776,(FLAG)GOB_GoblinToast_Event_IncludeSecondGoblin_807f09bf-46ae-e8da-0111-4f92746b6ad0, (FLAG)NULL_00000000-0000-0000-0000-000000000000);
DB_Inclusion_Object(S_GOB_Festivities_Goblin_007_10a00987-1dbe-4540-aa34-e96976c7bac0,(FLAG)GOB_GoblinToast_Event_IncludeThirdGoblin_2537a9f2-0c49-5cd4-a7db-fcfaf6d0e8a1, (FLAG)NULL_00000000-0000-0000-0000-000000000000);
DB_Inclusion_Object(S_GOB_RoastingDwarfOperator_000_1fe911f8-c9c9-4405-83fa-d343d59c7be9,(FLAG)GOB_GoblinToast_Event_IncludeFourthGoblin_10d0e286-8cdd-4205-b535-75fc82eb80ab, (FLAG)NULL_00000000-0000-0000-0000-000000000000);
DB_Inclusion_NPCDialog((DIALOGRESOURCE)GOB_GoblinToast_c8b8655b-8e8d-ddad-0b5b-e2794fa11003,S_GOB_Festivities_Goblin_006_f3f416d1-b946-4019-95ba-7053f63dd776);
DB_Inclusion_NPCDialog((DIALOGRESOURCE)GOB_GoblinToast_c8b8655b-8e8d-ddad-0b5b-e2794fa11003,S_GOB_Festivities_Goblin_007_10a00987-1dbe-4540-aa34-e96976c7bac0);
DB_Inclusion_NPCDialog((DIALOGRESOURCE)GOB_GoblinToast_c8b8655b-8e8d-ddad-0b5b-e2794fa11003,S_GOB_RoastingDwarfOperator_000_1fe911f8-c9c9-4405-83fa-d343d59c7be9);

SetOnStage(S_Debug_GOB_GoblinToast_Poison_220322be-0c04-4bf3-8012-ad43c92d9b38, 0);
SetOnStage(S_Debug_GOB_GoblinToast_Invis_c2605218-07f9-4176-a387-2d74949caa80, 0);

DB_SpotPlayers(S_GOB_Festivities_Goblin_004_e63401de-04ea-40b6-a988-b2f90a90f748, "GOB_GoblinToast", GOB_GoblinToast_Event_StartSpotting_58170b7e-7795-462f-8d53-1a740b04e610, GOB_GoblinToast_Event_StopSpotting_fbfa3f56-a02f-486a-80a4-aaa5d7e4f2f9);
DB_SpotPlayers_SpotTrigger(S_GOB_Festivities_Goblin_004_e63401de-04ea-40b6-a988-b2f90a90f748, "GOB_GoblinToast", S_GOB_GoblinToast_ToastArea_d501d299-1d54-4795-b991-eddabac2fc5a);
PROC_SpotPlayers_StopSpotting(S_GOB_Festivities_Goblin_004_e63401de-04ea-40b6-a988-b2f90a90f748, "GOB_GoblinToast");

PROC_DeclareCounter("GOB_GoblinToast_PoisonedGoblins");

DB_GOB_GoblinToast_StateManager((FLAG)GOB_GoblinToast_State_CrowdGathered_0b99e023-2c0f-4a9d-8e37-5677f50ccd00);
DB_GOB_GoblinToast_StateManager(GOB_GoblinToast_State_ToastIsOn_99a0dc3a-289e-48b3-9710-60388f0d72ed);
DB_GOB_GoblinToast_StateManager(GOB_GoblinToast_State_ToastEnded_dbfb6871-4498-4050-b5f1-a0741cf30217);
DB_GOB_GoblinToast_StateManager(GOB_GoblinToast_State_RealizedPoison_0e867c08-b2b9-4f43-8260-168026663e2c);


//DB_GOB_Festivities_RefillDialogs(S_GOB_Festivities_Goblin_000_031e9fb7-136a-46c7-91d7-77ce3e20236a, (DIALOGRESOURCE)GOB_Festivities_AD_TakeRefill_000_e179676b-91d3-4e2c-ef75-04b0f4b2d9a8);
//DB_GOB_Festivities_RefillDialogs(S_GOB_Festivities_Goblin_001_774c78ed-1227-48f9-812e-aac0021c71bf, (DIALOGRESOURCE)GOB_Festivities_AD_TakeRefill_001_98c049a2-8e2a-4cec-d3dd-8b01c2b9bb8b);
//DB_GOB_Festivities_RefillDialogs(S_GOB_Festivities_Goblin_002_bb9c82a2-7ed9-45ed-99b6-58f84520fb8c, (DIALOGRESOURCE)GOB_Festivities_AD_TakeRefill_002_4d2a1c76-c355-90b4-87fc-c60734acbb6e);
//DB_GOB_Festivities_RefillDialogs(S_GOB_Festivities_Goblin_003_0296a9f6-b2bc-46a0-8632-ba72679a36d3, (DIALOGRESOURCE)GOB_Festivities_AD_TakeRefill_003_c7d307a6-2560-4e1d-a0fd-9f46f3783444);
//DB_GOB_Festivities_RefillDialogs(S_GOB_Festivities_Goblin_004_e63401de-04ea-40b6-a988-b2f90a90f748, (DIALOGRESOURCE)GOB_Festivities_AD_TakeRefill_004_efde1d4e-31e4-78e7-b92c-cdb65644d7ec);
//DB_GOB_Festivities_RefillDialogs(S_GOB_Festivities_Goblin_005_a955aea9-9040-4d4c-9264-e46e385dea94, (DIALOGRESOURCE)GOB_Festivities_AD_TakeRefill_005_a1608566-8827-e572-257e-6e81472a8ee9);
//DB_GOB_Festivities_RefillDialogs(S_GOB_Festivities_Goblin_006_f3f416d1-b946-4019-95ba-7053f63dd776, (DIALOGRESOURCE)GOB_Festivities_AD_TakeRefill_006_ec9e51c7-53eb-d1e2-2dea-71ab574adbf5);
//DB_GOB_Festivities_RefillDialogs(S_GOB_Festivities_Goblin_007_10a00987-1dbe-4540-aa34-e96976c7bac0, (DIALOGRESOURCE)GOB_Festivities_AD_TakeRefill_007_3bd25b49-c86e-d445-adfe-9e78028670f2);

DB_GlobalFlagReactionAfterDialog(GOB_GoblinToast_State_ConfrontedAboutPoisoning_2a1bfba9-36ec-49aa-8540-97cd87301592, (DIALOGRESOURCE)GOB_GoblinToast_PoisoningInterrogation_c0f43bec-7a24-c7ba-f392-1edc8d9034fc);

SetOnStage(S_GOB_GoblinToast_BeerSkullTub_Poisoned_f29614e3-0388-4331-8ca1-2aa2595ea61d,0);

DB_GOB_GoblinToast_Tub(S_GOB_GoblinToast_BeerSkullTub_43d2f409-e9cb-4bbe-974c-b1e2cce87562);

DB_CustomForbiddenItemCrimes(S_GOB_GoblinToast_BeerSkullTub_43d2f409-e9cb-4bbe-974c-b1e2cce87562,"GOB_Festivities_NoticedPoisoning","GOB_Festivities_NoticedPoisoning");
DB_CustomForbiddenItemCrimes(S_GOB_GoblinToast_BeerSkullTub_Poisoned_f29614e3-0388-4331-8ca1-2aa2595ea61d,"GOB_Festivities_NoticedPoisoning","GOB_Festivities_NoticedPoisoning");

DB_CRIME_AddressOwnerWithCombatFallback("GOB_Festivities_NoticedPoisoning");
DB_CRIME_AddressOwnerWithCombatFallback("GOB_Festivities_Poisoning");
KBSECTION
//REGION Debug
IF
TextEvent("debug_goblintoast_poison")
THEN
SetOnStage(S_GOB_GoblinToast_BeerSkullTub_43d2f409-e9cb-4bbe-974c-b1e2cce87562,0);
SetOnStage(S_GOB_GoblinToast_BeerSkullTub_Poisoned_f29614e3-0388-4331-8ca1-2aa2595ea61d,1);

IF
TextEvent("debug_goblintoast_spawnpoison")
THEN
SetOnStage(S_Debug_GOB_GoblinToast_Poison_220322be-0c04-4bf3-8012-ad43c92d9b38, 1);
SetOnStage(S_Debug_GOB_GoblinToast_Invis_c2605218-07f9-4176-a387-2d74949caa80, 1);
ClearOwnership(S_Debug_GOB_GoblinToast_Poison_220322be-0c04-4bf3-8012-ad43c92d9b38);
ClearOwnership(S_Debug_GOB_GoblinToast_Invis_c2605218-07f9-4176-a387-2d74949caa80);

IF
DB_GlobalFlag(Debug_GOB_GoblinToast_SpawnPoison_4b7f5af4-ba1f-40d5-a06b-e46e13a064f1)
THEN
SetOnStage(S_Debug_GOB_GoblinToast_Poison_220322be-0c04-4bf3-8012-ad43c92d9b38, 1);
SetOnStage(S_Debug_GOB_GoblinToast_Invis_c2605218-07f9-4176-a387-2d74949caa80, 1);
ClearOwnership(S_Debug_GOB_GoblinToast_Poison_220322be-0c04-4bf3-8012-ad43c92d9b38);
ClearOwnership(S_Debug_GOB_GoblinToast_Invis_c2605218-07f9-4176-a387-2d74949caa80);

IF
TextEvent("debug_poisoning")
AND
DB_Players(_Player)
THEN
PROC_CharacterRegisterCrime(_Player, "GOB_Festivities_Poisoning", NULL_00000000-0000-0000-0000-000000000000, NULL_00000000-0000-0000-0000-000000000000, 0);

IF
TextEvent("debug_poisoning_victim")
AND
DB_Players(_Player)
AND
DB_GOB_GoblinToast_Lead(_Toaster)
THEN
PROC_CharacterRegisterCrime(_Player, "GOB_Festivities_Poisoning", _Toaster, _Toaster, 0);

IF
TextEvent("goblin_beer_poisoned")
THEN
DB_GOB_GoblinToast_PoisonType("GOB_SMALLPOISON");
//END_REGION Debug

//REGION Stop Refills
IF
FlagSet(GOB_GoblinToast_State_RealizedPoison_0e867c08-b2b9-4f43-8260-168026663e2c, _, _)
THEN
SetFlag(GOB_GoblinToast_Event_NoMoreRefills_5929d40e-8867-2fc6-a0d9-6ab1a7a49696, NULL_00000000-0000-0000-0000-000000000000);

IF
DB_Destroyed(_BeerTub)
AND
DB_GOB_GoblinToast_Tub(_BeerTub)
THEN
SetFlag(GOB_GoblinToast_Event_NoMoreRefills_5929d40e-8867-2fc6-a0d9-6ab1a7a49696, NULL_00000000-0000-0000-0000-000000000000);
//END_REGION Stop Refills

//REGION Poison apply
PROC
PROC_GOB_GoblinToast_PoisonDieInstantly((CHARACTER)_Goblin)
AND
NOT DB_Dead(_Goblin)
THEN
DB_GOB_GoblinToast_PoisonedGoblins(_Goblin);
Die(_Goblin, DEATHTYPE.DoT, NULL_00000000-0000-0000-0000-000000000000, 0, 0);

PROC
PROC_GOB_GoblinToast_PoisonDieStatus((CHARACTER)_Goblin)
AND
NOT DB_Dead(_Goblin)
THEN
DB_GOB_GoblinToast_PoisonedGoblins(_Goblin);
Die(_Goblin, DEATHTYPE.DoT, NULL_00000000-0000-0000-0000-000000000000, 0, 0);

IF
EntityEvent((CHARACTER)_Goblin, "GOB_GoblinToast_DrinkPoisonedBeer")
AND
GetFlag(GOB_GoblinToast_State_CrowdGathered_0b99e023-2c0f-4a9d-8e37-5677f50ccd00, NULL_00000000-0000-0000-0000-000000000000, 0)
AND
GetFlag(GOB_GoblinToast_State_RealizedPoison_0e867c08-b2b9-4f43-8260-168026663e2c, NULL_00000000-0000-0000-0000-000000000000, 0)
THEN
PROC_GOB_GoblinToast_PoisonDieStatus(_Goblin);
//END_REGION Poison apply

//REGION Different methods of poisoning the tub
IF
RequestCanCombine(_Player,S_GOB_GoblinToast_BeerSkullTub_43d2f409-e9cb-4bbe-974c-b1e2cce87562,_Poison,_,_,_,_RequestID)
AND
DB_GOB_GoblinToast_CombineCachedFlag(_Flag)
THEN
NOT DB_GOB_GoblinToast_CombineCachedFlag(_Flag);

IF
RequestCanCombine(_Player,S_GOB_GoblinToast_BeerSkullTub_43d2f409-e9cb-4bbe-974c-b1e2cce87562,_Poison,_,_,_,_RequestID)
AND
GetStatString(_Poison, _Stats)
AND
DB_FOR_GoblinHuntPoison_PoisonFlags(_Stats,(FLAG)_Flag)
THEN
DB_GOB_GoblinToast_CombineCachedFlag(_Flag);

IF
Combined(S_GOB_GoblinToast_BeerSkullTub_43d2f409-e9cb-4bbe-974c-b1e2cce87562,_Poison,_,_,_,_Player,_)
AND
DB_GOB_GoblinToast_CombineCachedFlag(_Flag)
THEN
SetFlag((FLAG)_Flag, NULL_00000000-0000-0000-0000-000000000000, 0);
SetFlag((FLAG)GLO_GoblinHuntPoison_Quest_BeerPoisoned_0c261a18-68f7-4a4b-9e91-b0b5ef50f474, NULL_00000000-0000-0000-0000-000000000000, 0);
SetFlag((FLAG)GOB_GoblinToast_Quest_Poisoner_a6a1cdda-7b11-4d0b-9d1f-38abb688ef7d, _Player, 0);

IF
RequestCanCombine(_Player,S_GOB_GoblinToast_BeerSkullTub_43d2f409-e9cb-4bbe-974c-b1e2cce87562,_Poison,_,_,_,_RequestID)
AND
DB_GOB_GoblinToast_OwnersCached(_OrigOwner,_Owner)
THEN
NOT DB_GOB_GoblinToast_OwnersCached(_OrigOwner,_Owner);

IF
RequestCanCombine(_Player,S_GOB_GoblinToast_BeerSkullTub_43d2f409-e9cb-4bbe-974c-b1e2cce87562,_Poison,_,_,_,_RequestID)
AND
GetOriginalOwner(S_GOB_GoblinToast_BeerSkullTub_43d2f409-e9cb-4bbe-974c-b1e2cce87562,_OrigOwner)
AND
GetOwner(S_GOB_GoblinToast_BeerSkullTub_43d2f409-e9cb-4bbe-974c-b1e2cce87562,_Owner)
THEN
DB_GOB_GoblinToast_OwnersCached(_OrigOwner,_Owner);

IF
Combined(S_GOB_GoblinToast_BeerSkullTub_43d2f409-e9cb-4bbe-974c-b1e2cce87562,_,_,_,_,_Player,_NewTub)
AND
DB_GOB_GoblinToast_OwnersCached(_OrigOwner,_Owner)
THEN
NOT DB_GOB_GoblinToast_Tub(S_GOB_GoblinToast_BeerSkullTub_43d2f409-e9cb-4bbe-974c-b1e2cce87562);
DB_GOB_GoblinToast_Tub(_NewTub);
SetOriginalOwner(_NewTub,_OrigOwner);
SetOwner(_NewTub,_Owner);

// Applying Poisoned status to the tub or damaging it with Poison counts as poisoning the tub
IF
StatusApplied(S_GOB_GoblinToast_BeerSkullTub_43d2f409-e9cb-4bbe-974c-b1e2cce87562, "POISONED", _Poisoner, _)
AND
QRY_OnlyOnce("GOB_GoblinToast_TubPoisoned")
THEN
PROC_GOB_GoblinToast_PoisonTub(_Poisoner);

IF
AttackedBy(S_GOB_GoblinToast_BeerSkullTub_43d2f409-e9cb-4bbe-974c-b1e2cce87562, _Poisoner, _, "Poison", _, _, _)
AND
QRY_OnlyOnce("GOB_GoblinToast_TubPoisoned")
THEN
PROC_GOB_GoblinToast_PoisonTub(_Poisoner);

PROC
PROC_GOB_GoblinToast_PoisonTub((GUIDSTRING)_Poisoner)
THEN
PROC_GOB_GoblinToast_SetPoisonerFlag(_Poisoner);
PROC_GOB_GoblinToast_PretendCombinePoison();
SetFlag(GLO_GoblinHuntPoison_Quest_BeerPoisoned_0c261a18-68f7-4a4b-9e91-b0b5ef50f474, NULL_00000000-0000-0000-0000-000000000000);
SetFlag(GLO_GoblinHuntPoison_Quest_BeerPoisoned_BasicPoison_33a52748-6b1f-458c-9ae0-7a3aef8848c6, NULL_00000000-0000-0000-0000-000000000000);

PROC
PROC_GOB_GoblinToast_PretendCombinePoison()
THEN
SetOnStage(S_GOB_GoblinToast_BeerSkullTub_Poisoned_f29614e3-0388-4331-8ca1-2aa2595ea61d,1);

PROC
PROC_GOB_GoblinToast_PretendCombinePoison()
AND
GetOriginalOwner(S_GOB_GoblinToast_BeerSkullTub_43d2f409-e9cb-4bbe-974c-b1e2cce87562,_OrigOwner)
AND
GetOwner(S_GOB_GoblinToast_BeerSkullTub_43d2f409-e9cb-4bbe-974c-b1e2cce87562,_Owner)
THEN
SetOriginalOwner(S_GOB_GoblinToast_BeerSkullTub_Poisoned_f29614e3-0388-4331-8ca1-2aa2595ea61d,_OrigOwner);
SetOwner(S_GOB_GoblinToast_BeerSkullTub_Poisoned_f29614e3-0388-4331-8ca1-2aa2595ea61d,_Owner);

PROC
PROC_GOB_GoblinToast_PretendCombinePoison()
THEN
SetOnStage(S_GOB_GoblinToast_BeerSkullTub_43d2f409-e9cb-4bbe-974c-b1e2cce87562,0);

PROC
PROC_GOB_GoblinToast_SetPoisonerFlag((GUIDSTRING)_Poisoner)
AND
QRY_GOB_GoblinToast_IsPlayer(_Poisoner)
THEN
SetFlag(GOB_GoblinToast_Quest_Poisoner_a6a1cdda-7b11-4d0b-9d1f-38abb688ef7d, _Poisoner);

PROC
PROC_GOB_GoblinToast_SetPoisonerFlag((GUIDSTRING)_Poisoner)
AND
NOT QRY_GOB_GoblinToast_IsPlayer(_Poisoner)
AND
GetClosestAlivePlayer(S_GOB_GoblinToast_BeerSkullTub_43d2f409-e9cb-4bbe-974c-b1e2cce87562, _Player, _)
THEN
SetFlag(GOB_GoblinToast_Quest_Poisoner_a6a1cdda-7b11-4d0b-9d1f-38abb688ef7d, _Player);

QRY
QRY_GOB_GoblinToast_IsPlayer((GUIDSTRING)_Character)
AND
IsCharacter(_Character, 1)
AND
DB_Players((CHARACTER)_Character)
THEN
DB_NOOP(1);
//END_REGION Different methods of poisoning the tub

//REGION Beer posioned
IF
FlagSet(GOB_GoblinToast_Quest_Poisoner_a6a1cdda-7b11-4d0b-9d1f-38abb688ef7d, _Player, _)
AND
GetFlag(GOB_GoblinToast_Event_ToStations_0b555ee8-2b8e-3881-b35e-9811f6baf77a, NULL_00000000-0000-0000-0000-000000000000, 0)
THEN
StartVoiceBark(GOB_GoblinToast_VB_BoozePoisoned_97f7eef4-8300-9251-875a-72aed3eeaf53, (CHARACTER)_Player);

IF
FlagSet(GOB_GoblinToast_Quest_Poisoner_a6a1cdda-7b11-4d0b-9d1f-38abb688ef7d, (CHARACTER)_Player, _)
AND
GetFlag(GOB_GoblinToast_Event_ToStations_0b555ee8-2b8e-3881-b35e-9811f6baf77a, NULL_00000000-0000-0000-0000-000000000000, 0)
THEN
DB_GOB_GoblinToast_SuspiciousPlayers(_Player);

IF
FlagSet(GLO_GoblinHuntPoison_Quest_BeerPoisoned_0c261a18-68f7-4a4b-9e91-b0b5ef50f474, _, _)
AND
GetFlag(GOB_GoblinToast_Event_ToStations_0b555ee8-2b8e-3881-b35e-9811f6baf77a, NULL_00000000-0000-0000-0000-000000000000, 0)
THEN
DB_GOB_GoblinToast_PoisonType("GOB_SMALLPOISON");

IF
DB_PermaDefeated(_Goblin)
AND
DB_GOB_GoblinToast_PoisonedGoblins((CHARACTER)_Goblin)
THEN
SysClear("DB_GOB_GoblinToast_LookAtPoisonedGoblin", 1);
DB_GOB_GoblinToast_LookAtPoisonedGoblin(_Goblin);
ObjectTimerLaunch(_Goblin, "GOB_GoblinToast_IncreaseCounter", 500);

IF
ObjectTimerFinished(_, "GOB_GoblinToast_IncreaseCounter")
THEN
PROC_IncreaseCounter("GOB_GoblinToast_PoisonedGoblins");

PROC
PROC_CounterIncreased("GOB_GoblinToast_PoisonedGoblins", _Count)
AND
DB_GOB_GoblinToast_MaxPoisonedGoblins(_MaxCount)
AND
_MaxCount <= _Count
THEN
SetFlag(GOB_GoblinToast_State_RealizedPoison_0e867c08-b2b9-4f43-8260-168026663e2c, NULL_00000000-0000-0000-0000-000000000000);
//END_REGION Beer posioned


//REGION Toast Event
IF
FlagSet(GLO_GoblinHuntPoison_Quest_BeerPoisoned_0c261a18-68f7-4a4b-9e91-b0b5ef50f474, _, _)
AND
GetFlag(GOB_GoblinToast_Event_ToStations_0b555ee8-2b8e-3881-b35e-9811f6baf77a, NULL_00000000-0000-0000-0000-000000000000, 0)
AND
DB_GOB_GoblinToast_Lead(_Toaster)
AND
NOT DB_CantAct(_Toaster)
AND
GetFlag(GOB_Festivities_Behaviour_Absent_ed2fbbf4-42b3-4845-865d-39827dedb503,_Toaster,0)
THEN
TimerLaunch("GOB_GoblinToast_StartToastEvent", 1000);

IF
FlagSet(GLO_GoblinHuntPoison_Quest_BeerPoisoned_0c261a18-68f7-4a4b-9e91-b0b5ef50f474, _, _)
AND
GetFlag(GOB_GoblinToast_Event_ToStations_0b555ee8-2b8e-3881-b35e-9811f6baf77a, NULL_00000000-0000-0000-0000-000000000000, 0)
AND
DB_GOB_GoblinToast_Lead(_Toaster)
AND
NOT DB_CantMove(_Toaster)
AND
GetFlag(GOB_Festivities_Behaviour_Absent_ed2fbbf4-42b3-4845-865d-39827dedb503,_Toaster,1)
THEN
SetFlag(GOB_Festivities_Behaviour_StoryBusy_0cd6cbb4-303f-4da1-b75d-cc46beeda854,_Toaster);
PROC_CharacterMoveTo(_Toaster,S_GOB_Festivities_TableTrigger_004_98a91f82-4840-42ed-bdcd-5c43e6dc6dcd,"Walk","GOB_GoblinToast_ToasterReadyToInit");

IF
EntityEvent(_,"GOB_GoblinToast_ToasterReadyToInit")
THEN
TimerLaunch("GOB_GoblinToast_StartToastEvent", 1000);

IF
TimerFinished("GOB_GoblinToast_StartToastEvent")
AND
DB_GOB_GoblinToast_Lead(_Toaster)
AND
NOT DB_CantAct(_Toaster)
AND
NOT QRY_GOB_GoblinToast_ChickenChasePostpone()
THEN
DB_GOB_GoblinToast_ToastOngoing(1);
PROC_ForceStopDialog(_Toaster);
SetHasDialog(_Toaster, 0);
PROC_TryStartAD((DIALOGRESOURCE)GOB_GoblinToast_AD_WalkingTowardsToastPoint_6f801083-a823-3739-03a0-8859fac61ba9, _Toaster);
PROC_CharacterMoveTo(_Toaster, S_GOB_GoblinToast_ToastPoint_e363d352-2a2b-4c01-87e4-1494eb8a46ad, "Walk", "GOB_GoblinToast_MovedToSayToast");
SetFlag((FLAG)GOB_GoblinToast_State_CrowdGathered_0b99e023-2c0f-4a9d-8e37-5677f50ccd00, NULL_00000000-0000-0000-0000-000000000000);

IF
EntityEvent((CHARACTER)_Goblin, "GOB_GoblinToast_MovedToSayToast")
AND
DB_GOB_GoblinToast_Lead(_Toaster)
THEN
LookFromTrigger(_Toaster, S_GOB_GoblinToast_ToastPoint_e363d352-2a2b-4c01-87e4-1494eb8a46ad, 0);
SetHasDialog(_Toaster, 1);
ObjectTimerLaunch(_Toaster,"Timer_GOB_GoblinToast_StartWithoutPlayer",10000);
PROC_GOB_GoblinToast_StartSpotting();

PROC
PROC_GOB_GoblinToast_StartSpotting()
AND
DB_GOB_GoblinToast_Lead(_Toaster)
THEN
PROC_SpotPlayers_RestartSpotting(_Toaster, "GOB_GoblinToast");

IF
FlagCleared(GOB_ChickenChase_State_PlayingChase_34de58e6-ca4a-d171-c1ac-32821bb036ed, _, _)
AND
DB_GOB_GoblinToast_ToastWithMovementPostponed(1)
AND
DB_GOB_GoblinToast_Lead(_Toaster)
THEN
NOT DB_GOB_GoblinToast_ToastWithMovementPostponed(1);
DB_GOB_GoblinToast_ToastOngoing(1);
PROC_ForceStopDialog(_Toaster);
SetHasDialog(_Toaster, 0);
PROC_TryStartAD((DIALOGRESOURCE)GOB_GoblinToast_AD_WalkingTowardsToastPoint_6f801083-a823-3739-03a0-8859fac61ba9, _Toaster);
PROC_CharacterMoveTo(_Toaster, S_GOB_GoblinToast_ToastPoint_e363d352-2a2b-4c01-87e4-1494eb8a46ad, "Walk", "GOB_GoblinToast_MovedToSayToast");

// if the Chicken Chase started then we delay the Toast
IF
FlagSet(GOB_ChickenChase_State_PlayingChase_34de58e6-ca4a-d171-c1ac-32821bb036ed, _, _)
AND
DB_GOB_GoblinToast_ToastOngoing(1)
AND
DB_GOB_GoblinToast_Lead(_Toaster)
THEN
PROC_SpotPlayers_StopSpotting(_Toaster, "GOB_GoblinToast");
DB_GOB_GoblinToast_ToastWithMovementPostponed(1);

// when the Lead Toast goblin sees the player it tries to start a dialog, if it fails it restarts spotting
PROC
PROC_SpotPlayers_Spotted(_Toaster, "GOB_GoblinToast", _Player)
AND
DB_GOB_GoblinToast_Lead(_Toaster)
AND
NOT QRY_StartDialog(GOB_GoblinToast_c8b8655b-8e8d-ddad-0b5b-e2794fa11003, _Toaster, NULL_00000000-0000-0000-0000-000000000000, NULL_00000000-0000-0000-0000-000000000000, NULL_00000000-0000-0000-0000-000000000000, _Player)
AND
QRY_SpeakerIsAvailable(_Toaster)
THEN
PROC_SpotPlayers_RestartSpotting(_Toaster, "GOB_GoblinToast");

// otherwise we set the flag
IF
DialogStarted(GOB_GoblinToast_c8b8655b-8e8d-ddad-0b5b-e2794fa11003, _)
THEN
SetFlag((FLAG)GOB_GoblinToast_State_ToastIsOn_99a0dc3a-289e-48b3-9710-60388f0d72ed, NULL_00000000-0000-0000-0000-000000000000);

QRY
QRY_SelectCustomDialog(_Toaster, _Player)
AND
DB_GOB_GoblinToast_Lead((CHARACTER)_Toaster)
AND
DB_GOB_GoblinToast_ToastOngoing(1)
THEN
DB_SelectedDialog(GOB_GoblinToast_c8b8655b-8e8d-ddad-0b5b-e2794fa11003, _Toaster,
					NULL_00000000-0000-0000-0000-000000000000, NULL_00000000-0000-0000-0000-000000000000, NULL_00000000-0000-0000-0000-000000000000, _Player);

QRY
QRY_GOB_GoblinToast_ChickenChasePostpone()
AND
DB_GlobalFlag((FLAG)GOB_ChickenChase_State_PlayingChase_34de58e6-ca4a-d171-c1ac-32821bb036ed)
THEN
DB_GOB_GoblinToast_ToastWithMovementPostponed(1);

IF
DialogEnded(GOB_GoblinToast_c8b8655b-8e8d-ddad-0b5b-e2794fa11003, _)
AND
DB_GOB_GoblinToast_Lead(_Toaster)
THEN
PROC_GOB_GoblinToast_EndToast();

PROC
PROC_GOB_GoblinToast_EndToast()
THEN
ClearFlag(GOB_GoblinToast_State_ToastIsOn_99a0dc3a-289e-48b3-9710-60388f0d72ed, NULL_00000000-0000-0000-0000-000000000000);
ClearFlag(GOB_GoblinToast_State_CrowdGathered_0b99e023-2c0f-4a9d-8e37-5677f50ccd00, NULL_00000000-0000-0000-0000-000000000000);
PROC_SpotPlayers_StopSpotting(S_GOB_Festivities_Goblin_004_e63401de-04ea-40b6-a988-b2f90a90f748, "GOB_GoblinToast");
NOT DB_GOB_GoblinToast_ToastOngoing(1);
//END_REGION Toast

//REGION Toast without player
IF
DialogStarted(GOB_GoblinToast_c8b8655b-8e8d-ddad-0b5b-e2794fa11003, _)
AND
DB_GOB_GoblinToast_Lead(_Toaster)
THEN
ObjectTimerCancel(_Toaster, "Timer_GOB_GoblinToast_StartWithoutPlayer");
ObjectTimerCancel(_Toaster, "Timer_GOB_GoblinToast_CancelToast");

IF
ObjectTimerFinished(_Toaster,"Timer_GOB_GoblinToast_StartWithoutPlayer")
THEN
PROC_TryStartAD(GOB_GoblinToast_AD_SceneWithoutPlayer_4365d7df-3208-5640-6aab-7cc189a576b2,_Toaster,
S_GOB_Festivities_Goblin_006_f3f416d1-b946-4019-95ba-7053f63dd776,S_GOB_Festivities_Goblin_007_10a00987-1dbe-4540-aa34-e96976c7bac0);

IF
AutomatedDialogStarted(GOB_GoblinToast_AD_SceneWithoutPlayer_4365d7df-3208-5640-6aab-7cc189a576b2, _)
THEN
SetFlag((FLAG)GOB_GoblinToast_State_ToastIsOn_99a0dc3a-289e-48b3-9710-60388f0d72ed, NULL_00000000-0000-0000-0000-000000000000);

// if this flag is set in the Toast Without Player AD we disable Mirg's dialog
IF
FlagSet(GOB_GoblinToast_Event_SceneWithoutPlayerEnded_d9b0b56e-0d25-4c5c-a634-aced3c26d6b3, NULL_00000000-0000-0000-0000-000000000000, _)
THEN
SetHasDialog(S_GOB_Festivities_Goblin_004_e63401de-04ea-40b6-a988-b2f90a90f748, 0);

IF
AutomatedDialogEnded(GOB_GoblinToast_AD_SceneWithoutPlayer_4365d7df-3208-5640-6aab-7cc189a576b2,_)
AND
GetFlag(GOB_GoblinToast_Event_SceneWithoutPlayerEnded_d9b0b56e-0d25-4c5c-a634-aced3c26d6b3, NULL_00000000-0000-0000-0000-000000000000, 1)
THEN
PROC_GOB_GoblinToast_EndSceneWithoutPlayer();

// interruptions, attacking the goblins and Fleeing from combat for example
IF
AutomatedDialogEnded(GOB_GoblinToast_AD_SceneWithoutPlayer_4365d7df-3208-5640-6aab-7cc189a576b2,_)
AND
GetFlag(GOB_GoblinToast_Event_SceneWithoutPlayerEnded_d9b0b56e-0d25-4c5c-a634-aced3c26d6b3, NULL_00000000-0000-0000-0000-000000000000, 0)
THEN
ObjectTimerLaunch(S_GOB_Festivities_Goblin_004_e63401de-04ea-40b6-a988-b2f90a90f748, "Timer_GOB_GoblinToast_CancelToast", 3000); // the dialog might have ended because the player started the main dialog

IF
ObjectTimerFinished(S_GOB_Festivities_Goblin_004_e63401de-04ea-40b6-a988-b2f90a90f748, "Timer_GOB_GoblinToast_CancelToast")
THEN
PROC_GOB_GoblinToast_EndToast();

// we cancel the toast and disperse the crowd if Mirg can't start it (dead or anything else due to player's shenanigans)
IF
AutomatedDialogRequestFailed(GOB_GoblinToast_AD_SceneWithoutPlayer_4365d7df-3208-5640-6aab-7cc189a576b2,_)
THEN
PROC_GOB_GoblinToast_EndToast();

PROC
PROC_GOB_GoblinToast_EndSceneWithoutPlayer()
AND
DB_GOB_GoblinToast_Lead(_Toaster)
THEN
ObjectTimerLaunch(_Toaster, "Timer_GOB_GoblinToast_StartWithoutPlayerDelay", 1000);

// the AD_SceneWithoutPlayer might have ended because the player started the main Toast dialog
IF
ObjectTimerFinished((CHARACTER)_Toaster, "Timer_GOB_GoblinToast_StartWithoutPlayerDelay")
AND
DB_GOB_GoblinToast_Lead(_Toaster)
AND
NOT QRY_GOB_GoblinToast_ToasterInMainDialog(_Toaster)
THEN
SetFlag(GOB_GoblinToast_Event_ToastSuccess_8567a81c-abe6-cbea-0090-7b9af53aee39,NULL_00000000-0000-0000-0000-000000000000);
SetFlag(GOB_GoblinToast_ToastWasWithoutPlayer_d2fe6e01-7fb2-48d9-9e85-3153ee3799b2,NULL_00000000-0000-0000-0000-000000000000);
NOT DB_GOB_GoblinToast_CommentAfterPoison(3, 1000, 4000);
DB_GOB_GoblinToast_CommentAfterPoison(4, 4000, 8000);
PROC_SpotPlayers_StopSpotting(_Toaster, "GOB_GoblinToast");
PROC_GOB_GoblinToast_DrinkAndDieWithoutPlayer();

QRY
QRY_GOB_GoblinToast_ToasterInMainDialog((CHARACTER)_Toaster)
AND
DB_DialogNPCs(_ID, _Toaster, _)
AND
DB_DialogName(GOB_GoblinToast_c8b8655b-8e8d-ddad-0b5b-e2794fa11003, _ID)
THEN
DB_NOOP(1);

// delay for the animation to end
PROC
PROC_GOB_GoblinToast_DrinkAndDieWithoutPlayer()
THEN
ObjectTimerLaunch(S_GOB_Festivities_Coordinator_f2cd133a-8339-4043-9277-e5dd8fe93e5f, "Timer_GOB_GoblinToast_Aftermath", 6000);

PROC
PROC_GOB_GoblinToast_DrinkAndDieWithoutPlayer()
AND
DB_GOB_GoblinToast_ToastParticipants(_Goblin)
AND
IsInTrigger(_Goblin, S_GOB_GoblinToast_ToastDyingArea_d5f5a1a4-5a3f-411d-8e96-86dea301a508, 1)
AND
NOT DB_CantAct(_Goblin)
AND
Random(1000, _AnimationDelay)
THEN
SetHasDialog(_Goblin, 0);
ObjectTimerLaunch(_Goblin, "GOB_GoblinToast_DrinkingAnimationDelay", _AnimationDelay);

IF
ObjectTimerFinished(_Goblin, "GOB_GoblinToast_DrinkingAnimationDelay")
THEN
PlayAnimation(_Goblin, CUST_Drinking_01_fab141d9-e068-4f2e-ba44-699b6d9b3636, "");

PROC
PROC_GOB_GoblinToast_DrinkAndDieWithoutPlayer()
AND
DB_GOB_GoblinToast_Lead(_Goblin)
AND
IsInTrigger(_Goblin, S_GOB_GoblinToast_ToastDyingArea_d5f5a1a4-5a3f-411d-8e96-86dea301a508, 1)
AND
NOT DB_CantAct(_Goblin)
THEN
SetHasDialog(_Goblin, 0);
PlayAnimation(_Goblin, CUST_Drinking_01_fab141d9-e068-4f2e-ba44-699b6d9b3636, "");

IF
ObjectTimerFinished(S_GOB_Festivities_Coordinator_f2cd133a-8339-4043-9277-e5dd8fe93e5f, "Timer_GOB_GoblinToast_Aftermath")
AND
DB_GOB_GoblinToast_ToastParticipants(_Goblin)
THEN
SetHasDialog(_Goblin, 1);

IF
ObjectTimerFinished(S_GOB_Festivities_Coordinator_f2cd133a-8339-4043-9277-e5dd8fe93e5f, "Timer_GOB_GoblinToast_Aftermath")
THEN
ClearFlag((FLAG)GOB_GoblinToast_State_ToastIsOn_99a0dc3a-289e-48b3-9710-60388f0d72ed, NULL_00000000-0000-0000-0000-000000000000);
PROC_GOB_GoblinToast_SuccessAftermath();
//END_REGION Toast without player

//REGION Goblin Toast - completed success
///
/// SuccessAftermath -> CommentOnToast ["To more drinking!!"]
///   -> CommentOnPoison ["That's beer's got a kick"]
///   -> CommentOnDying ["Hey, they aren't breathing"]
///   -> CommentOnStrangersWithDelay -> CommentOnStrangers ["Must been those strangers"]
///   -> RegisterPoisoning(WithDelay)
///
IF
DialogEnded(GOB_GoblinToast_c8b8655b-8e8d-ddad-0b5b-e2794fa11003, _)
AND
DB_GlobalFlag((FLAG)GOB_GoblinToast_Event_ToastSuccess_8567a81c-abe6-cbea-0090-7b9af53aee39)
THEN
PROC_GOB_GoblinToast_SuccessAftermath();

PROC
PROC_GOB_GoblinToast_SuccessAftermath()
THEN
DB_GOB_GoblinToast_SuccessAftermath(1);

PROC
PROC_GOB_GoblinToast_SuccessAftermath()
THEN
SetFlag(GOB_GoblinToast_State_ToastEnded_dbfb6871-4498-4050-b5f1-a0741cf30217, NULL_00000000-0000-0000-0000-000000000000);

// take the guys from the internal DB and check who is in trigger and who is not in the DB to poison
PROC
PROC_GOB_GoblinToast_SuccessAftermath()
AND
DB_GOB_GoblinToast_GoblinsToPoison(_Goblin, _Delay)
AND
IsInTrigger(_Goblin, S_GOB_GoblinToast_ToastDyingArea_d5f5a1a4-5a3f-411d-8e96-86dea301a508, 1)
AND
NOT DB_PermaDefeated((CHARACTER)_Goblin)
THEN
ObjectTimerLaunch(_Goblin, "GOB_GoblinToast_DieAfterToast", _Delay);

PROC
PROC_GOB_GoblinToast_SuccessAftermath()
AND
DB_GLO_DefeatCounter(_Goblin, "GOB_FestivitiesArea")
AND
IsInTrigger(_Goblin, S_GOB_GoblinToast_ToastDyingArea_d5f5a1a4-5a3f-411d-8e96-86dea301a508, 1)
AND
NOT DB_GOB_GoblinToast_GoblinsToPoison(_Goblin, _)
AND
NOT DB_PermaDefeated((CHARACTER)_Goblin)
AND
Random(2000, _DelayTemp)
AND
IntegerSum(_DelayTemp, 1000, _Delay)
THEN
ObjectTimerLaunch(_Goblin, "GOB_GoblinToast_DamageAfterToast", _Delay);

IF
ObjectTimerFinished((CHARACTER)_Goblin, "GOB_GoblinToast_DieAfterToast")
THEN
PROC_GOB_GoblinToast_PoisonDieInstantly(_Goblin);

IF
ObjectTimerFinished((CHARACTER)_Goblin, "GOB_GoblinToast_DamageAfterToast")
AND
GetHitpoints(_Goblin, _HP)
AND
_HP > 1
AND
IntegerDivide(_HP, 2, _Quotient)
THEN
PROC_SetHitpoints_BlockSelfHealing(_Goblin, _Quotient);

// comments block
IF
ObjectTimerFinished((CHARACTER)_Goblin, "GOB_GoblinToast_DieAfterToast")
AND
DB_GOB_GoblinToast_CommentAfterPoison_CountDeaths(_NumDead)
AND
IntegerSum(_NumDead, 1, _NewNumDead)
THEN
NOT DB_GOB_GoblinToast_CommentAfterPoison_CountDeaths(_NumDead);
DB_GOB_GoblinToast_CommentAfterPoison_CountDeaths(_NewNumDead);

IF
DB_GOB_GoblinToast_CommentAfterPoison_CountDeaths(_NumDead)
AND
DB_GOB_GoblinToast_CommentAfterPoison(_NumDead,_Delay,_)
THEN
PROC_GOB_GoblinToast_CommentOnStrangersWithDelay(_Delay);

PROC
PROC_GOB_GoblinToast_SuccessAftermath()
AND
DB_GOB_GoblinToast_CommentAfterPoison(_, _, _BackupDelay)
THEN
PROC_GOB_GoblinToast_CommentOnStrangersWithDelay(_BackupDelay);

PROC
PROC_GOB_GoblinToast_CommentOnStrangersWithDelay((INTEGER)_Delay)
AND
QRY_OnlyOnce("GOB_GoblinToast_CommentOnStrangersWithDelay")
THEN
TimerLaunch("GOB_GoblinToast_CommentOnStrangers", _Delay);

IF
TimerFinished("GOB_GoblinToast_CommentOnStrangers")
AND
QRY_OnlyOnce("GOB_GoblinToast_CommentOnStrangersTimerFinished")
THEN
PROC_GOB_GoblinToast_CommentOnStrangers();

IF
DialogEnded(GOB_GoblinToast_c8b8655b-8e8d-ddad-0b5b-e2794fa11003, _ID)
AND
DB_DialogPlayers(_ID, _Player, 1)
AND
GetFlag((FLAG)GOB_GoblinToast_Event_DrinkPoisonedBeer_e7c4305b-e83a-dff0-c086-06ddf1038627, _Player, 1)
THEN
PROC_GOB_GoblinToast_PoisonPlayer((CHARACTER)_Player);

IF
DialogEnded(GOB_GoblinToast_c8b8655b-8e8d-ddad-0b5b-e2794fa11003, _ID)
AND
DB_GlobalFlag((FLAG)GOB_GoblinToast_Event_FailedPersuasion_d5328849-e369-1981-115f-d4b35b3b45f5)
THEN
PROC_GOB_MakeFestivitiesAreaHostile();
//END_REGION Goblin Toast - completed success

//REGION Commenting on Poisoning (no toast)
// TooMuchBeer_001
// TooMuchBeer_002
// TooManyDead
// - register poisoning

PROC
PROC_CounterIncreased("GOB_GoblinToast_PoisonedGoblins", 1)
AND
NOT DB_GOB_GoblinToast_SuccessAftermath(1)
THEN
PROC_GOB_GoblinToast_CommentOnPoison(GOB_GoblinToast_AD_TooMuchBeer_001_dee9c3a4-263f-cd41-ec02-6c83d1440ca0);

PROC
PROC_CounterIncreased("GOB_GoblinToast_PoisonedGoblins", 2)
AND
NOT DB_GOB_GoblinToast_SuccessAftermath(1)
THEN
PROC_GOB_GoblinToast_CommentOnPoison(GOB_GoblinToast_AD_TooMuchBeer_002_15d56243-7102-42dd-434d-60b7f0dad6bb);

PROC
PROC_CounterIncreased("GOB_GoblinToast_PoisonedGoblins", 3)
AND
NOT DB_GOB_GoblinToast_SuccessAftermath(1)
THEN
PROC_GOB_GoblinToast_CommentOnStrangers();

PROC
PROC_GOB_GoblinToast_CommentOnPoison((DIALOGRESOURCE)_Dialog)
AND
QRY_GOB_GoblinToast_GetRandomGoblinToCommentOnPoison()
AND
DB_GOB_GoblinToast_GoblinToCommentOnPoison((CHARACTER)_Goblin)
AND
DB_GOB_GoblinToast_LookAtPoisonedGoblin(_PoisonedGoblin)
THEN
PROC_ForceStopDialog(_Goblin);
LookAtEntity(_Goblin, _PoisonedGoblin);
NOT DB_GOB_GoblinToast_LookAtPoisonedGoblin(_PoisonedGoblin);
PROC_TryStartAD(_Dialog, _Goblin);
//END_REGION Commenting on Poisoning (no toast)

//REGION Poisoning Crime and Battle Stations
PROC
PROC_GOB_GoblinToast_RegisterPoisoning()
AND
GetHostCharacter(_Player)
THEN
QuestUpdate(_Player, "HIDDEN_WLD_Boosters", "GOB_GoblinToast_Poisoned");

PROC
PROC_GOB_GoblinToast_RegisterPoisoning()
THEN
NOT DB_GOB_GoblinToast_SuccessAftermath(1);
SetFlag(GOB_GoblinToast_State_RealizedPoison_0e867c08-b2b9-4f43-8260-168026663e2c,NULL_00000000-0000-0000-0000-000000000000);
SetFaction(S_GOB_Festivities_Bugbear_Wanderer_c45936ea-2e38-4cf5-b5e1-1ff382888737, ACT1_GOB_FestivitiesAreaGoblins_0e01ffb1-ecd5-834b-edc4-f19a61dcd405);

PROC
PROC_GOB_GoblinToast_RegisterPoisoning()
AND
DB_GOB_GoblinToast_SuspiciousPlayers(_Player)
AND
NOT DB_GOB_GoblinToast_RegisteredCriminals(_Player)
THEN
DB_GOB_GoblinToast_RegisteredCriminals((CHARACTER)_Player);
PROC_CharacterRegisterCrime(_Player, "GOB_Festivities_Poisoning", NULL_00000000-0000-0000-0000-000000000000, NULL_00000000-0000-0000-0000-000000000000, 0);

IF
FlagSet(GOB_GoblinToast_State_ConfrontedAboutPoisoning_2a1bfba9-36ec-49aa-8540-97cd87301592, _, _)
AND
DB_Players(_Player)
THEN
CharacterStopCrime(_Player, "GOB_Festivities_Poisoning", NULL_00000000-0000-0000-0000-000000000000);

QRY
QRY_CRIME_BlockRegisterCrime(_Player, "GOB_Festivities_Poisoning", NULL_00000000-0000-0000-0000-000000000000, NULL_00000000-0000-0000-0000-000000000000, _)
AND
GetFlag(GOB_GoblinToast_State_ConfrontedAboutPoisoning_2a1bfba9-36ec-49aa-8540-97cd87301592, NULL_00000000-0000-0000-0000-000000000000, 1)
THEN
DB_NOOP(1);

PROC
PROC_GOB_GoblinToast_RegisterPoisoning()
THEN
ObjectTimerLaunch(S_GOB_Festivities_Coordinator_f2cd133a-8339-4043-9277-e5dd8fe93e5f, "GOB_GoblinToast_CheckIfSpotted", 5000);

// if the poisoner was not spotted immediately then we simply send everyone to their battle stations
IF
ObjectTimerFinished(_, "GOB_GoblinToast_CheckIfSpotted")
AND
NOT DB_DialogName(GOB_GoblinToast_PoisoningInterrogation_c0f43bec-7a24-c7ba-f392-1edc8d9034fc, _)
AND 
GetFlag(GOB_GoblinToast_Event_ToStations_0b555ee8-2b8e-3881-b35e-9811f6baf77a, NULL_00000000-0000-0000-0000-000000000000, 0)
THEN
PROC_GOB_GoblinToast_SendGoblinToDestroyTub();
ObjectTimerLaunch(S_GOB_Festivities_Coordinator_f2cd133a-8339-4043-9277-e5dd8fe93e5f, "GOB_GoblinToast_ToStations", 1000);

// otherwise - after the interrogation dialogue
PROC
PROC_GlobalFlagReactionAfterDialog(GOB_GoblinToast_State_ConfrontedAboutPoisoning_2a1bfba9-36ec-49aa-8540-97cd87301592)
AND 
GetFlag(GOB_GoblinToast_Event_ToStations_0b555ee8-2b8e-3881-b35e-9811f6baf77a, NULL_00000000-0000-0000-0000-000000000000, 0)
THEN
PROC_GOB_GoblinToast_SendGoblinToDestroyTub();
ObjectTimerLaunch(S_GOB_Festivities_Coordinator_f2cd133a-8339-4043-9277-e5dd8fe93e5f, "GOB_GoblinToast_ToStations", 1000);

// if talking about destroying tub - do nothing - set the flag at the end of the dialog
// if not - set the flag immeidately
// set
IF
ObjectTimerFinished(_, "GOB_GoblinToast_ToStations")
AND
NOT DB_DialogName(GOB_GoblinToast_AD_ToStations_9369ece0-ff61-bbee-78f0-d394bd4e08f5, _)
THEN
SetFlag(GOB_GoblinToast_Event_ToStations_0b555ee8-2b8e-3881-b35e-9811f6baf77a, NULL_00000000-0000-0000-0000-000000000000);

IF
ObjectTimerFinished(_, "GOB_GoblinToast_ToStations")
AND
DB_DialogName(GOB_GoblinToast_AD_ToStations_9369ece0-ff61-bbee-78f0-d394bd4e08f5, _)
THEN
DB_GOB_GoblinToast_SendToStationsAfterDialog(1);

IF
AutomatedDialogEnded(GOB_GoblinToast_AD_ToStations_9369ece0-ff61-bbee-78f0-d394bd4e08f5, _ID)
AND
DB_GOB_GoblinToast_SendToStationsAfterDialog(1)
THEN
NOT DB_GOB_GoblinToast_SendToStationsAfterDialog(1);
SetFlag(GOB_GoblinToast_Event_ToStations_0b555ee8-2b8e-3881-b35e-9811f6baf77a, NULL_00000000-0000-0000-0000-000000000000);

PROC
PROC_GOB_GoblinToast_SendGoblinToDestroyTub()
AND
QRY_IsEmptyDB("DB_GOB_GoblinToast_DestroyingTubGoblin", 1)
AND
QRY_GOB_GoblinToast_NotAllParticipantsDead()
AND
QRY_GOB_GoblinToast_GetRandomGoblinToCommentOnPoison()
AND
DB_GOB_GoblinToast_GoblinToCommentOnPoison((CHARACTER)_Goblin)
THEN
DB_GOB_GoblinToast_DestroyingTubGoblin(_Goblin);
SetFlag(GOB_GoblinToast_State_DestroyingTub_5f3d9ca8-b7bb-e0d3-f3a8-c6cab3f775ac, _Goblin);
PROC_TryStartAD((DIALOGRESOURCE)GOB_GoblinToast_AD_ToStations_9369ece0-ff61-bbee-78f0-d394bd4e08f5, _Goblin);

IF
FlagSet(GOB_GoblinToast_Event_DestroyTub_b7337301-f6e7-40d3-be8a-df00d82a838c, (ITEM)_Tub, _)
THEN
Die(_Tub);

IF
FlagSet(GOB_GoblinToast_Event_DestroyTub_b7337301-f6e7-40d3-be8a-df00d82a838c, (ITEM)_Tub, _)
AND
DB_GOB_GoblinToast_DestroyingTubGoblin(_Goblin)
THEN
NOT DB_GOB_GoblinToast_DestroyingTubGoblin(_Goblin);
ClearFlag(GOB_GoblinToast_State_DestroyingTub_5f3d9ca8-b7bb-e0d3-f3a8-c6cab3f775ac, _Goblin);
//END_REGION Poisoning Crime and Battle Stations

//REGION General Commenting on Strangers Logic
PROC
PROC_GOB_GoblinToast_CommentOnStrangers()
AND
NOT QRY_GOB_GoblinToast_NotAllParticipantsDead()
THEN
PROC_GOB_GoblinToast_RegisterPoisoning();

PROC
PROC_GOB_GoblinToast_CommentOnStrangers()
AND
QRY_GOB_GoblinToast_NotAllParticipantsDead()
THEN
TimerLaunch("GOB_GoblinToast_CheckAttackAD", 2000);
PROC_GOB_GoblinToast_MakeRandomGoblinCommentOnStrangers();

PROC
PROC_GOB_GoblinToast_MakeRandomGoblinCommentOnStrangers()
AND
QRY_GOB_GoblinToast_GetRandomGoblinToCommentOnPoison()
AND
DB_GOB_GoblinToast_GoblinToCommentOnPoison((CHARACTER)_Goblin)
AND
QRY_OnlyOnce("GOB_GoblinToast_CommentOnStrangers")
AND
DB_GOB_GoblinToast_LookAtPoisonedGoblin(_DeadGoblin)
THEN
LookAtEntity(_Goblin, _DeadGoblin, 2.0);
PROC_TryStartAD(GOB_GoblinToast_AD_Attack_4fc811cb-6a63-476a-7aae-1eb269b8230e, _Goblin);
PROC_GOB_GoblinToast_LookAtSpeaker(_Goblin);

// only when no Toast happened
PROC
PROC_GOB_GoblinToast_LookAtSpeaker((CHARACTER)_Speaker)
AND
NOT DB_GOB_GoblinToast_SuccessAftermath(1)
AND
DB_GOB_GoblinToast_ToastParticipants(_Goblin)
AND
NOT DB_CantAct(_Goblin)
AND
_Goblin != _Speaker
THEN
LookAtEntity(_Goblin, _Speaker);

QRY
QRY_GOB_GoblinToast_GetRandomGoblinToCommentOnPoison()
AND
SysCount("DB_GOB_GoblinToast_ToastParticipants", 1, _Amount)
AND
Random(_Amount, _Rnd)
AND
IntegerSum(_Rnd, 1, _GoblinIndex)
AND
SysFactAtIndex("DB_GOB_GoblinToast_ToastParticipants", 1, _GoblinIndex, "DB_GOB_GoblinToast_GoblinToCommentOnPoison")
THEN
DB_NOOP(1);

QRY
QRY_GOB_GoblinToast_NotAllParticipantsDead()
AND
DB_GOB_GoblinToast_ToastParticipants(_Goblin)
AND
NOT DB_PermaDefeated(_Goblin)
THEN
DB_NOOP(1);

IF
AutomatedDialogStarted(GOB_GoblinToast_AD_Attack_4fc811cb-6a63-476a-7aae-1eb269b8230e, _)
THEN
DB_GOB_GoblinToast_AttackADStarted(1);

// might fail to launch AD_Attack (without AutomatedDialogEnded or AutomatedDialogFailed event)
IF
TimerFinished("GOB_GoblinToast_CheckAttackAD")
AND
NOT DB_GOB_GoblinToast_AttackADStarted(1)
THEN
PROC_GOB_GoblinToast_RegisterPoisoning();

IF
AutomatedDialogEnded(GOB_GoblinToast_AD_Attack_4fc811cb-6a63-476a-7aae-1eb269b8230e, _)
THEN
PROC_GOB_GoblinToast_RegisterPoisoning();

IF
AutomatedDialogRequestFailed(GOB_GoblinToast_AD_Attack_4fc811cb-6a63-476a-7aae-1eb269b8230e, _)
THEN
PROC_GOB_GoblinToast_RegisterPoisoning();
//END_REGION Commenting on Poisoning (no toast)


//REGION State Manager
IF
FlagSet(_Flag, NULL_00000000-0000-0000-0000-000000000000, _)
AND
DB_GOB_GoblinToast_StateManager(_Flag)
THEN
PROC_GOB_GoblinToast_StateManager_ChangeCurrentState(_Flag);

PROC
PROC_GOB_GoblinToast_StateManager_ChangeCurrentState((FLAG)_FlagToKeep)
AND
DB_GOB_GoblinToast_StateManager(_Flag)
AND
_Flag != _FlagToKeep
THEN
ClearFlag(_Flag, NULL_00000000-0000-0000-0000-000000000000);
//END_REGION State Manager


//REGION Being noticed while poisoning the barrel
IF
TemplateUseFinished(_Player, DEC_Goblins_Camp_CookingPot_A_Poisoned_Dynamic_015ac04c-2568-4668-a672-339448c58154, _Item, 1)
AND
DB_Players(_Player)
AND
DB_GOB_GoblinToast_PoisonType(_Status)
THEN
PROC_GOB_GoblinToast_PoisonPlayer((CHARACTER)_Player);

IF
RequestCanCombine(_Player,S_GOB_GoblinToast_BeerSkullTub_43d2f409-e9cb-4bbe-974c-b1e2cce87562,_,_,_,_,_)
AND
DB_Players(_OtherPlayer)
AND
IsInTrigger(_OtherPlayer, S_GOB_Festivities_BingeArea_f4a4031d-7e0c-45b8-970b-47c62d4908d8, 1)
THEN
DB_GOB_GoblinToast_SuspiciousPlayers(_OtherPlayer);

IF
StoppedCombining(_Player,S_GOB_GoblinToast_BeerSkullTub_43d2f409-e9cb-4bbe-974c-b1e2cce87562,_,_,_,_)
THEN
CharacterStopCrime((CHARACTER)_Player, "GOB_Festivities_NoticedPoisoning", NULL_00000000-0000-0000-0000-000000000000);

IF
DialogEnded(GOB_GoblinToast_NoticedPoisoning_71d701f1-6ed7-d416-49be-39f727bf91ab,_)
AND
GetFlag(GOB_GoblinToast_PoisoningRedHanded_f79b4e0d-7b96-4aae-9560-0687cc2287b6,NULL_00000000-0000-0000-0000-000000000000,1)
THEN
SetFlag(GOB_GoblinToast_Event_NoMoreRefills_5929d40e-8867-2fc6-a0d9-6ab1a7a49696,NULL_00000000-0000-0000-0000-000000000000);
PROC_GOB_MakeFestivitiesAreaHostile();

IF
DialogActorLeft(GOB_GoblinToast_NoticedPoisoning_71d701f1-6ed7-d416-49be-39f727bf91ab,_,_Goblin,_)
AND
GetFlag(GOB_GoblinToast_GoblinBulliedAway_26f42c2a-f07c-407c-bb42-d25a1c56a769,_Goblin,1)
THEN
PROC_DisappearOutOfSightTo((CHARACTER)_Goblin,S_GOB_GoblinToast_RunAway_8cebe5cb-1960-4f45-90ee-cb075a1e81aa,"Sprint",0,"");
//END_REGION Being noticed while poisoning the barrel


//REGION Long rest
PROC
PROC_LongRest()
AND
DB_GOB_GoblinToast_PoisonType(_)
THEN
SetFlag(GOB_GoblinToast_State_RealizedPoison_0e867c08-b2b9-4f43-8260-168026663e2c, NULL_00000000-0000-0000-0000-000000000000);
DB_ExecuteInLevel("GOB_GoblinToast_ApplyPoisonedStatusBehindScenes","WLD_Main_A");

PROC
PROC_ExecuteInLevel("GOB_GoblinToast_ApplyPoisonedStatusBehindScenes","WLD_Main_A")
THEN
PROC_GOB_GoblinToast_ApplyPoisonedStatusBehindScenes();

IF
LeftTrigger(_Player, S_GOB_CampFirstHalfArea_d98ba3fa-743e-4d0e-98d8-2b3f79c17647)
AND
DB_Players(_Player)
AND
NOT QRY_CheckOtherPlayersInTrigger(_Player, S_GOB_CampFirstHalfArea_d98ba3fa-743e-4d0e-98d8-2b3f79c17647)
AND
DB_GOB_GoblinToast_PoisonType(_)
THEN
PROC_GOB_GoblinToast_ApplyPoisonedStatusBehindScenes();

PROC
PROC_GOB_GoblinToast_ApplyPoisonedStatusBehindScenes()
AND
DB_GOB_GoblinToast_GoblinsToPoison(_Goblin, _)
THEN
PROC_GOB_GoblinToast_PoisonDieInstantly((CHARACTER)_Goblin);
//END_REGION Long rest


//REGION Clearing DBs on dying
PROC
PROC_StateSet_PermaDefeated(_Goblin)
AND
DB_GOB_GoblinToast_ToastParticipants((CHARACTER)_Goblin)
THEN
NOT DB_GOB_GoblinToast_ToastParticipants(_Goblin);
//END_REGION Clearing DBs on dying


//REGION Destruction of the tub
IF
EnteredLevel(_Tub, (ROOT)INTERACT_DEC_Goblins_Camp_CookingPot_A_Poisoned_015ac04c-2568-4668-a672-339448c58154, "WLD_Main_A")
AND
IsInTrigger(_Tub, S_GOB_GoblinHuntPoison_BarrelTrigger_07accba9-1adf-4bb6-9d15-17c6b9c44eee, 1)
THEN
DB_GOB_GoblinToast_NewTub((ITEM)_Tub);

IF
FlagSet(GOB_GoblinToast_State_DestroyingTub_5f3d9ca8-b7bb-e0d3-f3a8-c6cab3f775ac, _Goblin, _)
AND
DB_GOB_GoblinToast_NewTub(_Tub)
THEN
SetDualEntityEvent(_Goblin, _Tub, "GOB_GoblinToast_NewTub");
//END_REGION Destruction of the tub

//REGION Applying Poison
PROC
PROC_GOB_GoblinToast_PoisonPlayer((CHARACTER)_Player)
AND
IsTagged(_Player, (TAG)POISONED_ADV_494276cb-a499-4843-a985-a11926bf2785, _HasAdvantage)
THEN
RequestPassiveRoll((CHARACTER)_Player, _Player, "SavingThrow", "Constitution", (DIFFICULTYCLASS)Act1_Hard_831e1fbe-428d-4f4d-bd17-4206d6efea35, _HasAdvantage, "GOB_GoblinToast_PoisonSavingThrow");

IF
RollResult("GOB_GoblinToast_PoisonSavingThrow", _Player, _, _Result, _, _)
AND
_Result != 1
THEN
ApplyStatus(_Player, "GOB_SMALLPOISON", 60.0);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "Act1"
