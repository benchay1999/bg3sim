Version 1
SubGoalCombiner SGC_AND
INITSECTION
DB_Dialogs(CHARACTERGUID_S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, GOB_PainPriest_44709c15-6f1f-3566-d3ea-8b06de9014ab); //replaced by GOB_PainPriest_PostPenance after the penance

DB_ItemOwnerShipTriggers("WLD_Main_A", S_GOB_PriestPenance_SUB_3189cec7-0f63-468c-a147-6a5fe426f518, S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81);
ToInventory(S_GOB_PenanceScourge_ecd4e32e-0cd1-4d9a-b4ab-8b42917d666f, S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, 1, 0, 0);
CreateSurface(TRIGGERGUID_S_GOB_PenanceBox_c7f47012-d006-4cb7-9af3-5d4d0f2b9ca7, "SurfaceBlood", 1.5, -1.0);

PROC_SetHitpointsPercentage_BlockSelfHealing(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, 90.0);
//REGION Book
DB_GOB_PainPriest_ReligiousTags((TAG)CLERIC_1671b4bf-4f47-4bb7-9cb9-80bb1f6009d5);
DB_GOB_PainPriest_ReligiousTags((TAG)PALADIN_6d85ab2d-5c23-498c-a61e-98f05a00177a);

DB_BookFlags(S_GOB_PainBible_cde9e487-07e4-43a8-a07c-a29890a1abd2,GOB_PainPriest_Knows_Book_2c26659c-087f-379f-a313-4ba0416fc5a7);
//END_REGION
//REGION Penance
DB_GOB_PainPriest_Weapons((ITEM)S_GOB_PenancePiercing_da629f99-adbc-4c77-ae5f-a06b997b3a8a,(FLAG)GOB_PainPriest_Event_PickPiercing_d5f9b552-6faa-a25d-616f-d8caccc0fee0);
DB_GOB_PainPriest_Weapons((ITEM)S_GOB_PenanceSlashing_fa96689e-264c-4e98-ba30-33be0a3b5371,(FLAG)GOB_PainPriest_Event_PickSlashing_0a0d12a5-0f90-0df6-6157-a48f91181c59);
DB_GOB_PainPriest_Weapons((ITEM)S_GOB_PenanceScourge_ecd4e32e-0cd1-4d9a-b4ab-8b42917d666f,(FLAG)GOB_PainPriest_Event_PickScourge_70c1192c-8144-c979-15aa-6d5e463cc000);

DB_GOB_PainPriest_PenanceSpells("Target_GOB_PainPriest_WeaponAttack");
DB_GOB_PainPriest_PenanceSpells("Target_GOB_PainPriest_ChillTouch");

DB_GOB_PainPriest_NotifyGoblins(1);

//--- RESET
DB_GOB_PainPriest_PenanceReset((FLAG)GOB_PainPriest_Event_StartingNewPenance_17957247-236b-538d-20ec-223d6ae4e39b);
DB_GOB_PainPriest_PenanceReset((FLAG)GOB_PainPriest_Event_TempBlockGoblinsAD_2aeac444-0be1-49e4-bba7-d06d7ee62f0a);
DB_GOB_PainPriest_PenanceReset((FLAG)GOB_PainPriest_Event_BadReaction_7bd8c1e4-c23c-4115-9f99-8e7fd16a626c);
//hit steps
DB_GOB_PainPriest_PenanceReset((FLAG)GOB_PainPriest_Event_FirstHitDone_cdcd32a0-b0b6-e3bf-5d82-2674a67b0c3b);
DB_GOB_PainPriest_PenanceReset((FLAG)GOB_PainPriest_Event_SecondHitDone_238c0b2a-9dd5-01d6-4871-c9749d796d70);
DB_GOB_PainPriest_PenanceReset((FLAG)GOB_PainPriest_Event_ThirdHitDone_c0424da9-fa99-c577-e333-eb86b7d413a6);
//choices in penance dialog
DB_GOB_PainPriest_PenanceReset((FLAG)GOB_PainPriest_Event_Braced_96a65364-bf27-8538-7359-6f4e672d0a64);
DB_GOB_PainPriest_PenanceReset((FLAG)GOB_PainPriest_Event_BracedTwice_8fa6f018-115e-0f75-d30e-167dfa1258ad);
DB_GOB_PainPriest_PenanceReset((FLAG)GOB_PainPriest_Event_Mercy_642d6299-ccc1-a0fb-f7cc-06b8fd81d309);
DB_GOB_PainPriest_PenanceReset((FLAG)GOB_PainPriest_Event_MercyTwice_116ca86c-24e8-3191-9525-be5fd9c884a8);
DB_GOB_PainPriest_PenanceReset((FLAG)GOB_PainPriest_Event_Harder_08b00422-b4dd-4ad1-fe51-e040c6506ef9);
DB_GOB_PainPriest_PenanceReset((FLAG)GOB_PainPriest_Event_HarderTwice_b7fbd117-df66-c289-62d2-abbd73032444);
DB_GOB_PainPriest_PenanceReset((FLAG)GOB_PainPriest_Event_Charlatan_41719776-3781-d713-0f0f-b14cec8947fd);
DB_GOB_PainPriest_PenanceReset((FLAG)GOB_PainPriest_Event_CharlatanTwice_ea0a8872-e694-d76a-7d8d-29f865693a7e);
DB_GOB_PainPriest_PenanceReset((FLAG)GOB_PainPriest_Event_Entertainer_ecf25238-7353-b348-5005-c1dbbea54eac);
DB_GOB_PainPriest_PenanceReset((FLAG)GOB_PainPriest_Event_EntertainerTwice_ec59a241-906f-9394-c401-158207aede7d);
DB_GOB_PainPriest_PenanceReset((FLAG)GOB_PainPriest_Event_Monk_e408c565-7e88-796d-c564-464f7e25eed7);
DB_GOB_PainPriest_PenanceReset((FLAG)GOB_PainPriest_Event_MonkTwice_0140abc8-e0da-aa72-1537-ce1a8880b1d0);
//priest reactions
DB_GOB_PainPriest_PenanceReset((FLAG)GOB_PainPriest_Event_ReactToCry_9bd34566-32e8-7e00-9b25-895e44059a38);
DB_GOB_PainPriest_PenanceReset((FLAG)GOB_PainPriest_Event_ReactToEnthusiasm_b87787d9-2029-958a-340c-305acf1635d0);
DB_GOB_PainPriest_PenanceReset((FLAG)GOB_PainPriest_Event_ReactToMocking_44d0ee04-2e61-4980-1c24-aefcbb1c675d);
DB_GOB_PainPriest_PenanceReset((FLAG)GOB_PainPriest_Event_ReactToSilence_ac050f32-d19d-345f-f1cd-fca463e594e9);

DB_DropMutingStatussesDialog(GOB_PainPriest_Penance_c0fd6930-f86b-b833-75b9-8f694d47f3ab); //easy fix for patch4
DB_DropMutingStatussesDialog(GOB_PainPriest_RewardPenance_b3ecbce8-792e-af7e-362d-07adb981ed9b); //easy fix for patch4

//END_REGION
KBSECTION
//REGION Debug

//GOB_BattleStations_Debug_Start

IF
FlagSet(GOB_PainPriest_Debug_StartPenance_c9e8107c-aa45-b573-a013-0b8583595962, (CHARACTER)_Player, _) // flagType: Object
THEN
ClearFlag((FLAG)GOB_PainPriest_Debug_StartPenance_c9e8107c-aa45-b573-a013-0b8583595962, _Player); // flagType: Object
SetFlag((FLAG)GOB_PainPriest_Event_PenancePlayer_15340a4d-8a12-5226-f21c-f55852cf0794, _Player);
SetFlag((FLAG)GOB_PainPriest_HasMet_f3aaba00-61fc-5061-4e89-da168cacfc3a, _Player, 0); // flagType: Dialog

IF
TextEvent("testrotation")
AND
GetHostCharacter(_Player)
THEN
SetDualEntityEvent(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, _Player, "GOB_PainPriest_TestRotation");

IF
TextEvent("destroypainweapons")
AND
DB_GOB_PainPriest_Weapons(_Weapon, _)
AND
_Weapon != NULL_00000000-0000-0000-0000-000000000000
THEN
Drop(_Weapon);
Die(_Weapon);

IF
TextEvent("testgoblet")
THEN
SetFlag(GOB_PainPriest_State_Penitent_5e6ff7d1-7018-4938-8030-20ec00b3ce64,S_GOB_Torturers_Goblet_0f18201e-2836-4642-8a26-d0a6e1a8a8cc);


IF
TextEvent("tppainpriest")
THEN
TeleportTo((CHARACTER)S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81,(TRIGGER)S_GOB_PainTablePoint_d9a41644-715c-4702-9963-7b76d93f22eb,"");


IF
TextEvent("pptestVB")
AND
GetHostCharacter(_PenancePlayer)
THEN
SetTag(_PenancePlayer, (TAG)ACT1_GOB_PENITENT_ffc90ec2-bdab-4866-8f0a-0b8db2a164f9);
DB_GOB_PainPriest_ReactTo(_PenancePlayer);

IF
TextEvent("pptestReward")
AND
GetHostCharacter(_PenancePlayer)
THEN
SetFlag(GOB_PainPriest_Event_Reward_1c0d3964-5daa-6fd9-b834-a4f442362ad1, _PenancePlayer);

//END_REGION

//REGION Book & Religious knowledge

PROC
PROC_DialogFlagSetup(FOR_PainPriest_44709c15-6f1f-3566-d3ea-8b06de9014ab, S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, _Player)
AND
NOT DB_GlobalFlag(GLO_God_Knows_Loviatar_d16aa2bf-71d9-fb1a-be72-f982f08f32e3)
AND
DB_GOB_PainPriest_ReligiousTags(_Tag)
AND
IsTagged(_Player, _Tag, 1)
THEN
SetFlag((FLAG)GLO_God_Knows_Loviatar_d16aa2bf-71d9-fb1a-be72-f982f08f32e3, NULL_00000000-0000-0000-0000-000000000000, 0); // flagType: Global

//END_REGION

//REGION Goblins (Spike & Goblet)

PROC
PROC_DialogFlagSetup(FOR_PainPriest_44709c15-6f1f-3566-d3ea-8b06de9014ab, S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, _)
AND
IsInTrigger(S_GOB_Torturers_Spike_3f1fa953-6a0d-4589-adfd-23c69603da2f, S_GOB_PainPenance_SUB_3189cec7-0f63-468c-a147-6a5fe426f518, _SpikeIsNearby)
THEN
PROC_GOB_PainPriest_CheckSpikeProximity(_SpikeIsNearby);

PROC
PROC_GOB_PainPriest_CheckSpikeProximity(1)
THEN
SetFlag(GOB_PainPriest_State_SpikeIsInRoom_2d647c9c-02e8-8acd-2407-e69ad355e1fd, NULL_00000000-0000-0000-0000-000000000000, 0); // flagType: Global

PROC
PROC_GOB_PainPriest_CheckSpikeProximity(0)
THEN
ClearFlag(GOB_PainPriest_State_SpikeIsInRoom_2d647c9c-02e8-8acd-2407-e69ad355e1fd, NULL_00000000-0000-0000-0000-000000000000, 0); // flagType: Global

PROC
PROC_StateSet_PermaDefeated(S_GOB_Torturers_Spike_3f1fa953-6a0d-4589-adfd-23c69603da2f)
THEN
NOT DB_GOB_PainPriest_NotifyGoblins(1);

PROC
PROC_StateSet_PermaDefeated(S_GOB_Torturers_Goblet_0f18201e-2836-4642-8a26-d0a6e1a8a8cc)
THEN
NOT DB_GOB_PainPriest_NotifyGoblins(1);

IF
DB_GlobalFlag(GOB_PainPriest_State_PostPlayerPenance_103d9832-d8e2-415d-bde0-6e2d1599c636)
AND
DB_GlobalFlag(GOB_PainPriest_State_ReadyForNextPenance_4afe4a86-2dcb-409f-b83c-63d1bb4f570e)
AND
NOT DB_GlobalFlag(GOB_PainPriest_Event_TempBlockGoblinsAD_2aeac444-0be1-49e4-bba7-d06d7ee62f0a)
AND
DB_GOB_PainPriest_NotifyGoblins(1)
THEN
NOT DB_GOB_PainPriest_NotifyGoblins(1);
SetEntityEvent(S_GOB_Torturers_Spike_3f1fa953-6a0d-4589-adfd-23c69603da2f,"GOB_PainPriest_ReadyForGoblins");


//--- Spike ordered goblet to do it
IF
FlagSet(GOB_PainPriest_State_Penitent_5e6ff7d1-7018-4938-8030-20ec00b3ce64, S_GOB_Torturers_Goblet_0f18201e-2836-4642-8a26-d0a6e1a8a8cc, _)
THEN
ObjectTimerLaunch(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, "GOB_PainPriest_StartWithGoblin", 4000);

IF
ObjectTimerFinished(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, "GOB_PainPriest_StartWithGoblin")
AND
NOT DB_CantAct(S_GOB_Torturers_Goblet_0f18201e-2836-4642-8a26-d0a6e1a8a8cc)
THEN
PROC_GOB_PainPriest_SetPenitent(S_GOB_Torturers_Goblet_0f18201e-2836-4642-8a26-d0a6e1a8a8cc);

//--- Goblet is low HP
IF
FlagSet(GOB_PainPriest_State_LowHealth_bf01a677-b13c-4992-8d02-4121ecd2adf5, (CHARACTER)_Char, _)
AND
NOT DB_Players(_Char) // only for NPC; players penance ends when low HP is reached
THEN
DB_GOB_PainPriest_LowHPNPC(_Char);

IF
HitpointsChanged((CHARACTER)_Char, _)
AND
DB_GOB_PainPriest_LowHPNPC(_Char)
THEN
SetDualEntityEvent(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, _Char, "GOB_PainPriest_CheckPenitentHP");

IF
FlagCleared(GOB_PainPriest_State_LowHealth_bf01a677-b13c-4992-8d02-4121ecd2adf5, (CHARACTER)_Char, _)
AND
DB_GOB_PainPriest_LowHPNPC(_Char)
THEN
NOT DB_GOB_PainPriest_LowHPNPC(_Char);


//END_REGION

//REGION Dialog override (Penance, Battlestation)

//--- Battlestation
IF
FlagSet(GOB_BattleStations_Event_ToStation_03a8bd66-c23f-4989-9a7b-775cf475104b, NULL_00000000-0000-0000-0000-000000000000, _)
AND
NOT DB_PermaDefeated(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81)
THEN
//Disable most crimes, he doesn't care for the goblins or their camp in this state
PROC_CharacterDisableAllCrimes(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81);
PROC_CharacterEnableCrime(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, "Assault");
PROC_CharacterEnableCrime(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, "Steal");

QRY
QRY_SelectCustomDialog(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, _Player)
AND
DB_GlobalFlag(GOB_BattleStations_Event_ToStation_03a8bd66-c23f-4989-9a7b-775cf475104b)
THEN
DB_SelectedDialog(GOB_PainPriest_Battlestation_bfa5acc9-d3fe-3ab6-01a9-f182e2fb9747,S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, _Player);


//--- Penance dialog override
QRY
QRY_SelectCustomDialog(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, _Player)
AND
NOT DB_GlobalFlag(GOB_BattleStations_Event_ToStation_03a8bd66-c23f-4989-9a7b-775cf475104b)
AND
NOT DB_GlobalFlag(GOB_PainPriest_State_PostPlayerPenance_103d9832-d8e2-415d-bde0-6e2d1599c636)
AND
DB_GlobalFlag(GOB_PainPriest_State_HasPenitent_dc689f8e-9728-569e-32fa-8698d254dd6d)
THEN
PROC_GOB_PainPriest_OverrideWithPenanceDialog((CHARACTER)_Player);

PROC
PROC_GOB_PainPriest_OverrideWithPenanceDialog((CHARACTER)_Player)
AND
NOT QRY_GOB_PainPriest_TryStartPenitentDialog(_Player, NULL_00000000-0000-0000-0000-000000000000)
THEN
DB_SelectedDialog(GOB_PainPriest_DuringPenance_c2d50be6-9750-1afd-b2f6-a09cb36769e1,S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, _Player);

QRY
QRY_GOB_PainPriest_TryStartPenitentDialog((CHARACTER)_Player, (CHARACTER)_OtherPlayer) //Abdirak is supposed to start dialog with Peninent - do that (otherwise a random PC can talk 3 times to Abdirak while he's hitting and fail the penance)
AND
NOT DB_GOB_PainPriest_Penitent(_Player)
AND
DB_GOB_PainPriest_PenanceHit(_)
AND
DB_GOB_PainPriest_Penitent(_Penitent)
AND
QRY_SpeakerIsAvailableAndInDialogRange(_Penitent, S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81)
AND
QRY_GOB_PainPriest_TryStartPenitentDialog((CHARACTER)_Penitent, _Player)
THEN
DB_NOOP(1);

QRY
QRY_GOB_PainPriest_TryStartPenitentDialog((CHARACTER)_Penitent, (CHARACTER)_OtherPlayer)
AND
DB_GOB_PainPriest_Penitent(_Penitent)
AND
DB_ObjectCountHelper(_Penitent, "GOB_PainPriest_HitCount", _Count)
AND
DB_GOB_PainPriest_PenanceHit(_) //right after being attacked (clicking on him overrides the event that normally starts this dialog automatically)
THEN
PROC_GOB_PainPriest_StartPenitentDialog(_Penitent, _Count, _OtherPlayer);

PROC
PROC_GOB_PainPriest_StartPenitentDialog((CHARACTER)_Penitent, (INTEGER)_Count, (CHARACTER)_OtherPlayer)
AND
NOT QRY_GOB_PainPriest_JumpToReward(_Penitent, _Count, _OtherPlayer)
THEN
DB_SelectedDialog(GOB_PainPriest_Penance_c0fd6930-f86b-b833-75b9-8f694d47f3ab,S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, _Penitent, _OtherPlayer);

QRY
QRY_GOB_PainPriest_JumpToReward((CHARACTER)_Penitent, (INTEGER)_Count, (CHARACTER)_OtherPlayer)
AND
_Count > 3
THEN
PROC_GOB_PainPriest_AfterPenance(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, _Penitent);
PROC_GOB_PainPriest_ADIfDifferentUsers(_OtherPlayer, _Penitent);

PROC
PROC_GOB_PainPriest_ADIfDifferentUsers((CHARACTER)_Player, (CHARACTER)_Penitent)
AND
NOT QRY_SameUser(_Player, _Penitent)
THEN
PROC_PlayCantUseItemAD(_Player);

//END_REGION

//REGION Battlestation

IF
EntityEvent(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, "GOB_PainPriest_GotToEntrance")
THEN
SetHasDialog(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, 0);
PROC_DisappearOutOfSightTo(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81,(TRIGGER)S_GOB_PainPriestDisappearPoint_b807d8aa-9e4a-4b64-8640-9069f136b4e8,"Walk",0,"");


//END_REGION

//REGION Penance - No chest armor

//--- In/out of position
IF
DB_InRegion(_Penitent,(TRIGGER)S_GOB_PenanceBox_c7f47012-d006-4cb7-9af3-5d4d0f2b9ca7)
AND
DB_GOB_PainPriest_Penitent(_Penitent)
THEN
PROC_GOB_PainPriest_CheckArmor(_Penitent);

IF
LeftTrigger(_Penitent, S_GOB_PenanceBox_c7f47012-d006-4cb7-9af3-5d4d0f2b9ca7)
THEN
PROC_GOB_PainPriest_ClearPenitentStatus((CHARACTER)_Penitent);

IF
Equipped(_,_Penitent)
AND
DB_InRegion(_Penitent,(TRIGGER)S_GOB_PenanceBox_c7f47012-d006-4cb7-9af3-5d4d0f2b9ca7)
THEN
PROC_GOB_PainPriest_CheckArmor(_Penitent);

IF
Unequipped(_,_Penitent)
AND
DB_InRegion(_Penitent,(TRIGGER)S_GOB_PenanceBox_c7f47012-d006-4cb7-9af3-5d4d0f2b9ca7)
THEN
PROC_GOB_PainPriest_CheckArmor(_Penitent);


//--- Check if lacking armor / apply status
PROC
PROC_GOB_PainPriest_CheckArmor((CHARACTER)_Penitent)
AND
DB_Players(_Penitent)
AND
NOT QRY_GOB_PainPriest_IsBareChest(_Penitent)
THEN
PROC_GOB_PainPriest_ClearPenitentStatus(_Penitent);

QRY
QRY_GOB_PainPriest_IsBareChest((CHARACTER)_Penitent)
AND
NOT GetEquippedItem(_Penitent,"Breast",_)
AND
HasActiveStatus(_Penitent, "GOB_PENITENT", 0)
THEN
ApplyStatus(_Penitent, "GOB_PENITENT", -1.0, 1, NULL_00000000-0000-0000-0000-000000000000);


//--- Remove status
PROC
PROC_GOB_PainPriest_ClearPenitentStatus((CHARACTER)_Penitent)
AND
DB_Players(_Penitent)
AND
HasActiveStatus(_Penitent, "GOB_PENITENT", 1)
THEN
RemoveStatus(_Penitent, "GOB_PENITENT");

//END_REGION
//REGION Penance - Reset

IF
EntityEvent(CHARACTERGUID_S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, "GOB_PainPriest_Event_ResetPenance")
THEN
PROC_GOB_PainPriest_ResetPenance();

PROC
PROC_GOB_PainPriest_ResetPenance()
THEN
ClearFlag((FLAG)GOB_PainPriest_Event_NotChoiceWeapon_88a10956-e2ff-4f0c-9c3d-f07cf23163ed, CHARACTERGUID_S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81); // flagType: Object
ClearFlag((FLAG)GOB_PainPriest_Event_ChoiceWeapon_b21d37f8-c536-432f-8d71-949b8f5ab7c6, CHARACTERGUID_S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81); // flagType: Object
ClearFlag((FLAG)GOB_PainPriest_Event_SpellWeapon_12c7d2c4-a68a-2d03-94f4-f49dedadd9fc, CHARACTERGUID_S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81); // flagType: Object

PROC
PROC_GOB_PainPriest_ResetPenance()
AND
DB_GOB_PainPriest_PenanceReset(_Flag)
AND
DB_GlobalFlag(_Flag)
THEN
ClearFlag(_Flag, NULL_00000000-0000-0000-0000-000000000000, 0);

PROC
PROC_GOB_PainPriest_ResetPenance()
AND
DB_GOB_PainPriest_Weapons( _,(FLAG)_Global)
THEN
ClearFlag((FLAG)_Global, NULL_00000000-0000-0000-0000-000000000000, 0); // flagType: Global

PROC
PROC_GOB_PainPriest_ResetPenance()
AND
DB_ObjectCountHelper(_Object, "GOB_PainPriest_HitCount", _Count)
THEN
NOT DB_ObjectCountHelper(_Object, "GOB_PainPriest_HitCount", _Count);

//END_REGION
//REGION Penance - Too low HP to start

IF
FlagSet(GOB_PainPriest_Event_CheckHP_de31b750-33f4-98cc-a9da-7114800c367c, _Player, _)
AND
GetHitpointsPercentage(_Player, _RemainingVitality)
THEN
SetEntityEvent(CHARACTERGUID_S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, "GOB_PainPriest_Event_ResetPenance");
ClearFlag(GOB_PainPriest_Event_CheckHP_de31b750-33f4-98cc-a9da-7114800c367c, _Player);
PROC_GOB_PainPriest_CheckHP(_Player, _RemainingVitality);

PROC
PROC_DialogFlagSetup(FOR_PainPriest_44709c15-6f1f-3566-d3ea-8b06de9014ab, S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, _Player)
AND
GetFlag((FLAG)GOB_PainPriest_State_NeedMoreHP_e7e7879a-9838-d423-4243-8221ca391048, _Player, 1)
AND
GetHitpointsPercentage(_Player, _RemainingVitality)
THEN
PROC_GOB_PainPriest_CheckHP(_Player, _RemainingVitality);


PROC
PROC_GOB_PainPriest_CheckHP((GUIDSTRING)_Player, (REAL)_RemainingVitality)
AND
_RemainingVitality < 40.0
THEN
SetFlag(GOB_PainPriest_State_TooLowHP_7ad3d3f9-1c1c-f934-28c3-15b646b67529, _Player);

PROC
PROC_GOB_PainPriest_CheckHP((GUIDSTRING)_Player, (REAL)_RemainingVitality)
AND
_RemainingVitality >= 40.0
THEN
ClearFlag(GOB_PainPriest_State_TooLowHP_7ad3d3f9-1c1c-f934-28c3-15b646b67529, _Player);

//END_REGION
//REGION Penance - New penitent

IF
DualEntityEvent(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81,(CHARACTER)_Char, "GOB_PainPriest_SetNewPenitent")
THEN
PROC_GOB_PainPriest_SetPenitent(_Char);


IF
FlagSet(GOB_PainPriest_Event_PenancePlayer_15340a4d-8a12-5226-f21c-f55852cf0794, _Player, _) //set from the PainPriest's dialog
THEN
ClearFlag(GOB_PainPriest_Event_PenancePlayer_15340a4d-8a12-5226-f21c-f55852cf0794, _Player);
PROC_GOB_PainPriest_SetPenitent((CHARACTER)_Player);


PROC
PROC_GOB_PainPriest_SetPenitent((CHARACTER)_Char)
AND
NOT DB_GOB_PainPriest_Penitent(_)
THEN
DB_GOB_PainPriest_Penitent(_Char);
SetFlag((FLAG)GOB_PainPriest_State_Penitent_5e6ff7d1-7018-4938-8030-20ec00b3ce64, _Char);
SetDualEntityEvent(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, _Char, "GOB_PainPriest_PenitentSet", 1);
SetFlag((FLAG)GOB_PainPriest_State_HasPenitent_dc689f8e-9728-569e-32fa-8698d254dd6d, NULL_00000000-0000-0000-0000-000000000000, 0);
SetFlag((FLAG)GOB_PainPriest_Event_StartingNewPenance_17957247-236b-538d-20ec-223d6ae4e39b, NULL_00000000-0000-0000-0000-000000000000, 0);
ClearFlag(GOB_PainPriest_State_ReadyForNextPenance_4afe4a86-2dcb-409f-b83c-63d1bb4f570e, NULL_00000000-0000-0000-0000-000000000000);
TriggerRegisterForCharacter(S_GOB_PenanceBox_c7f47012-d006-4cb7-9af3-5d4d0f2b9ca7, _Char);

PROC
PROC_GOB_PainPriest_SetPenitent((CHARACTER)_Char)
AND
DB_Players(_Char)
THEN
DetachFromPartyGroup(_Char);
SetFlag((FLAG)GOB_PainPriest_Event_TempBlockGoblinsAD_2aeac444-0be1-49e4-bba7-d06d7ee62f0a, NULL_00000000-0000-0000-0000-000000000000, 0);

//--- Block Grush's healing
IF
FlagSet(GOB_PainPriest_State_Penitent_5e6ff7d1-7018-4938-8030-20ec00b3ce64, S_GOB_Torturers_Goblet_0f18201e-2836-4642-8a26-d0a6e1a8a8cc, _)
THEN
PROC_SelfHealing_Disable(S_GOB_Torturers_Goblet_0f18201e-2836-4642-8a26-d0a6e1a8a8cc);

IF
FlagCleared(GOB_PainPriest_State_Penitent_5e6ff7d1-7018-4938-8030-20ec00b3ce64, S_GOB_Torturers_Goblet_0f18201e-2836-4642-8a26-d0a6e1a8a8cc, _)
THEN
PROC_SelfHealing_Enable(S_GOB_Torturers_Goblet_0f18201e-2836-4642-8a26-d0a6e1a8a8cc);

PROC
PROC_LongRest()
AND
DB_GOB_PainPriest_Penitent(S_GOB_Torturers_Goblet_0f18201e-2836-4642-8a26-d0a6e1a8a8cc)
AND
NOT DB_CantAct(S_GOB_Torturers_Goblet_0f18201e-2836-4642-8a26-d0a6e1a8a8cc)
THEN
DB_ExecuteInLevel("GOB_Torturers_Goblet_RegainHP","WLD_Main_A");

PROC
PROC_ExecuteInLevel("GOB_Torturers_Goblet_RegainHP","WLD_Main_A")
THEN
UseSpell(S_GOB_Torturers_Goblet_0f18201e-2836-4642-8a26-d0a6e1a8a8cc, "Shout_RegainHP_Peace_NPC", S_GOB_Torturers_Goblet_0f18201e-2836-4642-8a26-d0a6e1a8a8cc, NULL_00000000-0000-0000-0000-000000000000);

//END_REGION
//REGION Penance - Weapon

//picking up and equiping weapon will all be done in anubis

// Start penance
IF
DualEntityEvent((CHARACTER)_Priest, (ITEM)_Weapon, "GOB_PainPriest_Event_PickupWeapon")
THEN
DB_GOB_PainPriest_PenanceWeapon(_Weapon);
Pickup(_Priest, _Weapon, "");

IF
AddedTo(_Weapon, S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, _)
AND
DB_GOB_PainPriest_PenanceWeapon((ITEM)_Weapon)
THEN
NOT DB_GOB_PainPriest_PenanceWeapon(_Weapon);
Equip(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, _Weapon);

//END_REGION
//REGION Penance - Hit

QRY
QRY_CRIME_KeepingAnEyeOut_Block(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81,(INTEGER)_CrimeID)
AND
DB_GlobalFlag(GOB_PainPriest_State_HasPenitent_dc689f8e-9728-569e-32fa-8698d254dd6d)
THEN
DB_NOOP(1);

IF
UsingSpellOnTarget(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, (CHARACTER)_Penitent, _PenanceSpells, _, _, _StoryActionID)
AND
DB_GOB_PainPriest_Penitent(_Penitent)
AND
DB_Players(_Penitent)
AND
DB_GOB_PainPriest_PenanceSpells(_PenanceSpells)
THEN
DB_GOB_PainPriest_PenanceHit(_StoryActionID);
PROC_ObjectCountHelper(_Penitent, "GOB_PainPriest_HitCount");

IF
AttackedBy((CHARACTER)_Penitent, S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, _, _DamageAmount, _, _StoryActionID)
AND
DB_GOB_PainPriest_Penitent(_Penitent)
THEN
PROC_GOB_PainPriest_CheckPenitentHP(_Penitent, _DamageAmount, _StoryActionID);

PROC
PROC_GOB_PainPriest_CheckPenitentHP((CHARACTER)_Penitent, (INTEGER)_DamageAmount, (INTEGER)_StoryActionID)
AND
DB_Players(_Penitent)
AND
_DamageAmount > 0
AND
GetHitpointsPercentage(_Penitent, _HP)
AND
_HP <= 0
THEN
PROC_GOB_PainPriest_HelpPenitent(_Penitent, _StoryActionID);

PROC
PROC_GOB_PainPriest_HelpPenitent((CHARACTER)_Penitent, (INTEGER)_StoryActionID)
AND
DB_GOB_PainPriest_PenanceHit(_StoryActionID)
THEN
NOT DB_GOB_PainPriest_PenanceHit(_StoryActionID);

PROC
PROC_GOB_PainPriest_HelpPenitent((CHARACTER)_Penitent, (INTEGER)_)
AND
NOT DB_CantAct(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81)
AND
QRY_IsInRange(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, _Penitent, 10.0)
THEN
SetWeaponUnsheathed(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, 0, 0);
UseSpell(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, "Target_SpareTheDying", (GUIDSTRING)_Penitent);

IF
CastedSpell(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, _PenanceSpells, _, _, _StoryActionID)
AND
DB_GOB_PainPriest_PenanceSpells(_PenanceSpells)
AND
DB_GOB_PainPriest_PenanceHit(_StoryActionID)
AND
DB_GOB_PainPriest_Penitent(_PenancePlayer)
THEN
RealtimeObjectTimerLaunch(_PenancePlayer, "GOB_PainPriest_DoHitDialog", 500);

IF
ObjectTimerFinished(_PenancePlayer, "GOB_PainPriest_DoHitDialog")
AND
DB_ObjectCountHelper(_PenancePlayer, "GOB_PainPriest_HitCount", _Count)
THEN
PROC_GOB_PainPriest_DuringPenance((CHARACTER)_PenancePlayer, _Count);

PROC
PROC_GOB_PainPriest_DuringPenance((CHARACTER)_PenancePlayer, (INTEGER)_Count)
AND
_Count <= 3
AND
IsInTrigger(_PenancePlayer, S_GOB_PainPenance_SUB_3189cec7-0f63-468c-a147-6a5fe426f518, 1)
AND
QRY_StartDialog_Fixed(GOB_PainPriest_Penance_c0fd6930-f86b-b833-75b9-8f694d47f3ab, S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, _PenancePlayer)
THEN
DB_NOOP(1);

PROC
PROC_GOB_PainPriest_DuringPenance((CHARACTER)_PenancePlayer, (INTEGER)_Count)
AND
_Count > 3
THEN
PROC_GOB_PainPriest_AfterPenance(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, (CHARACTER)_PenancePlayer);


//--- Clearing
IF
DialogStarted(_,_Inst)
AND
DB_DialogNPCs(_Inst, S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, _)
AND
DB_GOB_PainPriest_PenanceHit(_StoryActionID)
THEN
NOT DB_GOB_PainPriest_PenanceHit(_StoryActionID);

//END_REGION
//REGION Penance - Cancel

IF
Died(_Char)
AND
DB_GOB_PainPriest_Penitent(_Char)
THEN
ClearFlag((FLAG)GOB_PainPriest_State_HasPenitent_dc689f8e-9728-569e-32fa-8698d254dd6d, NULL_00000000-0000-0000-0000-000000000000, 0); // flagType: Global

IF
FlagSet(GOB_PainPriest_Event_CancelPenance_dc4daba8-83d2-ceed-4811-c43b91484b00, NULL_00000000-0000-0000-0000-000000000000, _)
THEN
PROC_GOB_PainPriest_CancelPenance();

IF
FlagSet(GOB_BattleStations_Event_ToStation_03a8bd66-c23f-4989-9a7b-775cf475104b, NULL_00000000-0000-0000-0000-000000000000, _)
THEN
PROC_GOB_PainPriest_CancelPenance();

PROC
PROC_GOB_PainPriest_CancelPenance()
AND
DB_GlobalFlag((FLAG)GOB_PainPriest_Event_FirstHitDone_cdcd32a0-b0b6-e3bf-5d82-2674a67b0c3b)
AND
DB_GOB_PainPriest_Penitent(_Char)
THEN
PROC_GOB_PainPriest_ReactionVoiceBark(_Char);


//--- cancel once -> may restart
//cancelled twice -> block
PROC
PROC_GOB_PainPriest_CancelPenance()
AND
DB_GOB_PainPriest_Penitent(_Char)
AND
GetFlag(GOB_PainPriest_State_CancelledPenitent_d7784d7b-bab3-4f4e-500d-aba2b4da0bc1, _Char, 1)
THEN
SetFlag((FLAG)GOB_PainPriest_State_CancelledTwice_f9a4bdb7-86cc-4abc-9875-3623a3b3e068, _Char); // flagType: Dialog

PROC
PROC_GOB_PainPriest_CancelPenance()
AND
DB_GOB_PainPriest_Penitent(_Char)
THEN
SetFlag((FLAG)GOB_PainPriest_State_CancelledPenitent_d7784d7b-bab3-4f4e-500d-aba2b4da0bc1, _Char);


PROC
PROC_GOB_PainPriest_CancelPenance()
THEN
ClearFlag(GOB_PainPriest_Event_CancelPenance_dc4daba8-83d2-ceed-4811-c43b91484b00, NULL_00000000-0000-0000-0000-000000000000);
ClearFlag((FLAG)GOB_PainPriest_State_HasPenitent_dc689f8e-9728-569e-32fa-8698d254dd6d, NULL_00000000-0000-0000-0000-000000000000, 0); // flagType: Global


//END_REGION
//REGION Penance - End

// Penance is done // PLAYER ONLY. Penance with NPC doesn't "end"; it can be cancelled though.
IF
DualEntityEvent(_Priest, _PenancePlayer, "GOB_PainPriest_Event_PenitentIsTooLowHP") //Anubis sends this
THEN
PROC_GOB_PainPriest_AfterPenance((CHARACTER)_Priest, (CHARACTER)_PenancePlayer);

PROC
PROC_GOB_PainPriest_AfterPenance((CHARACTER)_Priest, (CHARACTER)_PenancePlayer) //after 3 hits or low HP or 0 HP
AND
NOT DB_GlobalFlag(GOB_PainPriest_State_PostPlayerPenance_103d9832-d8e2-415d-bde0-6e2d1599c636)
THEN
PROC_SelfHealing_Enable(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81);
SetWeaponUnsheathed(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, 0, 0);
PROC_GlobalSetFlagAndCache(GOB_PainPriest_State_PostPlayerPenance_103d9832-d8e2-415d-bde0-6e2d1599c636);
PROC_RemoveDialog(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81);
DB_Dialogs(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81,GOB_PainPriest_PostPenance_fc1c4f8a-9b32-a994-c713-593f0bdb6cc8);

PROC
PROC_GOB_PainPriest_AfterPenance((CHARACTER)_Priest, (CHARACTER)_PenancePlayer)
AND
DB_Players(_PenancePlayer)
THEN
DB_GOB_PainPriest_ReadyToReward(_Priest, _PenancePlayer);


// Penitent might be unavailable if they are downed
IF
DB_GOB_PainPriest_ReadyToReward(_Priest, _PenancePlayer)
AND
NOT DB_CantTalk_IgnoreStatuses(_PenancePlayer) //tweak after patch4
AND
DB_InRegion(_PenancePlayer, S_GOB_PainPenance_SUB_3189cec7-0f63-468c-a147-6a5fe426f518)
AND
NOT QRY_StartDialog_Fixed((DIALOGRESOURCE)GOB_PainPriest_RewardPenance_b3ecbce8-792e-af7e-362d-07adb981ed9b, _Priest, _PenancePlayer)
THEN
NOT DB_GOB_PainPriest_ReadyToReward(_Priest, _PenancePlayer);
ClearFlag(GOB_PainPriest_State_HasPenitent_dc689f8e-9728-569e-32fa-8698d254dd6d, NULL_00000000-0000-0000-0000-000000000000);
SetFlag(GOB_PainPriest_State_WasPenitent_5bc19e7e-1751-6246-9fec-423bc32d6c8d, _PenancePlayer);
ClearFlag(GOB_PainPriest_State_CancelledPenitent_d7784d7b-bab3-4f4e-500d-aba2b4da0bc1, _PenancePlayer);
PROC_GOB_PainPriest_CheckSetNoReward();

PROC
PROC_GOB_PainPriest_CheckSetNoReward() //penance was failed; GOB_PainPriest_RewardPenance would have set this flag immediately but it failed to start
AND
NOT DB_GlobalFlag(GOB_PainPriest_Event_BadReaction_7bd8c1e4-c23c-4115-9f99-8e7fd16a626c)
AND
DB_GlobalFlag(GOB_PainPriest_Event_FirstHitDone_cdcd32a0-b0b6-e3bf-5d82-2674a67b0c3b)
AND
DB_GlobalFlag(GOB_PainPriest_Event_SecondHitDone_238c0b2a-9dd5-01d6-4871-c9749d796d70)
THEN
SetFlag(GOB_PainPriest_State_ReactedToPenance_a1abb989-ad1d-54ee-7dae-3d0be3c1aab4, NULL_00000000-0000-0000-0000-000000000000);


IF
DialogStarted(GOB_PainPriest_RewardPenance_b3ecbce8-792e-af7e-362d-07adb981ed9b, _)
AND
DB_GOB_PainPriest_ReadyToReward(_Priest, _PenancePlayer)
THEN
NOT DB_GOB_PainPriest_ReadyToReward(_Priest, _PenancePlayer);

IF
DialogEnded(GOB_PainPriest_RewardPenance_b3ecbce8-792e-af7e-362d-07adb981ed9b, _)
AND
DB_GlobalFlag(GOB_PainPriest_State_HasPenitent_dc689f8e-9728-569e-32fa-8698d254dd6d)
THEN
ClearFlag(GOB_PainPriest_State_HasPenitent_dc689f8e-9728-569e-32fa-8698d254dd6d, NULL_00000000-0000-0000-0000-000000000000);


// state cleared
IF
FlagCleared(GOB_PainPriest_State_HasPenitent_dc689f8e-9728-569e-32fa-8698d254dd6d, NULL_00000000-0000-0000-0000-000000000000, _)
THEN
SetEntityEvent(CHARACTERGUID_S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, "GOB_PainPriest_Event_ResetPenance");

IF
FlagCleared(GOB_PainPriest_State_HasPenitent_dc689f8e-9728-569e-32fa-8698d254dd6d, _, _)
AND
DB_GOB_PainPriest_Penitent(_Char)
THEN
ClearFlag((FLAG)GOB_PainPriest_State_Penitent_5e6ff7d1-7018-4938-8030-20ec00b3ce64, _Char, 0); // flagType: Dialog
NOT DB_GOB_PainPriest_Penitent(_Char);
TriggerUnregisterForCharacter(S_GOB_PenanceBox_c7f47012-d006-4cb7-9af3-5d4d0f2b9ca7, _Char);
SetTag(_Char, (TAG)ACT1_GOB_PENITENT_ffc90ec2-bdab-4866-8f0a-0b8db2a164f9);
ObjectTimerLaunch(_Char, "GOB_PainPriest_ReactionVoiceBarkDelay", 3000);

IF
ObjectTimerFinished(_Char, "GOB_PainPriest_ReactionVoiceBarkDelay")
THEN
PROC_GOB_PainPriest_ReactionVoiceBark((CHARACTER)_Char);

// VB
PROC
PROC_GOB_PainPriest_ReactionVoiceBark((CHARACTER)_PenancePlayer)
AND
NOT DB_Players(_PenancePlayer)
AND
QRY_OnlyOnce("GOB_PainPriest_ReactionVoiceBark")
THEN
PROC_GOB_PainPriest_ClearVB(_PenancePlayer);

PROC
PROC_GOB_PainPriest_ReactionVoiceBark((CHARACTER)_PenancePlayer)
AND
DB_Players(_PenancePlayer)
AND
QRY_OnlyOnce("GOB_PainPriest_ReactionVoiceBark")
THEN
DB_GOB_PainPriest_ReactTo(_PenancePlayer);

IF
DB_GOB_PainPriest_ReactTo(_PenancePlayer)
AND
NOT DB_CantTalk(_PenancePlayer)
THEN
NOT DB_GOB_PainPriest_ReactTo(_PenancePlayer);
PROC_GOB_PainPriest_StartVoiceBark(_PenancePlayer);

PROC
PROC_GOB_PainPriest_StartVoiceBark((CHARACTER)_PenancePlayer)
AND
DB_InRegion(_PenancePlayer, S_GOB_PainPenance_SUB_3189cec7-0f63-468c-a147-6a5fe426f518)
THEN
DB_GOB_PainPriest_Tagged(_PenancePlayer);
StartVoiceBark((VOICEBARKRESOURCE)GOB_PainPriest_VB_ReactionPostPenance_20e4f595-9d55-e75b-9edc-114ca2db6e25,_PenancePlayer);

PROC
PROC_GOB_PainPriest_StartVoiceBark((CHARACTER)_PenancePlayer)
AND
NOT DB_InRegion(_PenancePlayer, S_GOB_PainPenance_SUB_3189cec7-0f63-468c-a147-6a5fe426f518)
THEN
PROC_GOB_PainPriest_ClearVB(_PenancePlayer);

IF
VoiceBarkEnded(GOB_PainPriest_VB_ReactionPostPenance_20e4f595-9d55-e75b-9edc-114ca2db6e25, _)
AND
DB_GOB_PainPriest_Tagged(_PenancePlayer)
THEN
PROC_GOB_PainPriest_ClearVB((CHARACTER)_PenancePlayer);

IF
VoiceBarkFailed(GOB_PainPriest_VB_ReactionPostPenance_20e4f595-9d55-e75b-9edc-114ca2db6e25)
AND
DB_GOB_PainPriest_Tagged(_PenancePlayer)
THEN
PROC_GOB_PainPriest_ClearVB(_PenancePlayer);

PROC
PROC_GOB_PainPriest_ClearVB((CHARACTER)_PenancePlayer)
THEN
SetEntityEvent(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, "GOB_PainPriest_AllowPostPenanceAD");
ClearTag(_PenancePlayer, ACT1_GOB_PENITENT_ffc90ec2-bdab-4866-8f0a-0b8db2a164f9);
NOT DB_GOB_PainPriest_Tagged(_PenancePlayer);


//--- Weapon dropped after the penance
IF
EntityEvent(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81, "GOB_PainPriest_Event_PutDownWeapon")
THEN
//Goblins can check a combination of 2 flags to know they can do the penance: ReadyForNextPenance + PostPlayerPenance
SetFlag(GOB_PainPriest_State_ReadyForNextPenance_4afe4a86-2dcb-409f-b83c-63d1bb4f570e, NULL_00000000-0000-0000-0000-000000000000);

//END_REGION
//REGION Penance - reward

IF
FlagSet(GOB_PainPriest_Event_Reward_1c0d3964-5daa-6fd9-b834-a4f442362ad1, (CHARACTER)_Player, _) // flagType: Object
THEN
ApplyStatus(_Player, "GOB_CALMNESS_IN_PAIN", -1.0, 1, NULL_00000000-0000-0000-0000-000000000000);

//END_REGION

PROC
PROC_LevelLoadedOnce("SCL_Main_A")
THEN
PROC_SelfHealing_Enable(S_GOB_PainPriest_cad1854b-8f41-4038-b640-156ee0272f81);
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "Act1"
