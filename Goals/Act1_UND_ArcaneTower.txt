Version 1
SubGoalCombiner SGC_AND
INITSECTION
DB_KnowledgeCheckTrigger("UND_ArcaneTower_Turrets_VB_Check", S_UND_ArcaneTurrets_VB_e499b9ad-ac60-4bb7-b675-023a3bb8ddd7, "Survival", (DIFFICULTYCLASS)DC_Legacy_10_625be976-7a67-4394-97c8-14c69715ae4b);

DB_Dialogs(S_UND_Automaton_5038c0f2-0022-4699-82ce-a319b30616bb,UND_ArcaneTower_Automaton_362763e9-d03f-4984-5324-498a13a57b1c);
DB_SpotPlayers(S_UND_Automaton_5038c0f2-0022-4699-82ce-a319b30616bb,"UND_ArcaneTower_Automaton",NULL_00000000-0000-0000-0000-000000000000,NULL_00000000-0000-0000-0000-000000000000);
DB_SpotPlayers_SpotTrigger(S_UND_Automaton_5038c0f2-0022-4699-82ce-a319b30616bb,"UND_ArcaneTower_Automaton",S_UND_AutomatonStartDialog_41fd5ecd-5b87-4148-b130-29fd6688e8f2);
DB_SpotPlayers_TargetIgnoreCantTalk(S_UND_Automaton_5038c0f2-0022-4699-82ce-a319b30616bb,"UND_ArcaneTower_Automaton");
DB_SpotPlayers_IncludeWildshapedPlayers(S_UND_Automaton_5038c0f2-0022-4699-82ce-a319b30616bb,"UND_ArcaneTower_Automaton");
DB_SpotPlayers_IncludeSummons(S_UND_Automaton_5038c0f2-0022-4699-82ce-a319b30616bb,"UND_ArcaneTower_Automaton");
DB_SpotPlayers_IncludeFollowers(S_UND_Automaton_5038c0f2-0022-4699-82ce-a319b30616bb,"UND_ArcaneTower_Automaton");

PROC_UND_Automaton_SelectFX();

DB_UND_ArcaneGenerator((ITEM)S_UND_ArcaneTower_Generator_dc8f6966-c4e1-4625-96dc-39caf1960ffd);

NOT DB_UND_ArcaneTurrets((GUIDSTRING)NULL_00000000-0000-0000-0000-000000000000,(GUIDSTRING)NULL_00000000-0000-0000-0000-000000000000);
DB_UND_ArcaneTurrets(S_UND_ArcaneTurret_000_74d25e29-aaf7-4f6a-8ea3-9440a13b1aca,S_UND_ArcaneTurretPlatform_000_ecbdc758-4c08-48fd-b6b5-78867a4101af);
DB_UND_ArcaneTurrets(S_UND_ArcaneTurret_001_36cdd687-e6b1-4b98-8669-10a008d56892,S_UND_ArcaneTurretPlatform_001_722812ac-3e78-4764-a1b5-0a61ccc64209);
DB_UND_ArcaneTurrets(S_UND_ArcaneTurret_002_8f68ae5f-9b61-490d-affe-51da080ab41b,S_UND_ArcaneTurretPlatform_002_8d6c0261-1da2-4115-b496-247a7255a09f);
DB_UND_ArcaneTurrets(S_UND_ArcaneTurret_003_869b712b-9865-484f-9491-725ddfed23e5,S_UND_ArcaneTurretPlatform_003_2bbb2f45-16d5-4a8e-bbdd-b4f84579a641);

DB_DropMutingStatussesDialog((DIALOGRESOURCE)UND_ArcaneTower_CINE_PowerCutscene_34e6e6c4-3f20-4a9f-3fbb-b9b1bf2e19a0);



NOT DB_UND_ArcaneTeleports((GUIDSTRING)NULL_00000000-0000-0000-0000-000000000000);
DB_UND_ArcaneTeleports(S_UND_TeleportPlatform_cca4d894-e1be-8fc9-3ba5-3e1cef42fc08);
DB_UND_ArcaneTeleports(S_UND_TeleportPlatform_25c3a775-c52c-83b7-3f52-8017a124758a);
DB_UND_ArcaneTeleports(S_UND_TeleportPlatform_4b1328d6-cf07-8ab9-455f-86a0855b1f65);
DB_UND_ArcaneTeleports(S_UND_TeleportPlatform_8b090309-1a4e-8f75-3da1-fcbe8d651e8a);
DB_UND_ArcaneTeleports(S_UND_TeleportPlatform_6a290f05-2273-8d29-44e7-30e86d2184fc);
DB_UND_ArcaneTeleports(S_UND_TeleportPlatform_c576bc12-4b19-83dc-3139-b9fc7f8b87f5);

NOT DB_UND_ArcaneTeleport_Buttons((ITEM)NULL_00000000-0000-0000-0000-000000000000,0,0);
DB_UND_ArcaneTeleport_Buttons(S_UND_ArcaneTeleport_Button_000_A_5fc19485-8604-45ed-b92c-a07dd2eadf57,0,-1);
DB_UND_ArcaneTeleport_Buttons(S_UND_ArcaneTeleport_Button_000_B_2d9168b3-5677-4fd3-8bc9-47eac095cfee,0,1);
DB_UND_ArcaneTeleport_Buttons(S_UND_ArcaneTeleport_Button_001_A_61d6e162-7c1e-4943-9d94-dd617cc0e787,1,0);
DB_UND_ArcaneTeleport_Buttons(S_UND_ArcaneTeleport_Button_001_B_303b8360-d887-416b-82b5-4e4e0a06815d,1,2);
DB_UND_ArcaneTeleport_Buttons(S_UND_ArcaneTeleport_Button_002_A_e9d4be0a-1443-4991-9acc-424da29a0daf,2,1);
DB_UND_ArcaneTeleport_Buttons(S_UND_ArcaneTeleport_Button_002_B_5c61c880-379d-48c8-9862-1f3ee7496fce,2,3);
DB_UND_ArcaneTeleport_Buttons(S_UND_ArcaneTeleport_Button_003_A_082c3807-0d3e-4b3e-8b1c-aa002617b5ee,3,2);
DB_UND_ArcaneTeleport_Buttons(S_UND_ArcaneTeleport_Button_003_B_f6584b2d-fde0-4a5e-8598-32d9f4e7cf12,3,4);
DB_UND_ArcaneTeleport_Buttons(S_UND_ArcaneTeleport_Button_004_A_ecb459e4-cabb-4c89-b380-7840a9384e76,4,3);
DB_UND_ArcaneTeleport_Buttons(S_UND_ArcaneTeleport_Button_004_B_b2d2745c-b466-4a84-b188-d286e81488c3,4,-1);
DB_UND_ArcaneTeleport_Buttons(S_UND_ArcaneTeleport_Button_-01_A_5fac48f1-41ab-4624-9013-48d262d639a0,-1,4);
DB_UND_ArcaneTeleport_Buttons(S_UND_ArcaneTeleport_Button_-01_B_b0cb5df1-6fa0-4411-a594-d83a44744705,-1,0);

NOT DB_UND_ArcaneTeleport_Positions((TRIGGER)NULL_00000000-0000-0000-0000-000000000000,0);
DB_UND_ArcaneTeleport_Positions(S_UND_ArcaneTeleportPos_-01_36b22d19-5449-42f0-9e2d-702a2a7b9994,-1);
DB_UND_ArcaneTeleport_Positions(S_UND_ArcaneTeleportPos_000_7dd10fec-b6f4-463c-b402-2549d7f74aab,0);
DB_UND_ArcaneTeleport_Positions(S_UND_ArcaneTeleportPos_001_3b4fecbb-17c9-4196-a14b-34173531741e,1);
DB_UND_ArcaneTeleport_Positions(S_UND_ArcaneTeleportPos_002_88469d94-fe6f-4c3c-ae58-44dd7343fef3,2);
DB_UND_ArcaneTeleport_Positions(S_UND_ArcaneTeleportPos_003_fe8c6e50-2804-4375-99f3-836cd1272b05,3);
DB_UND_ArcaneTeleport_Positions(S_UND_ArcaneTeleportPos_004_184b5780-78c0-492c-a3b7-ed458f3b97c0,4);

NOT DB_UND_ArcaneTeleport_SecretRing_Zones((TRIGGER)NULL_00000000-0000-0000-0000-000000000000,(ITEM)NULL_00000000-0000-0000-0000-000000000000);
DB_UND_ArcaneTeleport_SecretRing_Zones(S_UND_ArcaneTower_SecretRing_Zone_000_bee12f5c-3022-4fd0-b41c-036ce52a57ef,S_UND_ArcaneTeleport_Button_000_A_5fc19485-8604-45ed-b92c-a07dd2eadf57);
DB_UND_ArcaneTeleport_SecretRing_Zones(S_UND_ArcaneTower_SecretRing_Zone_004_1890b2e6-dc3c-4bf7-a096-d2c21d9da211,S_UND_ArcaneTeleport_Button_004_B_b2d2745c-b466-4a84-b188-d286e81488c3);


DB_UND_AutomatonStates((FLAG)UND_Automaton_State_Berserk_d872f9ad-ac0b-99b5-48b4-0f80c562ee92,1);
DB_UND_AutomatonStates(UND_Automaton_State_Deactivated_4967548f-8f43-4020-be0f-d127209a7502,-1);
DB_UND_AutomatonStates(UND_Automaton_State_Guarding_00e17d6b-7147-809f-c251-0398d2c70ac4,1);
DB_UND_AutomatonStates(UND_Automaton_State_Serving_7a876651-c549-9b90-6a8a-37b25380beea,0);
SetFlag(UND_Automaton_State_Guarding_00e17d6b-7147-809f-c251-0398d2c70ac4,S_UND_Automaton_5038c0f2-0022-4699-82ce-a319b30616bb,0);

NOT DB_UND_ArcaneTower_Poems((ITEM)NULL_00000000-0000-0000-0000-000000000000,(FLAG)NULL_00000000-0000-0000-0000-000000000000);
DB_UND_ArcaneTower_Poems(S_UND_ClericPoem_Berserk_4bf3a80f-3011-477c-b9ba-a036f5645099,UND_ArcaneTower_Knows_PoemBerserk_173a2d4b-6a43-429b-a4d8-0d22b73ca3ea);
DB_UND_ArcaneTower_Poems(S_UND_ClericPoem_Gift_72e60aab-4d7f-4b62-b784-2d6fa705abb1,UND_ArcaneTower_Knows_PoemGift_9ca1ce84-cbe4-4dc4-aa95-651e55482020);
DB_UND_ArcaneTower_Poems(S_UND_ClericPoem_Peace_c294ca4c-b2e1-4ebd-81ff-5a6fd6fa12e5,UND_ArcaneTower_Knows_PoemPeace_c50a156f-5a2f-4c00-bd4e-b8fdf5cf87a2);
DB_UND_ArcaneTower_Poems(S_UND_ClericPoem_Secret_681db24e-8658-4c43-b462-1e6cebdb42a9,UND_ArcaneTower_Knows_PoemSecret_a13865ed-6c65-4e3b-bde6-592a832feb75);
DB_UND_ArcaneTower_Poems(S_UND_ClericPoem_Love_647431bf-1b59-442a-90ba-406a05328c74,UND_ArcaneTower_Knows_PoemLove_faa7d932-b56e-484f-b26e-ae6b77bdd464);

DB_BookFlags(S_UND_ClericLetter_Bulette_6ac85314-d8e1-408d-babd-8e9ff4349d42,UND_ArcaneTower_Knows_PetGrave_2f615d8f-084f-fb7c-851b-9406059bc9ab);

DB_HasItemEvent(S_UND_Automaton_Gift_65c73017-7e8d-4971-ac1e-cb55f0d9b3e0,UND_Automaton_HasGift_cf62aa09-600d-4b90-8faf-f2c6be929941);
DB_GiveItemToEvent(S_UND_Automaton_Gift_65c73017-7e8d-4971-ac1e-cb55f0d9b3e0,UND_Automaton_Event_GiveGift_4512db61-34bb-43c2-82e5-b1b228ba1b62);
DB_HasItemEvent(S_UND_ClericPetCollar_4d93e3eb-c420-4c03-aadf-2c09b14726fe,UND_ClericPet_HasCollar_06f863a7-9bf4-4742-a14f-20bc03505a9b);
DB_SetStoryFlagWhenEquipped(S_UND_ClericPetCollar_4d93e3eb-c420-4c03-aadf-2c09b14726fe,UND_ClericPet_EquippedCollar_8b34248a-74f3-4276-92bd-99148d9cd6ed);

NOT DB_UND_ArcaneTower_Lights((ITEM)NULL_00000000-0000-0000-0000-000000000000);

DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_0_00_423c38df-531a-48fd-9e89-f693ea022cb5);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_0_01_026169aa-1453-43b9-8d4d-3d966cac4db1);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_0_02_357beed1-6988-4a51-8537-78d828772a41);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_0_03_5a761b4f-8b5c-46e6-a701-b6ea12ef9ca9);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_0_04_f5321c46-068a-488b-b0e1-7538a6f69629);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_0_05_a1aa7335-b902-414c-86af-7ba18203a43d);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_1_00_428e8c26-2c57-4041-a8d1-2b9a94e0150c);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_1_01_4b576909-e200-4f47-8761-e98ce143e219);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_1_02_6435e179-3acc-45c9-9d89-5e9ec687bf5a);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_1_03_1c4525ac-57b2-43b0-90fa-164ac6796517);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_1_04_2ea45931-4d6a-4c13-96a9-70f54c852e64);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_1_05_3b2382a2-e1a8-434f-974f-20ea80ec9cca);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_1_06_6afdccc2-02c4-4c2d-96ab-bd50967eb17c);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_1_07_df1fd7ed-b308-4b7f-8027-089b10cd95cc);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_1_08_1949871a-d920-4e1c-9c75-4932637742a6);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_1_09_619c51f4-acae-4aed-88e0-bf19929086c3);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_2_00_4f22fe60-544a-4189-84bd-b0704e6a0095);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_2_01_3dd89583-7398-4f4e-9a2d-0a8b330d689e);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_2_02_dd1c54c2-3368-4e04-9d45-50aa83a444a6);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_2_03_d7742441-4785-455e-9104-6946847b2664);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_2_04_e64244e7-5711-411d-a9ee-9f8ef256c406);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_2_05_7c7dda88-b78f-4fe8-a3df-4a7a7f80e76a);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_2_05_d158ceb6-a9ee-4465-896c-32d0ba6a4c1c);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_2_06_22075556-ff9e-473c-946e-e08fca970e7c);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_2_06_9d757b62-563e-47b4-9dab-ee1cf3f8e813);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_2_07_2a95a626-1083-4e5e-8e7c-3677d91ba1b8);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_2_08_f7eee509-c97c-4792-9134-4c1d2a957476);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_3_00_0714364f-b0f5-45ba-826a-13e42fcc4ba4);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_3_01_7dbc0fa3-6881-4dc8-9793-6755bab6bd51);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_3_02_ce1da953-a6a6-416e-9090-b96e09731722);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_3_03_5ee426e8-2b08-4692-8e4b-2029b2469383);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_3_04_5c2c5aef-e67c-429a-a0e1-7a62b5ee0597);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_3_05_c294b371-fc8f-44c4-8c02-5fca65f35591);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_3_06_a71d87c5-b940-4df9-be2f-3ca305abbc8e);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_3_07_dca7287f-d9f0-461e-b0c3-39c9eabb00e7);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_3_08_6306482c-6b64-46cb-92c9-cd0cddda6d15);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_4_00_7742d761-dd25-42be-9e01-e8b16b187ade);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_4_01_d65f00af-3125-4fc4-a560-61cf08f0645f);
DB_UND_ArcaneTower_Lights(S_UND_ArcaneTower_Lamp_4_02_64b929a6-b705-42c4-9536-e4f8142d7511);

NOT DB_UND_ArcaneTower_Pipes((ITEM)NULL_00000000-0000-0000-0000-000000000000);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_Attachment_A_B_Off_000_b242a86b-6b24-84cb-0161-ba5a6eee297c);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_Attachment_A_B_Off_001_5998e0e3-2e1b-851b-3b98-ca827bab7b67);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_Attachment_A_B_Off_002_a33e1df4-ed79-8b39-0f28-c3c216f0070e);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_Attachment_A_B_Off_003_e987fad2-6206-877f-2e7c-ee4c21250d41);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_Attachment_A_B_Off_004_9dee9b62-4cac-8fd1-253a-d44568a93490);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_Attachment_A_B_Off_005_9bc8fc57-dd66-81a2-11d8-1cb91db3cdb6);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_Attachment_A_B_Off_007_0de22311-a50c-894b-2c7f-8d74ae630ce8);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_Attachment_A_B_Off_008_1c88fce7-748a-806d-0da7-063d85d7b924);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_Attachment_A_B_Off_009_9b942ce4-5764-8eae-22a8-cbf03c20d962);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_Attachment_A_B_Off_010_35c42d8c-ef72-8d55-0729-61edf803c85b);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_Attachment_A_B_Off_011_3c7ae25b-e402-8c31-1034-95117256efc8);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_Attachment_A_B_Off_012_cf825c9a-566e-8839-010e-487c8fd9f4c9);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_Attachment_A_B_Off_013_3c42f5db-9823-8be8-3744-87e7ac16fa62);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_Attachment_A_B_Off_014_8ea42da2-c971-8065-373d-349efcc33ee5);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_Attachment_A_B_Off_015_fa503092-06dd-84a5-1ef6-0c44bde3f97c);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_Attachment_A_E_Off_000_7a2ea62a-ee1c-8283-12c1-2d79904b4f06);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_Attachment_A_E_Off_001_71796178-e4fe-817c-1ad7-ea916bf15060);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_Attachment_A_E_Off_002_70516585-49fa-8a4b-3ba0-e1b5bb903f77);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_Attachment_A_E_Off_003_a00f840c-4841-8cbd-1608-2bededee8598);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_Attachment_A_E_Off_004_e8f37eee-f362-8a99-3860-15288b4738c6);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_Attachment_A_E_Off_005_23cf2f8c-42e1-8070-2a35-84c161a6800d);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_Attachment_A_E_Off_006_a61bf7a7-3f8a-8991-2d85-aecf51491f62);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_Attachment_A_E_Off_007_008c3d16-2616-88ee-28ba-9a693ce0902a);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_Attachment_A_E_Off_008_6123fca8-b47e-8e6e-0a4f-206ebcc590ce);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_GlassWindow_A_Off_000_2510a287-0e10-8d8e-0598-fd2495bd2e46);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_GlassWindow_A_Off_001_f581c126-f694-89e6-169b-8406f7a783b5);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_GlassWindow_A_Off_002_2f101658-4b04-8d05-2ccc-a9f5d07fe855);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_GlassWindow_A_Off_003_ce2f47b2-dadf-8825-3119-54c6e70a5d2c);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_GlassWindow_A_Off_004_1e351b0a-19bc-8e44-093b-46ef1fbc2081);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_GlassWindow_A_Off_005_5642facd-d95e-8a41-1675-815bd8d3c53b);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_GlassWindow_A_Off_006_62874c5b-7af0-8432-2283-9328e7dc79c3);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_GlassWindow_A_Off_007_912a17ff-fd74-8f1c-24ac-a482f89e9181);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_GlassWindow_A_Off_008_8a7aa3c0-8ad1-84e4-146b-1643dc59a773);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_GlassWindow_A_Off_009_97ecca56-b74b-80ac-0377-3770becb2619);
DB_UND_ArcaneTower_Pipes(DEC_Underdark_WizardTower_Machinery_Pipes_GlassWindow_A_Off_010_2fd7c009-2830-884e-294c-3fef761107aa);

DB_UND_ArcaneTower_SoundHelpers((ITEM)S_UND_ArcaneTower_Generator_SoundHelper_2e90c673-c719-441a-9560-ca0a3e61a920);
DB_UND_ArcaneTower_SoundHelpers(S_UND_ArcaneTower_TeleportPlatform_SoundHelper_-01_d73601b2-7a75-455a-9154-38adc3774d9c);
DB_UND_ArcaneTower_SoundHelpers(S_UND_ArcaneTower_TeleportPlatform_SoundHelper_000_58e2c170-371d-44d8-89d7-6f6cce91de4b);
DB_UND_ArcaneTower_SoundHelpers(S_UND_ArcaneTower_TeleportPlatform_SoundHelper_001_59f287a6-1aef-4667-a72f-bdc72bdb962f);
DB_UND_ArcaneTower_SoundHelpers(S_UND_ArcaneTower_TeleportPlatform_SoundHelper_002_1fb68983-7b02-4448-ab60-bb2433707e66);
DB_UND_ArcaneTower_SoundHelpers(S_UND_ArcaneTower_TeleportPlatform_SoundHelper_003_b149bb7b-c4cb-4583-b180-2bb6649c1ad2);
DB_UND_ArcaneTower_SoundHelpers(S_UND_ArcaneTower_TeleportPlatform_SoundHelper_004_8e403b6a-59a6-4fd0-9686-05eab7661ec9);

PROC_UND_ArcaneTower_SoundOff();

//REGION Autosave
DB_AutoSaveTrigger((TRIGGER)S_UND_ArcaneTower_Autosave_5744da0a-3be8-41a8-ae44-ca231643c3ad);

//END_REGION
KBSECTION
//REGION Debug
IF
TextEvent("und_tower_turrets_off")
THEN
SetFlag(Debug_UND_ArcaneTurretsOff_bc42370d-d121-4603-9e5c-c085cf2e8c13,NULL_00000000-0000-0000-0000-000000000000,0);

IF
TextEvent("und_tower_turrets_on")
THEN
ClearFlag(Debug_UND_ArcaneTurretsOff_bc42370d-d121-4603-9e5c-c085cf2e8c13,NULL_00000000-0000-0000-0000-000000000000,0);

IF
TextEvent("und_arcane_poems_reset")
AND
QRY_OnlyOnce_Reset("UND_ArcaneTower_PAD_Poems")
THEN
DB_NOOP(1);

IF
TextEvent("und_arcane_poems")
AND
DB_UND_ArcaneTower_Poems(_Poem,_Flag)
THEN
SetFlag(_Flag,NULL_00000000-0000-0000-0000-000000000000);

IF
TextEvent("und_sussur_flowers")
AND
GetHostCharacter(_Player)
THEN
ToInventory(S_UND_SussurFlower_000_bed936c2-370c-461b-aa97-d8f1e8a6492f,_Player);
ToInventory(S_UND_SussurFlower_001_bc63faa4-22d4-4103-a37f-302a95ce563c,_Player);
ToInventory(S_UND_SussurFlower_002_c3a2e5c7-3468-4a9d-a1f1-890e34e33ee6,_Player);
ToInventory(S_UND_SussurFlower_003_b4db33ec-cc2b-4d16-91af-78a884b83e5a,_Player);

IF
TextEvent("und_sound_on")
AND
DB_UND_ArcaneGenerator(_Generator)
THEN
PROC_UND_ArcaneTower_SoundOn();

IF
TextEvent("und_sound_off")
AND
DB_UND_ArcaneGenerator(_Generator)
THEN
PROC_UND_ArcaneTower_SoundOff();
//END_REGION Debug


PROC
PROC_GLO_KnowledgeCheckSuccess(_Player,"UND_ArcaneTower_Turrets_VB_Check",S_UND_ArcaneTurrets_VB_e499b9ad-ac60-4bb7-b675-023a3bb8ddd7)
AND
DB_Players(_Player)
THEN
PROC_TryStartAD(UND_ArcaneTurrets_PAD_9e44746d-8d8f-21ea-c2ef-d41f037912c0,_Player);

IF
UseStarted(_Player,S_UND_ArcaneTower_FrontDoorLever_f714d718-887d-4721-8024-873fd5c1b287)
AND
NOT QRY_UND_ArcaneTower_OpenFrontDoor()
AND
QRY_IsCloseding((ITEM)S_UND_ArcaneTower_FrontDoor_5873f357-8c46-4a8d-98e9-606efe339df1)
THEN
Unlock(S_UND_ArcaneTower_FrontDoor_5873f357-8c46-4a8d-98e9-606efe339df1);
Open(S_UND_ArcaneTower_FrontDoor_5873f357-8c46-4a8d-98e9-606efe339df1);

QRY
QRY_UND_ArcaneTower_OpenFrontDoor()
AND
QRY_IsOpeneding((ITEM)S_UND_ArcaneTower_FrontDoor_5873f357-8c46-4a8d-98e9-606efe339df1)
THEN
Close(S_UND_ArcaneTower_FrontDoor_5873f357-8c46-4a8d-98e9-606efe339df1);

IF
UseStarted(_Player,S_UND_ArcaneTower_GardenDoorLever_6509148c-18f6-4b14-8059-47836009d748)
AND
NOT QRY_UND_ArcaneTower_OpenGardenDoor()
AND
QRY_IsCloseding((ITEM)S_UND_ArcaneTower_GardenDoor_fd97735e-0d1c-4617-99e0-930bf9ba2a83)
THEN
Unlock(S_UND_ArcaneTower_GardenDoor_fd97735e-0d1c-4617-99e0-930bf9ba2a83);
Open(S_UND_ArcaneTower_GardenDoor_fd97735e-0d1c-4617-99e0-930bf9ba2a83);

QRY
QRY_UND_ArcaneTower_OpenGardenDoor()
AND
QRY_IsOpeneding((ITEM)S_UND_ArcaneTower_GardenDoor_fd97735e-0d1c-4617-99e0-930bf9ba2a83)
THEN
Close(S_UND_ArcaneTower_GardenDoor_fd97735e-0d1c-4617-99e0-930bf9ba2a83);

//REGION Root swaps on activate/deactivate
IF
EntityEvent(_Turret,"UND_ArcaneTurret_Char_Activate")
AND
DB_UND_ArcaneTurrets(_Turret,_Platform)
THEN
RemoveStatus(_Turret,"UND_ARCANE_TURRET_DEACTIVATED");
SetCanFight(_Turret, 1);
SetCanJoinCombat(_Turret, 1);
Transform(_Platform,BLD_GEN_Arcane_Turret_A_Floating_Platform_A_Activated_A_7d3d485f-4e62-4721-a0b6-05f11e07f221,POLYMORPH_a0ddddc8-255f-4014-9f63-d7608eb1c2a0);
RealtimeObjectTimerLaunch(_Turret,"UND_ArcaneTurret_Char_Activate",1000);

IF
ObjectTimerFinished(_Turret,"UND_ArcaneTurret_Char_Activate")
THEN
Transform(_Turret,BLD_GEN_Arcane_Turret_A_Floating_Activated_A_dc180f8b-9c3d-40e4-97f0-af6759781bcf,POLYMORPH_a0ddddc8-255f-4014-9f63-d7608eb1c2a0);

IF
EntityEvent(_Turret,"UND_ArcaneTurret_Char_Deactivate")
AND
DB_UND_ArcaneTurrets(_Turret,_Platform)
THEN
Transform(_Turret,BLD_GEN_Arcane_Turret_A_Floating_A_a7ae5b16-c35e-4179-bc60-d8dd364dcd40,POLYMORPH_a0ddddc8-255f-4014-9f63-d7608eb1c2a0);
RealtimeObjectTimerLaunch(_Turret,"UND_ArcaneTurret_Char_Deactivate_1",300);

IF
Dying(_Turret)
AND
DB_UND_ArcaneTurrets(_Turret,_Platform)
THEN
Transform(_Turret,BLD_GEN_Arcane_Turret_A_Floating_A_a7ae5b16-c35e-4179-bc60-d8dd364dcd40,POLYMORPH_a0ddddc8-255f-4014-9f63-d7608eb1c2a0);
RealtimeObjectTimerLaunch(_Turret,"UND_ArcaneTurret_Char_Deactivate_1",300);

IF
ObjectTimerFinished(_Turret,"UND_ArcaneTurret_Char_Deactivate_1")
AND
DB_UND_ArcaneTurrets(_Turret,_Platform)
THEN
ApplyStatus(_Turret,"UND_ARCANE_TURRET_DEACTIVATED",-1.0,1,NULL_00000000-0000-0000-0000-000000000000);
SetCanFight(_Turret, 0);
SetCanJoinCombat(_Turret, 0);
RealtimeObjectTimerLaunch(_Platform,"UND_ArcaneTurret_Char_Deactivate_2",800);

IF
ObjectTimerFinished(_Platform,"UND_ArcaneTurret_Char_Deactivate_2")
THEN
Transform(_Platform,BLD_GEN_Arcane_Turret_A_Floating_Platform_A_a8cf7ea0-74ac-4d62-84a1-065e4e99e2dc,POLYMORPH_a0ddddc8-255f-4014-9f63-d7608eb1c2a0);
//END_REGION Root swaps on activate/deactivate


//REGION Arcane Power
IF
FlagSet(UND_ArcaneTower_MainPowerOn_9423ae80-9b08-4fda-95c6-1832f753ca2b,_,_)
AND
DB_UND_ArcaneTeleports(_TeleportPlatform)
THEN
ApplyStatus(_TeleportPlatform,"ARCANE_TELEPORT_PLATFORM",-1.0,1,NULL_00000000-0000-0000-0000-000000000000);

IF
FlagCleared(UND_ArcaneTower_MainPowerOn_9423ae80-9b08-4fda-95c6-1832f753ca2b,_,_)
AND
DB_UND_ArcaneTeleports(_TeleportPlatform)
THEN
RemoveStatus(_TeleportPlatform,"ARCANE_TELEPORT_PLATFORM");

IF
Combined(_Generator,_SussurFlower,_,_,_,_Player,_GeneratorActive)
AND
DB_UND_ArcaneGenerator(_Generator)
AND
GetFlag(UND_ArcaneTower_MainPowerOn_9423ae80-9b08-4fda-95c6-1832f753ca2b,NULL_00000000-0000-0000-0000-000000000000,0)
THEN
DB_UND_ArcaneGenerator_Combined(1);
DB_UND_ArcaneTower_PowerCutsceneFor(_Player);
SetFlag(UND_ArcaneTower_MainPowerOn_9423ae80-9b08-4fda-95c6-1832f753ca2b,NULL_00000000-0000-0000-0000-000000000000);

IF
Combined(_Generator,_SussurFlower,_,_,_,_Player,_GeneratorActive)
AND
DB_UND_ArcaneGenerator(_Generator)
THEN
NOT DB_UND_ArcaneGenerator(_Generator);
DB_UND_ArcaneGenerator(_GeneratorActive);
SetCanInteract(_GeneratorActive,0);

// Flag set/cleared -> Transform generator (for debug purposes)
IF
FlagSet(UND_ArcaneTower_MainPowerOn_9423ae80-9b08-4fda-95c6-1832f753ca2b,_,_)
AND
NOT DB_UND_ArcaneGenerator_Combined(1)
AND
DB_UND_ArcaneGenerator(_Generator)
THEN
DB_UND_ArcaneGenerator_Combined(1);
SetCanInteract(_Generator,0);

IF
FlagCleared(UND_ArcaneTower_MainPowerOn_9423ae80-9b08-4fda-95c6-1832f753ca2b,_,_)
AND
DB_UND_ArcaneGenerator_Combined(1)
AND
DB_UND_ArcaneGenerator(_Generator)
THEN
SetCanInteract(_Generator,1);
NOT DB_UND_ArcaneGenerator_Combined(1);

IF
FlagSet(UND_ArcaneTower_MainPowerOn_9423ae80-9b08-4fda-95c6-1832f753ca2b,_,_)
AND
DB_UND_ArcaneTower_Pipes(_Pipe)
THEN
SetEntityEvent(_Pipe,"UND_ArcaneTower_Pipe_Activate");
//END_REGION Arcane Power


//REGION Cutscenes
IF
FlagSet(UND_ArcaneTower_MainPowerOn_9423ae80-9b08-4fda-95c6-1832f753ca2b,_,_)
AND
NOT DB_UND_ArcaneTower_PowerCutsceneFor(_)
AND
GetHostCharacter(_Player)
THEN
DB_UND_ArcaneTower_PowerCutsceneFor(_Player);

IF
FlagSet(UND_ArcaneTower_MainPowerOn_9423ae80-9b08-4fda-95c6-1832f753ca2b,_,_)
AND
DB_UND_ArcaneTower_PowerCutsceneFor(_Player)
AND
GetFlag(Debug_UND_ArcaneTower_NoCinematic_02fd3624-c182-4a64-9ca5-87dc3c6f289d,NULL_00000000-0000-0000-0000-000000000000,0)
AND
QRY_StartDialog_Fixed(UND_ArcaneTower_CINE_PowerCutscene_34e6e6c4-3f20-4a9f-3fbb-b9b1bf2e19a0,_Player)
THEN
DB_NOOP(1);
//END_REGION Cutscenes


//REGION Arcane Tower Teleport
PROC
PROC_BlockUseOfItem(_Player,_Button)
AND
DB_UND_ArcaneTeleport_Buttons(_Button,_,_)
AND
DB_PartyMembers(_Player)
AND
NOT QRY_UND_ArcaneTeleport_Active()
THEN
DB_CustomUseItemResponse(_Player,_Button,0);
PROC_UND_ArcaneTeleportSkillCheck(_Player,_Button);

QRY
QRY_UND_ArcaneTeleport_Active()
AND
GetFlag(UND_ArcaneTower_MainPowerOn_9423ae80-9b08-4fda-95c6-1832f753ca2b,NULL_00000000-0000-0000-0000-000000000000,1)
THEN
DB_NOOP(1);

PROC
PROC_UND_ArcaneTeleportSkillCheck((CHARACTER)_Player,(ITEM)_Button)
AND
GetFlag(UND_ArcaneTower_VB_LiftBocked_HasMet_e622c842-f72d-ee9c-f883-f5f59d07d815,_Player,0)
AND
QRY_UND_ArcaneTower_LiftBlockDelay(_Player)
THEN
PROC_TrySkillCheck(_Player,_Button,"Arcana",(DIFFICULTYCLASS)DC_Legacy_10_625be976-7a67-4394-97c8-14c69715ae4b,"UND_ArcaneTeleportSkillCheck");

PROC
PROC_RollResult("UND_ArcaneTeleportSkillCheck",_Player,_,1)
THEN
SetFlag(UND_ArcaneTower_LiftBlocked_SkillCheckPassed_5401976f-fa94-4613-b4eb-9b4cc60b5b88,_Player,0);

PROC
PROC_RollResult("UND_ArcaneTeleportSkillCheck",_Player,_,_Result)
AND
_Result != 2
THEN
StartVoiceBark(UND_ArcaneTower_VB_LiftBlocked_a5205c88-43c9-b54b-944b-4bbfa9b33f11,_Player);

PROC
PROC_RollResult("UND_ArcaneTeleportSkillCheck",_Player,_,2)
THEN
NOT DB_OnlyOncePerPlayer(_Player,"UND_ArcaneTower_LiftBlocked");

PROC
PROC_UND_ArcaneTeleportSkillCheck((CHARACTER)_Player,(ITEM)_Button)
AND
GetFlag(UND_ArcaneTower_VB_LiftBocked_HasMet_e622c842-f72d-ee9c-f883-f5f59d07d815,_Player,1)
AND
QRY_UND_ArcaneTower_LiftBlockDelay(_Player)
THEN
StartVoiceBark(UND_ArcaneTower_VB_LiftBlocked_a5205c88-43c9-b54b-944b-4bbfa9b33f11,_Player);

QRY
QRY_UND_ArcaneTower_LiftBlockDelay((CHARACTER)_Player)
AND
IsControlled(_Player,1)
AND
NOT DB_OnlyOncePerPlayer(_Player,"UND_ArcaneTower_LiftBlocked")
THEN
DB_OnlyOncePerPlayer(_Player,"UND_ArcaneTower_LiftBlocked");
RealtimeObjectTimerLaunch(_Player,"UND_ArcaneTower_LiftBlocked",60000);

IF
ObjectTimerFinished(_Player,"UND_ArcaneTower_LiftBlocked")
THEN
NOT DB_OnlyOncePerPlayer((CHARACTER)_Player,"UND_ArcaneTower_LiftBlocked");

IF
UseStarted(_Char,_Button)
AND
DB_UND_ArcaneTeleport_Buttons(_Button,_AtFloor,_ToFloor)
AND
DB_UND_ArcaneTeleport_Positions(_FromTrigger,_AtFloor)
AND
DB_UND_ArcaneTeleport_Positions(_ToTrigger,_ToFloor)
THEN
PlaySound(_Button,"SE_UND_ArcaneTower_Generator_Mechanism_Button");
PlayEffect(_FromTrigger,VFX_Script_Underdark_Arcane_Teleportation_Out_01_7c7b8a27-f4ec-c986-6c23-5d70305d11b2);
PlayEffect(_ToTrigger,VFX_Script_Underdark_Arcane_Teleportation_In_01_53b5bfdd-982b-d4c6-a226-128253957bca);

IF
DB_UND_ArcaneTeleport_SecretRing_Zones(_Trigger,_Button)
THEN
SetOnStage(_Button,0);
PROC_TriggerRegisterForPlayers(_Trigger);

IF
EnteredTrigger(_Player,_Trigger)
AND
DB_UND_ArcaneTeleport_SecretRing_Zones(_Trigger,_Button)
AND
DB_Players(_Player)
AND
QRY_UND_ArcaneTower_SecretRingEquipped(_Player)
THEN
PROC_UND_ArcaneTower_RevealSecretButton(_Button,_Player);

IF
LeftTrigger(_Player,_Trigger)
AND
DB_UND_ArcaneTeleport_SecretRing_Zones(_Trigger,_Button)
AND
DB_Players(_Player)
AND
QRY_UND_ArcaneTower_SecretRingEquipped(_Player)
THEN
PROC_UND_ArcaneTower_HideSecretButton(_Button);

IF
Equipped(S_UND_ArcaneTower_SecretRing_a5903973-28eb-4d41-a0b9-478680492145,_Player)
AND
DB_UND_ArcaneTeleport_SecretRing_Zones(_Trigger,_Button)
AND
IsInTrigger(_Player,_Trigger,1)
THEN
PROC_UND_ArcaneTower_RevealSecretButton(_Button,_Player);

IF
Unequipped(S_UND_ArcaneTower_SecretRing_a5903973-28eb-4d41-a0b9-478680492145,_Player)
AND
DB_UND_ArcaneTeleport_SecretRing_Zones(_Trigger,_Button)
AND
IsInTrigger(_Player,_Trigger,1)
THEN
PROC_UND_ArcaneTower_HideSecretButton(_Button);

PROC
PROC_UND_ArcaneTower_RevealSecretButton((ITEM)_Button,(CHARACTER)_Player)
THEN
SetOnStage(_Button,1);

PROC
PROC_UND_ArcaneTower_RevealSecretButton((ITEM)_Button,(CHARACTER)_Player)
AND
QRY_OnlyOnce("UND_ArcaneTower_ButtonRevealFX")
THEN
PROC_LoopEffect(VFX_Script_Perception_Default_01_46bd169e-bbb5-a6fe-0fe7-97c64f620d5d,_Button,"UND_ArcaneTower_ButtonReveal","WLD_Main_A","");
RealtimeObjectTimerLaunch(_Button,"UND_ArcaneTower_ButtonReveal",5000);

PROC
PROC_UND_ArcaneTower_RevealSecretButton((ITEM)_Button,(CHARACTER)_Player)
AND
QRY_OnlyOnce("UND_ArcaneTower_PAD_SecretButtons")
THEN
PROC_TryStartAD(UND_ArcaneTower_PAD_SecretButtons_8542237e-1746-cdfa-4048-ec98754e7796,_Player);

PROC
PROC_UND_ArcaneTower_HideSecretButton((ITEM)_Button)
THEN
RealtimeObjectTimerCancel(_Button,"UND_ArcaneTower_ButtonReveal");
PROC_StopLoopEffect(_Button,"UND_ArcaneTower_ButtonReveal");
SetOnStage(_Button,0);

IF
ObjectTimerFinished(_Button,"UND_ArcaneTower_ButtonReveal")
THEN
PROC_StopLoopEffect(_Button,"UND_ArcaneTower_ButtonReveal");

QRY
QRY_UND_ArcaneTower_SecretRingEquipped((CHARACTER)_Player)
AND
GetEquippedItem(_Player,"Ring",S_UND_ArcaneTower_SecretRing_a5903973-28eb-4d41-a0b9-478680492145)
THEN
DB_NOOP(1);

QRY
QRY_UND_ArcaneTower_SecretRingEquipped((CHARACTER)_Player)
AND
GetEquippedItem(_Player,"Ring2",S_UND_ArcaneTower_SecretRing_a5903973-28eb-4d41-a0b9-478680492145)
THEN
DB_NOOP(1);
//END_REGION Arcane Tower Teleport


//REGION Secret basement access
IF
DialogEnded(UND_ArcaneTower_Automaton_362763e9-d03f-4984-5324-498a13a57b1c,_DialogID)
AND
GetFlag(UND_Automaton_Event_ShowSecret_6ff79fa0-b72f-4b9b-bfb4-907c39dcc13d,S_UND_Automaton_5038c0f2-0022-4699-82ce-a319b30616bb,1)
AND
NOT DB_UND_ArcaneTower_SecretRevealed(1)
AND
DB_DialogPlayers(_DialogID, _Player, 1)
THEN
DB_UND_ArcaneTower_SecretRevealed(1);
PROC_UND_ArcaneTower_GiveReward((CHARACTER)_Player);

PROC
PROC_UND_ArcaneTower_GiveReward((CHARACTER)_Player)
AND
IsInInventoryOf(S_UND_ArcaneTower_SecretRing_a5903973-28eb-4d41-a0b9-478680492145,S_UND_Automaton_5038c0f2-0022-4699-82ce-a319b30616bb,1)
THEN
QuestUpdate(_Player, "HIDDEN_WLD_Rewards_New", "UND_ArcaneTower_SecretRing");

IF
UseStarted(_Char,S_UND_ArcaneTower_SecretLever_4e2b7892-ea4a-42d0-9df7-fb8e7ef52cb5)
THEN
PROC_TryStartAD((DIALOGRESOURCE)GLO_WhatDidThatDo_AD_e0f4869f-3902-00df-1775-28b0bce3c88e, _Char);
ItemMoveTo(S_UND_ArcaneTower_SecretWall_e94b8aa5-da6c-49a6-8fcb-774f84979976,S_UND_ArcaneTower_SecretWall_SlidePos_72874f36-9be5-4712-ab35-759c7bf5891a,
			1.0, 0.0, 0, "", 0);
DB_UND_ArcaneTower_SecretWall_Opened(1);

IF
UseStarted(_Char,S_UND_ArcaneTower_SecretLever_Inside_a707a82a-5bab-4182-8c43-589af4e93bd7)
AND
NOT DB_UND_ArcaneTower_SecretWall_Opened(1)
THEN
ItemMoveTo(S_UND_ArcaneTower_SecretWall_e94b8aa5-da6c-49a6-8fcb-774f84979976,S_UND_ArcaneTower_SecretWall_SlidePos_72874f36-9be5-4712-ab35-759c7bf5891a,
			1.0, 0.0, 0, "", 0);

IF
UseStarted(_Char,S_UND_ArcaneTower_SecretLever_Inside_a707a82a-5bab-4182-8c43-589af4e93bd7)
AND
DB_UND_ArcaneTower_SecretWall_Opened(1)
THEN
ItemMoveTo(S_UND_ArcaneTower_SecretWall_e94b8aa5-da6c-49a6-8fcb-774f84979976,S_UND_ArcaneTower_SecretWall_Pos_6bf299a9-a0a6-4074-a881-dbf879e5c8fb,
			1.0, 0.0, 0, "", 0);

IF
UseStarted(_Char,S_UND_ArcaneTower_SecretLever_Inside_a707a82a-5bab-4182-8c43-589af4e93bd7)
AND
NOT QRY_UND_ArcaneTower_SecretWall_Open()
THEN
NOT DB_UND_ArcaneTower_SecretWall_Opened(1);

QRY
QRY_UND_ArcaneTower_SecretWall_Open()
AND
NOT DB_UND_ArcaneTower_SecretWall_Opened(1)
THEN
DB_UND_ArcaneTower_SecretWall_Opened(1);
//END_REGION Secret basement access


//REGION Automaton flags
IF
FlagSet(_Flag,_,_)
AND
DB_UND_AutomatonStates(_Flag,_Unsheathe)
AND
DB_UND_AutomatonStates(_OtherFlag,_)
AND
_OtherFlag != _Flag
THEN
ClearFlag(_OtherFlag,S_UND_Automaton_5038c0f2-0022-4699-82ce-a319b30616bb,0);

IF
FlagSet(_Flag,_,_)
AND
DB_UND_AutomatonStates(_Flag,1)
THEN
SetWeaponUnsheathed(S_UND_Automaton_5038c0f2-0022-4699-82ce-a319b30616bb,1,0);

IF
FlagSet(_Flag,_,_)
AND
DB_UND_AutomatonStates(_Flag,0)
THEN
SetWeaponUnsheathed(S_UND_Automaton_5038c0f2-0022-4699-82ce-a319b30616bb,0,0);

IF
FlagSet(UND_Automaton_State_Deactivated_4967548f-8f43-4020-be0f-d127209a7502,_,_)
THEN
PROC_ForceStopDialog(S_UND_Automaton_5038c0f2-0022-4699-82ce-a319b30616bb);
SetHasDialog(S_UND_Automaton_5038c0f2-0022-4699-82ce-a319b30616bb,0);

IF
FlagCleared(UND_Automaton_State_Deactivated_4967548f-8f43-4020-be0f-d127209a7502,_,_)
THEN
SetHasDialog(S_UND_Automaton_5038c0f2-0022-4699-82ce-a319b30616bb,1);

IF
DialogEnded(UND_ArcaneTower_Automaton_362763e9-d03f-4984-5324-498a13a57b1c,_ID)
AND
GetFlag(UND_Automaton_State_Guarding_00e17d6b-7147-809f-c251-0398d2c70ac4,S_UND_Automaton_5038c0f2-0022-4699-82ce-a319b30616bb,1)
AND
DB_DialogSpeakers(_ID,_Speaker,2)
THEN
PROC_UND_Automaton_SetHostile(_Speaker);

IF
DialogEnded(UND_ArcaneTower_Automaton_362763e9-d03f-4984-5324-498a13a57b1c,_)
AND
GetFlag(UND_Automaton_State_Berserk_d872f9ad-ac0b-99b5-48b4-0f80c562ee92,S_UND_Automaton_5038c0f2-0022-4699-82ce-a319b30616bb,1)
AND
DB_DialogPlayers(_ID,_Speaker,_Index)
THEN
PROC_UND_Automaton_SetHostile(_Speaker);
//END_REGION Automaton flags

//REGION Poems flags

IF
DB_UND_ArcaneTower_Poems(_Book,_Flag)
THEN
DB_BookFlags(_Book,_Flag);

IF
GameBookInterfaceClosed(_Book,_Player)
AND
DB_UND_ArcaneTower_Poems(_Book,_Flag)
AND
QRY_OnlyOnce("UND_ArcaneTower_PAD_Poems")
THEN
PROC_TryStartAD(UND_ArcaneTower_PAD_Poems_0db62605-4600-f835-ebd7-a2349f713313,_Player);

//END_REGION Poems flags


//REGION Arcane Tower Lights
PROC
PROC_BlockUseOfItem(_Player,_Light)
AND
DB_UND_ArcaneTower_Lights(_Light)
AND
DB_Players(_Player)
THEN
DB_CustomUseItemResponse(_Player,_Light,0);
PROC_TryStartAD(UND_ArcaneTower_PAD_Lights_94b6a2eb-c41d-aaeb-3357-9e513a7c4d56,_Player);
//END_REGION Arcane Tower Lights


//REGION Automaton
PROC
PROC_SpotPlayers_Spotted(S_UND_Automaton_5038c0f2-0022-4699-82ce-a319b30616bb,"UND_ArcaneTower_Automaton",_Player)
AND
DB_PartyMembers(_Player)
AND
NOT QRY_StartDialog(UND_ArcaneTower_Automaton_362763e9-d03f-4984-5324-498a13a57b1c,S_UND_Automaton_5038c0f2-0022-4699-82ce-a319b30616bb,_Player)
THEN
PROC_UND_Automaton_SetHostile(_Player);

PROC
PROC_UND_Automaton_SetHostile((GUIDSTRING)_Char)
AND
GetFaction(_Char,_Faction)
THEN
PROC_SetRelation(ACT1_UND_Automaton_f438faa7-7b11-4221-9eaf-56d0e38eb5dc,_Faction,0);
PROC_SetRelationToPlayers(ACT1_UND_Automaton_f438faa7-7b11-4221-9eaf-56d0e38eb5dc,0);

// status FX choice on Automaton (Idle, Combat, Low hp)
PROC
PROC_UND_Automaton_ClearCurrentFX()
AND
DB_UND_Automaton_CurrentStatus(_Status)
THEN
RemoveStatus(S_UND_Automaton_5038c0f2-0022-4699-82ce-a319b30616bb,_Status,S_UND_Automaton_5038c0f2-0022-4699-82ce-a319b30616bb);
NOT DB_UND_Automaton_CurrentStatus(_Status);

PROC
PROC_UND_Automaton_ChangeFX((STRING)_NewStatus)
THEN
PROC_UND_Automaton_ClearCurrentFX();
ApplyStatus(S_UND_Automaton_5038c0f2-0022-4699-82ce-a319b30616bb,_NewStatus,-1.0,1,S_UND_Automaton_5038c0f2-0022-4699-82ce-a319b30616bb);
DB_UND_Automaton_CurrentStatus(_NewStatus);

IF
EnteredCombat(S_UND_Automaton_5038c0f2-0022-4699-82ce-a319b30616bb,_)
THEN
DB_UND_Automaton_Status("UND_AUTOMATON_BATTLE");
PROC_UND_Automaton_SelectFX();

IF
LeftCombat(S_UND_Automaton_5038c0f2-0022-4699-82ce-a319b30616bb,_)
THEN
NOT DB_UND_Automaton_Status("UND_AUTOMATON_BATTLE");
PROC_UND_Automaton_SelectFX();

IF
HitpointsChanged(S_UND_Automaton_5038c0f2-0022-4699-82ce-a319b30616bb,_Percentage)
AND
_Percentage <= 25
THEN
DB_UND_Automaton_Status("UND_AUTOMATON_LOW");
PROC_UND_Automaton_SelectFX();

IF
HitpointsChanged(S_UND_Automaton_5038c0f2-0022-4699-82ce-a319b30616bb,_Percentage)
AND
_Percentage > 25
THEN
NOT DB_UND_Automaton_Status("UND_AUTOMATON_LOW");
PROC_UND_Automaton_SelectFX();

PROC
PROC_UND_Automaton_SelectFX()
AND
DB_UND_Automaton_Status("UND_AUTOMATON_LOW")
THEN
PROC_UND_Automaton_ChangeFX("UND_AUTOMATON_LOW");

PROC
PROC_UND_Automaton_SelectFX()
AND
NOT DB_UND_Automaton_Status("UND_AUTOMATON_LOW")
AND
DB_UND_Automaton_Status("UND_AUTOMATON_BATTLE")
THEN
PROC_UND_Automaton_ChangeFX("UND_AUTOMATON_BATTLE");

PROC
PROC_UND_Automaton_SelectFX()
AND
NOT DB_UND_Automaton_Status("UND_AUTOMATON_LOW")
AND
NOT DB_UND_Automaton_Status("UND_AUTOMATON_BATTLE")
THEN
PROC_UND_Automaton_ChangeFX("UND_AUTOMATON_IDLE");
//END_REGION Automaton


//REGION Pet Collar
// Pet's collar gives access to certain facilities in the tower
IF
UseStarted(_Player,S_UND_ArcaneTower_PetButton_a60396c2-8d7a-47a7-ba93-c13220e78ca3)
AND
DB_UND_ArcaneTower_PetButton_Commentator(_Any)
THEN
NOT DB_UND_ArcaneTower_PetButton_Commentator(_Any);

IF
UseStarted(_Player,S_UND_ArcaneTower_PetButton_a60396c2-8d7a-47a7-ba93-c13220e78ca3)
AND
DB_Players(_Player)
AND
GetEquippedItem(_Player,"Amulet",S_UND_ClericPetCollar_4d93e3eb-c420-4c03-aadf-2c09b14726fe)
THEN
PROC_UND_ArcaneTower_PetButton_Feed();
DB_UND_ArcaneTower_PetButton_Commentator(_Player);

PROC
PROC_UND_ArcaneTower_PetButton_Feed()
AND
GetFlag(UND_ClericPet_Event_FeedButtonSuccess_fe1edef3-d70c-4dae-8a9e-d548a8439c43,NULL_00000000-0000-0000-0000-000000000000,0)
AND
CreateAtObject(CONS_GEN_Food_Steaks_Raw_A_caf51333-338f-41f1-8cf9-3474dad331d4,S_UND_ArcaneTower_PetFeedPoint_72c9673b-de72-4d36-8843-eaf919c63b7f,0,0,"",0,_Steak)
AND
GetPosition(S_UND_ArcaneTower_PetFeedPoint_72c9673b-de72-4d36-8843-eaf919c63b7f,_X,_Y,_Z)
THEN
SetFlag(UND_ClericPet_Event_FeedButtonSuccess_fe1edef3-d70c-4dae-8a9e-d548a8439c43,NULL_00000000-0000-0000-0000-000000000000);
PlayEffectAtPosition(VFX_Script_Stub_Poof_01_f0cf792a-0f74-d17e-ad0d-6052a6131416,_X,_Y,_Z);

IF
UseStarted(_Player,S_UND_ArcaneTower_PetButton_a60396c2-8d7a-47a7-ba93-c13220e78ca3)
AND
DB_Players(_Player)
AND
NOT DB_UND_ArcaneTower_PetButton_Commentator(_Player)
THEN
PROC_UND_ArcaneTower_PetButton_FindCommentator();

PROC
PROC_UND_ArcaneTower_PetButton_FindCommentator()
AND
GetInventoryOwner(S_UND_ClericPetCollar_4d93e3eb-c420-4c03-aadf-2c09b14726fe,_Owner)
AND
DB_Players((CHARACTER)_Owner)
AND
GetDistanceTo(S_UND_ArcaneTower_PetButton_a60396c2-8d7a-47a7-ba93-c13220e78ca3,_Owner,_Dist)
AND
_Dist <= 7.0
THEN
DB_UND_ArcaneTower_PetButton_Commentator(_Owner);

IF
UseStarted(_Player,S_UND_ArcaneTower_PetButton_a60396c2-8d7a-47a7-ba93-c13220e78ca3)
AND
DB_Players(_Player)
AND
NOT DB_UND_ArcaneTower_PetButton_Commentator(_)
THEN
DB_UND_ArcaneTower_PetButton_Commentator(_Player);

IF
DB_UND_ArcaneTower_PetButton_Commentator(_Player)
THEN
PROC_TryStartAD(UND_ClericPetCollar_PAD_FeedButton_91b8fc91-eb63-a8e7-5705-ab31ab411680,_Player);

IF
AutomatedDialogEnded(UND_ClericPetCollar_PAD_FeedButton_91b8fc91-eb63-a8e7-5705-ab31ab411680,_)
AND
DB_GlobalFlag(UND_ClericPet_Event_FeedButtonSuccess_fe1edef3-d70c-4dae-8a9e-d548a8439c43)
THEN
SetFlag(UND_ClericPet_Event_FeedButtonNoMore_bd455009-c999-4959-97d9-cb176fa30df2,NULL_00000000-0000-0000-0000-000000000000);
//END_REGION Pet Collar


//REGION Banter
IF
DB_GlobalFlag((FLAG)UND_ArcaneTower_MainPowerOn_9423ae80-9b08-4fda-95c6-1832f753ca2b)
AND
NOT DB_ArcaneTower_SafeForBanter(1)
THEN
DB_ArcaneTower_SafeForBanter(1);

IF
DB_ArcaneTower_SafeForBanter(1)
THEN
PROC_RegisterWorldGossipTrigger((TRIGGER)S_PartyBanterTrigger_UND_ArcaneTurretsDisabled_2c96be00-c2dc-4318-af1e-eb6c3b6c73b6);
PROC_RegisterWorldGossipTrigger((TRIGGER)S_PartyBanterTrigger_UND_GardenArcaneTurretsDisabled_1a9e7006-336d-4ca8-bc6d-56c59e28dc66);
//END_REGION Banter


//REGION XP Rewards
IF
FlagSet(UND_ArcaneTower_MainPowerOn_9423ae80-9b08-4fda-95c6-1832f753ca2b,_,_)
AND
DB_UND_ArcaneTower_PowerCutsceneFor(_Player)
AND
QRY_OnlyOnce("HIDDEN_WLD_Boosters_UND_ArcaneTower_Activated")
THEN
QuestUpdate(_Player, "HIDDEN_WLD_Boosters", "UND_ArcaneTower_Activated");

IF
DialogEnded(UND_ArcaneTower_Automaton_362763e9-d03f-4984-5324-498a13a57b1c,_DlgID)
AND
GetFlag(UND_Automaton_State_Serving_7a876651-c549-9b90-6a8a-37b25380beea,S_UND_Automaton_5038c0f2-0022-4699-82ce-a319b30616bb,1)
AND
DB_DialogPlayers(_DlgID,_Player,_)
AND
QRY_OnlyOnce("HIDDEN_WLD_Boosters_UND_ArcaneTower_Commanded")
THEN
PROC_PeacefulResolve(S_UND_Automaton_5038c0f2-0022-4699-82ce-a319b30616bb);
//END_REGION XP Rewards


//REGION Sound helpers
PROC
PROC_UND_ArcaneTower_SoundOn()
AND
DB_UND_ArcaneTower_SoundHelpers(_Helper)
THEN
SetOnStage(_Helper,1);

PROC
PROC_UND_ArcaneTower_SoundOff()
AND
DB_UND_ArcaneTower_SoundHelpers(_Helper)
THEN
SetOnStage(_Helper,0);

IF
FlagSet(UND_ArcaneTower_MainPowerOn_9423ae80-9b08-4fda-95c6-1832f753ca2b,_,_)
THEN
PROC_UND_ArcaneTower_SoundOn();

IF
FlagCleared(UND_ArcaneTower_MainPowerOn_9423ae80-9b08-4fda-95c6-1832f753ca2b,_,_)
THEN
PROC_UND_ArcaneTower_SoundOff();
//END_REGION Sound helpers

//REGION Global hasmet for Automaton Bernard for use in act 3
IF
DialogStarted((DIALOGRESOURCE)UND_ArcaneTower_Automaton_362763e9-d03f-4984-5324-498a13a57b1c, _)
AND
NOT DB_GlobalFlag(UND_Automaton_State_MetParty_b59fd40b-6191-4f5a-9136-9962478ba0e9)
THEN
SetFlag(UND_Automaton_State_MetParty_b59fd40b-6191-4f5a-9136-9962478ba0e9);
//END_REGION

//REGION Arcane Turret
IF
DB_UND_ArcaneTurrets(_Turret, _Base)
THEN
PROC_CharacterDisableAllCrimes((CHARACTER)_Turret);

//Put players in FTB first time they are locked on to
IF
EntityEvent(_Player, "UND_ArcaneTower_FirstLock")
AND
DB_Players((CHARACTER)_Player)
THEN
ForceTurnBasedMode(_Player, 1);
PROC_GlobalSetFlagAndCache(UND_ArcaneTower_Event_TurretsDiscoveredFTB_772ff79d-bdc0-4aef-867d-931dffc69a86);


//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "Act1"
