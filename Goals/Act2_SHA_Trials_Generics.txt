Version 1
SubGoalCombiner SGC_AND
INITSECTION
PROC_TriggerRegisterForPlayers(S_SHA_TrialsHubRegion_95aa1f48-749a-48ca-ac6e-7ef4ca75d7f6);

// Statues
DB_SHA_Trials_TrialStatues((ITEM)S_SHA_ObjectOfDarknessTrial_3892d0a6-24f4-402e-8b51-03ba8cfb4429);
DB_SHA_Trials_TrialStatues((ITEM)S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e);
DB_SHA_Trials_TrialStatues((ITEM)S_SHA_MentalTortureTrial_98811843-1086-4931-a3bd-3fef817347fe);

DB_Dialogs(S_SHA_ObjectOfDarknessTrial_3892d0a6-24f4-402e-8b51-03ba8cfb4429, (DIALOGRESOURCE)SHA_ObjectOfDarknessTrial_e4e07b8e-46fc-c4cd-afa1-7800c22fcea1);
DB_Dialogs(S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e, (DIALOGRESOURCE)SHA_PathOfDarknessTrial_46c2a366-6232-f71e-eac5-cf61be82f51a);
DB_Dialogs(S_SHA_MentalTortureTrial_98811843-1086-4931-a3bd-3fef817347fe, (DIALOGRESOURCE)SHA_DoublesEncounterTrial_b9c1c1d9-1f55-d7b6-875c-137b0a55b1e7);

DB_FlagReactionAfterDialog((FLAG)SHA_Trials_Event_StartTrial_e585331b-2acc-2624-2f7e-07dd8d425f06, (DIALOGRESOURCE)SHA_ObjectOfDarknessTrial_e4e07b8e-46fc-c4cd-afa1-7800c22fcea1);
DB_FlagReactionAfterDialog((FLAG)SHA_Trials_Event_StartTrial_e585331b-2acc-2624-2f7e-07dd8d425f06, (DIALOGRESOURCE)SHA_PathOfDarknessTrial_46c2a366-6232-f71e-eac5-cf61be82f51a);
DB_FlagReactionAfterDialog((FLAG)SHA_Trials_Event_StartTrial_e585331b-2acc-2624-2f7e-07dd8d425f06, (DIALOGRESOURCE)SHA_DoublesEncounterTrial_b9c1c1d9-1f55-d7b6-875c-137b0a55b1e7);


// Trial atmospheres, set when they are in progress
//DB_SHA_Trials_Atmospheres((ITEM), (TRIGGER), (STRING)_TrialAtmosphere);
DB_SHA_Trials_Atmospheres((ITEM)S_SHA_ObjectOfDarknessTrial_3892d0a6-24f4-402e-8b51-03ba8cfb4429, (TRIGGER) S_SHA_LightTrial_Atm_LT_WLD_SharTemple_C_000_642dbb31-a54a-8f00-498c-ff99bac7b618, "ddbdd506-dcbe-9151-761a-aaba7f4ae8fc");
DB_SHA_Trials_Atmospheres((ITEM)S_SHA_MentalTortureTrial_98811843-1086-4931-a3bd-3fef817347fe, 	  (TRIGGER) S_SHA_MentalTortureTrial_Atm_LT_WLD_SharTemple_C_000_05ce8331-6a23-8e88-48a2-cffffdca5ec6, "ddbdd506-dcbe-9151-761a-aaba7f4ae8fc");
DB_SHA_Trials_Atmospheres((ITEM)S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e,   (TRIGGER) S_SHA_PathOfDarknessTrial_Atm_LT_WLD_SharTemple_C_000_016cf5df-69ce-8180-2360-41ea416e2a1a, "ddbdd506-dcbe-9151-761a-aaba7f4ae8fc");

// Local progression flags
DB_SHA_Trials_FlagProgress((FLAG)SHA_Trials_State_TrialInProgress_87772420-50d7-4937-85ec-95c42fd9fd14);
DB_SHA_Trials_FlagProgress((FLAG)SHA_Trials_Event_TrialPassed_a2bf1d24-4f81-4bae-ac3f-68a5760d122c);
DB_SHA_Trials_FlagProgress((FLAG)SHA_Trials_Event_TrialFailed_e80850ea-ab84-4043-9809-960d4db885f6);
DB_SHA_Trials_FlagProgress((FLAG)SHA_Trials_State_TrialFinished_b7dd2e12-2d84-4056-a35a-c0818e99e6d1);

// Trial rooms: if all the characters inside it leave or die while the trial is in progress automatically fail it
// DB_SHA_Trials_TrialRoomTriggers(_Statue, _Trigger, _IgnoreDeaths) 
DB_SHA_Trials_TrialRoomTriggers((ITEM)S_SHA_ObjectOfDarknessTrial_3892d0a6-24f4-402e-8b51-03ba8cfb4429,	(TRIGGER)S_SHA_LightTrialTrigger_b40d88a4-d5d1-4511-8ae2-88e4b7e83f06,		0);
DB_SHA_Trials_TrialRoomTriggers((ITEM)S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e, 	(TRIGGER)S_SHA_PathOfDarknessTrigger_d535f17f-7d95-4996-b4f7-2f53c4a7348c,	0);
DB_SHA_Trials_TrialRoomTriggers((ITEM)S_SHA_MentalTortureTrial_98811843-1086-4931-a3bd-3fef817347fe, 	(TRIGGER)S_SHA_MentalTortureTrigger_e272b659-024a-457d-a5f5-a9317d60e1eb, 	0);

// Trial doors
DB_SHA_Trials_TrialDoors((ITEM)S_SHA_MentalTortureTrial_98811843-1086-4931-a3bd-3fef817347fe, 	 (ITEM)S_SHA_MentalTortureTrial_Door_db2320ec-7bef-4fa0-b1f7-e01631fe766a);
DB_SHA_Trials_TrialDoors((ITEM)S_SHA_ObjectOfDarknessTrial_3892d0a6-24f4-402e-8b51-03ba8cfb4429, (ITEM)S_SHA_LightTrial_Door_a76fbb69-9396-4a0d-b161-90d87f8a54d0);
DB_SHA_Trials_TrialDoors((ITEM)S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e, 	 (ITEM)S_SHA_PathOfDarknessTrial_Door_c162d4b8-c3c4-44b4-917d-34583a6dc03b);

DB_SHA_Trials_GemsNotTaken((ITEM)S_SHA_TrialGem_000_5e3d0d3b-6fcf-48b8-a10c-580ff4efd1ff);
DB_SHA_Trials_GemsNotTaken((ITEM)S_SHA_TrialGem_001_3c29b3b3-65ec-4d47-b689-e5eca053602b);
DB_SHA_Trials_GemsNotTaken((ITEM)S_SHA_TrialGem_002_b8dda6e3-8cb8-4287-81a4-0ac5260859c7);
DB_SHA_Trials_GemsNotTaken((ITEM)S_SHA_TrialGem_006_7fbf6a88-bce1-49e0-a216-0cb2ce23b0eb);
PROC_DeclareCounter("SHA_Trials_GemsTaken");

//Gems
DB_PlayerHasTemplateItem((ITEMROOT)QUEST_SHA_TrialGem_fd3fd8a9-a5fc-4726-9b6e-77f5ecf54cea, (FLAG)SHA_Trials_State_HasGem_71e7fb14-ca8d-4023-816b-3e3bd658b4b9);
DB_SHA_Trials_TrackedHoldersWithGems(S_SHA_Necromancer_53651a9f-7ea8-444f-ba2d-224390b72f7d, (FLAG)SHA_Trials_State_NecromancerHasGem_c6e2b896-f650-4585-a319-71899a289bac);
DB_SHA_Trials_TrackedHoldersWithGems(S_GLO_Orthon_1dc8091d-2af6-4d33-9268-998ef266d19c, (FLAG)SHA_Trials_State_OrthonHasGem_37e92c8c-49c2-4231-b522-6c89a53466f5);
DB_GiveTemplateFromNpcToPlayerDialogEvent((ITEMROOT)QUEST_SHA_TrialGem_fd3fd8a9-a5fc-4726-9b6e-77f5ecf54cea, (FLAG)SHA_Trials_Event_GiveGem_5c447374-c407-4803-ac23-135a05adc27d, NULL_00000000-0000-0000-0000-000000000000, 1);

DB_SHA_Trials_HasGemFlag((ITEM)S_SHA_TrialGem_000_5e3d0d3b-6fcf-48b8-a10c-580ff4efd1ff, (FLAG)SHA_Trials_State_HasMazeGem_ef352653-dfb1-4e1b-b578-4662689b5018);
DB_SHA_Trials_HasGemFlag((ITEM)S_SHA_TrialGem_001_3c29b3b3-65ec-4d47-b689-e5eca053602b, (FLAG)SHA_Trials_State_HasClonesGem_c7777b00-3d1d-4eff-9196-42bc3e7745cb);
DB_SHA_Trials_HasGemFlag((ITEM)S_SHA_TrialGem_002_b8dda6e3-8cb8-4287-81a4-0ac5260859c7, (FLAG)SHA_Trials_State_HasPlatformsGem_a85bb4af-4bed-48ac-8093-47d2bfc1955c);
DB_SHA_Trials_HasGemFlag((ITEM)S_SHA_TrialGem_006_7fbf6a88-bce1-49e0-a216-0cb2ce23b0eb, (FLAG)SHA_Trials_State_HasOrthonGem_763c3abb-4956-40d9-8559-1a92baaebb55);

//TODO: this should instead use the insert mechanics
//Upper gem sockets
DB_SHA_Trials_GemSockets((ITEM)S_LOW_UpperAltar_a856b852-e53d-4b3a-bfb8-5215d9a77141, 0, (ITEM)S_SHA_UpperSocketGem_000_369d939f-b54b-4348-bfbd-8b02ce6a69a5);
DB_SHA_Trials_GemSockets_Counters((ITEM)S_LOW_UpperAltar_a856b852-e53d-4b3a-bfb8-5215d9a77141, "SHA_Disc_Unlock");

//Lower gem sockets
DB_SHA_Trials_GemSockets((ITEM)S_SHA_LowerAltar_1a25fac4-dfb3-4103-91e2-e977c03681de, 0, (ITEM)S_SHA_LowerSocketGem_000_8c31b27b-7380-44a3-a004-1f78907caa2d);
DB_SHA_Trials_GemSockets((ITEM)S_SHA_LowerAltar_1a25fac4-dfb3-4103-91e2-e977c03681de, 1, (ITEM)S_SHA_LowerSocketGem_001_9fa05213-543a-4fe6-875a-004b1370c55c);
DB_SHA_Trials_GemSockets((ITEM)S_SHA_LowerAltar_1a25fac4-dfb3-4103-91e2-e977c03681de, 2, (ITEM)S_SHA_UpperSocketGem_002_011f6f31-bb46-4b73-9ec6-cd6bf010a3c8);
DB_SHA_Trials_GemSockets_Counters((ITEM)S_SHA_LowerAltar_1a25fac4-dfb3-4103-91e2-e977c03681de, "SHA_NightsongChamber_Unlock");


DB_SHA_Trials_GemSockets_CountersMilestones("SHA_Disc_Unlock", 1, (FLAG)SHA_Upper_State_DiscUnlocked_4b056ce5-e145-4d90-8451-0ff502e11898);
DB_SHA_Trials_GemSockets_CountersMilestones("SHA_NightsongChamber_Unlock", 3, (FLAG)SHA_Trials_Event_UnlockNightsongChamber_8e857d0c-990b-4029-aa28-f5b935fb8c0f);

// ---------------------------------------------------------------------------Death triggers--------------------------------------------------------------------------- //
// This would work like chasms but they are a bit more special, as chasms avoid characters to walk over there and we don't want that.									//
// Dead characters inside these triggers will be teleported near Akkar, and have to be placed inside the trial's rooms. How teleport works:								//
//																																										//
// - Characters who die inside a death trigger and are not in a trial will be teleported in that moment.																//
// - Characters who die inside a death trigger and a trial is in progress will remain at their death position, and teleported once it finishes.							//
//																																										//
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------	//
DB_SHA_Trials_DeathTriggers((ITEM)S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e, (TRIGGER)S_SHA_DeathTrigger_FirstPart_000_63c16ba1-5a50-4f87-8f7c-53ca54af397b, (TRIGGER)S_SHA_PathOfDarknessTrial_DeathTriggerTP_000_6a28f53d-3819-4869-b961-fc564615962a);
DB_SHA_Trials_DeathTriggers((ITEM)S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e, (TRIGGER)S_SHA_DeathTrigger_FirstPart_001_8a0c7286-e9d3-4972-bf93-9998845689d1, (TRIGGER)S_SHA_PathOfDarknessTrial_DeathTriggerTP_000_6a28f53d-3819-4869-b961-fc564615962a);

DB_SHA_Trials_DeathTriggers((ITEM)S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e, (TRIGGER)S_SHA_DeathTrigger_SecondPart_000_ba79ac1d-bb1a-4f4e-adc0-51f14c396a69, (TRIGGER)S_SHA_PathOfDarknessTrial_DeathTriggerTP_001_9c2f8c45-a159-4932-ba8e-183d0f3b6ef7);
DB_SHA_Trials_DeathTriggers((ITEM)S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e, (TRIGGER)S_SHA_DeathTrigger_SecondPart_001_ebca5d76-6f34-4355-92c6-425aa8966294, (TRIGGER)S_SHA_PathOfDarknessTrial_DeathTriggerTP_001_9c2f8c45-a159-4932-ba8e-183d0f3b6ef7);
DB_SHA_Trials_DeathTriggers((ITEM)S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e, (TRIGGER)S_SHA_DeathTrigger_SecondPart_002_b5c25b89-54ff-4a2d-930f-ae26c1a86dd5, (TRIGGER)S_SHA_PathOfDarknessTrial_DeathTriggerTP_001_9c2f8c45-a159-4932-ba8e-183d0f3b6ef7);
DB_SHA_Trials_DeathTriggers((ITEM)S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e, (TRIGGER)S_SHA_DeathTrigger_SecondPart_003_707bfed4-ac99-4ca8-8f02-3aa10ddc77d5, (TRIGGER)S_SHA_PathOfDarknessTrial_DeathTriggerTP_001_9c2f8c45-a159-4932-ba8e-183d0f3b6ef7);
DB_SHA_Trials_DeathTriggers((ITEM)S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e, (TRIGGER)S_SHA_DeathTrigger_SecondPart_004_0cdf9e6e-5eea-41fc-9668-1fbc2e6954a5, (TRIGGER)S_SHA_PathOfDarknessTrial_DeathTriggerTP_001_9c2f8c45-a159-4932-ba8e-183d0f3b6ef7);

DB_SHA_Trials_DeathTriggers((ITEM)S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e, (TRIGGER)S_SHA_DeathTrigger_ThirdPart_000_ecf223b0-7153-4165-92df-ffc86f116171, (TRIGGER)S_SHA_PathOfDarknessTrial_DeathTriggerTP_002_791bd805-8200-488d-a97b-ed8de55eb524);
DB_SHA_Trials_DeathTriggers((ITEM)S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e, (TRIGGER)S_SHA_DeathTrigger_ThirdPart_001_ec408275-358f-4792-919c-0d9635b04b6d, (TRIGGER)S_SHA_PathOfDarknessTrial_DeathTriggerTP_002_791bd805-8200-488d-a97b-ed8de55eb524);
DB_SHA_Trials_DeathTriggers((ITEM)S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e, (TRIGGER)S_SHA_DeathTrigger_ThirdPart_002_4778f5d8-8bf7-4b84-97b6-089ec80214ec, (TRIGGER)S_SHA_PathOfDarknessTrial_DeathTriggerTP_002_791bd805-8200-488d-a97b-ed8de55eb524);

DB_SHA_Trials_DeathTriggers((ITEM)S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e, (TRIGGER)S_SHA_DeathTrigger_003_c2b68785-4100-4562-b48d-aff82b030413, (TRIGGER)S_SHA_PathOfDarknessTrial_DeathTriggerTP_000_6a28f53d-3819-4869-b961-fc564615962a);
DB_SHA_Trials_DeathTriggers((ITEM)S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e, (TRIGGER)S_SHA_DeathTrigger_004_545fbf62-b2cc-4b6e-be8a-380be836d56a, (TRIGGER)S_SHA_PathOfDarknessTrial_DeathTriggerTP_001_9c2f8c45-a159-4932-ba8e-183d0f3b6ef7);
DB_SHA_Trials_DeathTriggers((ITEM)S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e, (TRIGGER)S_SHA_DeathTrigger_005_6090a602-e025-4aa2-9881-459affa3c18a, (TRIGGER)S_SHA_PathOfDarknessTrial_DeathTriggerTP_002_791bd805-8200-488d-a97b-ed8de55eb524);

PROC_SHA_Trials_InitGems();

// Trial VBs
//DB_SHA_Trials_VBHints((VOICEBARKRESOURCE)_VB, (ITEM)_Trial, (STRING)_TrialName);
DB_SHA_Trials_PhysicalTrialsHints((VOICEBARKRESOURCE)SHA_Trials_VB_MentalTortureHint_43c115eb-d866-89ab-2961-1adfe8cad7b5, 	  (ITEM)S_SHA_MentalTortureTrial_98811843-1086-4931-a3bd-3fef817347fe, 	  "SHA_MentalTortureHint");
DB_SHA_Trials_PhysicalTrialsHints((VOICEBARKRESOURCE)SHA_Trials_VB_ObjectOfDarknessHint_749a4585-4694-3cda-6725-1999275e0fa2, (ITEM)S_SHA_ObjectOfDarknessTrial_3892d0a6-24f4-402e-8b51-03ba8cfb4429, "SHA_ObjectOfDarknessHint");
DB_SHA_Trials_PhysicalTrialsHints((VOICEBARKRESOURCE)SHA_Trials_VB_PathOfDarknessHint_dea0e052-1bcf-bf59-b7f6-ad97e39baa5d,   (ITEM)S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e,   "SHA_PathOfDarknessHint");

//Trial hints flags
//DB_SHA_Trials_HintFlags((FLAG) _FlagHint,(ITEM)_NoteHint, (STRING)_Hint);
DB_SHA_Trials_HintFlags((FLAG)SHA_Trials_Knows_SneakTrialHint_b4efcc39-450d-41a1-83bc-383a62729aa2, (ITEM)S_SHA_SneakTrialBook_5c322223-3247-481a-87f8-849631181a92, "SHA_ObjectOfDarknessHint");
DB_SHA_Trials_HintFlags((FLAG)SHA_Trials_Knows_PathOfDarknessHint_59f22c41-9f10-443b-b6da-a292694a3d6e,(ITEM)S_SHA_SilentLibrary_FaithLeapTrial_4c80d967-17d5-4323-b73c-1d1aca1bed3b, "SHA_PathOfDarknessHint");
DB_SHA_Trials_HintFlags((FLAG)SHA_Trials_Knows_CloneEncounterTrialHint_80d1e9cb-501d-4fff-a899-e28ef425eb36, (ITEM)S_SHA_CloneEncounterTrialBook_e69403e4-1aa6-4cfb-9cc5-6135fa17cae2, "SHA_MentalTortureHint");

//REGION Passed trial candles
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_ObjectOfDarknessTrial_3892d0a6-24f4-402e-8b51-03ba8cfb4429, (ITEM)S_SHA_LightTrial_Candlestick_000_46d79690-257f-45fe-b06d-2e43d218ba4d);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_ObjectOfDarknessTrial_3892d0a6-24f4-402e-8b51-03ba8cfb4429, (ITEM)S_SHA_LightTrial_Candlestick_022_f71ced98-9042-4816-9604-8b51cc3687d6);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_ObjectOfDarknessTrial_3892d0a6-24f4-402e-8b51-03ba8cfb4429, (ITEM)S_SHA_LightTrial_Candlestick_016_71f21391-f043-4a93-8e84-3d07dae6e7f1);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_ObjectOfDarknessTrial_3892d0a6-24f4-402e-8b51-03ba8cfb4429, (ITEM)S_SHA_LightTrial_Candlestick_005_8514fab4-9ffa-4ee7-90cb-d2e7d01715f7);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_ObjectOfDarknessTrial_3892d0a6-24f4-402e-8b51-03ba8cfb4429, (ITEM)S_SHA_LightTrial_Candlestick_013_6db49cdb-5e84-4efc-bb19-b8336dff4be2);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_ObjectOfDarknessTrial_3892d0a6-24f4-402e-8b51-03ba8cfb4429, (ITEM)S_SHA_LightTrial_Candlestick_018_d758325e-aa26-4747-a634-35b3d30cbcaa);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_ObjectOfDarknessTrial_3892d0a6-24f4-402e-8b51-03ba8cfb4429, (ITEM)S_SHA_LightTrial_Candlestick_003_15696155-e607-4035-97ae-fc22b9d2a578);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_ObjectOfDarknessTrial_3892d0a6-24f4-402e-8b51-03ba8cfb4429, (ITEM)S_SHA_LightTrial_Candlestick_009_6a9d124d-ef81-4f5d-aabd-9eafb95d9351);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_ObjectOfDarknessTrial_3892d0a6-24f4-402e-8b51-03ba8cfb4429, (ITEM)S_SHA_LightTrial_Candlestick_010_4f506776-ac07-428c-a304-e517d0651734);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_ObjectOfDarknessTrial_3892d0a6-24f4-402e-8b51-03ba8cfb4429, (ITEM)S_SHA_LightTrial_Candlestick_005_695835b4-dc0c-4970-bef5-2ab09c87042d);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_ObjectOfDarknessTrial_3892d0a6-24f4-402e-8b51-03ba8cfb4429, (ITEM)S_SHA_LightTrial_Candlestick_019_5a8a12b3-5fbd-4b8f-b542-2e7d98a51c5f);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_ObjectOfDarknessTrial_3892d0a6-24f4-402e-8b51-03ba8cfb4429, (ITEM)S_SHA_LightTrial_Candlestick_023_872bca74-6582-4264-8d93-19d4b910aefe);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_ObjectOfDarknessTrial_3892d0a6-24f4-402e-8b51-03ba8cfb4429, (ITEM)S_SHA_LightTrial_Candlestick_021_cade9577-4c4b-4e31-a97c-0dfa2dad6e1e);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_ObjectOfDarknessTrial_3892d0a6-24f4-402e-8b51-03ba8cfb4429, (ITEM)S_SHA_LightTrial_Candlestick_008_7f6c7400-4f08-4b21-97a4-cf63c8bad0b5);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_ObjectOfDarknessTrial_3892d0a6-24f4-402e-8b51-03ba8cfb4429, (ITEM)S_SHA_LightTrial_Candlestick_012_d2107abd-18e3-407a-8bc0-042290cdebec);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_ObjectOfDarknessTrial_3892d0a6-24f4-402e-8b51-03ba8cfb4429, (ITEM)S_SHA_LightTrial_Candlestick_001_05562813-1517-4df3-afab-6e7fb89ba253);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_ObjectOfDarknessTrial_3892d0a6-24f4-402e-8b51-03ba8cfb4429, (ITEM)S_SHA_LightTrial_Candlestick_020_c32047ae-b2cc-4c4c-8b7d-0baf33d105c3);

DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_MentalTortureTrial_98811843-1086-4931-a3bd-3fef817347fe, (ITEM)S_SHA_TortureTrial_Candlestick_000_2f2cc50f-c85c-4503-ab87-32921bf4fe1c);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_MentalTortureTrial_98811843-1086-4931-a3bd-3fef817347fe, (ITEM)S_SHA_TortureTrial_Candlestick_001_5e0cab64-8e02-4fc2-b364-33536e8f8757);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_MentalTortureTrial_98811843-1086-4931-a3bd-3fef817347fe, (ITEM)S_SHA_TortureTrial_Candlestick_002_6eca4306-1fe9-4817-b5be-7f10836f0be9);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_MentalTortureTrial_98811843-1086-4931-a3bd-3fef817347fe, (ITEM)S_SHA_TortureTrial_Candlestick_003_96124ebf-9aa8-4074-b7c3-b3e0e41e59f0);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_MentalTortureTrial_98811843-1086-4931-a3bd-3fef817347fe, (ITEM)S_SHA_TortureTrial_Candlestick_004_c4c7c126-46ed-4f79-b59b-89c4db8a4054);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_MentalTortureTrial_98811843-1086-4931-a3bd-3fef817347fe, (ITEM)S_SHA_TortureTrial_Candlestick_005_4f562736-aa55-4c23-8fb9-d454312a7bd8);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_MentalTortureTrial_98811843-1086-4931-a3bd-3fef817347fe, (ITEM)S_SHA_TortureTrial_Candlestick_006_a9a0ec33-5a79-4098-96ba-97d79019edba);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_MentalTortureTrial_98811843-1086-4931-a3bd-3fef817347fe, (ITEM)S_SHA_TortureTrial_Candlestick_007_2c1d1a29-a32a-4214-9738-3164efb04a79);

DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e, (ITEM)S_SHA_PathTrial_Candlestick_000_135f841a-4ee3-46ca-9685-0ae277655230);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e, (ITEM)S_SHA_PathTrial_Candlestick_001_9943f23a-0f9b-4e4b-9d6b-11c3789c8cab);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e, (ITEM)S_SHA_PathTrial_Candlestick_002_84e1e94d-d353-4d13-8027-8a4072bec145);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e, (ITEM)S_SHA_PathTrial_Candlestick_003_c97b16f1-c0ab-4c46-9fcd-8d1ce38efd96);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e, (ITEM)S_SHA_PathTrial_Candlestick_004_8b9fb787-92cc-4d6b-9409-bab1f4d89703);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e, (ITEM)S_SHA_PathTrial_Candlestick_005_333b650a-2f24-49ae-8736-1305fb84e764);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e, (ITEM)S_SHA_PathTrial_Candlestick_006_cbe61912-24c7-4ddf-90b5-e6995670b447);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e, (ITEM)S_SHA_PathTrial_Candlestick_007_c25e6b31-0123-402a-8aaa-a34080cb1d4a);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e, (ITEM)S_SHA_PathTrial_Candlestick_008_18533f14-f38c-4f67-aa82-fc1e5f8b9acb);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e, (ITEM)S_SHA_PathTrial_Candlestick_009_02964b66-5144-450a-8c84-d1405422c57c);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e, (ITEM)S_SHA_PathTrial_Candlestick_010_56a4279c-2378-49b8-b674-d037a3e3cc4e);
DB_SHA_Trials_PassedTrialsCandles((ITEM)S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e, (ITEM)S_SHA_PathTrial_Candlestick_011_e29d80f4-d48d-4a3b-92b6-0e526ff9ca26);
//END_REGION

//REGION Trial Elevator
DB_SHA_Trials_ElevatorPosition((TRIGGER)S_SHA_TrialElevator_Bottom_7887e1c5-abbf-4e78-b859-419ba28f3542);

SetOnStage(S_SHA_TrialElevator_TopLever_0dc881a5-dcb6-4323-af2f-1e3030b06adb, 0);

PROC_TriggerRegisterForParty((TRIGGER)S_SHA_SquishTrigger_da24e0c7-9618-48e3-b3df-9b2f78a6c16d);
//END_REGION
KBSECTION
//REGION Trial VBs
// Player reads hint
IF
UseStarted(_, _Hint)
AND
DB_SHA_Trials_HintFlags(_Flag, _Hint, _)
THEN
SetFlag(_Flag, NULL_00000000-0000-0000-0000-000000000000);

// Hints can only be said once at the start of each trial.
// Hint read
PROC
PROC_SHA_Trials_PlayHint((CHARACTER)_Player, (ITEM)_Trial)
AND
DB_SHA_Trials_PhysicalTrialsHints(_VoiceBark, _Trial, _Hint)
AND
DB_SHA_Trials_HintFlags(_Flag, _, _Hint)
AND
DB_GlobalFlag(_Flag)
AND
QRY_SpeakerIsAvailable(_Player)
AND
QRY_OncePerUserAndNearbyPlayers(_Player, _Hint)
THEN
StartVoiceBark(_VoiceBark, _Player);

// Physical trial and book not read
PROC
PROC_SHA_Trials_PlayHint((CHARACTER)_Player, (ITEM)_Trial)
AND
DB_SHA_Trials_PhysicalTrialsHints(_VoiceBark, _Trial, _Hint)
AND
DB_SHA_Trials_HintFlags(_Flag, _, _Hint)
AND
NOT DB_GlobalFlag(_Flag)
AND
QRY_SpeakerIsAvailable(_Player)
AND
Concatenate(_Hint, "_BookNotFound", _NewHintName)
AND
QRY_OncePerUserAndNearbyPlayers(_Player, _NewHintName)
THEN
StartVoiceBark(_VoiceBark, _Player);
//END_REGION

//REGION Generic statue management
PROC
PROC_FlagReactionAfterDialog(_Trial, SHA_Trials_Event_StartTrial_e585331b-2acc-2624-2f7e-07dd8d425f06, _, _ID)
AND
GetFlag((FLAG)SHA_Trials_Event_ShadowheartUsedAltar_c7b9e1bd-b623-3d2a-c952-4a210a1740dc, _Trial, 0) // Using an object flag instead of a global flag in case party is split and multiple trials are started at the same time.
AND
DB_DialogPlayers(_ID, _Player, 1)
THEN
PROC_SHA_Trials_StartTrial((CHARACTER)_Player, (ITEM)_Trial);

PROC
PROC_FlagReactionAfterDialog(_Trial, SHA_Trials_Event_StartTrial_e585331b-2acc-2624-2f7e-07dd8d425f06, _, _ID)
AND
GetFlag((FLAG)SHA_Trials_Event_ShadowheartUsedAltar_c7b9e1bd-b623-3d2a-c952-4a210a1740dc, _Trial, 1)
THEN
PROC_SHA_Trials_StartTrial((CHARACTER)S_Player_ShadowHeart_3ed74f06-3c60-42dc-83f6-f034cb47c679, (ITEM)_Trial);

PROC
PROC_FlagReactionAfterDialog(_Trial, SHA_Trials_Event_StartTrial_e585331b-2acc-2624-2f7e-07dd8d425f06, _, _ID)
THEN
ClearFlag(SHA_Trials_Event_StartTrial_e585331b-2acc-2624-2f7e-07dd8d425f06, _Trial);
ClearFlag(SHA_Trials_Event_ShadowheartUsedAltar_c7b9e1bd-b623-3d2a-c952-4a210a1740dc, _Trial);

PROC
PROC_SHA_Trials_StartTrial((CHARACTER)_Player, (ITEM)_Trial)
THEN
ApplyStatus(_Player, "SHA_TRIALS_BLEEDING", 6.0, 1, NULL_00000000-0000-0000-0000-000000000000);

PROC
PROC_SHA_Trials_StartTrial((CHARACTER)_Player, (ITEM)_Trial)
AND
GetFlag(SHA_Trials_State_TrialInProgress_87772420-50d7-4937-85ec-95c42fd9fd14, _Trial, 0)
AND
GetFlag(SHA_Trials_State_TrialFinished_b7dd2e12-2d84-4056-a35a-c0818e99e6d1, _Trial, 0)
THEN
SetFlag(SHA_Trials_State_TrialInProgress_87772420-50d7-4937-85ec-95c42fd9fd14, _Trial);
PROC_SHA_Trials_PlayHint(_Player, _Trial);

PROC
PROC_SHA_Trials_TurnOnLight((ITEM)_Trial)
AND
DB_SHA_Trials_TrialStatues(_Trial)
THEN
PROC_LoopEffect(VFX_Script_Stub_Loop_01_a7f1b570-0326-2a9c-8109-e1b81c8bd1fd, _Trial, "SHA_TrialStatueLight", "SCL_Main_A", "");
//END_REGION

//REGION Trial progression
// Trial starts: close doors
IF
FlagSet(SHA_Trials_State_TrialInProgress_87772420-50d7-4937-85ec-95c42fd9fd14, _Statue, _)
THEN
PROC_SHA_Trials_SetAtmosphere((ITEM)_Statue);
PROC_SHA_Trials_LockAndCloseTrialDoors(_Statue);

PROC
PROC_SHA_Trials_LockAndCloseTrialDoors((ITEM)_Statue)
AND
DB_SHA_Trials_TrialDoors(_Statue, _Door)
THEN
Close(_Door);
Lock(_Door, "SHA_TrialDoor");

PROC
PROC_SHA_Trials_SetAtmosphere((ITEM)_Statue)
AND
DB_SHA_Trials_Atmospheres(_Statue, _Trigger, _Atmosphere)
THEN
TriggerSetAtmosphere(_Trigger, _Atmosphere);

// Trial finishes: open doors
IF
FlagSet(SHA_Trials_State_TrialFinished_b7dd2e12-2d84-4056-a35a-c0818e99e6d1, _Trial, _)
AND
DB_SHA_Trials_TrialStatues((ITEM)_Trial)
THEN
ClearFlag((FLAG)SHA_Trials_State_TrialInProgress_87772420-50d7-4937-85ec-95c42fd9fd14, _Trial);
PROC_SHA_Trials_UnlockAndOpenTrialDoors(_Trial);
PROC_SHA_Trials_SetDefaultAtmosphere((ITEM)_Trial);

PROC
PROC_SHA_Trials_SetDefaultAtmosphere((ITEM)_Statue)
AND
DB_SHA_Trials_Atmospheres(_Statue, _Trigger, _)
THEN
TriggerResetAtmosphere(_Trigger);

PROC
PROC_SHA_Trials_UnlockAndOpenTrialDoors((ITEM)_Statue)
AND
DB_SHA_Trials_TrialDoors(_Statue, _Door)
THEN
PROC_ItemUnlockAndOpen(_Door);

// Player passes the trial
IF
FlagSet(SHA_Trials_Event_TrialPassed_a2bf1d24-4f81-4bae-ac3f-68a5760d122c, _Trial, _)
THEN
DebugText(_Trial, "Trial passed");
PROC_SHA_Trials_TurnOnLight((ITEM)_Trial);
PROC_SHA_Trials_TrialPassed((ITEM)_Trial);

PROC
PROC_SHA_Trials_TrialPassed((ITEM)_Trial)
AND
DB_SHA_Trials_TrialStatues(_Trial)
AND
GetFlag(SHA_Trials_State_TrialFinished_b7dd2e12-2d84-4056-a35a-c0818e99e6d1, _Trial, 0)
THEN
PROC_SHA_Trials_CheckTrialProgression(_Trial, 1);

PROC
PROC_SHA_Trials_TrialPassed(_)
AND
NOT DB_GlobalFlag((FLAG)SHA_Trials_State_PassedAnyTrial_0ae81489-c9c9-9841-5176-5328e845b304)
THEN
SetFlag((FLAG)SHA_Trials_State_PassedAnyTrial_0ae81489-c9c9-9841-5176-5328e845b304, NULL_00000000-0000-0000-0000-000000000000, 0);

// Check if player has passed all the trials
PROC
PROC_SHA_Trials_TrialPassed(_)
AND
QRY_SHA_Trials_AllTrialsPassed()
THEN
SetFlag((FLAG)SHA_Trials_State_AllTrialsPassed_1e2b44c1-b11d-4aca-8cc5-627bf7a32c65, NULL_00000000-0000-0000-0000-000000000000, 0);

PROC
PROC_SHA_Trials_ActivateTeleportStone((ITEM)_Stone)
THEN
SetCanInteract(_Stone, 1);
ApplyStatus(_Stone, "SHA_STONEACTIVE", -1.0, 1); 
Transform(_Stone, (ITEMROOT)DEC_Dungeon_SharTemple_Gem_Socket_C_Glow_45bf5b56-754d-416c-8e5d-2d30dfd72fb1, (SHAPESHIFTRULE)Physical_4acc6277-6dcd-4110-9450-b9379beaedac); // TODO: Change once we have the right VFX for the stones

QRY
QRY_SHA_Trials_AllTrialsPassed()
AND
GetFlag((FLAG)SHA_Trials_Event_TrialPassed_a2bf1d24-4f81-4bae-ac3f-68a5760d122c, S_SHA_ObjectOfDarknessTrial_3892d0a6-24f4-402e-8b51-03ba8cfb4429, 1)
AND
GetFlag((FLAG)SHA_Trials_Event_TrialPassed_a2bf1d24-4f81-4bae-ac3f-68a5760d122c, S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e, 1)
AND
GetFlag((FLAG)SHA_Trials_Event_TrialPassed_a2bf1d24-4f81-4bae-ac3f-68a5760d122c, S_SHA_MentalTortureTrial_98811843-1086-4931-a3bd-3fef817347fe, 1)
THEN
DB_NOOP(1);

IF
// Player fails the trial
FlagSet(SHA_Trials_Event_TrialFailed_e80850ea-ab84-4043-9809-960d4db885f6, _Statue, _)
THEN
DebugText(_Statue, "Trial failed");
PROC_SHA_Trials_TrialFailed((ITEM)_Statue);

//REGION In Dialog cases
// Wait till the dialog finishes to update the progress
PROC
PROC_FlagReactionAfterDialog(_Statue, (FLAG)SHA_Trials_Event_TrialPassedInDialog_4b5ff126-0c2e-4443-a4b2-db49787f7caa)
THEN
ClearFlag(SHA_Trials_Event_TrialPassedInDialog_4b5ff126-0c2e-4443-a4b2-db49787f7caa, _Statue);
SetFlag(SHA_Trials_Event_TrialPassed_a2bf1d24-4f81-4bae-ac3f-68a5760d122c, _Statue);

PROC
PROC_FlagReactionAfterDialog(_Statue, (FLAG)SHA_Trials_Event_TrialFailedInDialog_90e8c04e-b2ba-41b7-830f-dbe8fc9b4c74)
THEN
ClearFlag(SHA_Trials_Event_TrialFailedInDialog_90e8c04e-b2ba-41b7-830f-dbe8fc9b4c74, _Statue);
SetFlag(SHA_Trials_Event_TrialFailed_e80850ea-ab84-4043-9809-960d4db885f6, _Statue);
//END_REGION

PROC
PROC_SHA_Trials_TrialFailed((ITEM)_Trial)
AND
DB_SHA_Trials_TrialStatues(_Trial)
AND
GetFlag(SHA_Trials_State_TrialFinished_b7dd2e12-2d84-4056-a35a-c0818e99e6d1, _Trial, 0)
THEN
PROC_SHA_Trials_CheckTrialProgression(_Trial, 0);

PROC
PROC_SHA_Trials_TrialFailed(_)
THEN
SetFlag((FLAG)SHA_Trials_State_TooManyFailures_3ff4ad0b-c8cd-652b-4781-fa671eb39330, NULL_00000000-0000-0000-0000-000000000000, 0);

PROC
PROC_SHA_Trials_CheckTrialProgression((ITEM)_Trial, (INTEGER)_Passed)
THEN
SetFlag((FLAG)SHA_Trials_State_TrialFinished_b7dd2e12-2d84-4056-a35a-c0818e99e6d1, _Trial);
PROC_SHA_Trials_CustomTrialOutcome(_Trial);

PROC
PROC_SHA_Trials_CheckTrialProgression((ITEM)_Statue, 0)
THEN
PROC_SHA_Trials_RestartTrial(_Statue);

PROC
PROC_SHA_Trials_CustomTrialOutcome((ITEM)_Statue)
THEN
DB_NOOP(1);

PROC
PROC_SHA_Trials_RestartTrial((ITEM)_Statue)
AND
DB_SHA_Trials_FlagProgress(_Flag)
THEN
ClearFlag(_Flag, _Statue);

//REGION Generic trial fails
IF
DB_SHA_Trials_TrialRoomTriggers(_, _Trigger, _)
THEN
PROC_TriggerRegisterForParty((TRIGGER)_Trigger);

IF
EnteredTrigger(_Char, _Trigger)
AND 
DB_SHA_Trials_TrialRoomTriggers(_, _Trigger, _)
AND
QRY_SHA_Trials_IsInParty((CHARACTER)_Char)
THEN
DB_SHA_Trials_PartyMembersInTrialRooms(_Char, _Trigger);

IF
LeftTrigger(_Char, _Trigger)
AND
DB_SHA_Trials_PartyMembersInTrialRooms(_Char, _Trigger)
AND
DB_SHA_Trials_TrialRoomTriggers(_Statue, _Trigger, _)
THEN
NOT DB_SHA_Trials_PartyMembersInTrialRooms(_Char, _Trigger);
PROC_SHA_Trials_CheckAnyPlayerInTrial((ITEM)_Statue);


IF
DB_Defeated(_Char)
AND
DB_SHA_Trials_PartyMembersInTrialRooms((CHARACTER)_Char, _Trigger)
AND
DB_SHA_Trials_TrialRoomTriggers(_Trial, _Trigger, 0)
AND
QRY_SHA_Trials_IsInParty((CHARACTER)_Char)
AND
GetFlag((FLAG)SHA_Trials_State_TrialInProgress_87772420-50d7-4937-85ec-95c42fd9fd14, _Trial, 1)
THEN
PROC_SHA_Trials_CheckAnyPlayerInTrial((ITEM)_Trial);

PROC
PROC_SHA_Trials_CheckAnyPlayerInTrial((ITEM)_Trial)
AND
GetFlag((FLAG)SHA_Trials_State_TrialInProgress_87772420-50d7-4937-85ec-95c42fd9fd14, _Trial, 1)
AND
GetFlag((FLAG)SHA_Trials_State_TrialFinished_b7dd2e12-2d84-4056-a35a-c0818e99e6d1, _Trial, 0)
AND
QRY_SHA_Trials_PlayersInTrial((ITEM)_Trial)
THEN
DB_NOOP(1);

// Are all players outside the trial room?
QRY
QRY_SHA_Trials_PlayersInTrial((ITEM)_Trial)
AND
QRY_OnlyOnce_Reset("SHA_CheckPlayersInTrial")
AND
DB_SHA_Trials_TrialRoomTriggers((ITEM)_Trial, _Trigger, _)
AND
NOT DB_SHA_Trials_PartyMembersInTrialRooms(_, (TRIGGER)_Trigger)
AND
QRY_OnlyOnce("SHA_CheckPlayersInTrial")
THEN
PROC_SHA_Trials_TrialFailed((ITEM)_Trial);

// Are all players inside the trial dead?
QRY
QRY_SHA_Trials_PlayersInTrial((ITEM)_Trial)
AND
NOT DB_OnlyOnce("SHA_CheckPlayersInTrial")
AND
NOT QRY_SHA_Trials_AnyPlayerInsideTrialNonDefeated(_Trial)
THEN
PROC_SHA_Trials_TrialFailed((ITEM)_Trial);

QRY
QRY_SHA_Trials_AnyPlayerInsideTrialNonDefeated((ITEM)_Trial)
AND
DB_SHA_Trials_TrialRoomTriggers((ITEM)_Trial, _Trigger, _)
AND
DB_SHA_Trials_PartyMembersInTrialRooms(_Char, (TRIGGER)_Trigger)
AND
NOT DB_Defeated(_Char)
THEN
DB_NOOP(1);

QRY
QRY_SHA_Trials_IsInParty((CHARACTER)_Char)
AND
DB_Players(_Char)
THEN
DB_NOOP(1);

QRY
QRY_SHA_Trials_IsInParty((CHARACTER)_Char)
AND
QRY_IsSummonOrPartyFollower(_Char)
THEN
DB_NOOP(1);
//END_REGION

//REGION Death triggers

IF
EnteredTrigger(_Char, _Trigger)
AND
DB_SHA_Trials_DeathTriggers(_Trial, _Trigger, _TeleportTrigger)
AND
DB_Dead(_Char)
THEN
PROC_SHA_Trials_MagicTeleport(_Char, _TeleportTrigger, _Trial);

// Character enters into a death trigger
IF
EnteredTrigger(_Char, _Trigger)
AND
DB_SHA_Trials_DeathTriggers(_Trial, _Trigger, _TeleportTrigger)
AND
NOT DB_Dead(_Char)
AND
NOT DB_SHA_Trials_TeleportTo(_Char, _, _) // Avoid teleporting if they are being already teleported
AND
NOT DB_SHA_Trials_MagicTeleport(_Char, _) // Avoid teleporting if they are being already teleported
THEN
PROC_SHA_Trials_CharacterEnteredDeathTrigger(_Trial, _TeleportTrigger, _Char);

PROC
PROC_SHA_Trials_CharacterEnteredDeathTrigger((ITEM)_Trial, (TRIGGER)_TeleportTrigger, (CHARACTER)_Char)
THEN
DB_SHA_Trials_TeleportTo(_Char, _TeleportTrigger, _Trial);
PROC_SHA_Trials_CharacterEnteredDeathTrigger_Hook(_Trial, _TeleportTrigger, _Char);

PROC
PROC_SHA_Trials_CharacterEnteredDeathTrigger_Hook((ITEM)_Trial, (TRIGGER)_TeleportTrigger, (CHARACTER)_Char)
THEN
DB_NOOP(1);

PROC
PROC_SHA_Trials_CharacterEnteredDeathTrigger((ITEM)_Trial, (TRIGGER)_TeleportTrigger, (CHARACTER)_Char)
AND
NOT QRY_SHA_Trials_BlockKillCharacter(_Trial, _Char)
THEN
Die(_Char, DEATHTYPE.Physical, NULL_00000000-0000-0000-0000-000000000000, 1, 0);
RealtimeObjectTimerLaunch(_Char, "SHA_TeleportCharacter", 1300);

QRY
QRY_SHA_Trials_BlockKillCharacter((ITEM)_Trial, (CHARACTER)_Character)
AND
0 == 1
THEN
DB_NOOP(1);

// Item enters into a death trigger
IF
ItemEnteredTrigger(_Item, _Trigger, _)
AND
DB_SHA_Trials_DeathTriggers(_Trial, _Trigger, _TeleportTrigger)
AND
Exists(_Item,1)
THEN
PROC_SHA_Trials_MagicTeleport(_Item, _TeleportTrigger, _Trial);

// Teleport dead players that fell into any death trigger outside of the room if no trial is in progress
IF
ObjectTimerFinished((CHARACTER)_Char, "SHA_TeleportCharacter")
THEN
PROC_SHA_Trials_DeathTriggerTeleport(_Char);

PROC
PROC_SHA_Trials_DeathTriggerTeleport((CHARACTER)_Char)
AND
DB_SHA_Trials_TeleportTo(_Char, _TeleportTrigger, _Trial)
AND
DB_SHA_Trials_AltDeathTriggerTeleport(_Trial, _AltTeleport)
THEN
NOT DB_SHA_Trials_TeleportTo(_Char, _TeleportTrigger, _Trial);
PROC_SHA_Trials_MagicTeleport(_Char, _AltTeleport, _Trial);

PROC
PROC_SHA_Trials_DeathTriggerTeleport((CHARACTER)_Char)
AND
DB_SHA_Trials_TeleportTo((CHARACTER)_Char, _TeleportTrigger, _Trial)
AND
NOT DB_SHA_Trials_AltDeathTriggerTeleport(_Trial, _)
THEN
NOT DB_SHA_Trials_TeleportTo((CHARACTER)_Char, _TeleportTrigger, _Trial);
PROC_SHA_Trials_MagicTeleport(_Char, _TeleportTrigger, _Trial);

// If player dies inside a death trigger and is the trial is still in progress, resurrect him
// Only happens if we are ignoring deaths for trial progression, this avoids soft-locking it
IF
EntityEvent((CHARACTER)_Player, "SHA_Trials_FinishedTeleport")
AND
DB_Players(_Player)
AND
DB_Dead(_Player)
AND
DB_InRegion(_Player, _Trigger)
AND
DB_SHA_Trials_TrialRoomTriggers(_Statue, _Trigger, 1)
AND
GetFlag((FLAG)SHA_Trials_State_TrialInProgress_87772420-50d7-4937-85ec-95c42fd9fd14, _Statue, 1)
THEN
Resurrect(_Player);

// Teleport effect
PROC
PROC_SHA_Trials_MagicTeleport((GUIDSTRING)_Target, (GUIDSTRING)_TeleportPosition, (GUIDSTRING)_Caster)
AND
IsTagged(_Target, (TAG)ACT2_SHA_TRIALS_DONTTELEPORT_6be0d584-ab13-402a-8e6c-ddab996f9813, 0)
THEN
DB_SHA_Trials_MagicTeleport(_Target, _TeleportPosition);
ApplyStatus(_Target, "SHA_TRIALS_TELEPORT_TECHNICAL", 6.0, 1, _Caster);
PlayEffect(_Target, (EFFECTRESOURCE)VFX_Script_SCL_Trial_Shar_Teleport_Disappear_BodyFX_01_0f13f03e-107a-22af-ef1f-5a7a8967d5b9);
RealtimeObjectTimerLaunch(_Target, "SHA_Trials_MagicTeleport", 2250); // Wait for the VFX

PROC
PROC_SHA_Trials_MagicTeleport((GUIDSTRING)_Target, (GUIDSTRING)_TeleportPosition, (GUIDSTRING)_Caster)
AND
IsCharacter(_Target, 1)
AND
DB_Players(_OtherTarget)
AND
_Target != _OtherTarget
AND
InSamePartyGroup((CHARACTER)_Target, (CHARACTER)_OtherTarget, 1)
THEN
DB_SHA_Trials_MagicTeleport(_OtherTarget, _TeleportPosition);
ApplyStatus(_OtherTarget, "SHA_TRIALS_TELEPORT_TECHNICAL", 6.0, 1, _Caster);
PlayEffect(_OtherTarget, (EFFECTRESOURCE)VFX_Script_SCL_Trial_Shar_Teleport_Disappear_BodyFX_01_0f13f03e-107a-22af-ef1f-5a7a8967d5b9);
RealtimeObjectTimerLaunch(_OtherTarget, "SHA_Trials_MagicTeleport", 2250); // Wait for the VFX

IF
ObjectTimerFinished(_Target, "SHA_Trials_MagicTeleport")
AND
DB_SHA_Trials_MagicTeleport(_Target, _TeleportPosition)
THEN
TeleportTo(_Target, _TeleportPosition, "SHA_Trials_FinishedTeleport", 0, 0, 1);

IF
EntityEvent(_Target, "SHA_Trials_FinishedTeleport")
THEN
RemoveStatus(_Target, "SHA_TRIALS_TELEPORT_TECHNICAL");

IF
EntityEvent(_Target, "SHA_Trials_FinishedTeleport")
AND
DB_SHA_Trials_MagicTeleport(_Target, _TeleportPosition)
THEN
NOT DB_SHA_Trials_MagicTeleport(_Target, _TeleportPosition);
//END_REGION

//REGION Trial gems
IF
DB_SHA_Trials_HasGemFlag(_Gem, _Flag)
THEN
DB_HasItemEvent(_Gem, _Flag);

IF
FlagSet(_Flag, _Player, _)
AND
DB_SHA_Trials_HasGemFlag(_Gem, _Flag)
AND
DB_Players((CHARACTER)_Player)
AND
DB_SHA_Trials_GemsNotTaken((ITEM)_Gem)
THEN
PROC_SHA_Trials_TakeGem(_Gem);

PROC
PROC_SHA_Trials_TakeGem((ITEM)_Gem)
THEN
NOT DB_SHA_Trials_GemsNotTaken(_Gem);
PROC_IncreaseCounter("SHA_Trials_GemsTaken");

PROC
PROC_CounterIncreased("SHA_Trials_GemsTaken", 4)
THEN
SetFlag(SHA_Trials_Event_AllGemsFound_2d47ee89-2a15-4b33-b933-59f0b0aa6f3b, NULL_00000000-0000-0000-0000-000000000000);
PROC_RemoveCounter("SHA_Trials_GemsTaken");

PROC
PROC_SHA_Trials_InitGems()
AND
DB_SHA_Trials_GemSockets(_, _, _Gem)
THEN
SetOnStage(_Gem, 0);

PROC
PROC_SHA_Trials_InitGems()
AND
DB_SHA_Trials_GemSockets_Counters(_, _Counter)
AND
NOT DB_GlobalCounter(_Counter, _)
THEN
PROC_DeclareCounter(_Counter);

// In case we want the combine action back
IF
Combined((ITEM)_Socket, _FirstGem, NULL_00000000-0000-0000-0000-000000000000, NULL_00000000-0000-0000-0000-000000000000, _, _Player, _Gem)
AND
DB_SHA_Trials_GemSockets_Counters(_Socket, _)
THEN
PROC_SHA_Trials_AddGemToSocket((ITEM)_Socket, (ITEM)_FirstGem);
ObjectTimerLaunch(_Gem, "SHA_Trials_GemRemoval", 500);

IF // Incase sockets ever support entering less than the full amount of them
Combined((ITEM)_Socket, _FirstGem, _SecondGem, NULL_00000000-0000-0000-0000-000000000000, _, _Player, _Gem)
AND
_SecondGem != NULL_00000000-0000-0000-0000-000000000000
AND
DB_SHA_Trials_GemSockets_Counters(_Socket, _)
THEN
PROC_SHA_Trials_AddGemToSocket((ITEM)_Socket, (ITEM)_FirstGem);
PROC_SHA_Trials_AddGemToSocket((ITEM)_Socket, (ITEM)_SecondGem);
ObjectTimerLaunch(_Gem, "SHA_Trials_GemRemoval", 500);

IF
Combined((ITEM)_Socket, _FirstGem, _SecondGem, _ThirdGem, _, _Player, _Gem)
AND
_ThirdGem != NULL_00000000-0000-0000-0000-000000000000
AND
DB_SHA_Trials_GemSockets_Counters(_Socket, _)
THEN
PROC_SHA_Trials_AddGemToSocket((ITEM)_Socket, (ITEM)_FirstGem);
PROC_SHA_Trials_AddGemToSocket((ITEM)_Socket, (ITEM)_SecondGem);
PROC_SHA_Trials_AddGemToSocket((ITEM)_Socket, (ITEM)_ThirdGem);
ObjectTimerLaunch(_Gem, "SHA_Trials_GemRemoval", 500);

IF
ObjectTimerFinished((ITEM)_Gem, "SHA_Trials_GemRemoval")
THEN
RequestDelete(_Gem);

IF
UseStarted(_Player, _Socket)
AND
DB_SHA_Trials_GemSockets(_Socket, _, _)
AND
NOT QRY_ItemTemplateInMagicPockets(_Player, QUEST_SHA_TrialGem_fd3fd8a9-a5fc-4726-9b6e-77f5ecf54cea)
THEN
PROC_TryStartAD((DIALOGRESOURCE)SHA_Trials_PAD_DontHaveGem_892393ff-4274-975d-703a-db75e5c08383, _Player);

PROC
PROC_SHA_Trials_TryStartDiscAD((CHARACTER)_Player)
AND
DB_GlobalFlag(SHA_Upper_State_DiscUnlocked_4b056ce5-e145-4d90-8451-0ff502e11898)
AND
QRY_OncePerUserAndNearbyPlayers(_Player, "SHA_UnlockDiscAD")
THEN
PROC_TryStartAD(SHA_Disc_PAD_Unlocked_153540d3-4632-071f-c189-a7ffadf5b296, _Player);

PROC
PROC_SHA_Trials_AddGemToSocket((ITEM)_Socket, (ITEM)_Gemstone)
AND
DB_SHA_Trials_GemSockets_Counters(_Socket, _Counter)
AND
DB_GlobalCounter(_Counter, _Count)
AND
DB_SHA_Trials_GemSockets(_Socket, _Count, _Gem)
THEN
SetCanInteract(_Gem, 0);
PROC_IncreaseCounter(_Counter);
SetOnStage(_Gem, 1);
PROC_SHA_Trials_AddGem((ITEM)_Gem);

PROC
PROC_SHA_Trials_AddGem((ITEM)_Gem)
AND
DB_SHA_Trials_GemSockets((ITEM)_Socket, _, _Gem)
AND
DB_SHA_Trials_GemSockets_Counters(_Socket, _Counter)
THEN
PROC_SHA_Trials_ResolveTrialsThroughGems(_Counter);

PROC
PROC_SHA_Trials_ResolveTrialsThroughGems((STRING)_CounterID)
AND
DB_SHA_Trials_GemSockets_CountersMilestones(_CounterID, _Objective, _Flag)
AND
DB_GlobalCounter(_CounterID, _Count)
AND
QRY_SHA_Trials_GemSocketsProgress(_Count, _Objective, _Flag)
THEN
DB_NOOP(1);

QRY
QRY_SHA_Trials_GemSocketsProgress((INTEGER)_CurrentProgress, (INTEGER)_ProgressAt, (FLAG)_ProgressFlag)
AND
_CurrentProgress < _ProgressAt
AND
DB_GlobalFlag(_ProgressFlag)
THEN
ClearFlag(_ProgressFlag, NULL_00000000-0000-0000-0000-000000000000);

QRY
QRY_SHA_Trials_GemSocketsProgress((INTEGER)_CurrentProgress, (INTEGER)_ProgressAt, (FLAG)_ProgressFlag)
AND
_CurrentProgress == _ProgressAt
AND
NOT DB_GlobalFlag(_ProgressFlag)
THEN
PROC_GlobalSetFlagAndCache(_ProgressFlag);

PROC
PROC_SHA_Trials_LockDisc()
THEN
PROC_SHA_Disc_LockDestination((TRIGGER)S_SHA_Disc_EntrancePos_f8dce590-e3eb-4557-8492-01bf20ecc4e4);
PROC_SHA_Disc_LockDestination((TRIGGER)S_SHA_Disc_NightsongPos_df12413d-ef0f-43af-8fba-682ffe80c0d9);
TimerLaunch("SHA_Disc_MoveToCenter", 2500);
RemoveStatus(S_SHA_UpperTrialGemSocket_001_315fb18a-4092-450b-ae41-9149cd9d6c6e, "SHA_GEMS_ACTIVE");
RemoveStatus(S_SHA_UpperSocketGem_000_369d939f-b54b-4348-bfbd-8b02ce6a69a5, "SHA_GEMS_ACTIVE");

IF
TimerFinished("SHA_Disc_MoveToCenter")
THEN
PROC_SHA_Disc_MoveTo(S_SHA_Disc_CenterPos_5a15d75e-3f27-407c-9149-da0f1f8e2991);

PROC
PROC_SHA_Trials_UnlockDisc()
THEN
PlayEffect((ITEM)S_SHA_UpperAltarPit_adffe953-f67f-4242-b99f-e5f433a377aa, (EFFECTRESOURCE)VFX_Script_SharTempleAltar_LightBlast_01_50fef9ed-9149-675e-8350-a1a356fdde0f);
PROC_SHA_Disc_UnlockDestination((TRIGGER)S_SHA_Disc_EntrancePos_f8dce590-e3eb-4557-8492-01bf20ecc4e4);
PROC_SHA_Disc_UnlockDestination((TRIGGER)S_SHA_Disc_NightsongPos_df12413d-ef0f-43af-8fba-682ffe80c0d9);
PROC_SHA_Disc_MoveTo(S_SHA_Disc_EntrancePos_f8dce590-e3eb-4557-8492-01bf20ecc4e4);
SetCanInteract((ITEM)S_LOW_UpperAltar_a856b852-e53d-4b3a-bfb8-5215d9a77141, 0);
ApplyStatus(S_SHA_UpperTrialGemSocket_001_315fb18a-4092-450b-ae41-9149cd9d6c6e, "SHA_GEMS_ACTIVE", -1.0, 1);
ApplyStatus(S_SHA_UpperSocketGem_000_369d939f-b54b-4348-bfbd-8b02ce6a69a5, "SHA_GEMS_ACTIVE", -1.0, 1);
//END_REGION

//END_REGION

//REGION Nightsong related
IF
FlagSet(SHA_Upper_State_DiscUnlocked_4b056ce5-e145-4d90-8451-0ff502e11898, _, _)
THEN
PROC_SHA_Trials_UnlockDisc();

IF
FlagCleared(SHA_Upper_State_DiscUnlocked_4b056ce5-e145-4d90-8451-0ff502e11898, _, _)
THEN
PROC_SHA_Trials_LockDisc();

IF
FlagSet(SHA_Trials_Event_UnlockNightsongChamber_8e857d0c-990b-4029-aa28-f5b935fb8c0f, _, _)
THEN
PlayEffect((ITEM)S_SHA_LowerAltarPit_be023d97-5de2-475d-bc31-ed77b22d920a, (EFFECTRESOURCE)VFX_Script_SharTempleAltar_LightBlast_01_50fef9ed-9149-675e-8350-a1a356fdde0f);
SetCanInteract((ITEM)S_SHA_LowerAltar_1a25fac4-dfb3-4103-91e2-e977c03681de, 0);
PROC_ItemUnlockAndOpen(S_SHA_NightsongChamberDoor_4689976f-7fe3-4d5f-933a-e872ce947d93);
ApplyStatus(S_SHA_UpperSocketGem_002_011f6f31-bb46-4b73-9ec6-cd6bf010a3c8, "SHA_GEMS_ACTIVE", -1.0, 1);
ApplyStatus(S_SHA_LowerSocketGem_000_8c31b27b-7380-44a3-a004-1f78907caa2d, "SHA_GEMS_ACTIVE", -1.0, 1);
ApplyStatus(S_SHA_LowerSocketGem_001_9fa05213-543a-4fe6-875a-004b1370c55c, "SHA_GEMS_ACTIVE", -1.0, 1);

IF
FlagCleared(SHA_Trials_Event_UnlockNightsongChamber_8e857d0c-990b-4029-aa28-f5b935fb8c0f, _, _)
THEN
Lock(S_SHA_NightsongChamberDoor_4689976f-7fe3-4d5f-933a-e872ce947d93, "NOKEY");
Close(S_SHA_NightsongChamberDoor_4689976f-7fe3-4d5f-933a-e872ce947d93);
RemoveStatus(S_SHA_UpperSocketGem_002_011f6f31-bb46-4b73-9ec6-cd6bf010a3c8, "SHA_GEMS_ACTIVE");
RemoveStatus(S_SHA_LowerSocketGem_000_8c31b27b-7380-44a3-a004-1f78907caa2d, "SHA_GEMS_ACTIVE");
RemoveStatus(S_SHA_LowerSocketGem_001_9fa05213-543a-4fe6-875a-004b1370c55c, "SHA_GEMS_ACTIVE");

PROC
PROC_SHA_NightsongChamberDoor_SwitchState()
AND
IsOpened(S_SHA_NightsongChamberDoor_4689976f-7fe3-4d5f-933a-e872ce947d93, 1)
THEN
Lock(S_SHA_NightsongChamberDoor_4689976f-7fe3-4d5f-933a-e872ce947d93, "NOKEY");
Close(S_SHA_NightsongChamberDoor_4689976f-7fe3-4d5f-933a-e872ce947d93);

PROC
PROC_SHA_NightsongChamberDoor_SwitchState()
AND
IsClosed(S_SHA_NightsongChamberDoor_4689976f-7fe3-4d5f-933a-e872ce947d93, 1)
THEN
PROC_ItemUnlockAndOpen(S_SHA_NightsongChamberDoor_4689976f-7fe3-4d5f-933a-e872ce947d93);

IF
Opened(S_SHA_NightsongChamberDoor_4689976f-7fe3-4d5f-933a-e872ce947d93)
AND
NOT DB_GlobalFlag((FLAG)SHA_Trials_State_LeverUnlocked_65f3ee21-78b0-46c3-a36b-f81b11497a24)
THEN
PROC_GlobalSetFlagAndCache((FLAG)SHA_Trials_State_LeverUnlocked_65f3ee21-78b0-46c3-a36b-f81b11497a24);

// Levers to avoid trapping the player behind the doors
IF
DualEntityEvent(_, S_SHA_NightsongChamberDoor_Lever_15237922-d7ff-4e6a-845d-914e86bcc031, "SHA_NightsongChamberDoor_Lever")
AND
DB_GlobalFlag((FLAG)SHA_Trials_State_LeverUnlocked_65f3ee21-78b0-46c3-a36b-f81b11497a24)
THEN
PROC_SHA_NightsongChamberDoor_SwitchState();

IF
UseFinished(_, _NightsongDoorGem, 1)
AND
DB_SHA_Trials_GemSockets(_Socket, _, _NightsongDoorGem)
AND
DB_SHA_Trials_GemSockets_Counters(_Socket, "SHA_NightsongChamber_Unlock")
AND
DB_GlobalFlag(SHA_Trials_Event_UnlockNightsongChamber_8e857d0c-990b-4029-aa28-f5b935fb8c0f)
THEN
PROC_SHA_NightsongChamberDoor_SwitchState();

IF
UseFinished(_Player, _NightsongDoorGem, 1)
AND
DB_Players(_Player)
AND
DB_SHA_Trials_GemSockets(_Socket, _, _NightsongDoorGem)
AND
DB_SHA_Trials_GemSockets_Counters(_Socket, "SHA_NightsongChamber_Unlock")
AND
NOT DB_GlobalFlag(SHA_Trials_Event_UnlockNightsongChamber_8e857d0c-990b-4029-aa28-f5b935fb8c0f)
AND
NOT DB_DialogName(GLO_AD_CannotUseNow_057cb7cf-5aa4-1ed7-9639-65530939b2f9, _)
THEN
PROC_PlayCantUseItemAD(_Player);

//We only need it for the necromancer and the orthon, so let's do it manually.
IF
TemplateAddedTo(QUEST_SHA_TrialGem_fd3fd8a9-a5fc-4726-9b6e-77f5ecf54cea, _, _InventoryHolder, _)
AND
DB_SHA_Trials_TrackedHoldersWithGems(_InventoryHolder, _Flag)
THEN
SetFlag(_Flag, NULL_00000000-0000-0000-0000-000000000000);
SetFlag(SHA_Trials_State_HasGem_71e7fb14-ca8d-4023-816b-3e3bd658b4b9, _InventoryHolder);

IF
DB_SHA_Trials_TrackedHoldersWithGems(_InventoryHolder, _Flag)
AND
TemplateIsInInventory(QUEST_SHA_TrialGem_fd3fd8a9-a5fc-4726-9b6e-77f5ecf54cea, _InventoryHolder, _Count)
AND
_Count > 0
THEN
SetFlag(_Flag, NULL_00000000-0000-0000-0000-000000000000);
SetFlag(SHA_Trials_State_HasGem_71e7fb14-ca8d-4023-816b-3e3bd658b4b9, _InventoryHolder);

IF
TemplateRemovedFrom(QUEST_SHA_TrialGem_fd3fd8a9-a5fc-4726-9b6e-77f5ecf54cea, _, _InventoryHolder)
AND
DB_SHA_Trials_TrackedHoldersWithGems(_InventoryHolder, _Flag)
AND
TemplateIsInInventory(QUEST_SHA_TrialGem_fd3fd8a9-a5fc-4726-9b6e-77f5ecf54cea, _InventoryHolder, 0)
THEN
ClearFlag(_Flag, NULL_00000000-0000-0000-0000-000000000000);
ClearFlag(SHA_Trials_State_HasGem_71e7fb14-ca8d-4023-816b-3e3bd658b4b9, _InventoryHolder);
//END_REGION

//REGION Trial candles
PROC
PROC_SHA_Trials_TrialPassed((ITEM)_Trial)
AND
DB_SHA_Trials_PassedTrialsCandles(_Trial, _Candle)
THEN
ApplyStatus(_Candle, "BURNING", -1.0, 1);
//END_REGION

//REGION Trial Elevator
// Interacting with the broken lever
IF
Combined(S_SHA_TrialElevator_BrokenLever_56ba35fc-bd73-4dd8-845b-4c9449f306f5, S_SHA_TrialElevator_LeverHandle_38f9b655-9a40-465b-8f15-f5e7227ce71e, _, _, _, _, _NewItem)
THEN
SetOnStage(S_SHA_TrialElevator_TopLever_0dc881a5-dcb6-4323-af2f-1e3030b06adb, 1);
SetOnStage(S_SHA_TrialElevator_BrokenLever_56ba35fc-bd73-4dd8-845b-4c9449f306f5, 0);
ObjectTimerLaunch(_NewItem, "SHA_Trials_HandleRemoval", 500);

IF
ObjectTimerFinished((ITEM)_NewItem, "SHA_Trials_HandleRemoval")
THEN
RequestDelete(_NewItem);

IF
UseFinished(_Char, S_SHA_TrialElevator_BrokenLever_56ba35fc-bd73-4dd8-845b-4c9449f306f5, 1)
AND
IsInMagicPockets(S_SHA_TrialElevator_LeverHandle_38f9b655-9a40-465b-8f15-f5e7227ce71e, _Char, 0)
THEN
PROC_PlayCantUseItemAD(_Char);

// Calling elevator
IF
UseFinished(_Char, S_SHA_TrialElevator_BottomLever_21a0c76f-31ca-43df-88ac-758fd197ae09, 1)
AND
DB_SHA_Trials_ElevatorMoving((LEVELTEMPLATE)S_SHA_TrialElevator_465b0bce-a6d1-4811-b182-7b46849697cb)
THEN
PROC_PlayCantUseItemAD(_Char);

IF
UseFinished(_Char, S_SHA_TrialElevator_BottomLever_21a0c76f-31ca-43df-88ac-758fd197ae09, 1)
AND
NOT DB_SHA_Trials_ElevatorMoving((LEVELTEMPLATE)S_SHA_TrialElevator_465b0bce-a6d1-4811-b182-7b46849697cb)
AND
DB_SHA_Trials_ElevatorPosition((TRIGGER)S_SHA_TrialElevator_Top_d3a17282-1b35-4da8-9ea7-1709ffbcbd09)
THEN
NOT DB_SHA_Trials_ElevatorPosition((TRIGGER)S_SHA_TrialElevator_Top_d3a17282-1b35-4da8-9ea7-1709ffbcbd09);
DB_SHA_Trials_ElevatorPosition((TRIGGER)S_SHA_TrialElevator_Bottom_7887e1c5-abbf-4e78-b859-419ba28f3542);
DB_SHA_Trials_ElevatorMoving((LEVELTEMPLATE)S_SHA_TrialElevator_465b0bce-a6d1-4811-b182-7b46849697cb);
PROC_SHA_Trials_MoveElevatorTo((TRIGGER)S_SHA_TrialElevator_Bottom_7887e1c5-abbf-4e78-b859-419ba28f3542);

IF
UseFinished(_Char, S_SHA_TrialElevator_TopLever_0dc881a5-dcb6-4323-af2f-1e3030b06adb, 1)
AND
DB_SHA_Trials_ElevatorMoving((LEVELTEMPLATE)S_SHA_TrialElevator_465b0bce-a6d1-4811-b182-7b46849697cb)
THEN
PROC_PlayCantUseItemAD(_Char);

IF
UseFinished(_Char, S_SHA_TrialElevator_TopLever_0dc881a5-dcb6-4323-af2f-1e3030b06adb, 1)
AND
NOT DB_SHA_Trials_ElevatorMoving((LEVELTEMPLATE)S_SHA_TrialElevator_465b0bce-a6d1-4811-b182-7b46849697cb)
AND
DB_SHA_Trials_ElevatorPosition((TRIGGER)S_SHA_TrialElevator_Bottom_7887e1c5-abbf-4e78-b859-419ba28f3542)
THEN
NOT DB_SHA_Trials_ElevatorPosition((TRIGGER)S_SHA_TrialElevator_Bottom_7887e1c5-abbf-4e78-b859-419ba28f3542);
DB_SHA_Trials_ElevatorPosition((TRIGGER)S_SHA_TrialElevator_Top_d3a17282-1b35-4da8-9ea7-1709ffbcbd09);
DB_SHA_Trials_ElevatorMoving((LEVELTEMPLATE)S_SHA_TrialElevator_465b0bce-a6d1-4811-b182-7b46849697cb);
PROC_SHA_Trials_MoveElevatorTo((TRIGGER)S_SHA_TrialElevator_Top_d3a17282-1b35-4da8-9ea7-1709ffbcbd09);

// Using elevator
IF
UseFinished(_Char, (ITEM)S_PLT_SHA_ElevatorLever_e0628a5e-6bad-4d77-aa4d-a1d556dcfb2d, 1)
AND
DB_SHA_Trials_ElevatorMoving((LEVELTEMPLATE)S_SHA_TrialElevator_465b0bce-a6d1-4811-b182-7b46849697cb)
THEN
PROC_PlayCantUseItemAD(_Char);

IF
UseFinished(_Char, (ITEM)S_PLT_SHA_ElevatorLever_e0628a5e-6bad-4d77-aa4d-a1d556dcfb2d, 1)
AND
NOT DB_SHA_Trials_ElevatorMoving((LEVELTEMPLATE)S_SHA_TrialElevator_465b0bce-a6d1-4811-b182-7b46849697cb)
AND
DB_SHA_Trials_ElevatorPosition((TRIGGER)S_SHA_TrialElevator_Bottom_7887e1c5-abbf-4e78-b859-419ba28f3542)
THEN
NOT DB_SHA_Trials_ElevatorPosition((TRIGGER)S_SHA_TrialElevator_Bottom_7887e1c5-abbf-4e78-b859-419ba28f3542);
DB_SHA_Trials_ElevatorPosition((TRIGGER)S_SHA_TrialElevator_Top_d3a17282-1b35-4da8-9ea7-1709ffbcbd09);
DB_SHA_Trials_ElevatorMoving((LEVELTEMPLATE)S_SHA_TrialElevator_465b0bce-a6d1-4811-b182-7b46849697cb);
PROC_SHA_Trials_MoveElevatorTo((TRIGGER)S_SHA_TrialElevator_Top_d3a17282-1b35-4da8-9ea7-1709ffbcbd09);

IF
UseFinished(_Char, (ITEM)S_PLT_SHA_ElevatorLever_e0628a5e-6bad-4d77-aa4d-a1d556dcfb2d, 1)
AND
NOT DB_SHA_Trials_ElevatorMoving((LEVELTEMPLATE)S_SHA_TrialElevator_465b0bce-a6d1-4811-b182-7b46849697cb)
AND
DB_SHA_Trials_ElevatorPosition((TRIGGER)S_SHA_TrialElevator_Top_d3a17282-1b35-4da8-9ea7-1709ffbcbd09)
THEN
NOT DB_SHA_Trials_ElevatorPosition((TRIGGER)S_SHA_TrialElevator_Top_d3a17282-1b35-4da8-9ea7-1709ffbcbd09);
DB_SHA_Trials_ElevatorPosition((TRIGGER)S_SHA_TrialElevator_Bottom_7887e1c5-abbf-4e78-b859-419ba28f3542);
DB_SHA_Trials_ElevatorMoving((LEVELTEMPLATE)S_SHA_TrialElevator_465b0bce-a6d1-4811-b182-7b46849697cb);
PROC_SHA_Trials_MoveElevatorTo((TRIGGER)S_SHA_TrialElevator_Bottom_7887e1c5-abbf-4e78-b859-419ba28f3542);

IF
PlatformMovementFinished(S_SHA_TrialElevator_465b0bce-a6d1-4811-b182-7b46849697cb, "SHA_Trials_ElevatorMoving")
THEN
NOT DB_SHA_Trials_ElevatorMoving((LEVELTEMPLATE)S_SHA_TrialElevator_465b0bce-a6d1-4811-b182-7b46849697cb);

PROC
PROC_SHA_Trials_MoveElevatorTo((GUIDSTRING)_Destination)
AND
GetPosition(_Destination, _X, _Y, _Z)
THEN
PlatformMoveTo(S_SHA_TrialElevator_465b0bce-a6d1-4811-b182-7b46849697cb, _X, _Y, _Z, 2.0, "SHA_Trials_ElevatorMoving", 0);

IF
EnteredTrigger(_Char ,(TRIGGER)S_SHA_SquishTrigger_da24e0c7-9618-48e3-b3df-9b2f78a6c16d)
AND
DB_SHA_Trials_ElevatorPosition((TRIGGER)S_SHA_TrialElevator_Bottom_7887e1c5-abbf-4e78-b859-419ba28f3542)
THEN
Die(_Char, DEATHTYPE.Physical, NULL_00000000-0000-0000-0000-000000000000, 0, 0, 1.0);


//END_REGION

//REGION Hooks
IF
TextEvent("SHA_PassTrialsInProgress")
AND
DB_SHA_Trials_TrialStatues(_Trial)
AND
GetFlag(SHA_Trials_State_TrialInProgress_87772420-50d7-4937-85ec-95c42fd9fd14, _Trial, 1)
AND
GetFlag(SHA_Trials_State_TrialFinished_b7dd2e12-2d84-4056-a35a-c0818e99e6d1, _Trial, 0)
THEN
SetFlag(SHA_Trials_Event_TrialPassed_a2bf1d24-4f81-4bae-ac3f-68a5760d122c, _Trial);

IF
TextEvent("SHA_FailTrialsInProgress")
AND
DB_SHA_Trials_TrialStatues(_Trial)
AND
GetFlag(SHA_Trials_State_TrialInProgress_87772420-50d7-4937-85ec-95c42fd9fd14, _Trial, 1)
AND
GetFlag(SHA_Trials_State_TrialFinished_b7dd2e12-2d84-4056-a35a-c0818e99e6d1, _Trial, 0)
THEN
SetFlag(SHA_Trials_Event_TrialFailed_e80850ea-ab84-4043-9809-960d4db885f6, _Trial);

IF
TextEvent("SHA_GiveTrialGems")
AND
GetHostCharacter(_Player)
THEN
PROC_ToInventoryAndOnStage(S_SHA_TrialGem_000_5e3d0d3b-6fcf-48b8-a10c-580ff4efd1ff, _Player, 1, 1, 1);
PROC_ToInventoryAndOnStage(S_SHA_TrialGem_001_3c29b3b3-65ec-4d47-b689-e5eca053602b, _Player, 1, 1, 1);
PROC_ToInventoryAndOnStage(S_SHA_TrialGem_002_b8dda6e3-8cb8-4287-81a4-0ac5260859c7, _Player, 1, 1, 1);

IF
TextEvent("SHA_GiveAllGems")
AND
GetHostCharacter(_Player)
THEN
PROC_Debug_SHA_Trials_Generics_GiveAllGems(_Player);

IF
TextEvent("SHA_PassOoDTrial")
THEN
SetFlag(SHA_Trials_Event_TrialPassed_a2bf1d24-4f81-4bae-ac3f-68a5760d122c, S_SHA_ObjectOfDarknessTrial_3892d0a6-24f4-402e-8b51-03ba8cfb4429);

IF
TextEvent("SHA_PassPoDTrial")
THEN
SetFlag(SHA_Trials_Event_TrialPassed_a2bf1d24-4f81-4bae-ac3f-68a5760d122c, S_SHA_PathOfDarknessTrial_ff2af557-dbc2-4e27-9c02-f13b25dbe86e);

IF
TextEvent("SHA_PassMTTrial")
THEN
SetFlag(SHA_Trials_Event_TrialPassed_a2bf1d24-4f81-4bae-ac3f-68a5760d122c, S_SHA_MentalTortureTrial_98811843-1086-4931-a3bd-3fef817347fe);

IF
TextEvent("SHA_LockDisc")
THEN
PROC_SHA_Trials_LockDisc();

IF
TextEvent("SHA_UnlockDisc")
THEN
PROC_SHA_Trials_UnlockDisc();

IF
FlagSet((FLAG)Debug_SHA_GiveAllGems_7e45e767-525e-494b-83ba-1a398e55528d, _Player, _)
THEN
PROC_Debug_SHA_Trials_Generics_GiveAllGems((CHARACTER)_Player);

PROC
PROC_Debug_SHA_Trials_Generics_GiveAllGems((CHARACTER)_Player)
THEN
PROC_ToInventoryAndOnStage(S_SHA_TrialGem_000_5e3d0d3b-6fcf-48b8-a10c-580ff4efd1ff, _Player, 1, 1, 1);
PROC_ToInventoryAndOnStage(S_SHA_TrialGem_001_3c29b3b3-65ec-4d47-b689-e5eca053602b, _Player, 1, 1, 1);
PROC_ToInventoryAndOnStage(S_SHA_TrialGem_002_b8dda6e3-8cb8-4287-81a4-0ac5260859c7, _Player, 1, 1, 1);
PROC_ToInventoryAndOnStage(S_SHA_TrialGem_006_7fbf6a88-bce1-49e0-a216-0cb2ce23b0eb, _Player, 1, 1, 1);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "Act2"
