Version 1
SubGoalCombiner SGC_AND
INITSECTION
//REGION Categories
// These are from the Journal  Editor
DB_GLO_Backgrounds_Category("WLD_Main_A","Act1");
//END_REGION Categories

//REGION Global Goals: Criminal
DB_GLO_Backgrounds_Goal((TAG)CRIMINAL_74ed9de3-fff5-419a-949b-18bd5e17944e, "GLO_Criminal_StealValuable_1000", 6b0839f2-f3f7-4a5e-8d8d-634b1d898a81);
DB_GLO_Backgrounds_Goal((TAG)CRIMINAL_74ed9de3-fff5-419a-949b-18bd5e17944e, "GLO_Criminal_KillInnocent", c74bb9ee-687b-4a6b-9045-7aec14e7b90a);
DB_GLO_Backgrounds_Goal((TAG)CRIMINAL_74ed9de3-fff5-419a-949b-18bd5e17944e, "GLO_Criminal_EscapePrison", 414ecfe5-088a-4d65-92ac-dddc492ba37d);

DB_GLO_Backgrounds_Criminal_ValuableItemStolen("GLO_Criminal_StealValuable_1000", 1000);
//END_REGION Global Goals: Criminal

//REGION Global Goals: Sage
DB_GLO_Backgrounds_Goal((TAG)SAGE_dad18490-c61d-4958-805c-f017eb68f8a0, "GLO_Sage_SwD", 0e33567e-5405-4e1c-9065-a9c03ad54b4e);
//END_REGION Global Goals: Sage

//REGION Global Goals: Soldier
DB_GLO_Backgrounds_Goal((TAG)SOLDIER_d135f265-c2e1-4077-a836-b548ee871681, "GLO_Soldier_LargeBattle", 70c3f9bc-ed3e-4fc7-b93c-f506cfbb849b);
DB_GLO_Backgrounds_Goal((TAG)SOLDIER_d135f265-c2e1-4077-a836-b548ee871681, "GLO_Soldier_KillMultipleInOneTurn", cd3f9057-bdc7-4a20-a679-1b2757a6a1db);
DB_GLO_Backgrounds_Goal((TAG)SOLDIER_d135f265-c2e1-4077-a836-b548ee871681, "GLO_Soldier_BossOneShot", 8d30463c-0e75-47ae-a1cb-6b5e19168bae);
//END_REGION Global Goals: Soldier

//REGION Global Goals: Noble
DB_GLO_Backgrounds_Goal((TAG)NOBLE_56825486-9cfc-4ec2-87d1-c8065c41774b, "GLO_Noble_Approval", e2bb0bf3-6b82-4680-80f9-a9b634ef827d, "GlobalAvatar");
DB_GLO_Backgrounds_Goal((TAG)NOBLE_56825486-9cfc-4ec2-87d1-c8065c41774b, "GLO_Noble_HoardGold_First", 012a6a18-e72d-4c96-9645-8583cbb4e1f2);
DB_GLO_Backgrounds_Goal((TAG)NOBLE_56825486-9cfc-4ec2-87d1-c8065c41774b, "GLO_Noble_TrueSoul", 041883e3-df55-4b97-b882-985d23811ed8);
DB_GLO_Backgrounds_Goal((TAG)NOBLE_56825486-9cfc-4ec2-87d1-c8065c41774b, "GLO_Noble_BribeGuard", f8872467-9b40-420e-8f0b-7f2a965ccf79);
DB_GLO_Backgrounds_Goal((TAG)NOBLE_56825486-9cfc-4ec2-87d1-c8065c41774b, "GLO_Noble_Title", 62ca8dce-81a1-4743-a4c0-eec439f56d93);

DB_GLO_Backgrounds_Noble_GoldHoarded("GLO_Noble_HoardGold_First", 2000);
//END_REGION Global Goals: Noble

//REGION Global Goals: Guild Artisan
DB_GLO_Backgrounds_Goal((TAG)GUILD_ARTISAN_baf9fb0e-f535-40a0-bb78-3ec289d84e66, "GLO_GuildArtisan_SellHighValueItem", a3af0d3d-03a0-4510-b0b4-46f4e9fa9f9c);
DB_GLO_Backgrounds_Goal((TAG)GUILD_ARTISAN_baf9fb0e-f535-40a0-bb78-3ec289d84e66, "GLO_GuildArtisan_TraderAttitude", e508c275-1c87-413f-9351-7c5f4a51b3c3);

DB_GLO_Backgrounds_GuildArtisan_HighValueSell(1000, "GLO_GuildArtisan_SellHighValueItem");
//END_REGION Global Goals: Guild Artisan

//REGION Global Goals: Haunted One
DB_GLO_Backgrounds_Goal((TAG)HAUNTED_ONE_ce00b3b6-238e-4524-851b-3d1f2d2b1189, "Act0_HauntedOne_KilledEnemyAllElements", 7a1ae833-fcd9-4f4b-a8f9-a2c714cdc80a);
DB_GLO_Backgrounds_Goal((TAG)HAUNTED_ONE_ce00b3b6-238e-4524-851b-3d1f2d2b1189, "Act0_HauntedOne_Killed5Enemies1Round", dd87af22-ce6d-4ccd-ad9c-728c59fcb3d9);
DB_GLO_Backgrounds_Goal((TAG)HAUNTED_ONE_ce00b3b6-238e-4524-851b-3d1f2d2b1189, "Act0_HauntedOne_Killed5Neutral1Round", 7090743e-c565-4859-9847-7dabe567d7b6);

DB_GLO_Backgrounds_HauntedOne_RoundKillTracking("Act0_HauntedOne_Killed5Enemies1Round");
DB_GLO_Backgrounds_HauntedOne_RoundKillTracking("Act0_HauntedOne_Killed5Neutral1Round");

DB_GLO_Backgrounds_HauntedOne_DeathTypes("Acid");
DB_GLO_Backgrounds_HauntedOne_DeathTypes("Electrocution");
DB_GLO_Backgrounds_HauntedOne_DeathTypes("Incinerate");
DB_GLO_Backgrounds_HauntedOne_DeathTypes("Necrotic");
DB_GLO_Backgrounds_HauntedOne_DeathTypes("Physical");
DB_GLO_Backgrounds_HauntedOne_DeathTypes("Psychic");
DB_GLO_Backgrounds_HauntedOne_DeathTypes("Radiant");
DB_GLO_Backgrounds_HauntedOne_DeathTypes("Cold");

//END_REGION Global Goals: Haunted One

NOT DB_GLO_Backgrounds_ChainAfterGlobalFlagPartyWide((FLAG)NULL_00000000-0000-0000-0000-000000000000, "");
KBSECTION
//REGION Players tracking
IF
TagSet(_Player, _Tag)
AND
DB_Players((CHARACTER)_Player)
AND
DB_GLO_Backgrounds_Goal(_Tag, _, _, _)
AND
NOT DB_GLO_Backgrounds_Players(_Player, _Tag)
THEN
DB_GLO_Backgrounds_Players(_Player, _Tag);

IF
DB_Players(_Player)
AND
DB_GLO_Backgrounds_Goal(_Tag, _, _, _)
AND
NOT DB_GLO_Backgrounds_Players(_Player, _Tag)
AND
IsTagged(_Player, _Tag, 1)
THEN
DB_GLO_Backgrounds_Players(_Player, _Tag);

IF
DB_GLO_Backgrounds_Players(_Player, _Tag)
AND
NOT DB_Players(_Player)
THEN
NOT DB_GLO_Backgrounds_Players(_Player, _Tag);

// Tracking the list of tags to avoid QRY-ing whick tags currenly can trigger goals
IF
DB_GLO_Backgrounds_Players(_, _Tag)
AND
NOT DB_GLO_Backgrounds_Tags(_Tag)
THEN
DB_GLO_Backgrounds_Tags(_Tag);

IF
DB_GLO_Backgrounds_Tags(_Tag)
AND
NOT DB_GLO_Backgrounds_Players(_, _Tag)
THEN
NOT DB_GLO_Backgrounds_Tags(_Tag);
//END_REGION Players tracking

//REGION Goal Completion
PROC
PROC_GLO_Backgrounds_CompleteGoal((CHARACTER)_Character, (STRING)_GoalId)
AND
NOT DB_Players(_Character)
AND
IsCharacter(_Character,1)
AND
CharacterGetOwner(_Character, _Player)
AND
DB_Players(_Player)
THEN
PROC_GLO_Backgrounds_CompleteGoal(_Player, _GoalId);

PROC
PROC_GLO_Backgrounds_CompleteGoal((CHARACTER)_Player, (STRING)_GoalId)
AND
DB_Players(_Player)
AND
NOT DB_GLO_Backgrounds_Blocked(_GoalId)
AND
NOT DB_CurrentLevel("TUT_Avernus_C")
THEN
PROC_GLO_Backgrounds_RewardPlayer(_Player, _GoalId);
PROC_GLO_Backgrounds_ShareGoalRewarding(_Player, _GoalId);
DB_GLO_Backgrounds_Blocked(_GoalId);

PROC
PROC_GLO_Backgrounds_RewardPlayer((CHARACTER)_Player, (STRING)_GoalId)
AND
NOT DB_GLO_Backgrounds_Completed(_Player, _GoalId)
AND
DB_GLO_Backgrounds_Goal(_Tag, _GoalId, _UuidID, _)
AND
DB_GLO_Backgrounds_Players(_Player, _Tag)
THEN
DB_GLO_Backgrounds_Completed(_Player, _GoalId);
PROC_GLO_Backgrounds_GivePoint(_Player, _UuidID);

PROC
PROC_GLO_Backgrounds_GivePoint((CHARACTER)_Player, (GUIDSTRING)_UuidID)
AND
DB_ActiveLevel(_ActiveLevel)
AND
DB_GLO_Backgrounds_Category(_ActiveLevel, _Category)
THEN
AddBackgroundGoal(_Player, _UuidID, _Category);

PROC
PROC_GLO_Backgrounds_ShareGoalRewarding((CHARACTER)_TargetPlayer, (STRING)_GoalId)
AND
DB_Players(_OtherPlayer)
AND
_TargetPlayer != _OtherPlayer
AND
DB_GLO_Backgrounds_Goal(_, _GoalId, _, _SharingType)
AND
NOT QRY_GLO_Backgrounds_BlockSharingWithPlayer(_TargetPlayer, _OtherPlayer, _SharingType)
THEN
PROC_GLO_Backgrounds_RewardPlayer(_OtherPlayer, _GoalId);

QRY
QRY_GLO_Backgrounds_BlockSharingWithPlayer((CHARACTER)_TargetPlayer, (CHARACTER)_OtherPlayer, "GlobalAvatar")
AND
NOT DB_Avatars(_OtherPlayer)
THEN
DB_NOOP(1);

IF
DB_GLO_Backgrounds_Goal(_Tag, _Id, _Uuid)
AND
NOT DB_GLO_Backgrounds_Goal(_Tag, _Id, _Uuid, _)
THEN
DB_GLO_Backgrounds_Goal(_Tag, _Id, _Uuid, "Global");
//END_REGION Goal Completion

//REGION Helpers
// DB_GLO_Backgrounds_ChainAfterGoal
PROC
PROC_GLO_Backgrounds_CompleteGoal((CHARACTER)_Player, (STRING)_GoalId)
AND
DB_GLO_Backgrounds_ChainAfterGoal(_GoalId, _SimilarGoalId)
THEN
PROC_GLO_Backgrounds_CompleteGoal(_Player, _SimilarGoalId);

// DB_GLO_Backgrounds_ChainAfterCharacterFlag
IF
FlagSet(_Flag, _Player, _)
AND
DB_GLO_Backgrounds_ChainAfterCharacterFlag(_Flag, _GoalId)
AND
IsCharacter(_Player,1) //could be HasItem flag on container
THEN
PROC_GLO_Backgrounds_CompleteGoal((CHARACTER)_Player, _GoalId);

// DB_GLO_Backgrounds_ChainAfterGlobalFlagInDialog
IF
FlagSet(_Flag, _, _DialogInstance)
AND
DB_DialogPlayers(_DialogInstance, _Player, _)
AND
DB_GLO_Backgrounds_ChainAfterGlobalFlagInDialog(_Flag, (STRING)_GoalId)
THEN
PROC_GLO_Backgrounds_CompleteGoal((CHARACTER)_Player, _GoalId);

// DB_GLO_Backgrounds_ChainAfterGlobalFlagPartyWide
IF
FlagSet(_Flag, _,_)
AND
DB_GLO_Backgrounds_ChainAfterGlobalFlagPartyWide(_Flag, (STRING)_GoalId)
AND
DB_Players(_Player)
THEN
PROC_GLO_Backgrounds_CompleteGoal((CHARACTER)_Player, _GoalId);

// DB_GLO_Backgrounds_ChainAfterQuestUpdate
IF
QuestUpdateUnlocked(_Player, _TopLevelQuestID, _StateId)
AND
DB_GLO_Backgrounds_ChainAfterQuestUpdate(_TopLevelQuestID, _StateId, _GoalId)
THEN
PROC_GLO_Backgrounds_CompleteGoal(_Player, _GoalId);

// DB_GLO_Backgrounds_ChainAfterBookClosed
IF
GameBookInterfaceClosed(_Item, _Character)
AND
DB_GLO_Backgrounds_ChainAfterBookClosed(_Item, _GoalId)
THEN
PROC_GLO_Backgrounds_CompleteGoal(_Character, _GoalId);

// DB_GLO_Backgrounds_ChainAfterItemOpened
IF
Opened(_Item)
AND
DB_GLO_Backgrounds_ChainAfterItemOpened(_Item, _GoalId)
AND
NOT DB_GLO_Backgrounds_Blocked(_GoalId)
AND
GetClosestPlayer(_Item, _Player, _Distance)
AND
_Distance < 20.0
THEN
PROC_GLO_Backgrounds_CompleteGoal(_Player, _GoalId);

// DB_GLO_Backgrounds_ChainAfterDefeated
IF
KilledBy((CHARACTER)_Target, (CHARACTER)_PartyMember, _, _)
AND
DB_GLO_Backgrounds_ChainAfterDefeated(_Target, _GoalId)
AND
DB_PartyMembers(_PartyMember)
THEN
PROC_GLO_Backgrounds_CompleteGoal(_PartyMember, _GoalId);

IF
DB_PermaDefeated(_Target)
AND
DB_GLO_Backgrounds_ChainAfterDefeated(_Target, _GoalId)
AND
DB_PartyMembers(_PartyMember)
AND
QRY_IsInRange(_Target, _PartyMember, 30.0)
THEN
PROC_GLO_Backgrounds_CompleteGoal(_PartyMember, _GoalId);

// DB_GLO_Backgrounds_ChainAfterDefeatCounterInCombat
PROC
PROC_GLO_DefeatCounter_AllDefeated(_DefeatCounterId)
AND
DB_GLO_Backgrounds_ChainAfterDefeatCounterInCombat(_DefeatCounterId, _GoalId)
AND
DB_GLO_DefeatCounter(_Target, _DefeatCounterId)
AND
DB_Was_InCombat(_Target, _CombatId)
AND
DB_PartyMembers(_PartyMember)
AND
DB_Was_InCombat(_PartyMember, _CombatId)
THEN
PROC_GLO_Backgrounds_CompleteGoal(_PartyMember, _GoalId);

// DB_GLO_Backgrounds_ChainAfterDialogEndedWithGlobalFlag
IF
DB_GLO_Backgrounds_ChainAfterDialogEndedWithGlobalFlag((DIALOGRESOURCE)_Dialog, (FLAG)_Flag, (STRING)_GoalId)
AND
NOT DB_GlobalFlagReactionAfterDialog(_Flag, _Dialog)
THEN
DB_GlobalFlagReactionAfterDialog(_Flag, _Dialog);

PROC
PROC_GlobalFlagReactionAfterDialog((FLAG)_Flag, (DIALOGRESOURCE)_Dialog, (INTEGER)_InstanceID)
AND
DB_GLO_Backgrounds_ChainAfterDialogEndedWithGlobalFlag(_Dialog, _Flag, (STRING)_GoalId)
AND
DB_DialogPlayers(_InstanceID, _Player, _)
THEN
PROC_GLO_Backgrounds_CompleteGoal((CHARACTER)_Player, _GoalId);
//END_REGION Helpers

//REGION Global Goals: Criminal
// Stealing valuable item
IF
CharacterPickpocketSuccess(_Player, _, _Item, _, _Amount, _Value)
AND
DB_PartyMembers(_Player)
THEN
PROC_GLO_Backgrounds_Criminal_CheckStealing(_Player, _Item, _Amount, _Value);

IF
CharacterStoleItem(_Player, _Item, _, _, _, _, _, _, _Amount, _Value)
AND
DB_PartyMembers(_Player)
THEN
PROC_GLO_Backgrounds_Criminal_CheckStealing(_Player, _Item, _Amount, _Value);

PROC
PROC_GLO_Backgrounds_Criminal_CheckStealing((CHARACTER)_Player, (ITEM)_Item, (INTEGER)_Amount, (INTEGER)_Value)
AND
DB_GLO_Backgrounds_Tags((TAG)CRIMINAL_74ed9de3-fff5-419a-949b-18bd5e17944e)
AND
NOT DB_GLO_Backgrounds_Criminal_UniqueItemsToSteal(_Item)
AND
QRY_OnlyOnce_Reset("GLO_Criminal_StealValuable")
AND
IntegerDivide(_Value, _Amount, _SingleItemValue)
AND
DB_GLO_Backgrounds_Criminal_ValuableItemStolen(_GoalId, _RequiredValue)
AND
_SingleItemValue >= _RequiredValue
AND
QRY_OnlyOnce("GLO_Criminal_StealValuable")
THEN
PROC_GLO_Backgrounds_CompleteGoal(_Player, _GoalId);

// Killing Innocent
IF
CrimeIsRegistered(_NPC, _Crime, _, _, _Player, _, _, _)
AND
DB_PartyMembers(_Player)
AND
DB_GLO_Backgrounds_Tags((TAG)CRIMINAL_74ed9de3-fff5-419a-949b-18bd5e17944e)
AND
QRY_CRIME_IsCrimeFamilyMember(_Crime, "Murder")
AND
QRY_GLO_Backgrounds_IsCivilian(_NPC)
AND
GUIDToString(_NPC, _GuidString)
AND
Concatenate("killedNPC:",_GuidString,_ParamString)
THEN
TrackAnalyticsInfo("bgg_killInnocent", _ParamString, _Player);
PROC_GLO_Backgrounds_CompleteGoal(_Player, "GLO_Criminal_KillInnocent");

IF
Died(_NPC)
AND
DB_ORI_DarkUrge_AlfiraMurderVictim(_NPC)
AND
DB_GlobalFlag((FLAG)ORI_DarkUrge_State_MurderedAlfiraOrAlternative_6bb5bfcc-e762-40d4-a05b-9bdf860ba099)
AND
DB_ORI_DarkUrge(_Player)
AND
DB_GLO_Backgrounds_Tags((TAG)CRIMINAL_74ed9de3-fff5-419a-949b-18bd5e17944e)
AND
GUIDToString(_NPC, _GuidString)
AND
Concatenate("killedAlfiraVictim:",_GuidString,_ParamString)
THEN
TrackAnalyticsInfo("bgg_killInnocent", _ParamString, _Player);
PROC_GLO_Backgrounds_CompleteGoal(_Player, "GLO_Criminal_KillInnocent");

QRY
QRY_GLO_Backgrounds_IsCivilian((CHARACTER)_Character)
AND
IsTagged(_Character, CIVILIAN_71120d5d-3853-46e4-9762-33f59aa6b4ae, 1)
AND
IsTagged(_Character, GOBLIN_608597d9-bf00-4ede-aabe-767457280925, 0)
AND
IsTagged(_Character, ILLITHID_1eec74e8-3673-4500-abec-57b7ed8469ed, 0)
THEN
DB_NOOP(1);

// Escaping Prison
PROC
PROC_CRIME_Prison_Escaped((CHARACTER)_Player, _,_,_,_,_,_)
AND
DB_Players(_Player)
THEN
PROC_GLO_Backgrounds_CompleteGoal(_Player, "GLO_Criminal_EscapePrison");
//END_REGION Global Goals: Criminal

//REGION Global Goals: Sage
// Act1_Sage_SwD
IF
DialogEnded(_Dialog, _InstnceID)
AND
DB_GLO_CharacterCorpseDialog(_Corpse, _Dialog)
AND
NOT DB_GLO_Backgrounds_Blocked("GLO_Sage_SwD")
AND
GetFlag(GLO_SpeakWithDead_State_QuestionsLimitReached_01c40268-4a8d-4787-8566-77e01ff04762, _Corpse, 1)
AND
DB_DialogPlayers(_DialogInstance, _Player, _)
THEN
PROC_GLO_Backgrounds_CompleteGoal((CHARACTER)_Player, "GLO_Sage_SwD");
//END_REGION Global Goals: Sage

//REGION Global Goals: Soldier
// Defeat more then X in one combat
PROC
PROC_StateSet_PermaDefeated(_Enemy)
AND
NOT DB_GLO_Backgrounds_Blocked("GLO_Soldier_LargeBattle")
AND
DB_GLO_Backgrounds_Tags((TAG)SOLDIER_d135f265-c2e1-4077-a836-b548ee871681)
AND
DB_Is_InCombat(_Enemy, _CombatID)
AND
NOT DB_GLO_Backgrounds_Soldier_PermaDefeatedInCombat(_Enemy, _CombatID)
AND
QRY_IsEnemyToAnyPlayerInCombat((CHARACTER)_Enemy, _CombatID)
THEN
DB_GLO_Backgrounds_Soldier_PermaDefeatedInCombat(_Enemy, _CombatID);

PROC
PROC_StateSet_PermaDefeated(_Enemy)
AND
NOT DB_GLO_Backgrounds_Blocked("GLO_Soldier_LargeBattle")
AND
DB_GLO_Backgrounds_Tags((TAG)SOLDIER_d135f265-c2e1-4077-a836-b548ee871681)
AND
DB_Was_InCombat(_Enemy, _CombatID)
AND
NOT DB_GLO_Backgrounds_Soldier_PermaDefeatedInCombat(_Enemy, _CombatID)
AND
QRY_WasEnemyToAnyPlayerInCombat((CHARACTER)_Enemy, _CombatID)
THEN
DB_GLO_Backgrounds_Soldier_PermaDefeatedInCombat(_Enemy, _CombatID);

IF
SwitchedCombat(_Player, _OldCombatID, _NewCombatID)
AND
DB_GLO_Backgrounds_Soldier_PermaDefeatedInCombat(_Enemy, _OldCombatID)
THEN
NOT DB_GLO_Backgrounds_Soldier_PermaDefeatedInCombat(_Enemy, _OldCombatID);
DB_GLO_Backgrounds_Soldier_PermaDefeatedInCombat(_Enemy, _NewCombatID);

IF
CombatEnded(_CombatID)
AND
NOT DB_GLO_Backgrounds_Blocked("GLO_Soldier_LargeBattle")
AND
NOT DB_GLO_Backgrounds_Soldier_DeadInCombatCounter(_CombatID, _)
AND
DB_GLO_Backgrounds_Tags((TAG)SOLDIER_d135f265-c2e1-4077-a836-b548ee871681)
THEN
DB_GLO_Backgrounds_Soldier_DeadInCombatCounter(_CombatID, 0);

IF
CombatEnded(_CombatID)
AND
NOT DB_GLO_Backgrounds_Blocked("GLO_Soldier_LargeBattle")
AND
DB_GLO_Backgrounds_Soldier_PermaDefeatedInCombat(_Enemy, _CombatID)
AND
NOT DB_PartyMembers((CHARACTER)_Enemy)
AND
DB_GLO_Backgrounds_Soldier_DeadInCombatCounter(_CombatID, _CurrentCount)
AND
IntegerSum(_CurrentCount, 1, _CountPlusOne)
THEN
NOT DB_GLO_Backgrounds_Soldier_DeadInCombatCounter(_CombatID, _CurrentCount);
DB_GLO_Backgrounds_Soldier_DeadInCombatCounter(_CombatID, _CountPlusOne);

IF
DB_GLO_Backgrounds_Soldier_DeadInCombatCounter(_CombatID, _CurrentCount)
AND
NOT DB_GLO_Backgrounds_Blocked("GLO_Soldier_LargeBattle")
AND
_CurrentCount > 10
AND
DB_PartyMembers(_PartyMember)
AND
DB_Was_InCombat(_PartyMember, _CombatID)
THEN
PROC_GLO_Backgrounds_CompleteGoal(_PartyMember, "GLO_Soldier_LargeBattle");

IF
CombatEnded(_CombatID)
AND
DB_GLO_Backgrounds_Soldier_PermaDefeatedInCombat(_Character, _CombatID)
THEN
NOT DB_GLO_Backgrounds_Soldier_PermaDefeatedInCombat(_Character, _CombatID);

IF
CombatEnded(_CombatID)
AND
DB_GLO_Backgrounds_Soldier_DeadInCombatCounter(_CombatID, _Count)
THEN
NOT DB_GLO_Backgrounds_Soldier_DeadInCombatCounter(_CombatID, _Count);

//Defeat more than X in a single turn
//Keep in mind that multiple players can have their turn at a time
IF
TurnStarted((CHARACTER)_Player)
AND
DB_Players(_Player)
AND
NOT DB_GLO_Backgrounds_Soldier_SingleTurnTracker(_Player, _)
AND
DB_GLO_Backgrounds_Tags((TAG)SOLDIER_d135f265-c2e1-4077-a836-b548ee871681)
AND
NOT DB_GLO_Backgrounds_Blocked("GLO_Soldier_KillMultipleInOneTurn")
THEN
DB_GLO_Backgrounds_Soldier_SingleTurnTracker(_Player, 0);

IF
KilledBy(_Enemy,_Player,_,_)
AND
DB_Players((CHARACTER)_Player)
AND
NOT DB_GLO_Backgrounds_Blocked("GLO_Soldier_KillMultipleInOneTurn")
AND
DB_PermaDefeated(_Enemy)
THEN
PROC_GLO_Backgrounds_PermaDefeatedBy((GUIDSTRING)_Enemy,(CHARACTER)_Player);

PROC
PROC_KnockedOut(_Player,_Enemy)
AND
DB_Players((CHARACTER)_Player)
AND
NOT DB_GLO_Backgrounds_Blocked("GLO_Soldier_KillMultipleInOneTurn")
AND
DB_PermaDefeated(_Enemy)
THEN
PROC_GLO_Backgrounds_PermaDefeatedBy((GUIDSTRING)_Enemy,(CHARACTER)_Player);

PROC
PROC_GLO_Backgrounds_PermaDefeatedBy((GUIDSTRING)_Enemy,(CHARACTER)_Player)
AND
DB_GLO_Backgrounds_Soldier_SingleTurnTracker(_Player, _Count)
AND
QRY_IsEnemy(_Player, _Enemy)
AND
IntegerSum(_Count, 1, _CountPlusOne)
THEN
NOT DB_GLO_Backgrounds_Soldier_SingleTurnTracker(_Player, _Count);
DB_GLO_Backgrounds_Soldier_SingleTurnTracker(_Player, _CountPlusOne);

IF
DB_GLO_Backgrounds_Soldier_SingleTurnTracker(_Player, 5)
AND
NOT DB_GLO_Backgrounds_Blocked("GLO_Soldier_KillMultipleInOneTurn")
THEN
PROC_GLO_Backgrounds_CompleteGoal(_Player, "GLO_Soldier_KillMultipleInOneTurn");

IF
TurnEnded((CHARACTER)_Player)
AND
DB_GLO_Backgrounds_Soldier_SingleTurnTracker(_Player, _Count)
THEN
NOT DB_GLO_Backgrounds_Soldier_SingleTurnTracker(_Player, _Count);

IF
CombatEnded(_CombatGuid)
AND
DB_GLO_Backgrounds_Soldier_SingleTurnTracker(_Player, _Count)
AND
DB_Was_InCombat(_Player, _CombatGuid)
THEN
NOT DB_GLO_Backgrounds_Soldier_SingleTurnTracker(_Player, _Count);

// GLO_Soldier_BossOneShot
IF
UsingSpell((CHARACTER)_Player, _, _, _, _)
AND
DB_GLO_Backgrounds_Soldier_BossOneShotSpell(_Player, _)
THEN
PROC_GLO_Backgrounds_Soldier_BossOneShotClear(_Player);

IF
UsingSpell((CHARACTER)_PartyMember, _, _, _, _StoryActionID)
AND
DB_PartyMembers(_PartyMember)
AND
NOT DB_GLO_Backgrounds_Blocked("GLO_Soldier_BossOneShot")
AND
DB_GLO_Backgrounds_Tags((TAG)SOLDIER_d135f265-c2e1-4077-a836-b548ee871681)
AND
NOT DB_GLO_Backgrounds_Soldier_BossOneShotSpell(_PartyMember, _)
THEN
DB_GLO_Backgrounds_Soldier_BossOneShotSpell((CHARACTER)_PartyMember, _StoryActionID);

IF
CastSpellFailed((CHARACTER)_Player, _, _, _, _StoryActionID)
AND
DB_GLO_Backgrounds_Soldier_BossOneShotSpell(_Player, _StoryActionID)
THEN
PROC_GLO_Backgrounds_Soldier_BossOneShotClear(_Player);

IF
CastedSpell((CHARACTER)_Player, _, _, _, _StoryActionID)
AND
DB_GLO_Backgrounds_Soldier_BossOneShotSpell(_Player, _StoryActionID)
THEN
PROC_GLO_Backgrounds_Soldier_BossOneShotClear(_Player);

IF
Died(_Boss)
AND
DB_GLO_Backgrounds_Soldier_BossOneShotDamaged(_Boss, _Player, _StoryActionID)
THEN
NOT DB_GLO_Backgrounds_Soldier_BossOneShotDamaged(_Boss, _Player, _StoryActionID);

// Blocking on start of any new action for the tracked player
PROC
PROC_GLO_Backgrounds_Soldier_BossOneShotClear((CHARACTER)_Player)
AND
DB_GLO_Backgrounds_Soldier_BossOneShotAwaitsBlocking(_Boss, _Player, _StoryActionId)
AND
NOT DB_GLO_Backgrounds_Soldier_BossOneShotBlocked(_Boss)
THEN
DB_GLO_Backgrounds_Soldier_BossOneShotBlocked(_Boss);

// Was damaged during currently tracked attack, but not enough to die - block
// This needs to be hold as characters fall into chasms etc. after CastedSpell event.
PROC
PROC_GLO_Backgrounds_Soldier_BossOneShotClear((CHARACTER)_Player)
AND
DB_GLO_Backgrounds_Soldier_BossOneShotDamaged(_Boss, _Player, _StoryActionId)
AND
NOT DB_PermaDefeated(_Boss)
AND
NOT DB_GLO_Backgrounds_Soldier_BossOneShotBlocked(_Boss)
AND
NOT DB_GLO_Backgrounds_Soldier_BossOneShotAwaitsBlocking(_Boss, _Player, _StoryActionId)
THEN
DB_GLO_Backgrounds_Soldier_BossOneShotAwaitsBlocking(_Boss, _Player, _StoryActionId);

PROC
PROC_GLO_Backgrounds_Soldier_BossOneShotClear((CHARACTER)_Player)
AND
DB_GLO_Backgrounds_Soldier_BossOneShotSpell(_Player, _StoryActionID)
THEN
NOT DB_GLO_Backgrounds_Soldier_BossOneShotSpell(_Player, _StoryActionID);

PROC
PROC_GLO_Backgrounds_Soldier_BossOneShotClear((CHARACTER)_Player)
AND
DB_GLO_Backgrounds_Soldier_BossOneShotDamaged(_Boss, _Player, _StoryActionId)
THEN
NOT DB_GLO_Backgrounds_Soldier_BossOneShotDamaged(_Boss, _Player, _StoryActionId);

// Damaging: attack is part of the tracked attack
IF
AttackedBy((CHARACTER)_Boss, (CHARACTER)_Player, _, _, _, _, _StoryActionId)
AND
DB_GLO_Backgrounds_Soldier_BossOneShotSpell(_Player, _StoryActionId)
AND
NOT DB_GLO_Backgrounds_Soldier_BossOneShotDamaged(_Boss, _, _)
AND
NOT DB_GLO_Backgrounds_Soldier_BossOneShotBlocked(_Boss)
AND
NOT DB_GLO_Backgrounds_Soldier_BossOneShotAwaitsBlocking(_Boss, _, _)
AND
IsBoss(_Boss, 1)
THEN
DB_GLO_Backgrounds_Soldier_BossOneShotDamaged(_Boss, _Player, _StoryActionId);

// Blocking: attack is part of the tracked attack
IF
AttackedBy((CHARACTER)_Boss, (CHARACTER)_Player, _, _, _, _, _StoryActionId)
AND
NOT DB_GLO_Backgrounds_Soldier_BossOneShotBlocked(_Boss)
AND
DB_GLO_Backgrounds_Soldier_BossOneShotAwaitsBlocking(_Boss, _, _)
THEN
DB_GLO_Backgrounds_Soldier_BossOneShotBlocked(_Boss);

// Blocking: attacked by other character or other attack
IF
AttackedBy((CHARACTER)_Boss, (CHARACTER)_Character, _, _, _, _, _StoryActionId)
AND
NOT DB_GLO_Backgrounds_Soldier_BossOneShotBlocked(_Boss)
AND
NOT DB_GLO_Backgrounds_Blocked("GLO_Soldier_BossOneShot")
AND
DB_GLO_Backgrounds_Tags((TAG)SOLDIER_d135f265-c2e1-4077-a836-b548ee871681)
AND
NOT QRY_GLO_Backgrounds_Soldier_BossOneShot_NoSpellOrCurrent(_Boss, _Character, _StoryActionId)
AND
IsBoss(_Boss, 1)
THEN
DB_GLO_Backgrounds_Soldier_BossOneShotBlocked(_Boss);

// Blocking: non-lethal damage - not part of the any tracked attack
// TODO: we need to know StoryActionID
IF
HitpointsChanged((CHARACTER)_Boss, _Percentage)
AND
_Percentage < 100.0
AND
_Percentage > 0.0
AND
NOT DB_GLO_Backgrounds_Soldier_BossOneShotSpell(_, _)
AND
NOT DB_GLO_Backgrounds_Soldier_BossOneShotBlocked(_Boss)
AND
NOT DB_GLO_Backgrounds_Blocked("GLO_Soldier_BossOneShot")
AND
DB_GLO_Backgrounds_Tags((TAG)SOLDIER_d135f265-c2e1-4077-a836-b548ee871681)
AND
IsBoss(_Boss, 1)
THEN
DB_GLO_Backgrounds_Soldier_BossOneShotBlocked(_Boss);

// Completing 1: either killed by current spell, or insta-killed by some-one who wasn't tracked
IF
KilledBy((CHARACTER)_Boss, (CHARACTER)_Player, _, _StoryActionId)
AND
NOT DB_GLO_Backgrounds_Soldier_BossOneShotBlocked(_Boss)
AND
NOT DB_GLO_Backgrounds_Blocked("GLO_Soldier_BossOneShot")
AND
DB_GLO_Backgrounds_Tags((TAG)SOLDIER_d135f265-c2e1-4077-a836-b548ee871681)
AND
QRY_GLO_Backgrounds_Soldier_BossOneShot_NoSpellOrCurrent(_Boss, _Player, _StoryActionId)
AND
QRY_GLO_Backgrounds_Soldier_BossOneShot_NotAwaitsBlockingOrCurrent(_Boss, _Player, _StoryActionId)
AND
IsBoss(_Boss, 1)
THEN
PROC_GLO_Backgrounds_CompleteGoal(_Player, "GLO_Soldier_BossOneShot");

// Completing 2: chasm instakill with a player cause
// TODO: need StoryActionID
IF
EnteredChasm((CHARACTER)_Boss, _PartyMember, _, _X, _Y, _Z)
AND
DB_PartyMembers((CHARACTER)_PartyMember)
AND
NOT DB_GLO_Backgrounds_Soldier_BossOneShotBlocked(_Boss)
AND
NOT DB_GLO_Backgrounds_Blocked("GLO_Soldier_BossOneShot")
AND
DB_GLO_Backgrounds_Tags((TAG)SOLDIER_d135f265-c2e1-4077-a836-b548ee871681)
AND
QRY_GLO_Backgrounds_Soldier_BossOneShot_NoSpellOrCurrent(_Boss, _PartyMember, -1)
AND
QRY_GLO_Backgrounds_Soldier_BossOneShot_NotAwaitsBlockingOrCurrent(_Boss, _PartyMember, -1)
AND
IsBoss(_Boss, 1)
AND
GetDistanceToPosition(_PartyMember, _X, _Y, _Z, _Distance)
AND
_Distance < 30.0
THEN
PROC_GLO_Backgrounds_CompleteGoal(_PartyMember, "GLO_Soldier_BossOneShot");

// Boss fully healed - give players another chance to kill it.
IF
HitpointsChanged((CHARACTER)_Boss, _Percentage)
AND
_Percentage >= 100.0
AND
DB_GLO_Backgrounds_Soldier_BossOneShotBlocked(_Boss)
THEN
NOT DB_GLO_Backgrounds_Soldier_BossOneShotBlocked(_Boss);

QRY
QRY_GLO_Backgrounds_Soldier_BossOneShot_NoSpellOrCurrent((CHARACTER)_Boss, (CHARACTER)_Player, -1)
AND
DB_GLO_Backgrounds_Soldier_BossOneShotSpell(_Player, _StoryActionID)
THEN
DB_NOOP(1);

QRY
QRY_GLO_Backgrounds_Soldier_BossOneShot_NoSpellOrCurrent((CHARACTER)_Boss, (CHARACTER)_Player, (INTEGER)_StoryActionID)
AND
DB_GLO_Backgrounds_Soldier_BossOneShotSpell(_Player, _StoryActionID)
THEN
DB_NOOP(1);

QRY
QRY_GLO_Backgrounds_Soldier_BossOneShot_NoSpellOrCurrent(_Boss, _, _)
AND
NOT DB_GLO_Backgrounds_Soldier_BossOneShotDamaged(_Boss, _, _)
THEN
DB_NOOP(1);

QRY
QRY_GLO_Backgrounds_Soldier_BossOneShot_NotAwaitsBlockingOrCurrent((CHARACTER)_Boss, (CHARACTER)_Player, -1)
AND
DB_GLO_Backgrounds_Soldier_BossOneShotAwaitsBlocking(_Boss, _Player, _StoryActionID)
THEN
DB_NOOP(1);

QRY
QRY_GLO_Backgrounds_Soldier_BossOneShot_NotAwaitsBlockingOrCurrent((CHARACTER)_Boss, (CHARACTER)_Player, (INTEGER)_StoryActionID)
AND
DB_GLO_Backgrounds_Soldier_BossOneShotAwaitsBlocking(_Boss, _Player, _StoryActionID)
THEN
DB_NOOP(1);

QRY
QRY_GLO_Backgrounds_Soldier_BossOneShot_NotAwaitsBlockingOrCurrent((CHARACTER)_Boss, (CHARACTER)_Player, (INTEGER)_StoryActionID)
AND
NOT DB_GLO_Backgrounds_Soldier_BossOneShotAwaitsBlocking(_Boss, _, _)
THEN
DB_NOOP(1);

IF
DB_GLO_Backgrounds_Blocked("GLO_Soldier_BossOneShot")
THEN
SysClear("DB_GLO_Backgrounds_Soldier_BossOneShotBlocked", 1);
SysClear("DB_GLO_Backgrounds_Soldier_BossOneShotSpell", 2);
SysClear("DB_GLO_Backgrounds_Soldier_BossOneShotDamaged", 3);
SysClear("DB_GLO_Backgrounds_Soldier_BossOneShotAwaitsBlocking", 3);
//END_REGION Global Goals: Soldier

//REGION Global Goals: Noble
// GLO_Noble_Approval
IF
ApprovalRatingChanged(_NPC, _Avatar, _Amount)
AND
DB_Avatars(_Avatar)
AND
NOT DB_Avatars(_NPC)
AND
_Amount >= 45
THEN
PROC_GLO_Backgrounds_CompleteGoal(_Avatar, "GLO_Noble_Approval");

// GLO_Noble_HoardGold_First
IF
GoldChanged((CHARACTER)_Player, _Value)
AND
DB_Players(_Player)
AND
_Value > 0
AND
DB_GLO_Backgrounds_Noble_GoldHoarded(_Id, _Threshold)
AND
GetGoldInMagicPockets(_Player, _Amount)
AND
_Amount >= _Threshold
THEN
PROC_GLO_Backgrounds_CompleteGoal(_Player, _Id);

// GLO_Noble_TrueSoul
IF
TagSet((CHARACTER)_Player, TRUESOUL_11491bda-fa57-44ed-a306-a13fdf8e3b82)
AND
DB_Players(_Player)
THEN
PROC_GLO_Backgrounds_CompleteGoal(_Player, "GLO_Noble_TrueSoul");

// GLO_Noble_BribeGuard
PROC
PROC_CrimeBribes_RecordElude("Bribe",(CHARACTER)_NPC, (CHARACTER)_PartyMember, _)
AND
DB_PartyMembers(_PartyMember)
THEN
PROC_GLO_Backgrounds_CompleteGoal(_PartyMember, "GLO_Noble_BribeGuard");
//END_REGION Global Goals: Noble

//REGION Global Goals: Guild Artisan
// GLO_GuildArtisan_SellHighValueItem
IF
MovedFromTo(_Item, (CHARACTER)_Player, (CHARACTER)_NPC, 1)
AND
QRY_OnlyOnce_Reset("GLO_Backgrounds_GuildArtisan_SellValuable")
AND
DB_Players(_Player)
AND
NOT DB_Players(_NPC)
AND
IsItem(_Item, 1)
AND
ItemGetGoldValue((ITEM)_Item, _Value)
AND
GetStackAmount(_Item, _Amount,_)
AND
IntegerDivide(_Value, _Amount, _AmountPerItem)
AND
DB_GLO_Backgrounds_GuildArtisan_HighValueSell(_RequiredValue, _GoalId)
AND
_AmountPerItem > _RequiredValue
AND
QRY_OnlyOnce("GLO_Backgrounds_GuildArtisan_SellValuable")
THEN
PROC_GLO_Backgrounds_CompleteGoal(_Player, _GoalId);

// GLO_GuildArtisan_TraderAttitude
IF
MovedFromTo(_Item, _Trader, _Player, 1)
AND
IsItem(_Item, 1)
THEN
PROC_GLO_Backgrounds_GuildArtisan_Trading((CHARACTER)_Player, (CHARACTER)_Trader, (ITEM)_Item);

IF
MovedFromTo(_Item, _Player, _NPC, 1)
AND
IsItem(_Item, 1)
THEN
PROC_GLO_Backgrounds_GuildArtisan_Trading((CHARACTER)_Player, (CHARACTER)_NPC, (ITEM)_Item);

PROC
PROC_GLO_Backgrounds_GuildArtisan_Trading((CHARACTER)_Player, (CHARACTER)_NPC, (ITEM)_Item)
AND
DB_Players(_Player)
AND
NOT DB_Players(_NPC)
AND
GetAttitudeTowardsPlayer(_NPC, _Player, _Attitude)
AND
_Attitude >= 75
AND
ItemGetGoldValue(_Item, _Value)
AND
GetStackAmount(_Item, _Amount,_)
AND
IntegerDivide(_Value, _Amount, _AmountPerItem)
AND
_AmountPerItem >= 10
THEN
PROC_GLO_Backgrounds_CompleteGoal(_Player, "GLO_GuildArtisan_TraderAttitude");
//END_REGION Global Goals: Guild Artisan

//REGION Global Goals: Haunted One

//Act0_HauntedOne_KilledEnemyAllElements
IF
KilledBy(_Victim,_DarkUrge,_,_)
AND
DB_ORI_DarkUrge((CHARACTER)_DarkUrge)
AND
NOT DB_GLO_Backgrounds_Completed(_DarkUrge,"Act0_HauntedOne_KilledEnemyAllElements")
AND
GetDeathType(_Victim,_DeathType)
AND
DB_GLO_Backgrounds_HauntedOne_DeathTypes(_DeathType)
THEN
NOT DB_GLO_Backgrounds_HauntedOne_DeathTypes(_DeathType);
PROC_GLO_Backgrounds_HauntedOne_CheckDeathTypesCompleted(_DarkUrge);

PROC
PROC_GLO_Backgrounds_HauntedOne_CheckDeathTypesCompleted((CHARACTER)_Player)
AND
NOT DB_GLO_Backgrounds_HauntedOne_DeathTypes(_)
THEN
PROC_GLO_Backgrounds_CompleteGoal((CHARACTER)_Player, "Act0_HauntedOne_KilledEnemyAllElements");

//Act0_HauntedOne_Killed5Enemies1Round
//Act0_HauntedOne_Killed5Neutral1Round
IF
CombatRoundStarted(_CombatId,_)
AND
DB_ObjectCountHelper(_DarkUrge,_GoalId,_Amount)
AND
DB_GLO_Backgrounds_HauntedOne_RoundKillTracking(_GoalId)
AND
DB_ORI_DarkUrge((CHARACTER)_DarkUrge)
AND
DB_Is_InCombat(_DarkUrge,_CombatId)
THEN
PROC_ObjectCountHelperReset(_DarkUrge,_GoalId);

IF
LeftCombat(_DarkUrge,_)
AND
DB_ORI_DarkUrge((CHARACTER)_DarkUrge)
AND
DB_ObjectCountHelper(_DarkUrge,_GoalId,_Amount)
AND
DB_GLO_Backgrounds_HauntedOne_RoundKillTracking(_GoalId)
THEN
PROC_ObjectCountHelperReset(_DarkUrge,_GoalId);

IF
KilledBy(_Victim,_DarkUrge,_,_)
AND
DB_ORI_DarkUrge((CHARACTER)_DarkUrge)
AND
DB_GLO_Backgrounds_HauntedOne_RoundKillTracking(_GoalId)
AND
NOT DB_GLO_Backgrounds_Completed(_DarkUrge,_GoalId)
AND
DB_Is_InCombat(_DarkUrge, _)
AND
QRY_GLO_Backgrounds_HauntedOne_CheckVictimMatch(_DarkUrge,_Victim,_GoalId)
AND
QRY_ObjectCountHelper(_DarkUrge,_GoalId)
AND
DB_ObjectCountHelper(_DarkUrge,_GoalId,_Amount)
AND
_Amount >= 5
THEN
PROC_GLO_Backgrounds_CompleteGoal((CHARACTER)_DarkUrge,_GoalId);
PROC_ObjectCountHelperReset(_DarkUrge,_GoalId);

QRY
QRY_GLO_Backgrounds_HauntedOne_CheckVictimMatch((CHARACTER)_Killer,(CHARACTER)_Victim,"Act0_HauntedOne_Killed5Enemies1Round")
AND
QRY_IsInCombatWith(_Victim, _Killer)
AND
IsEnemy(_Killer,_Victim,1)
THEN
DB_NOOP(1);

QRY
QRY_GLO_Backgrounds_HauntedOne_CheckVictimMatch((CHARACTER)_Killer,(CHARACTER)_Victim,"Act0_HauntedOne_Killed5Neutral1Round")
AND
QRY_IsInCombatWith(_Victim, _Killer)
AND
IsNeutral(_Killer,_Victim,1)
THEN
DB_NOOP(1);

//END_REGION

//REGION Debug
IF
TextEvent("giveAllBGTags")
AND
GetHostCharacter((CHARACTER)_Char)
AND
DB_BackgroundTags(_Tag)
AND
IsTagged(_Char, _Tag, 0)
THEN
SetTag(_Char, _Tag);

IF
TextEvent("clearAllBGTags")
AND
GetHostCharacter((CHARACTER)_Char)
THEN
SetFlag(Debug_ClearAllTags_Background_d84d4e7a-b838-c611-4a8d-016140d3aa44, _Char);

IF
TextEvent("completeBGG")
AND
GetTextEventParamString(1, _GoalId)
AND
GetHostCharacter((CHARACTER)_Char)
THEN
PROC_GLO_Backgrounds_CompleteGoal(_Char, _GoalId);

IF
TextEvent("completeAllBGG")
AND
DB_Players(_Player)
AND
DB_GLO_Backgrounds_Goal(_, _GoalId, _)
THEN
PROC_GLO_Backgrounds_CompleteGoal(_Player, _GoalId);
//END_REGION Debug
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "ModWrapper_Gustav"
