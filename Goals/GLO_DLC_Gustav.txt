Version 1
SubGoalCombiner SGC_AND
INITSECTION
//REGION DLC: Gustav_DigitalDeluxe

DB_DLC_StageObjects((DLC)DLC_Gustav_DigitalDeluxe_43962845-7d10-4bf0-ac1f-f13984e430b3,(GUIDSTRING)DLC_DD_Painting_Portrait_Beast_000_ec744580-a4a7-4506-b5c6-2a68c28d018a,1,"WLD_Main_A");
DB_DLC_StageObjects((DLC)DLC_Gustav_DigitalDeluxe_43962845-7d10-4bf0-ac1f-f13984e430b3,(GUIDSTRING)DLC_DD_Painting_Portrait_Red_Prince_000_c04b29e8-9a7f-4914-b719-5ea0a892a2ef,1,"WLD_Main_A");
DB_DLC_StageObjects((DLC)DLC_Gustav_DigitalDeluxe_43962845-7d10-4bf0-ac1f-f13984e430b3,(GUIDSTRING)DLC_DD_Painting_Portrait_Sebille_000_5b2b57cc-1c10-49f9-990f-6347060e11bb,1,"WLD_Main_A");
DB_DLC_StageObjects((DLC)DLC_Gustav_DigitalDeluxe_43962845-7d10-4bf0-ac1f-f13984e430b3,(GUIDSTRING)DLC_DD_Painting_Portrait_Fane_000_d94c2bdf-759f-4bb5-a1e5-12519f18faba,1,"WLD_Main_A");
DB_DLC_StageObjects((DLC)DLC_Gustav_DigitalDeluxe_43962845-7d10-4bf0-ac1f-f13984e430b3,(GUIDSTRING)DLC_DD_Painting_Portrait_Ifan_000_44b184c3-58e0-4159-ba48-42e6552943ef,1,"WLD_Main_A");
DB_DLC_StageObjects((DLC)DLC_Gustav_DigitalDeluxe_43962845-7d10-4bf0-ac1f-f13984e430b3,(GUIDSTRING)DLC_DD_Painting_Portrait_Lohse_000_c474a3fe-0e04-41cc-94e2-8978c15033da,1,"WLD_Main_A");

DB_DLC_OneTimeRewards((DLC)DLC_Gustav_DigitalDeluxe_43962845-7d10-4bf0-ac1f-f13984e430b3,(ROOT)MAG_OfTheShapeshifter_Mask_5d66776d-0650-4512-b300-b2ac38e2be3a,1,1,0);
DB_DLC_OneTimeRewards((DLC)DLC_Gustav_DigitalDeluxe_43962845-7d10-4bf0-ac1f-f13984e430b3,(ROOT)DLC_DD_Clothing_Chest_8a1f5dc0-3f13-47ed-b238-50fdcaa2f680,1,1,0);
DB_DLC_OneTimeRewards((DLC)DLC_Gustav_DigitalDeluxe_43962845-7d10-4bf0-ac1f-f13984e430b3,(ROOT)LOOT_DLC_Adventurers_Pack_0ae83daa-1096-4b38-9b8c-fc610a9306aa,1,1,0);

//END_REGION

//REGION DLC: DLC_Gustav_LarianNetworkSignUp

DB_DLC_SharingType((DLC)DLC_Gustav_LarianNetworkSignUp_eac50b4e-3d4e-44b7-a03f-e9443ae25f98,"AllowNonHostSharing");

DB_DLC_OneTimeRewards((DLC)DLC_Gustav_LarianNetworkSignUp_eac50b4e-3d4e-44b7-a03f-e9443ae25f98,(ROOT)DLC_LOOT_Dye_Larian_dfb0bd5d-e4ed-4bd3-bcfe-45195260e7dc,5,1,0);

//END_REGION

//REGION DLC: DLC_Gustav_Twitch_Reward

DB_DLC_SharingType((DLC)DLC_Gustav_Twitch_Reward_a122810d-63a2-4349-8a30-72d64e537662,"AllowNonHostSharing");

DB_DLC_OneTimeRewards((DLC)DLC_Gustav_Twitch_Reward_a122810d-63a2-4349-8a30-72d64e537662,(ROOT)DLC_TWITCH_Underwear_A_bf974183-9bf5-4086-9742-a2deef9e7675,1,1,0);
DB_DLC_OneTimeRewards((DLC)DLC_Gustav_Twitch_Reward_a122810d-63a2-4349-8a30-72d64e537662,(ROOT)DLC_TWITCH_Underwear_B_f6af55dd-a75a-46ea-87f0-89ebf4e7b74e,1,1,0);
DB_DLC_OneTimeRewards((DLC)DLC_Gustav_Twitch_Reward_a122810d-63a2-4349-8a30-72d64e537662,(ROOT)DLC_TWITCH_Camp_Shoes_14339654-a714-4341-b03f-62530508c8e3,1,1,0);
DB_DLC_OneTimeRewards((DLC)DLC_Gustav_Twitch_Reward_a122810d-63a2-4349-8a30-72d64e537662,(ROOT)DLC_TWITCH_Camp_Body_9dc4dafd-590a-44ec-8523-95136f46be9e,1,1,0);

//END_REGION

//REGION Divinity Song Pack
DB_DLC_DivinitySongPack_InstrumentTags((TAG)MUSIC_VFX_DRUM_f3f2d52d-9ef3-492c-a7ec-d9b35a130c05);
DB_DLC_DivinitySongPack_InstrumentTags((TAG)MUSIC_VFX_FLUTE_838663ea-de99-44a4-bc4c-13ed5a6d75e9);
DB_DLC_DivinitySongPack_InstrumentTags((TAG)MUSIC_VFX_LUTE_3a9a899b-4177-4763-b329-2598528beca5);
DB_DLC_DivinitySongPack_InstrumentTags((TAG)MUSIC_VFX_LYRE_cd85b343-55a9-4b66-bd92-42ca70a084aa);
DB_DLC_DivinitySongPack_InstrumentTags((TAG)MUSIC_VFX_VIOLIN_81dbb2dd-ffe9-4b6a-9159-2c32c889e023);

DB_DLC_DivinitySongPack_InstrumentSpells((TAG)MUSIC_VFX_VOCAL_233a89ec-140a-4f77-a13d-72020f53e6d0, "Shout_Bard_Perform_DOS2_1_Whistle");
DB_DLC_DivinitySongPack_InstrumentSpells((TAG)MUSIC_VFX_VOCAL_233a89ec-140a-4f77-a13d-72020f53e6d0, "Shout_Bard_Perform_DOS2_2_Whistle");
DB_DLC_DivinitySongPack_InstrumentSpells((TAG)MUSIC_VFX_VOCAL_233a89ec-140a-4f77-a13d-72020f53e6d0, "Shout_Bard_Perform_DOS2_3_Whistle");
DB_DLC_DivinitySongPack_InstrumentSpells((TAG)MUSIC_VFX_DRUM_f3f2d52d-9ef3-492c-a7ec-d9b35a130c05, "Shout_Bard_Perform_DOS2_1_Drum");
DB_DLC_DivinitySongPack_InstrumentSpells((TAG)MUSIC_VFX_DRUM_f3f2d52d-9ef3-492c-a7ec-d9b35a130c05, "Shout_Bard_Perform_DOS2_2_Drum");
DB_DLC_DivinitySongPack_InstrumentSpells((TAG)MUSIC_VFX_DRUM_f3f2d52d-9ef3-492c-a7ec-d9b35a130c05, "Shout_Bard_Perform_DOS2_3_Drum");
DB_DLC_DivinitySongPack_InstrumentSpells((TAG)MUSIC_VFX_FLUTE_838663ea-de99-44a4-bc4c-13ed5a6d75e9, "Shout_Bard_Perform_DOS2_1_Flute");
DB_DLC_DivinitySongPack_InstrumentSpells((TAG)MUSIC_VFX_FLUTE_838663ea-de99-44a4-bc4c-13ed5a6d75e9, "Shout_Bard_Perform_DOS2_2_Flute");
DB_DLC_DivinitySongPack_InstrumentSpells((TAG)MUSIC_VFX_FLUTE_838663ea-de99-44a4-bc4c-13ed5a6d75e9, "Shout_Bard_Perform_DOS2_3_Flute");
DB_DLC_DivinitySongPack_InstrumentSpells((TAG)MUSIC_VFX_LUTE_3a9a899b-4177-4763-b329-2598528beca5, "Shout_Bard_Perform_DOS2_1_Lute");
DB_DLC_DivinitySongPack_InstrumentSpells((TAG)MUSIC_VFX_LUTE_3a9a899b-4177-4763-b329-2598528beca5, "Shout_Bard_Perform_DOS2_2_Lute");
DB_DLC_DivinitySongPack_InstrumentSpells((TAG)MUSIC_VFX_LUTE_3a9a899b-4177-4763-b329-2598528beca5, "Shout_Bard_Perform_DOS2_3_Lute");
DB_DLC_DivinitySongPack_InstrumentSpells((TAG)MUSIC_VFX_LYRE_cd85b343-55a9-4b66-bd92-42ca70a084aa, "Shout_Bard_Perform_DOS2_1_Lyre");
DB_DLC_DivinitySongPack_InstrumentSpells((TAG)MUSIC_VFX_LYRE_cd85b343-55a9-4b66-bd92-42ca70a084aa, "Shout_Bard_Perform_DOS2_2_Lyre");
DB_DLC_DivinitySongPack_InstrumentSpells((TAG)MUSIC_VFX_LYRE_cd85b343-55a9-4b66-bd92-42ca70a084aa, "Shout_Bard_Perform_DOS2_3_Lyre");
DB_DLC_DivinitySongPack_InstrumentSpells((TAG)MUSIC_VFX_VIOLIN_81dbb2dd-ffe9-4b6a-9159-2c32c889e023, "Shout_Bard_Perform_DOS2_1_Violin");
DB_DLC_DivinitySongPack_InstrumentSpells((TAG)MUSIC_VFX_VIOLIN_81dbb2dd-ffe9-4b6a-9159-2c32c889e023, "Shout_Bard_Perform_DOS2_2_Violin");
DB_DLC_DivinitySongPack_InstrumentSpells((TAG)MUSIC_VFX_VIOLIN_81dbb2dd-ffe9-4b6a-9159-2c32c889e023, "Shout_Bard_Perform_DOS2_3_Violin");
//END_REGION

//REGION DB_DLC Definitions - needs to be last!

DB_DLC((DLC)DLC_Gustav_DigitalDeluxe_43962845-7d10-4bf0-ac1f-f13984e430b3);
DB_DLC((DLC)DLC_Gustav_LarianNetworkSignUp_eac50b4e-3d4e-44b7-a03f-e9443ae25f98);
DB_DLC((DLC)DLC_Gustav_CollectorsEdition_9d5e85a2-75e0-4c70-b432-60254b974a58);
DB_DLC((DLC)DLC_Gustav_Twitch_Reward_a122810d-63a2-4349-8a30-72d64e537662);

DB_DLC_BardSongs((DLC)DLC_Gustav_DigitalDeluxe_43962845-7d10-4bf0-ac1f-f13984e430b3);
DB_DLC_BardSongs((DLC)DLC_Gustav_CollectorsEdition_9d5e85a2-75e0-4c70-b432-60254b974a58);

//END_REGION
KBSECTION
//REGION Divinity Song Pack
QRY
QRY_CharacterHasSongDLC((CHARACTER)_Character)
AND
CharacterHasDLC(_Character, (DLC)DLC_Gustav_DigitalDeluxe_43962845-7d10-4bf0-ac1f-f13984e430b3,1)
THEN
DB_NOOP(1);

QRY
QRY_CharacterHasSongDLC(_Character)
AND
CharacterHasDLC(_Character, (DLC)DLC_Gustav_CollectorsEdition_9d5e85a2-75e0-4c70-b432-60254b974a58,1)
THEN
DB_NOOP(1);

PROC
PROC_DLC_AddDivinitySongs((TAG)_Tag, (CHARACTER)_Character)
AND
QRY_DLC_HasInstrument((CHARACTER)_Character,(TAG)_Tag)
AND
DB_DLC_DivinitySongPack_InstrumentSpells(_Tag, _Spell)
AND
HasSpell(_Character, _Spell, 0)
THEN
AddSpell(_Character, _Spell, 1, 1);

PROC
PROC_DLC_RemoveDivinitySongs((TAG)_Tag, (CHARACTER)_Character)
AND
NOT QRY_DLC_HasInstrument((CHARACTER)_Character,(TAG)_Tag)
AND
DB_DLC_DivinitySongPack_InstrumentSpells(_Tag, _Spell)
THEN
RemoveSpell(_Character, _Spell, 1);

QRY
QRY_DLC_HasInstrument((CHARACTER)_Character,(TAG)_Tag)
AND
_Tag != MUSIC_VFX_VOCAL_233a89ec-140a-4f77-a13d-72020f53e6d0
AND
GetEquippedItem(_Character, "MusicalInstrument", _Instrument)
AND
IsTagged(_Instrument, _Tag, 1)
THEN
DB_NOOP(1);

QRY
QRY_DLC_HasInstrument((CHARACTER)_Character,(TAG)MUSIC_VFX_VOCAL_233a89ec-140a-4f77-a13d-72020f53e6d0)
AND
IsTagged(_Character,(TAG)MUSIC_VFX_VOCAL_233a89ec-140a-4f77-a13d-72020f53e6d0,1)
THEN
DB_NOOP(1);

IF
Equipped(_Instrument, _Character)
AND
DB_Players(_Character)
AND
QRY_CharacterHasSongDLC((CHARACTER)_Character)
AND
DB_DLC_DivinitySongPack_InstrumentTags(_Tag)
AND
IsTagged(_Instrument, _Tag, 1)
THEN
PROC_DLC_AddDivinitySongs(_Tag, _Character);

IF
Unequipped(_Instrument, _Character)
AND
DB_Players(_Character)
AND
DB_DLC_DivinitySongPack_InstrumentTags(_Tag)
AND
IsTagged(_Instrument, _Tag, 1)
THEN
PROC_DLC_RemoveDivinitySongs(_Tag, _Character);

PROC
PROC_DLC_SetInstalled(_, _)
AND
DB_Players((CHARACTER)_Character)
AND
QRY_CharacterHasSongDLC(_Character)
AND
GetEquippedItem(_Character, "MusicalInstrument", _Instrument)
AND
DB_DLC_DivinitySongPack_InstrumentTags(_Tag)
AND
IsTagged(_Instrument, _Tag, 1)
THEN
PROC_DLC_AddDivinitySongs(_Tag, _Character);

PROC
PROC_DLC_SetInstalled(_DLC, _)
AND
DB_DLC_BardSongs(_DLC)
AND
DB_Players((CHARACTER)_Character)
AND
QRY_CharacterHasSongDLC(_Character)
AND
IsTagged(_Character, (TAG)MUSIC_VFX_VOCAL_233a89ec-140a-4f77-a13d-72020f53e6d0, 1)
THEN
PROC_DLC_AddDivinitySongs((TAG)MUSIC_VFX_VOCAL_233a89ec-140a-4f77-a13d-72020f53e6d0, _Character);

PROC
PROC_DLC_SetInstalled(_DLC, _)
AND
DB_DLC_BardSongs(_DLC)
AND
DB_Players((CHARACTER)_Character)
AND
NOT QRY_CharacterHasSongDLC(_Character)
AND
DB_DLC_DivinitySongPack_InstrumentTags(_Tag)
THEN
PROC_DLC_RemoveDivinitySongs(_Tag, _Character);

PROC
PROC_DLC_SetInstalled(_DLC, _)
AND
DB_DLC_BardSongs(_DLC)
AND
DB_Players((CHARACTER)_Character)
AND
NOT QRY_CharacterHasSongDLC(_Character)
THEN
PROC_DLC_RemoveDivinitySongs((TAG)MUSIC_VFX_VOCAL_233a89ec-140a-4f77-a13d-72020f53e6d0, _Character);

IF
TagSet(_Character, (TAG)MUSIC_VFX_VOCAL_233a89ec-140a-4f77-a13d-72020f53e6d0)
AND
DB_Players((CHARACTER)_Character)
AND
QRY_CharacterHasSongDLC((CHARACTER)_Character)
THEN
PROC_DLC_AddDivinitySongs((TAG)MUSIC_VFX_VOCAL_233a89ec-140a-4f77-a13d-72020f53e6d0, _Character);

IF
TagCleared(_Character, (TAG)MUSIC_VFX_VOCAL_233a89ec-140a-4f77-a13d-72020f53e6d0)
AND
DB_Players((CHARACTER)_Character)
THEN
PROC_DLC_RemoveDivinitySongs((TAG)MUSIC_VFX_VOCAL_233a89ec-140a-4f77-a13d-72020f53e6d0, _Character);

//For characters added to DB_Players
IF
DB_Players(_Player)
AND
IsTagged(_Player,(TAG)MUSIC_VFX_VOCAL_233a89ec-140a-4f77-a13d-72020f53e6d0,1)
AND
QRY_CharacterHasSongDLC((CHARACTER)_Player)
THEN
PROC_DLC_AddDivinitySongs((TAG)MUSIC_VFX_VOCAL_233a89ec-140a-4f77-a13d-72020f53e6d0, _Player);

IF
DB_Players(_Player)
AND
QRY_CharacterHasSongDLC(_Player)
AND
GetEquippedItem(_Player, "MusicalInstrument", _Instrument)
AND
DB_DLC_DivinitySongPack_InstrumentTags(_Tag)
AND
IsTagged(_Instrument, _Tag, 1)
THEN
PROC_DLC_AddDivinitySongs(_Tag, _Player);

//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "ModWrapper_Gustav"
