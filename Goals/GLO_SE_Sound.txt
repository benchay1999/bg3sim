Version 1
SubGoalCombiner SGC_AND
INITSECTION

KBSECTION
//REGION Scripted Combat Music

IF
DB_Is_InCombat(_Enemy, _CombatID)
AND
DB_Sound_ScriptedCombatMusic((CHARACTER)_Enemy, _Situation)
AND
DB_Players(_Player)
AND
DB_Is_InCombat(_Player,_CombatID)
AND
NOT DB_Sound_Scripted_Music(_CombatID, _Situation)
THEN
DB_Sound_Scripted_Music(_CombatID, _Situation);
PROC_Sound_Scripted_Music_FightStart(_CombatID, _Situation);

IF
LeftCombat(_Player, _CombatID)
AND
DB_Sound_Scripted_Music(_CombatID, _Situation)
AND
NOT QRY_Sound_OtherPlayersInCombat(_Player, _CombatID)
THEN
NOT DB_Sound_Scripted_Music(_CombatID, _Situation);
PROC_Sound_Scripted_Music_FightStop(_CombatID, _Situation);

IF
SwitchedCombat((CHARACTER)_Player,_OldCombatID,_NewCombatID)
AND
DB_Sound_Scripted_Music(_OldCombatID)
THEN
NOT DB_Sound_Scripted_Music(_OldCombatID);
DB_Sound_Scripted_Music(_NewCombatID);

QRY
QRY_Sound_OtherPlayersInCombat((GUIDSTRING)_Player, (GUIDSTRING)_CombatID)
AND
DB_Players(_OtherPlayers)
AND
_Player != _OtherPlayers
AND
DB_Is_InCombat(_OtherPlayers, _ID)
THEN
DB_NOOP(1);

//State Scripted Combat
PROC
PROC_Sound_Scripted_Music_FightStart((GUIDSTRING)_CombatID,(STRING)_SituationName)
AND
DB_Sound_ScriptedCombatMusic_Triggers(_SituationName,_Trigger,_Recursive)
AND
DB_Sound_ScriptedCombatMusic_States((STRING)_SituationName,"In",(STRING)_Group,(STRING)_State)
THEN
TriggerSetSoundState((TRIGGER)_Trigger,_Group,_State,_Recursive);

PROC
PROC_Sound_Scripted_Music_FightStop((GUIDSTRING)_CombatID,(STRING)_SituationName)
AND
DB_Sound_ScriptedCombatMusic_Triggers(_SituationName,_Trigger,_Recursive)
AND
DB_Sound_ScriptedCombatMusic_States((STRING)_SituationName,"Out",(STRING)_Group,(STRING)_State)
THEN
TriggerSetSoundState((TRIGGER)_Trigger,_Group,_State,_Recursive);

//Scripted Combat Events
PROC
PROC_Sound_Scripted_Music_FightStart((GUIDSTRING)_CombatID,(STRING)_SituationName)
AND
DB_Sound_ScriptedCombatMusic_Events(_SituationName,"In",_Event)
AND
DB_Players(_Player)
AND
DB_Is_InCombat(_Player,_CombatID)
THEN
MusicPlayForPeer(_Player,_Event);

PROC
PROC_Sound_Scripted_Music_FightStop((GUIDSTRING)_CombatID,(STRING)_SituationName)
AND
DB_Sound_ScriptedCombatMusic_Events(_SituationName,"Out",_Event)
AND
DB_Players(_Player)
AND
DB_Was_InCombat(_Player,_CombatID)
THEN
MusicPlayForPeer(_Player,_Event);

//END_REGION

//REGION Combat Music Events

//Downed Event
IF
DownedChanged(_DownedPlayer,1)
AND
DB_Players(_DownedPlayer)
AND
DB_Is_InCombat(_DownedPlayer,_CombatID)
AND
DB_Players(_Player)
AND
_Player != _DownedPlayer
AND
DB_Is_InCombat(_Player,_CombatID)
THEN
PROC_Music_Trigger_DownedEvent(_Player);

PROC
PROC_Music_Trigger_DownedEvent((CHARACTER)_Player)
AND
GetReservedUserID(_Player,_UserID) // Make sure to trigger this once per client in case Bobby adds stingers
AND
NOT DB_Music_DownedTriggered(_UserID)
THEN
DB_Music_DownedTriggered(_UserID);
MusicPlayForPeer(_Player,"Music_Fight_PlayerDowned");

PROC
PROC_Music_Trigger_DownedEvent(_Player)
AND
DB_Music_DownedTriggered(_UserID)
THEN
NOT DB_Music_DownedTriggered(_UserID);

//Ally Dead Event
IF
DB_Dead(_DeadAlly)
AND
NOT DB_Players(_DeadAlly)
AND
DB_Is_InCombat(_DeadAlly,_CombatID)
AND
DB_Players(_Player)
AND
DB_Is_InCombat(_Player,_CombatID)
AND
IsAlly(_DeadAlly,_Player,1)
THEN
PROC_Music_Trigger_AllyDeadEvent(_Player);

PROC
PROC_Music_Trigger_AllyDeadEvent((CHARACTER)_Player)
AND
GetReservedUserID(_Player,_UserID) // Make sure to trigger this once per client in case Bobby adds stingers
AND
NOT DB_Music_AllyDeadTriggered(_UserID)
THEN
DB_Music_AllyDeadTriggered(_UserID);
MusicPlayForPeer(_Player,"Music_Fight_AllyKilled");

PROC
PROC_Music_Trigger_AllyDeadEvent(_Player)
AND
DB_Music_AllyDeadTriggered(_UserID)
THEN
NOT DB_Music_AllyDeadTriggered(_UserID);

//END_REGION 

//REGION Generic Locked Sound 

IF
UseFinished(_Character,_Item, 0)
AND
IsLocked(_Item,1)
THEN
PlaySound(_Item,"Items_Generic_Locked");

//END_REGION

//REGION BG Point and Click 

IF
TextEvent("BG_PNC_Shadowheart_Arch_Shar")
AND
DB_Players((CHARACTER)S_Player_ShadowHeart_3ed74f06-3c60-42dc-83f6-f034cb47c679)
THEN
PlaySound((CHARACTER)S_Player_ShadowHeart_3ed74f06-3c60-42dc-83f6-f034cb47c679,"BGClickReaction_NarrativePrototype_SetShar");

IF
TextEvent("BG_PNC_Shadowheart_Arch_Questioning")
AND
DB_Players((CHARACTER)S_Player_ShadowHeart_3ed74f06-3c60-42dc-83f6-f034cb47c679)
THEN
PlaySound((CHARACTER)S_Player_ShadowHeart_3ed74f06-3c60-42dc-83f6-f034cb47c679,"BGClickReaction_NarrativePrototype_SetQuestioning");

IF
TextEvent("BG_PNC_Shadowheart_Arch_Salune")
AND
DB_Players((CHARACTER)S_Player_ShadowHeart_3ed74f06-3c60-42dc-83f6-f034cb47c679)
THEN
PlaySound((CHARACTER)S_Player_ShadowHeart_3ed74f06-3c60-42dc-83f6-f034cb47c679,"BGClickReaction_NarrativePrototype_SetSalune");

IF
TextEvent("BG_PNC_Shadowheart_Relation_Positive")
AND
DB_Players((CHARACTER)S_Player_ShadowHeart_3ed74f06-3c60-42dc-83f6-f034cb47c679)
THEN
PlaySound((CHARACTER)S_Player_ShadowHeart_3ed74f06-3c60-42dc-83f6-f034cb47c679,"BGClickReaction_RelationPrototype_SetPositive");

IF
TextEvent("BG_PNC_Shadowheart_Relation_Negative")
AND
DB_Players((CHARACTER)S_Player_ShadowHeart_3ed74f06-3c60-42dc-83f6-f034cb47c679)
THEN
PlaySound((CHARACTER)S_Player_ShadowHeart_3ed74f06-3c60-42dc-83f6-f034cb47c679,"BGClickReaction_RelationPrototype_SetNegative");

IF
TextEvent("BGClickReaction_RelationPrototype_Reset")
AND
DB_Players((CHARACTER)S_Player_ShadowHeart_3ed74f06-3c60-42dc-83f6-f034cb47c679)
THEN
PlaySound((CHARACTER)S_Player_ShadowHeart_3ed74f06-3c60-42dc-83f6-f034cb47c679,"BGClickReaction_RelationPrototype_Reset");

//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "Start"
