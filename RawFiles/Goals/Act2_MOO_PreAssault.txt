Version 1
SubGoalCombiner SGC_AND
INITSECTION
//This goal is for stuff that needs to be define before the Assault goal becomes active
//Related goals: Act2_MOO_Audience, Act2_MOO_Assault, Act2_MOO_Misc

//DB_MOO_AssaultPositions(_Character, _Position, _Group)
//REGION Assault Positions -- ENEMIES --
//Bridge - Dead
DB_MOO_AssaultPositions((CHARACTER)S_MOO_EntranceGuard_001_b302d246-59ff-48ee-8247-0e3bcfd4b38e,(TRIGGER)S_MOO_AssaultDeadEntranceGuardPoint_001_fa273009-7c0c-4d82-9c0f-26f9be51f877, "MOO_Assault_DeadEnemy");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_EntranceGuard_002_2ab30cea-d3f1-4aa4-8c83-b8b700ef0048,(TRIGGER)S_MOO_AssaultDeadEntranceGuardPoint_002_5495118d-1c71-4926-92b2-000225888cbd, "MOO_Assault_DeadEnemy");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_EntranceGhoul_001_c9b6a714-491a-40aa-b5b6-3fe608a4efb5,(TRIGGER)S_MOO_AssaultDeadEntranceGhoulPoint_001_b4999c1c-2e27-4efc-9a44-fd80c0a067fa, "MOO_Assault_DeadEnemy_Radiant");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_EntranceGhoul_002_2e7447e5-35dd-4cdd-8426-43a6afe0edc7,(TRIGGER)S_MOO_AssaultDeadEntranceGhoulPoint_002_0f5d33a7-1540-4f01-bec3-3ff1e4ae86b4, "MOO_Assault_DeadEnemy");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_EntranceGhoul_003_019af169-5366-4a1f-8392-35df658b2e8e,(TRIGGER)S_MOO_AssaultDeadEntranceGhoulPoint_003_b11c70f1-c25c-4bb6-bc8c-dbe001598a57, "MOO_Assault_DeadEnemy_Radiant");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_WarehouseGuard_001_30de3349-7bcb-4a6e-be2e-3ae7a4c89e6a, (TRIGGER)S_MOO_AssaultDeadEntranceGuardPoint_003_505143a4-26e6-40d9-85e5-edca757d6ba3, "MOO_Assault_DeadEnemy");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_WarehouseGuard_002_8360ec17-f888-4745-8b22-351feadb86d1, (TRIGGER)S_MOO_AssaultDeadEntranceGuardPoint_004_259009b4-7ef5-4922-99da-fce9ef488c31, "MOO_Assault_DeadEnemy_Radiant");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_DockPatroller_000_646fba8c-6972-4162-aa7a-f0df28bb1f51, (TRIGGER)S_MOO_AssaultDeadEntranceGuardPoint_005_1d3e3494-e90d-4a36-927e-c4298ea0947c, "MOO_Assault_DeadEnemy");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_DockPatroller_001_352693eb-0ef0-4949-86c5-ba78081d9fb4, (TRIGGER)S_MOO_AssaultDeadEntranceGuardPoint_006_2b2dadfe-a649-4bd2-b66a-cce5a3d3735b, "MOO_Assault_DeadEnemy_Radiant");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_PrisonGuard_002_0cf357ec-268c-4779-92ad-8d6c7de437d1, (TRIGGER)S_MOO_AssaultDeadEntranceGuardPoint_007_6d52c7e9-641b-4605-b4de-1fcc33d6bab9, "MOO_Assault_DeadEnemy");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_PrisonGuard_004_107c72ca-2a4f-477d-a315-deeea3eea49e, (TRIGGER)S_MOO_AssaultDeadEntranceGuardPoint_008_ccee262d-6d3a-4daf-82ce-a1b7f01e7a6c, "MOO_Assault_DeadEnemy_Radiant");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_MindTorturer_001_480b89b1-ae6c-46e7-ad79-1b3babe3655e, (TRIGGER)S_MOO_AssaultDeadEntranceGuardPoint_009_8c23e3cc-01b0-47ff-a124-2e56ad07d568, "MOO_Assault_DeadEnemy_Radiant");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_MindTorturer_002_5c744998-b3cb-4edb-8a32-4df06593e849, (TRIGGER)S_MOO_AssaultDeadEntranceGuardPoint_010_4cf47d08-5ca4-4064-b1df-d55a6fe75124, "MOO_Assault_DeadEnemy");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_UpperGuard_002_638fe74f-aa4f-400c-85f9-69112a288300, (TRIGGER)S_MOO_AssaultDeadEntranceGuardPoint_011_bb3a094e-956a-4d9a-a6fe-0ad60bafa91f, "MOO_Assault_DeadEnemy");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_UpperGuard_001_3b5ad058-c872-4b1c-933b-2d8767b28aed, (TRIGGER)S_MOO_AssaultDeadEntranceGuardPoint_012_d2662eb4-1bf2-4118-baf0-6179f4bb2e12, "MOO_Assault_DeadEnemy_Radiant");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_ExecutionGuard_006_2b900b58-298d-4e31-80c8-8a3a44a6d13f, (TRIGGER)S_MOO_AssaultDeadEntranceGuardPoint_013_899ec463-d2c9-4609-86ad-cabd4625dae8, "MOO_Assault_DeadEnemy");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_ExecutionGuard_001_274886f8-8881-4e6e-97b6-fc038a26abe0, (TRIGGER)S_MOO_AssaultDeadEntranceGuardPoint_014_3f0bb571-17ee-4011-82af-50953d874edc, "MOO_Assault_DeadEnemy_Radiant");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_ExecutionGuard_002_9500dd35-4b5b-4634-bdfd-c6cdd91bd6b5, (TRIGGER)S_MOO_AssaultDeadEntranceGuardPoint_015_293dd2a5-facb-44ba-98a2-18c0096f2704, "MOO_Assault_DeadEnemy");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_FlyingGhoul_000_6a6a2784-47b0-4838-bc6a-31288ac99158, (TRIGGER)S_MOO_AssaultDeadGoulPoint_001_c53ce4a2-0658-43e4-973e-1c0dcd3af4cd, "MOO_Assault_DeadEnemy_Radiant");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_FlyingGhoul_002_90b8c61f-c7e8-445c-a1b1-9d9874457529, (TRIGGER)S_MOO_AssaultDeadGoulPoint_002_4daf5152-498a-40d6-8b6e-17fd8cbf6fd9, "MOO_Assault_DeadEnemy_Radiant");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_FlyingGhoul_001_ac6133f2-98fd-465b-9b12-e5bf72b4c3c9, (TRIGGER)S_MOO_AssaultDeadGoulPoint_003_75ff9bd9-09bc-4a7a-9b73-897dfcfdf8c9, "MOO_Assault_DeadEnemy_Radiant");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_WallTentacle_Ogress_c3b872b8-1937-4255-9d0c-29e490afd033, (TRIGGER)S_MOO_AssaultDeadOgrePoint_a7909a6e-e042-4469-818b-8064a1d3ecc3, "MOO_Assault_DeadEnemy_Radiant");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_ExecutionGuard_003_a4752cef-326a-49d7-91dd-a9de10d6539b, (TRIGGER)S_MOO_AssaultDeadEntranceGuardPoint_016_87328fcd-6a7f-4107-8e37-12342ab38698, "MOO_Assault_DeadEnemy");

//For handling death type and dead allies depending on the amount of dead characters
DB_MOO_Assault_DeadEnemyCount((CHARACTER)NULL_00000000-0000-0000-0000-000000000000);
NOT DB_MOO_Assault_DeadEnemyCount((CHARACTER)NULL_00000000-0000-0000-0000-000000000000);

//Prison - Dead
//Needs to be treated differently from the Bridge dead characters, since they would have died from the skeletons
//TODO: If characters are still in DB_MOO_Jailbreak_Prisoner, create a bunch of blood surface (they are turned to zombies in colony)
DB_MOO_AssaultPositions((CHARACTER)S_MOO_WarehouseGuard_000_d161fc7f-801c-463c-bdbd-f638c8499361, (TRIGGER)S_MOO_AssaultDeadPrisonPoint_001_13876942-2a7c-4ffd-9394-695f02998aa5, "MOO_Assault_DeadPrison");


//Ground floor - Bazaar area
DB_MOO_AssaultPositions((CHARACTER)S_MOO_Executioner_8e75eb3b-7551-485e-8f98-2bf2e51d3e84,(TRIGGER)S_MOO_AssaultZrellStartingPoint_da58ac8b-b9a5-4d2b-955a-2e829680d564, "MOO_Assault_BazaarEnemies");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_BazEntranceGuard_001_8fdd2eba-9e1e-48b6-a201-787616541dd9,(TRIGGER)S_MOO_AssaultBazaarPoint_001_377ee8ec-768c-4fcb-ade0-9f458fbd1954, "MOO_Assault_BazaarEnemies");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_BazEntranceGuard_002_1a7719bc-9f42-4405-a07d-5d54af11ef0b,(TRIGGER)S_MOO_AssaultBazaarPoint_002_80fe2f64-6b50-4465-af92-9fcd8cf4d02f, "MOO_Assault_BazaarEnemies");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_ExecutionerOgre_234ee81c-4fea-4aa5-adb4-670a73fdc511,(TRIGGER)S_MOO_AssaultBazaarPoint_004_be4a16bb-96af-4c79-a383-6cdc64b05a91, "MOO_Assault_BazaarEnemies");
//DB_MOO_AssaultPositions((CHARACTER)S_MOO_WallTentacle_Ogress_c3b872b8-1937-4255-9d0c-29e490afd033, (TRIGGER)S_MOO_AssaultBazaarPoint_004_be4a16bb-96af-4c79-a383-6cdc64b05a91, "MOO_Assault_BazaarEnemies");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_BugBearVendor_8cb1cace-ef98-4387-8b76-2e8efc5cfe89, (TRIGGER)S_MOO_AssaultBazaarPoint_007_1e79df94-c9ee-4b85-bfba-7c9d131077ca, "MOO_Assault_BazaarEnemies"); 
DB_MOO_AssaultPositions((CHARACTER)S_MOO_BazaarGuard_000_1d5cdba7-f2e4-4568-9bb8-94abcf9081d6, (TRIGGER)S_MOO_AssaultBazaarPoint_003_8d57f9a7-e930-45db-8b8d-8924ad527687, "MOO_Assault_BazaarEnemies");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_BazaarGuard_001_8843e9dc-b0dc-4c64-991f-7f512dd12dc0, (TRIGGER)S_MOO_AssaultBazaarPoint_010_3c0231b7-cc06-416c-8d69-61fc64829828, "MOO_Assault_BazaarEnemies");
//DB_MOO_AssaultPositions((CHARACTER)S_MOO_WarehouseGuard_000_d161fc7f-801c-463c-bdbd-f638c8499361, (TRIGGER)S_MOO_AssaultBazReinforcementPoint_2364dcb7-ffb9-4b00-b1c8-ab168592815e, "MOO_Assault_BazaarEnemies");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_DockObserver_5d1de164-5969-4593-87b7-1fcb5b54f00f, (TRIGGER)S_MOO_AssaultBazaarPoint_009_56914d59-31db-4d7e-9842-2533606844f2, "MOO_Assault_BazaarEnemies");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_DockJumper_fd7e05e2-3d4a-4de9-baf5-2be25b21441f, (TRIGGER)S_MOO_AssaultBazaarPoint_008_d03187c8-8b50-4c1a-8c3c-a52a63a3aa48, "MOO_Assault_BazaarEnemies");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_GuardRoom_001_3f94bfd0-5a3b-4ce3-8f12-61241b9a6a40, (TRIGGER)S_MOO_AssaultBazaarPoint_006_82f1f378-0a8e-4292-a934-d1cf0912c504, "MOO_Assault_BazaarEnemies");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_GuardRoom_002_ba3c32e1-ebc2-441a-b121-d7977452c160, (TRIGGER)S_MOO_AssaultBazaarPoint_005_8e71bfe8-0b50-4894-8374-18ddd38caa93, "MOO_Assault_BazaarEnemies");

DB_MOO_Assault_BazaarEnemyCount((CHARACTER)NULL_00000000-0000-0000-0000-000000000000);
NOT DB_MOO_Assault_BazaarEnemyCount((CHARACTER)NULL_00000000-0000-0000-0000-000000000000);

//Ground floor - Throne Room

DB_MOO_AssaultPositions((CHARACTER)S_MOO_PrisonWarden_66b3e4c0-2f82-4c0a-9333-73a5194f88c7, (TRIGGER)S_MOO_AssaultWardenPoint_a8e6d30c-bf49-4ad3-807e-102d875da42b, "MOO_Assault_ThroneRoomEnemies");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_ExecutionGuard_004_d99bec80-06ca-4d81-95cd-348efd9092fc, (TRIGGER)S_MOO_AssaultThroneRoomPoint_002_4cbae6f7-6b21-45c2-a2d6-ebea0224a338, "MOO_Assault_ThroneRoomEnemies");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_ExecutionGuard_005_9dd4a1bf-79d6-4876-9788-9dcec2e0a06e, (TRIGGER)S_MOO_AssaultThroneRoomPoint_003_0dbdd374-49df-476f-8dbb-aeb361eb5861, "MOO_Assault_ThroneRoomEnemies");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_UpperGuard_000_556cec90-5ea1-4054-9874-abd8ee042703, (TRIGGER)S_MOO_AssaultThroneRoomPoint_004_2a21d6ff-9ee8-4638-a183-3d6eef5f81de, "MOO_Assault_ThroneRoomEnemies");

DB_MOO_AssaultJoinBazaarPositions((CHARACTER)S_MOO_PrisonWarden_66b3e4c0-2f82-4c0a-9333-73a5194f88c7, (TRIGGER)S_MOO_AssaultJoinBazaarPoint_001_f11f39e7-59b6-4b68-8f89-467a6b14e50a);
DB_MOO_AssaultJoinBazaarPositions((CHARACTER)S_MOO_ExecutionGuard_004_d99bec80-06ca-4d81-95cd-348efd9092fc, (TRIGGER)S_MOO_AssaultJoinBazaarPoint_003_aa8c1b76-0171-49a6-9f25-fa15ede32b1a);
DB_MOO_AssaultJoinBazaarPositions((CHARACTER)S_MOO_ExecutionGuard_005_9dd4a1bf-79d6-4876-9788-9dcec2e0a06e, (TRIGGER)S_MOO_AssaultJoinBazaarPoint_004_42b032e5-eb51-4db0-b213-4586180a9d37);
DB_MOO_AssaultJoinBazaarPositions((CHARACTER)S_MOO_UpperGuard_000_556cec90-5ea1-4054-9874-abd8ee042703, (TRIGGER)S_MOO_AssaultJoinBazaarPoint_005_b77ea41f-492e-488a-94a8-ee8777db4a4e);

//First floor - Boss Door
DB_MOO_AssaultPositions((CHARACTER)S_MOO_AccessCultist_7f0f8d11-9d1e-4210-bbcb-41aa05666d58, (TRIGGER)S_MOO_AssaultBossDoorPoint_001_96b95466-b378-4dc9-b3b0-1321b7e58569, "MOO_Assault_BossDoorEnemies");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_AudienceGuard_001_f986110c-7451-417a-89e2-b2628e200c4d, (TRIGGER)S_MOO_AssaultBossDoorPoint_002_8cc3a873-eef1-4829-9765-dd21bd8fafab, "MOO_Assault_BossDoorEnemies");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_AudienceGuard_002_50eed113-2a6a-469d-ba8e-a9fd44be681b, (TRIGGER)S_MOO_AssaultBossDoorPoint_003_f1f05793-bdab-44b8-bb82-65d7dbfc1967, "MOO_Assault_BossDoorEnemies");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_AudienceGuard_003_c9c185bb-ca0d-46b7-b0da-bf6364a96e15, (TRIGGER)S_MOO_AssaultBossDoorPoint_004_ddd58c0d-b6e9-4b9a-8476-4799475f6935, "MOO_Assault_BossDoorEnemies");
//DB_MOO_AssaultPositions((CHARACTER)S_HAV_FlamingSpy_acb1dd9e-952b-4281-8e30-ec6f671493a6, (TRIGGER)S_MOO_AssaultBossDoorPoint_005_25304bfb-d383-4d2d-a98a-fb8a67e2a913, "MOO_Assault_BossDoorEnemies");
//Marcus is added after he returns to Moonrise

//First floor - Isobel's Room
//Set in Act2_MOO_Upperfloor if Ketheric's Hound smells Isobel's blessing on the player
//DB_MOO_AssaultPositions((CHARACTER)S_MOO_KethericHound_9c7a8f97-bae8-4509-ad10-a67c17202a31, (TRIGGER)S_MOO_AssaultIsobelRoomPoint_001_71f34f15-c2d6-47e5-b664-febc2851826f, "MOO_Assault_KethericHound");

//Rooftop 
DB_MOO_AssaultPositions((CHARACTER)S_MOO_Ketheric_e9918f3e-5b87-40a3-a9bd-61545151573f, (TRIGGER)S_MOO_AssaultRoofPoint_009_f2376539-3536-4777-84b4-6e798027d689, "MOO_Assault_RooftopEnemies");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_RoofCultist_ebfd7bc7-0fd5-4dee-8fd5-308ded4d0a65, (TRIGGER)S_MOO_AssaultRoofPoint_008_69f61c7f-579e-40cd-b437-a318f352eac8, "MOO_Assault_RooftopEnemies");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_RoofNecromite_001_97c8dc13-5a94-48c2-b2d1-2bb3c1d4dd40, (TRIGGER)S_MOO_AssaultRoofPoint_007_e3d7d4ee-b63d-4d63-88a5-e43097eac66d, "MOO_Assault_RooftopEnemies");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_RoofNecromite_002_0d759ded-13de-4e24-ad3b-cae83879b4c9, (TRIGGER)S_MOO_AssaultRoofPoint_006_5af08e6c-8a2f-42d5-b979-6cafe8471f51, "MOO_Assault_RooftopEnemies");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_RoofNecromite_003_02edce28-9ce1-4905-a776-fd8b50ae0dcc, (TRIGGER)S_MOO_AssaultRoofPoint_005_14db38b8-cdc6-4cfc-844d-0c765bf9634c, "MOO_Assault_RooftopEnemies");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_RoofNecromite_004_ee6ea72e-8a85-445f-8b48-461b4d9d5418, (TRIGGER)S_MOO_AssaultRoofPoint_004_2cc0a8b2-192d-4c5c-8e2f-2d0810afa6aa, "MOO_Assault_RooftopEnemies");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_RoofNecromite_005_242237d0-a129-48a6-a868-3b9211138de5, (TRIGGER)S_MOO_AssaultRoofPoint_003_21020d13-064a-4a3a-bbd0-9fd1f97c471a, "MOO_Assault_RooftopEnemies");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_RoofNecromite_006_48279220-f514-48a7-8084-c8b8eb3629ff, (TRIGGER)S_MOO_AssaultRoofPoint_002_efde453a-4d5f-4d0f-894f-8b762dcacb61, "MOO_Assault_RooftopEnemies");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_RoofNecromite_007_a1fbcddf-cf6e-4222-a022-0fd12d099ce2, (TRIGGER)S_MOO_AssaultRoofPoint_001_770fe68f-6b11-4a93-b0f3-6312c8bbfefd, "MOO_Assault_RooftopEnemies");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_RoofNecromite_008_afd14856-feff-42be-9b6c-402889f45c13, (TRIGGER)S_MOO_AssaultRoofPoint_000_627662e2-5dd1-4b1a-94b6-2a248e22d934, "MOO_Assault_RooftopEnemies");
// Ketheric Hound is removed from Roof group in Act2_MOO_Upperfloor if the hound smells Isobel's Blessing on the player).
DB_MOO_AssaultPositions((CHARACTER)S_MOO_KethericHound_9c7a8f97-bae8-4509-ad10-a67c17202a31, (TRIGGER)S_MOO_AssaultRoofPoint_010_f489b67d-cc01-4f32-a436-aed98030d004, "MOO_Assault_RooftopEnemies");


//Used for ally movement
DB_MOO_AssaultLocations((TRIGGER)S_MOO_MainFloorInterior_SUB_429a55cc-58d2-4469-9577-852131e1fff3);
DB_MOO_AssaultLocations(S_MOO_UpperFloorInterior_SUB_93c522d3-04c4-4f71-a1dc-043478c51301);

//In the case there are no harpers to help the players during the assault, kill off a couple enemies
DB_MOO_Assault_NoHarpersDeadEnemies((CHARACTER)S_MOO_GuardRoom_002_ba3c32e1-ebc2-441a-b121-d7977452c160,(TRIGGER)S_MOO_AssaultNoHarpersDeadEnemyPoint_001_a128b7ea-202a-47eb-96a4-50de144b8482, "MOO_Assault_BazaarEnemies");
DB_MOO_Assault_NoHarpersDeadEnemies((CHARACTER)S_MOO_UpperGuard_000_556cec90-5ea1-4054-9874-abd8ee042703,(TRIGGER)S_MOO_AssaultNoHarpersDeadEnemyPoint_002_581e992b-65ac-4268-9fbc-353a259fb5b2, "MOO_Assault_ThroneRoomEnemies");
DB_MOO_Assault_NoHarpersDeadEnemies((CHARACTER)S_MOO_BazaarGuard_000_1d5cdba7-f2e4-4568-9bb8-94abcf9081d6,(TRIGGER)S_MOO_AssaultNoHarpersDeadEnemyPoint_003_97635157-9c21-4d6e-9317-d0d794144c56, "MOO_Assault_BazaarEnemies");
DB_MOO_Assault_NoHarpersDeadEnemies((CHARACTER)S_MOO_WarehouseGuard_000_d161fc7f-801c-463c-bdbd-f638c8499361,(TRIGGER)S_MOO_AssaultNoHarpersDeadEnemyPoint_003_97635157-9c21-4d6e-9317-d0d794144c56, "MOO_Assault_BazaarEnemies"); //Is the backup for S_MOO_BazaarGuard_000

//END_REGION
//REGION Assault Positions -- ALLIES ---

//Nightsong is set up a bit after the initial set-up from Act2_SHA_Nightsong

//dynamic allies: gnolls, etc.
DB_MOO_AssaultPositions((CHARACTER)S_MOO_Kitchen_GnollMaster_627dfc1c-56e1-4e56-9920-56e381e72c53, S_MOO_AssaultBazGnollPoint_64690095-8376-491e-b69e-be20d2d385af, "MOO_Assault_BazaarEnemies");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_KitchenGnoll_000_2da0be81-dff2-41a6-a15e-ce340c968ea2, S_MOO_AssaultBazGnollPoint_64690095-8376-491e-b69e-be20d2d385af, "MOO_Assault_BazaarEnemies");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_KitchenGnoll_002_44b05e1f-1e1f-4b81-bfab-ee120bc2f38c, S_MOO_AssaultBazGnollPoint_64690095-8376-491e-b69e-be20d2d385af, "MOO_Assault_BazaarEnemies");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_KitchenGnoll_001_21db721c-616c-4385-970c-f18bb7477034, S_MOO_AssaultBazGnollPoint_64690095-8376-491e-b69e-be20d2d385af, "MOO_Assault_BazaarEnemies");

//Dead Allies
DB_MOO_AssaultPositions((CHARACTER)S_HAV_FlamingFist_004_eb083eb6-066c-4693-8fb8-575bc4c71373,(TRIGGER)S_MOO_AssaultDeadAllyPoint_001_511a0525-7f37-471e-9c87-52a5e390747c, "MOO_Assault_DeadFlamingFist");
DB_MOO_AssaultPositions((CHARACTER)S_HAV_FlamingFist_005_0e691c0a-562b-43bb-8554-cde1194decd5,(TRIGGER)S_MOO_AssaultDeadAllyPoint_005_c14bdbc1-d8dc-405b-9e03-b2916ce4dd89, "MOO_Assault_DeadFlamingFist");
DB_MOO_AssaultPositions((CHARACTER)S_HAV_FlamingFist_002_39ace2b4-699d-468c-a664-8a06492d997a,(TRIGGER)S_MOO_AssaultDeadAllyPoint_006_6309386f-7786-4d73-ae4f-9a8cc79e07ff, "MOO_Assault_DeadFlamingFist");
DB_MOO_AssaultPositions((CHARACTER)S_HAV_HavenOutcasts_EntranceGuards_Halfling_Melee_c8bc8f03-c91c-42d4-829c-d16bb1df4a67,(TRIGGER)S_MOO_AssaultDeadAllyPoint_004_57acbea4-ef47-4e6e-817a-904f3e27e265, "MOO_Assault_DeadHarper");
DB_MOO_AssaultPositions((CHARACTER)S_HAV_HavenOutcasts_BarricadeYeller_Ranger_b612ef5f-3381-4486-8959-84dd399fb1ae,(TRIGGER)S_MOO_AssaultDeadAllyPoint_003_182fdc54-4516-4f12-8e1f-9979131eda15, "MOO_Assault_DeadHarper");
DB_MOO_AssaultPositions((CHARACTER)S_HAV_HavenOutcasts_FountainPatrol_Caster_ff70f59a-7d50-4e69-a768-60a97c6fb57d, (TRIGGER)S_MOO_AssaultDeadAllyPoint_002_f230f055-034d-431a-958e-b80d3d5ffcdb, "MOO_Assault_DeadHarper");
DB_MOO_AssaultPositions((CHARACTER)S_HAV_FlamingFist_003_128c0f54-fea0-49df-89ca-c2ca8d996a31, (TRIGGER)S_MOO_AssaultDeadAllyPoint_007_db413e51-9266-408c-aa3b-9c7d855660b3, "MOO_Assault_DeadFlamingFist");
DB_MOO_AssaultPositions((CHARACTER)S_HAV_HavenOutcasts_DockGuard_Melee_f1f837ad-8e6a-442d-bba4-46f665c47675, (TRIGGER)S_MOO_AssaultDeadAllyPoint_008_6393ca80-3e33-4d2e-b9b3-448849fe5726, "MOO_Assault_DeadHarper");
DB_MOO_AssaultPositions((CHARACTER)S_HAV_HavenOutcasts_DockGuard_Left_Melee_bd46130e-1c2c-4888-9e9c-6dd58965ab4f, (TRIGGER)S_MOO_AssaultDeadAllyPoint_009_a23362ba-2207-473c-9674-de972503a199, "MOO_Assault_DeadHarper");
DB_MOO_AssaultPositions((CHARACTER)S_HAV_HavenOutcasts_BarricadeGuards_Caster_WoodElf_f48078e6-ec51-49a2-a244-9d0a72af5257, (TRIGGER)S_MOO_AssaultDeadAllyPoint_010_5e67879a-d598-4385-8a6c-3b87cb4df41c, "MOO_Assault_DeadHarper");
DB_MOO_AssaultPositions((CHARACTER)S_HAV_HavenOutcasts_BarricadeGuards_Melee_Dwarf_b1d8b327-1f27-4921-aa2b-dd18a9d67fc8, (TRIGGER)S_MOO_AssaultDeadAllyPoint_011_b93c212c-d690-4cd3-b586-90b153b8b6d6, "MOO_Assault_DeadHarper");

DB_MOO_AssaultPositions((CHARACTER)S_HAV_HarperGuard_002_34a9bfd8-1ca2-4a1c-b72e-2bf1cfc046a4, (TRIGGER)S_MOO_AssaultDeadAllyPoint_013_ba043681-459e-4efe-bb86-85575fc99f3f, "MOO_Assault_DeadHarper");
DB_MOO_AssaultPositions((CHARACTER)S_HAV_HavenOutcasts_EntranceGuards_Caster_HighElf_825714dd-7df9-4cd1-aecb-edf577baa487, (TRIGGER)S_MOO_AssaultDeadAllyPoint_012_28704d07-d8c1-48a2-aed2-39136fb9518c, "MOO_Assault_DeadHarper");
DB_MOO_AssaultPositions((CHARACTER)S_HAV_HavenOutcasts_RoofWatcher_Caster_d44b6aee-7737-4961-bb2b-e7920b003107, (TRIGGER)S_MOO_AssaultPrisonDeadPoint_001_b8d57fef-5dcf-4880-98e0-09af5cc74df0, "MOO_Assault_DeadHarper");
DB_MOO_AssaultPositions((CHARACTER)S_SCL_Drider_Harper_Caster_000_ef609a8e-08bf-4648-bbb4-380a7f4bc887, (TRIGGER)S_MOO_AssaultPrisonDeadPoint_002_d9fe791b-6a42-4718-97c3-5fd19f21ce10, "MOO_Assault_DeadHarper");
DB_MOO_AssaultPositions((CHARACTER)S_SCL_Drider_Harper_Ranger_001_71c140fa-0ebd-4f36-8728-6e28a445a6ff, (TRIGGER)S_MOO_AssaultPrisonDeadPoint_003_43888c23-d109-4537-a96e-7ee773a60748, "MOO_Assault_DeadHarper");
DB_MOO_AssaultPositions((CHARACTER)S_SCL_Drider_Harper_Ranger_000_ce089a64-1a91-4ab0-ac71-a2712680780d, (TRIGGER)S_MOO_AssaultPrisonDeadPoint_004_8897c01e-1404-432c-9607-31d8b498be57, "MOO_Assault_DeadHarper");
DB_MOO_AssaultPositions((CHARACTER)S_SCL_Drider_Harper_Melee_000_b9f6bb1e-f4cd-4bb3-a7f0-80aad9bae8c8, (TRIGGER)S_MOO_AssaultPrisonDeadPoint_005_80b40ae9-1ed7-405f-b209-a213e0ec7c12, "MOO_Assault_DeadHarper");

DB_MOO_Assault_DeadAllyGroups("MOO_Assault_DeadFlamingFist");
DB_MOO_Assault_DeadAllyGroups("MOO_Assault_DeadHarper");
//From Haven
//Ideally Harpers will occupy the ranger space for combat
DB_MOO_AssaultPositions((CHARACTER)S_HAV_HavenOutcasts_DockGuard_Left_Ranger_3a856945-e4a5-4214-89af-84a2b50789d8,(TRIGGER)S_MOO_AssaultHarperPoint_001_32b7cf72-3d0f-416d-811d-ad6c6b389aab, "MOO_Assault_HarperAlly");
DB_MOO_AssaultPositions((CHARACTER)S_HAV_HavenOutcasts_BarricadeRunners_Ranger_572690b6-68f5-4e7b-807b-b9376b658b65,(TRIGGER)S_MOO_AssaultHarperPoint_002_cd8b53d3-e9dd-476d-9487-afd6acbe3a2a, "MOO_Assault_HarperAlly");
DB_MOO_AssaultPositions((CHARACTER)S_HAV_HavenOutcasts_DockGuard_Ranger_a0f9d7cb-d87c-4af8-87fa-d273a8ecba93,(TRIGGER)S_MOO_AssaultHarperPoint_003_64b8df44-dd6a-4e84-8f7a-9b33186f4796, "MOO_Assault_HarperAlly");
DB_MOO_AssaultPositions((CHARACTER)S_HAV_HavenOutcasts_FountainGuards_Melee_2_271478dd-7efb-4ca7-b40c-593bbea91a85,(TRIGGER)S_MOO_AssaultHarperPoint_004_b1184cf2-d542-4292-8234-d30368c11b88, "MOO_Assault_HarperAlly");

DB_MOO_AssaultPositions((CHARACTER)S_HAV_HavenOutcasts_HarperQuartermaster_f769815c-d437-4a45-9ae4-aebd53ec8f7c,(TRIGGER)S_MOO_AssaultHarperMerchant_b65e46d5-8fba-4b6b-9601-9070214fde0f, "MOO_Assault_HarperMerchant");

//Harper Replacements
// In the case that the Harpers are dead before the Assault, it will replace them with back-up Harpers
DB_MOO_AssaultHarperReplacements((CHARACTER)S_MOO_AssaultHarper_001_1f0cddc9-db64-4f55-8bd8-53961c740e11);
DB_MOO_AssaultHarperReplacements((CHARACTER)S_MOO_AssaultHarper_002_350067f3-a2ff-462d-acaa-fb5222711c65);
DB_MOO_AssaultHarperReplacements((CHARACTER)S_MOO_AssaultHarper_003_2863d986-9aca-447c-a493-19cc5f06394b);
DB_MOO_AssaultHarperReplacements((CHARACTER)S_MOO_AssaultHarper_004_d552c90e-7d29-4904-a349-6d44b9b38040);

//Flaming Fist
//Ideally FF will occupy the melee space for combat
DB_MOO_AssaultPositions((CHARACTER)S_HAV_HavenOutcasts_FountainGuards_Melee_1_3e2db417-c434-4f08-ab6a-dd60c8e9f3b5,(TRIGGER)S_MOO_AssaultFlamingFistPoint_003_6f01064e-ff73-426c-8765-591b83c5a512, "MOO_Assault_FlamingFistAlly");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_AssaultFlamingFist_001_623d562f-937c-4863-97df-d836f6bf2c6a,(TRIGGER)S_MOO_AssaultFlamingFistPoint_002_6be1b384-7b26-475e-a4ac-573e6d82e30e, "MOO_Assault_FlamingFistAlly");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_AssaultFlamingFist_002_a442887f-71ed-415e-92b2-58ffa6e029a5,(TRIGGER)S_MOO_AssaultFlamingFistPoint_001_b93a54df-b382-41eb-a2b6-723f93fc5dfa, "MOO_Assault_FlamingFistAlly");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_AssaultFlamingFist_003_68bd5a16-ca4b-4108-9ba5-9d16bda5f108,(TRIGGER)S_MOO_AssaultFlamingFistPoint_004_b6a19ec2-b0e4-4948-ae39-ca9b772b9732, "MOO_Assault_FlamingFistAlly");

//Flaming Fist Replacements
DB_MOO_AssaultFlamingFistReplacements((CHARACTER)S_MOO_AssaultFlamingFist_004_eba54058-6cac-467e-9912-a3942eb49a8d);
//END_REGION
//REGION Assault Positions -- LEAVING --
// NOT Part of the Assault //NULL Trigger == Not part of the assault (is set off stage)
//Vendors
DB_MOO_AssaultPositions((CHARACTER)S_MOO_InfernalVendor_511c9413-25fe-449c-a81d-4b09bc20745a,(TRIGGER)NULL_00000000-0000-0000-0000-000000000000, "");
DB_MOO_AssaultPositions((CHARACTER)S_GOB_Quartermaster_646936f3-8d8d-484e-9361-cd1ed484c615,(TRIGGER)NULL_00000000-0000-0000-0000-000000000000, "");
DB_MOO_AssaultPositions((CHARACTER)S_GOB_ZhentarimGuard_Ranger_01_4b9818fa-cca6-4bad-b382-4c01334ef22a,(TRIGGER)NULL_00000000-0000-0000-0000-000000000000, "");
DB_MOO_AssaultPositions((CHARACTER)S_GOB_ZhentarimGuard_Ranger_02_afc5350d-dc9f-4808-b6ce-d7b1bb7c8229,(TRIGGER)NULL_00000000-0000-0000-0000-000000000000, "");
//Execution goblins
//Defined in Act2_MOO_Execution

//Bazaar plebeians
DB_MOO_AssaultPositions((CHARACTER)S_MOO_BazaarStander_000_04580ceb-8caf-4a53-999b-743fc9590ef0,(TRIGGER)NULL_00000000-0000-0000-0000-000000000000, "");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_BazaarStander_001_b23b8e57-880f-4763-af53-7009f2d959d1,(TRIGGER)NULL_00000000-0000-0000-0000-000000000000, "");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_BazaarStander_002_5aa31a93-79fa-4a82-9e72-cbec77da3a0e,(TRIGGER)NULL_00000000-0000-0000-0000-000000000000, "");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_BazaarStander_003_efcf317a-dc82-4776-80ef-0f463b09fefe,(TRIGGER)NULL_00000000-0000-0000-0000-000000000000, "");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_BazaarStander_004_a6211285-d412-42c5-8c1c-ffe7feca2e09,(TRIGGER)NULL_00000000-0000-0000-0000-000000000000, "");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_BazaarStander_005_c31c6739-c991-490e-9857-2a3367042727,(TRIGGER)NULL_00000000-0000-0000-0000-000000000000, "");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_BazaarStander_006_5e4c22f4-1122-4822-bc16-ba49d3cb701e,(TRIGGER)NULL_00000000-0000-0000-0000-000000000000, "");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_BazaarStander_007_f152d3c1-fe32-403f-9d7f-2f1049912e0f,(TRIGGER)NULL_00000000-0000-0000-0000-000000000000, "");
//TODO: others + dynamic NPCs (zhents, etc.)

//ScryingEyes
DB_MOO_AssaultPositions((CHARACTER)S_MOO_UpperEye_B_6bbcbc71-91b2-499e-b42d-381eb729bad1,(TRIGGER)NULL_00000000-0000-0000-0000-000000000000, "");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_UpperEye_C_881081c0-8e1a-4033-9cb3-37532cd7f4ef,(TRIGGER)NULL_00000000-0000-0000-0000-000000000000, "");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_GroundEye_A_bb378616-79a0-4b0c-b967-e650e3707b24,(TRIGGER)NULL_00000000-0000-0000-0000-000000000000, "");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_GroundEye_B_e50cabc8-afb0-4e5b-a73c-166828488510,(TRIGGER)NULL_00000000-0000-0000-0000-000000000000, "");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_PrisonEye_A_fe9333ab-2bbe-4624-978e-56ca9b4c58da,(TRIGGER)NULL_00000000-0000-0000-0000-000000000000, "");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_PrisonEye_B_9bea6db5-8e9a-4277-9813-823b45248022,(TRIGGER)NULL_00000000-0000-0000-0000-000000000000, "");
DB_MOO_AssaultPositions((CHARACTER)S_MOO_PrisonEye_C_89e223c3-52e8-4bbf-9a75-47cbb0b6b65e,(TRIGGER)NULL_00000000-0000-0000-0000-000000000000, "");
//END_REGION
//REGION Swarm Groups
//Enemies
DB_MOO_Assault_SwarmGroup((CHARACTER)S_MOO_BazEntranceGuard_002_1a7719bc-9f42-4405-a07d-5d54af11ef0b, "MOO_Assault_ZealotSwarm");
DB_MOO_Assault_SwarmGroup((CHARACTER)S_MOO_GuardRoom_002_ba3c32e1-ebc2-441a-b121-d7977452c160, "MOO_Assault_ZealotSwarm");
DB_MOO_Assault_SwarmGroup((CHARACTER)S_MOO_DockObserver_5d1de164-5969-4593-87b7-1fcb5b54f00f, "MOO_Assault_ZealotSwarm");

DB_MOO_Assault_SwarmGroup((CHARACTER)S_MOO_KitchenGnoll_000_2da0be81-dff2-41a6-a15e-ce340c968ea2, "MOO_Assault_GnollSwarm");
DB_MOO_Assault_SwarmGroup((CHARACTER)S_MOO_KitchenGnoll_001_21db721c-616c-4385-970c-f18bb7477034, "MOO_Assault_GnollSwarm");
DB_MOO_Assault_SwarmGroup((CHARACTER)S_MOO_KitchenGnoll_002_44b05e1f-1e1f-4b81-bfab-ee120bc2f38c, "MOO_Assault_GnollSwarm");
DB_MOO_Assault_SwarmGroup((CHARACTER)S_MOO_Kitchen_GnollMaster_627dfc1c-56e1-4e56-9920-56e381e72c53, "MOO_Assault_GnollSwarm");

DB_MOO_Assault_SwarmGroup((CHARACTER)S_MOO_GuardRoom_001_3f94bfd0-5a3b-4ce3-8f12-61241b9a6a40, "MOO_Assault_AcolyteSwarm");
DB_MOO_Assault_SwarmGroup((CHARACTER)S_MOO_BazEntranceGuard_001_8fdd2eba-9e1e-48b6-a201-787616541dd9, "MOO_Assault_AcolyteSwarm");
DB_MOO_Assault_SwarmGroup((CHARACTER)S_MOO_DockJumper_fd7e05e2-3d4a-4de9-baf5-2be25b21441f, "MOO_Assault_AcolyteSwarm");

DB_MOO_Assault_SwarmGroup((CHARACTER)S_HAV_HavenOutcasts_DockGuard_Left_Ranger_3a856945-e4a5-4214-89af-84a2b50789d8,"MOO_Assault_HarperSwarm");
DB_MOO_Assault_SwarmGroup((CHARACTER)S_HAV_HavenOutcasts_BarricadeRunners_Ranger_572690b6-68f5-4e7b-807b-b9376b658b65,"MOO_Assault_HarperSwarm");
DB_MOO_Assault_SwarmGroup((CHARACTER)S_HAV_HavenOutcasts_DockGuard_Ranger_a0f9d7cb-d87c-4af8-87fa-d273a8ecba93,"MOO_Assault_HarperSwarm");
DB_MOO_Assault_SwarmGroup((CHARACTER)S_HAV_HavenOutcasts_FountainGuards_Melee_2_271478dd-7efb-4ca7-b40c-593bbea91a85,"MOO_Assault_HarperSwarm");

DB_MOO_Assault_SwarmGroup((CHARACTER)S_HAV_HavenOutcasts_FountainGuards_Melee_1_3e2db417-c434-4f08-ab6a-dd60c8e9f3b5,"MOO_Assault_FFSwarm");
DB_MOO_Assault_SwarmGroup((CHARACTER)S_MOO_AssaultFlamingFist_001_623d562f-937c-4863-97df-d836f6bf2c6a,"MOO_Assault_FFSwarm");
DB_MOO_Assault_SwarmGroup((CHARACTER)S_MOO_AssaultFlamingFist_002_a442887f-71ed-415e-92b2-58ffa6e029a5,"MOO_Assault_FFSwarm");
DB_MOO_Assault_SwarmGroup((CHARACTER)S_MOO_AssaultFlamingFist_003_68bd5a16-ca4b-4108-9ba5-9d16bda5f108,"MOO_Assault_FFSwarm");
//Allies
//END_REGION
//REGION Assault Allegiance
DB_MOO_Assault_EnemyGroups("MOO_Assault_ThroneRoomEnemies");
DB_MOO_Assault_EnemyGroups("MOO_Assault_BossDoorEnemies");
//DB_MOO_Assault_EnemyGroups("MOO_Assault_RooftopEnemies"); //Set to Hostile group when combat with Ketheric starts
DB_MOO_Assault_EnemyGroups("MOO_Assault_BazaarEnemies");

//DB_MOO_Assault_NeutralGroups("MOO_Assault_BazaarEnemies");//Starts hostile, but is set neutral for dialog with Z'rell, then switches back to EnemyGroup
DB_MOO_Assault_NeutralGroups("MOO_Assault_KethericHound"); //Just Ketheric Hound if she smelled Isobel on the player
DB_MOO_Assault_NeutralGroups("MOO_Assault_RooftopEnemies");

DB_MOO_Assault_EnemyDefeatCounterGroups("MOO_Assault_ThroneRoomEnemies");
DB_MOO_Assault_EnemyDefeatCounterGroups("MOO_Assault_BossDoorEnemies");
DB_MOO_Assault_EnemyDefeatCounterGroups("MOO_Assault_RooftopEnemies"); 
DB_MOO_Assault_EnemyDefeatCounterGroups("MOO_Assault_BazaarEnemies");

DB_MOO_Assault_AllyGroups("MOO_Assault_Nightsong");
DB_MOO_Assault_AllyGroups("MOO_Assault_HarperAlly");
DB_MOO_Assault_AllyGroups("MOO_Assault_HarperMerchant");
DB_MOO_Assault_AllyGroups("MOO_Assault_FlamingFistAlly");
DB_MOO_Assault_AllyGroups("MOO_Assault_PrisonDefenderAlly");
DB_MOO_Assault_AllyGroups("MOO_Assault_GnollAlly");
//END_REGION
//REGION Harpers
//Generic Harpers
SetOnStage(S_MOO_AssaultHarper_001_1f0cddc9-db64-4f55-8bd8-53961c740e11, 0);
SetOnStage(S_MOO_AssaultHarper_002_350067f3-a2ff-462d-acaa-fb5222711c65, 0);
SetOnStage(S_MOO_AssaultHarper_003_2863d986-9aca-447c-a493-19cc5f06394b, 0);
SetOnStage(S_MOO_AssaultHarper_004_d552c90e-7d29-4904-a349-6d44b9b38040, 0);

//Positions characters will move to combat ready position at the entrance when they enter the tower
DB_MOO_Assault_AllyCombatReadyPositions((CHARACTER)S_HAV_HavenOutcasts_BarricadeRunners_Ranger_572690b6-68f5-4e7b-807b-b9376b658b65, S_MOO_AssaultAllyReadyPoints_003_36c2980b-3f04-4001-bf3d-400921253b17);
DB_MOO_Assault_AllyCombatReadyPositions(S_HAV_HavenOutcasts_DockGuard_Ranger_a0f9d7cb-d87c-4af8-87fa-d273a8ecba93, S_MOO_AssaultAllyReadyPoints_004_c961107a-bb11-4bdf-8d41-5646ef2d1e04);
DB_MOO_Assault_AllyCombatReadyPositions(S_HAV_HavenOutcasts_FountainGuards_Melee_2_271478dd-7efb-4ca7-b40c-593bbea91a85, S_MOO_AssaultAllyReadyPoints_005_191fe1d7-f3d7-4bd1-95d7-796b454f040a);
DB_MOO_Assault_AllyCombatReadyPositions(S_HAV_HavenOutcasts_DockGuard_Left_Ranger_3a856945-e4a5-4214-89af-84a2b50789d8, S_MOO_AssaultAllyReadyPoints_006_c221de46-42fb-4904-b307-213a3fc5e12a);

//Positions ally characters will run to on the mainfloor when the main floor is cleared
DB_MOO_Assault_AllyMainFloorPositions((CHARACTER)S_HAV_HavenOutcasts_DockGuard_Left_Ranger_3a856945-e4a5-4214-89af-84a2b50789d8,(TRIGGER)S_MOO_AllyMainFloorPoint_005_22acfb26-35d5-4f1d-ae43-00d568c31fae);
DB_MOO_Assault_AllyMainFloorPositions(S_HAV_HavenOutcasts_BarricadeRunners_Ranger_572690b6-68f5-4e7b-807b-b9376b658b65, S_MOO_AllyMainFloorPoint_002_3187a0bb-e137-4c13-a413-55f517445c13);
DB_MOO_Assault_AllyMainFloorPositions(S_HAV_HavenOutcasts_DockGuard_Ranger_a0f9d7cb-d87c-4af8-87fa-d273a8ecba93, S_MOO_AllyMainFloorPoint_004_7b139fbb-c79d-41a1-b013-19b7042f5139);
DB_MOO_Assault_AllyMainFloorPositions(S_HAV_HavenOutcasts_FountainGuards_Melee_2_271478dd-7efb-4ca7-b40c-593bbea91a85, S_MOO_AllyMainFloorPoint_003_958816f8-aa6c-446d-934a-b7adc944da59);
DB_MOO_Assault_AllyMainFloorPositions(S_HAV_HavenOutcasts_HarperQuartermaster_f769815c-d437-4a45-9ae4-aebd53ec8f7c, S_MOO_AllyMainFloorPoint_008_27bd5e47-d664-496f-b307-acdb7ee82dfc);

DB_MOO_Assault_HarperAnubisConfigs("MOO_AssaultHarper_Guard_001");
DB_MOO_Assault_HarperAnubisConfigs("MOO_AssaultHarper_Guard_002");
DB_MOO_Assault_HarperAnubisConfigs("MOO_AssaultHarper_Patrol_001");
DB_MOO_Assault_HarperAnubisConfigs("MOO_AssaultHarper_Patrol_002");

DB_MOO_Assault_HarperArrivalSpeakers((CHARACTER)S_HAV_HavenOutcasts_FountainGuards_Melee_2_271478dd-7efb-4ca7-b40c-593bbea91a85);
DB_MOO_Assault_HarperArrivalSpeakers((CHARACTER)S_HAV_HavenOutcasts_BarricadeRunners_Ranger_572690b6-68f5-4e7b-807b-b9376b658b65);
DB_MOO_Assault_HarperArrivalSpeakers((CHARACTER)S_HAV_HavenOutcasts_DockGuard_Ranger_a0f9d7cb-d87c-4af8-87fa-d273a8ecba93);
DB_MOO_Assault_HarperArrivalSpeakers((CHARACTER)S_HAV_HavenOutcasts_DockGuard_Left_Ranger_3a856945-e4a5-4214-89af-84a2b50789d8);
//END_REGION
//REGION Flaming Fist
//Generic Flaming Fist
SetOnStage(S_MOO_AssaultFlamingFist_001_623d562f-937c-4863-97df-d836f6bf2c6a, 0);
SetOnStage(S_MOO_AssaultFlamingFist_002_a442887f-71ed-415e-92b2-58ffa6e029a5, 0);
SetOnStage(S_MOO_AssaultFlamingFist_003_68bd5a16-ca4b-4108-9ba5-9d16bda5f108, 0);
SetOnStage(S_MOO_AssaultFlamingFist_004_eba54058-6cac-467e-9912-a3942eb49a8d, 0);

DB_MOO_Assault_AllyMainFloorPositions(S_HAV_HavenOutcasts_FountainGuards_Melee_1_3e2db417-c434-4f08-ab6a-dd60c8e9f3b5, S_MOO_AllyMainFloorPoint_001_bdc33157-1de4-467f-bceb-0f61cc5b2a7b);
DB_MOO_Assault_AllyMainFloorPositions(S_MOO_AssaultFlamingFist_001_623d562f-937c-4863-97df-d836f6bf2c6a, S_MOO_AllyMainFloorPoint_006_e24b2fdb-facf-4902-b3d9-e90a25f15fce);
DB_MOO_Assault_AllyMainFloorPositions(S_MOO_AssaultFlamingFist_002_a442887f-71ed-415e-92b2-58ffa6e029a5, S_MOO_AllyMainFloorPoint_009_0c7ea0d8-4b26-4995-a8a8-b535a3a0f96d);
DB_MOO_Assault_AllyMainFloorPositions(S_MOO_AssaultFlamingFist_003_68bd5a16-ca4b-4108-9ba5-9d16bda5f108, S_MOO_AllyMainFloorPoint_008_27bd5e47-d664-496f-b307-acdb7ee82dfc);

DB_MOO_Assault_AllyCombatReadyPositions(S_HAV_HavenOutcasts_FountainGuards_Melee_1_3e2db417-c434-4f08-ab6a-dd60c8e9f3b5, S_MOO_AssaultAllyReadyPoints_007_ab7e27c3-e1b6-4767-97b2-89d269626b8a);
DB_MOO_Assault_AllyCombatReadyPositions(S_MOO_AssaultFlamingFist_001_623d562f-937c-4863-97df-d836f6bf2c6a, S_MOO_AssaultAllyReadyPoints_008_cf12ecba-6e2d-4525-8136-5e21425f07ca);
DB_MOO_Assault_AllyCombatReadyPositions(S_MOO_AssaultFlamingFist_002_a442887f-71ed-415e-92b2-58ffa6e029a5, S_MOO_AssaultAllyReadyPoints_009_8cd3b611-8aa4-40e9-85af-acba2bec5e73);
DB_MOO_Assault_AllyCombatReadyPositions(S_MOO_AssaultFlamingFist_003_68bd5a16-ca4b-4108-9ba5-9d16bda5f108, S_MOO_AssaultAllyReadyPoints_010_b293d881-76e7-4745-a1ba-dbc63b4fea00);

//Characters that will move to the prison to fight the skeletons once the main floor is cleared of enemies
DB_MOO_Assault_PrisonDefenders(S_HAV_HavenOutcasts_FountainGuards_Melee_1_3e2db417-c434-4f08-ab6a-dd60c8e9f3b5, S_MOO_AssaultPrisonDefencePoint_001_ea5b505a-b81b-498c-b4e7-224e426b6f60);
DB_MOO_Assault_PrisonDefenders(S_MOO_AssaultFlamingFist_001_623d562f-937c-4863-97df-d836f6bf2c6a, S_MOO_AssaultPrisonDefencePoint_002_86e0ae1c-dd1f-4e7e-89da-88cbdf289d95);
DB_MOO_Assault_PrisonDefenders(S_MOO_AssaultFlamingFist_002_a442887f-71ed-415e-92b2-58ffa6e029a5, S_MOO_AssaultPrisonDefencePoint_003_b47f7435-7845-4208-b2b7-1607027d2d81);
DB_MOO_Assault_PrisonDefenders(S_MOO_AssaultFlamingFist_003_68bd5a16-ca4b-4108-9ba5-9d16bda5f108, S_MOO_AssaultPrisonDefencePoint_004_6687db5b-414b-4767-b93b-5981d8fcdbbb);

//END_REGION
//REGION Dialog
//Generic dialog, so no special setup like inclusions
DB_MOO_Assault_GenericDialog((CHARACTER)S_MOO_AssaultFlamingFist_001_623d562f-937c-4863-97df-d836f6bf2c6a,(DIALOGRESOURCE)MOO_Assault_AssaultFlamingFist_001_2bc6a6ce-8449-1380-8b4f-fa96f1823d2b);
DB_MOO_Assault_GenericDialog(S_MOO_AssaultFlamingFist_002_a442887f-71ed-415e-92b2-58ffa6e029a5,MOO_Assault_AssaultFlamingFist_002_3ad3ff1f-f1bf-f004-5835-d98dfa564611);
DB_MOO_Assault_GenericDialog(S_MOO_AssaultFlamingFist_003_68bd5a16-ca4b-4108-9ba5-9d16bda5f108,MOO_Assault_AssaultFlamingFist_003_cd526b7d-8525-f816-e9aa-c445cfa63b9e);
DB_MOO_Assault_GenericDialog(S_MOO_AssaultFlamingFist_004_eba54058-6cac-467e-9912-a3942eb49a8d,MOO_Assault_AssaultFlamingFist_004_f4a87ac7-9a52-1975-8b43-75d9562e7d01);
DB_MOO_Assault_GenericDialog(S_MOO_AssaultHarper_001_1f0cddc9-db64-4f55-8bd8-53961c740e11,MOO_Assault_AssaultHarper_001_e5a89d10-745b-a481-e06e-d1ef74839eae);
DB_MOO_Assault_GenericDialog(S_MOO_AssaultHarper_002_350067f3-a2ff-462d-acaa-fb5222711c65,MOO_Assault_AssaultHarper_002_4dc6a73f-14eb-e371-b2c4-f930fc4d6bab);
DB_MOO_Assault_GenericDialog(S_MOO_AssaultHarper_003_2863d986-9aca-447c-a493-19cc5f06394b,MOO_Assault_AssaultHarper_003_38c2ae47-a8ad-5ca8-9587-399049feaed3);
DB_MOO_Assault_GenericDialog(S_MOO_AssaultHarper_004_d552c90e-7d29-4904-a349-6d44b9b38040,MOO_Assault_AssaultHarper_004_d8b52a09-e1b3-284c-95d7-d9788026af98);
DB_MOO_Assault_GenericDialog(S_HAV_HavenOutcasts_BarricadeRunners_Ranger_572690b6-68f5-4e7b-807b-b9376b658b65,MOO_Assault_HavenOutcasts_BarricadeRunners_Ranger_3d8a4f57-fd51-1760-cb25-75ea1e093a2e);
DB_MOO_Assault_GenericDialog(S_HAV_HavenOutcasts_DockGuard_Left_Ranger_3a856945-e4a5-4214-89af-84a2b50789d8,MOO_Assault_HavenOutcasts_DockGuard_Left_Ranger_aafafa9e-5b63-04fe-256a-9a7213980617);
DB_MOO_Assault_GenericDialog(S_HAV_HavenOutcasts_DockGuard_Ranger_a0f9d7cb-d87c-4af8-87fa-d273a8ecba93,MOO_Assault_HavenOutcasts_DockGuard_Ranger_1df81cb8-76ba-1d56-7a1a-4f819bb0aa76);
DB_MOO_Assault_GenericDialog(S_HAV_HavenOutcasts_HarperQuartermaster_f769815c-d437-4a45-9ae4-aebd53ec8f7c,MOO_Assault_HavenOutcasts_HarperQuartermaster_93651832-c41c-09e3-d846-4d42c632d0f5);
DB_MOO_Assault_GenericDialog(S_MOO_Executioner_8e75eb3b-7551-485e-8f98-2bf2e51d3e84,MOO_Assault_Executioner_d85920d4-073a-ccf2-68dd-c50697b2d1ad);
DB_MOO_Assault_GenericDialog(S_HAV_HavenOutcasts_FountainGuards_Melee_1_3e2db417-c434-4f08-ab6a-dd60c8e9f3b5, HAV_HavenOutcasts_FountainGuards_Melee_1_5778162c-dec8-1cb1-4726-3f993c4a507f);
DB_MOO_Assault_GenericDialog(S_HAV_HavenOutcasts_FountainGuards_Melee_2_271478dd-7efb-4ca7-b40c-593bbea91a85, HAV_HavenOutcasts_FountainGuards_Melee_2_052ea105-2e43-5923-0fc4-75d42cce4be0);
//DB_MOO_Assault_GenericDialog(S_MOO_KethericHound_9c7a8f97-bae8-4509-ad10-a67c17202a31,MOO_Assault_CrestfallenHound_SwA_7eb4149b-371f-b90d-1a53-f1843d77690f);

//END_REGION
//REGION Combat ADs
DB_MOO_Assault_CombatAD((CHARACTER)S_MOO_Executioner_8e75eb3b-7551-485e-8f98-2bf2e51d3e84,(DIALOGRESOURCE)MOO_Assault_AD_ZrellCombat_1bd2b3eb-daca-3bf3-fbb3-7f0a3501df3e);
DB_MOO_Assault_CombatAD((CHARACTER)S_MOO_DockObserver_5d1de164-5969-4593-87b7-1fcb5b54f00f,(DIALOGRESOURCE)MOO_Assault_AD_GuardObserver_81be4dc2-66fc-ab28-5101-3a5b43037e40);
DB_MOO_Assault_CombatAD((CHARACTER)S_MOO_DockJumper_fd7e05e2-3d4a-4de9-baf5-2be25b21441f,(DIALOGRESOURCE)MOO_Assault_AD_GuardJumper_49211840-f12e-ecaf-f48e-b0b4bf5286c9);
DB_MOO_Assault_CombatAD((CHARACTER)S_MOO_PrisonWarden_66b3e4c0-2f82-4c0a-9333-73a5194f88c7,(DIALOGRESOURCE)MOO_Assault_AD_PrisonWarden_9486cd7f-98c8-b751-e434-52fb1e7a645f);
DB_MOO_Assault_CombatAD((CHARACTER)S_MOO_KitchenGnoll_001_21db721c-616c-4385-970c-f18bb7477034,(DIALOGRESOURCE)MOO_Assault_AD_BarnabusCombat_a58b3a34-24a4-5843-7f10-a8464609ddfc);
DB_MOO_Assault_CombatAD((CHARACTER)S_MOO_AccessCultist_7f0f8d11-9d1e-4210-bbcb-41aa05666d58,(DIALOGRESOURCE)MOO_Assault_AD_AccessCultistCombat_7a19cb1e-dfec-7651-ef9d-6198c8d499cb);
//END_REGION

//Objects that are set in the tower to help with navigation and to have the world reflect a significant event
//Preferably the source object should already exist in the world, but a DB entry that does not have a source object will still attempt to set on stage the new object
//Maybe add trigger to DB so if a dead character is in the way, block the change
//DB_MOO_Assault_DynamicObject((ITEM)_SourceItem, (ITEM)_DynamicItem, (TRIGGER)_ItemTrigger)
//REGION Dynamic Objects
//Bazaar
DB_MOO_Assault_DynamicObject(NULL_00000000-0000-0000-0000-000000000000, (ITEM)S_MOO_AssaultCastleRubble_06_0a8d6ceb-2d2e-45bd-87ce-8db5bd1f8fcd);
DB_MOO_Assault_DynamicObject(NULL_00000000-0000-0000-0000-000000000000, (ITEM)S_MOO_AssaultCastleRubble_01_b81033fc-8db5-4c73-8747-80d0ab710533);
DB_MOO_Assault_DynamicObject(NULL_00000000-0000-0000-0000-000000000000, (ITEM)S_MOO_AssaultCastleRubble_03_858f5ef9-52c9-440e-8c81-b966790a873d);
DB_MOO_Assault_DynamicObject(NULL_00000000-0000-0000-0000-000000000000, (ITEM)S_MOO_AssaultCastleRubble_017_29e89fed-e7e9-41d0-9f53-6607415d2ac4);
DB_MOO_Assault_DynamicObject(NULL_00000000-0000-0000-0000-000000000000, (ITEM)S_MOO_AssaultCastleRubble_02_b5b90f45-efa0-4a34-9589-90530a31be6c);
DB_MOO_Assault_DynamicObject(NULL_00000000-0000-0000-0000-000000000000, (ITEM)S_MOO_AssaultCastleRubble_09_e6d9e9fa-5cbf-4c4f-a834-b789610ddab2);
DB_MOO_Assault_DynamicObject(NULL_00000000-0000-0000-0000-000000000000, (ITEM)S_MOO_AssaultCastleRubble_07_9b91e6d3-d7c3-49bc-a8c8-aac4fd17da40);
DB_MOO_Assault_DynamicObject(NULL_00000000-0000-0000-0000-000000000000, (ITEM)S_MOO_AssaultCastleRubble_014_cbe47788-8f11-4c57-a4be-2560ebbd95e1);
DB_MOO_Assault_DynamicObject(NULL_00000000-0000-0000-0000-000000000000, (ITEM)S_MOO_AssaultCastleRubble_015_4964cc74-cd64-4029-b9c0-794e6f7c8bf0);
DB_MOO_Assault_DynamicObject(NULL_00000000-0000-0000-0000-000000000000, (ITEM)S_MOO_AssaultCastleRubble_012_1baae7ab-df3b-454f-8f14-bf370656c7dc);
//Guard Room
DB_MOO_Assault_DynamicObject((ITEM)S_MOO_AssaultTable_A_05298ac7-4869-40d6-b4d5-ed9a5d1d2f71,(ITEM)S_MOO_AssaultTable_B_cd8ebd07-76d5-4ad7-aadb-20530a0a5ac1);
DB_MOO_Assault_DynamicObject((ITEM)S_MOO_AssaultCandleStick_A_938615af-feff-4470-b2bb-c6acedecec62,(ITEM)S_MOO_AssaultCandleStick_B_c7efa9e8-899c-4f11-b4e1-ef96f7848770);
DB_MOO_Assault_DynamicObject(NULL_00000000-0000-0000-0000-000000000000, (ITEM)S_MOO_AssaultCastleRubble_023_6319b204-89be-4a41-ab8e-568c7d890818);
DB_MOO_Assault_DynamicObject(NULL_00000000-0000-0000-0000-000000000000, (ITEM)S_MOO_AssaultCastleRubble_020_bf467c6a-c990-41e3-9e16-6c1d7517ff08);
DB_MOO_Assault_DynamicObject(NULL_00000000-0000-0000-0000-000000000000, (ITEM)S_MOO_AssaultCastleRubble_019_cce80139-83b8-47eb-af10-3aaf815630b2);
DB_MOO_Assault_DynamicObject(NULL_00000000-0000-0000-0000-000000000000, (ITEM)S_MOO_AssaultCastleRubble_04_20404ac4-67fd-43e6-afef-a6060253596e);
//Kitchen
DB_MOO_Assault_DynamicObject(NULL_00000000-0000-0000-0000-000000000000, (ITEM)S_MOO_AssaultCastleRubble_022_c6d11cbf-511a-421f-8855-63a9b9ee3c80);
DB_MOO_Assault_DynamicObject(NULL_00000000-0000-0000-0000-000000000000, (ITEM)S_MOO_AssaultCastleRubble_021_36179ac2-82a8-44b3-9f74-607d5a257881);
//Throne Room
DB_MOO_Assault_DynamicObject(NULL_00000000-0000-0000-0000-000000000000, (ITEM)S_MOO_AssaultCastleRubble_010_7acd9e43-2f45-451d-adb8-f127fe65c5fd);
DB_MOO_Assault_DynamicObject(NULL_00000000-0000-0000-0000-000000000000, (ITEM)S_MOO_AssaultCastleRubble_013_7873ffb5-6a8b-41c6-a398-988d8f8a6e94);
DB_MOO_Assault_DynamicObject(NULL_00000000-0000-0000-0000-000000000000, (ITEM)S_MOO_AssaultCastleRubble_011_bb4617a3-1da4-494d-9f04-6324b5d2d9cc);
DB_MOO_Assault_DynamicObject(NULL_00000000-0000-0000-0000-000000000000, (ITEM)S_MOO_AssaultCastleRubble_05_e766a097-bcb4-4c02-839a-662e610c27e5);
DB_MOO_Assault_DynamicObject(NULL_00000000-0000-0000-0000-000000000000, (ITEM)S_MOO_AssaultCastleRubble_018_e07b3acc-d7c4-405f-8f9f-f71331b70dd3);
//Beer Room
DB_MOO_Assault_DynamicObject(NULL_00000000-0000-0000-0000-000000000000, (ITEM)S_MOO_AssaultCastleRubble_016_42c195dc-c835-4176-a53f-3e034fea36bb);
DB_MOO_Assault_DynamicObject(NULL_00000000-0000-0000-0000-000000000000, (ITEM)S_MOO_AssaultCastleRubble_08_7a171aae-4553-42c2-8afc-1a90c5ca46be);
//Stairway
DB_MOO_Assault_DynamicObject((ITEM)S_MOO_AssaultDesk_A_7cf3c37f-3304-4038-a155-959eb9b0f1f8,(ITEM)S_MOO_AssaultDesk_B_579f71a5-2611-4d72-85b6-b868745a9010);
DB_MOO_Assault_DynamicObject((ITEM)S_MOO_AssaultBookrow_A_9ad4888d-543c-4ee9-88d0-8508c649e853,(ITEM)S_MOO_AssaultBookrow_B_413fa30d-4bf3-4237-a043-5fc267f668e3);

PROC_MOO_Assault_SetOffStageDynamicItems();
//END_REGION

//Triggers in which radiant fire surface will be created at the start of the assault. (currently using normal fire till new surface is made)
//REGION Fire Surface Triggers
//DB_MOO_Assault_FireSurfacePoints(_SourcePoint, _Radius)
DB_MOO_Assault_FireSurfacePoints((TRIGGER)S_MOO_FireSurfacePoint_001_bda2a2c6-ccb7-4c78-87c0-5a445029b871, 2.0);
DB_MOO_Assault_FireSurfacePoints(S_MOO_FireSurfacePoint_002_1c63db3b-d079-493c-9b00-504151d5b82a, 3.0);
DB_MOO_Assault_FireSurfacePoints(S_MOO_FireSurfacePoint_003_936662ec-63a6-45b1-95f1-b59c79476578, 3.0);
DB_MOO_Assault_FireSurfacePoints(S_MOO_FireSurfacePoint_004_9ecf89f8-47a9-4fca-a626-7dfdc388e676, 3.0);
DB_MOO_Assault_FireSurfacePoints(S_MOO_FireSurfacePoint_005_2e032da5-0b16-4bc8-ad60-791ffdbc6a61, 3.0);
DB_MOO_Assault_FireSurfacePoints(S_MOO_FireSurfacePoint_006_365ad3ca-6280-49f2-a198-6fabb18886a6, 4.0);
DB_MOO_Assault_FireSurfacePoints(S_MOO_FireSurfacePoint_007_0fd3f422-d2ad-4a19-ac91-59563ca54063, 3.0);
DB_MOO_Assault_FireSurfacePoints(S_MOO_FireSurfacePoint_008_f833653e-0dfc-4940-afd3-61ccb12b0b68, 3.0);
DB_MOO_Assault_FireSurfacePoints(S_MOO_FireSurfacePoint_009_4272657a-ae7c-451d-b15f-bdf7d857907d, 3.0);
DB_MOO_Assault_FireSurfacePoints(S_MOO_FireSurfacePoint_010_fce376e1-9537-4eae-be20-bc23fab70569, 3.0);
DB_MOO_Assault_FireSurfacePoints(S_MOO_FireSurfacePoint_011_bf39c294-7ed2-4a0e-81b5-7b93def4f23c, 4.0);
DB_MOO_Assault_FireSurfacePoints(S_MOO_FireSurfacePoint_012_7626505f-ec85-4765-8a0d-d42ad9d3045d, 3.0);
DB_MOO_Assault_FireSurfacePoints(S_MOO_FireSurfacePoint_013_1d879b63-318e-4ed4-8300-8df82ebca91a, 3.0);
DB_MOO_Assault_FireSurfacePoints(S_MOO_FireSurfacePoint_014_cfd8af64-6d8c-4002-b8d5-dcf3c6506c77, 3.0);
DB_MOO_Assault_FireSurfacePoints(S_MOO_FireSurfacePoint_015_82eba6f8-057f-4c84-9763-2bd54a3ae346, 3.0);
DB_MOO_Assault_FireSurfacePoints(S_MOO_FireSurfacePoint_016_652a7f03-8c5a-4761-b802-94a38cdc91e3, 3.0);
DB_MOO_Assault_FireSurfacePoints(S_MOO_FireSurfacePoint_017_740d49c6-b91d-4349-94e5-ab729170c5ee, 2.0);
DB_MOO_Assault_FireSurfacePoints(S_MOO_FireSurfacePoint_018_0aeecd40-0d0c-4f95-89d8-efd058fff0eb, 2.0);
DB_MOO_Assault_FireSurfacePoints(S_MOO_FireSurfacePoint_019_85b9b023-2349-4a18-8aa1-e316b051e9b4, 2.0);
DB_MOO_Assault_FireSurfacePoints(S_MOO_FireSurfacePoint_020_b0c9bc2b-916d-4e8d-95de-3bf1c5bb6594, 2.0);
DB_MOO_Assault_FireSurfacePoints(S_MOO_FireSurfacePoint_021_45c2f6ce-0be7-4616-bf25-0c519b10cee7, 1.5);
DB_MOO_Assault_FireSurfacePoints(S_MOO_FireSurfacePoint_022_0aa05fba-df4a-46d9-b0dd-229b5b00a326, 2.0);
DB_MOO_Assault_FireSurfacePoints(S_MOO_FireSurfacePoint_023_509de03f-84b0-4f5b-a78e-6b31d69a84fb, 2.0);
DB_MOO_Assault_FireSurfacePoints(S_MOO_FireSurfacePoint_024_12424f41-511e-421c-98f8-c78a8bc3af6a, 3.0);
DB_MOO_Assault_FireSurfacePoints(S_MOO_FireSurfacePoint_025_016d9d7e-b6c1-4a39-b30a-e5c5f2dd9cc1, 2.5);
DB_MOO_Assault_FireSurfacePoints(S_MOO_FireSurfacePoint_026_6dc760d6-db08-4229-9a9a-b71edc73a1c6, 4.0);
//END_REGION

//Some select objects that will be destroyed on Assault start to add to the overall destruction
//REGION Destroyed Objects
DB_MOO_Assault_DestroyItems((ITEM)S_MOO_AssaultDestroyObject_001_2d7643dd-c2b0-4282-b2a3-ee6581506bd6);
DB_MOO_Assault_DestroyItems((ITEM)S_MOO_AssaultDestroyObject_002_cb91cb48-327a-432a-8773-0076112568c3);
DB_MOO_Assault_DestroyItems((ITEM)S_MOO_AssaultDestroyObject_003_564fd93f-6960-475e-91e3-cc9dc6800dc1);
DB_MOO_Assault_DestroyItems((ITEM)S_MOO_AssaultDestroyObject_005_a0569e34-cf09-4593-956a-e227a111770d);
DB_MOO_Assault_DestroyItems((ITEM)S_MOO_AssaultDestroyObject_004_285988e7-3305-42ed-b574-0d8dfa2dad60);
//DB_MOO_Assault_DestroyItems((ITEM)S_MOO_AssaultDestroyObject_007_cc3675f0-9803-4309-a31f-a9e96f7c5e56); Because it's rotated on x-axis, destruction loads in vertical direction
DB_MOO_Assault_DestroyItems((ITEM)S_MOO_AssaultDestroyObject_006_49f6abe2-f72a-4ff6-b44b-9358aab9e4ee);
DB_MOO_Assault_DestroyItems((ITEM)S_MOO_AssaultDestroyObject_008_3725057c-befb-4123-ac8c-5da4c0ad60f5);
DB_MOO_Assault_DestroyItems((ITEM)S_MOO_AssaultDestroyObject_009_ab3d7db6-06b4-43f1-9623-5b718730471b);
DB_MOO_Assault_DestroyItems((ITEM)S_MOO_AssaultDestroyObject_011_54cf9934-be56-4333-9a9d-bf28044123fd);
DB_MOO_Assault_DestroyItems((ITEM)S_MOO_AssaultDestroyObject_010_0214e9f1-b40d-4f13-9076-71a883e623d9);
DB_MOO_Assault_DestroyItems((ITEM)S_MOO_ZhentTable_c8ec22cb-b2c9-4543-9c08-8f54031baa67);
DB_MOO_Assault_DestroyItems((ITEM)S_MOO_NoZhentTable_cea6b55e-eea9-4f7e-8fcf-ac5665e0d36d);
//END_REGION

//REGION Prison Enemies

DB_MOO_Assault_PrisonEnemies((CHARACTER)S_MOO_Assault_PrisonNecromite_000_e6f9b96e-9579-4a5c-9790-defb0384be3f);
DB_MOO_Assault_PrisonEnemies((CHARACTER)S_MOO_Assault_PrisonNecromite_002_1774a111-d852-4193-8311-562615602a22);
DB_MOO_Assault_PrisonEnemies((CHARACTER)S_MOO_Assault_PrisonNecromite_003_b3b54ec6-3e86-4978-ba8f-0d8e911d1b01);
DB_MOO_Assault_PrisonEnemies((CHARACTER)S_MOO_Assault_PrisonNecromite_005_99485b87-b9d1-43b5-aebe-e3a727b706a9);
DB_MOO_Assault_PrisonEnemies((CHARACTER)S_MOO_Assault_PrisonNecromite_006_9d3ab8f5-b4db-441e-849b-61ef1d64ea68);
DB_MOO_Assault_PrisonEnemies((CHARACTER)S_MOO_Assault_PrisonNecromite_007_7cd5ac9e-5511-4f9e-ac66-b63a77d344cf);
DB_MOO_Assault_PrisonEnemies((CHARACTER)S_MOO_Assault_PrisonNecromite_008_f87f296d-2c04-4527-8531-f87fc5bd7336);
DB_MOO_Assault_PrisonEnemies((CHARACTER)S_MOO_Assault_PrisonNecromite_009_63db7ebc-a3cd-40e8-83cf-e45d9cdd74fa);
DB_MOO_Assault_PrisonEnemies((CHARACTER)S_MOO_Assault_PrisonNecromite_010_917e92cd-0ccc-4c87-b76e-df2896ae74d7);
DB_MOO_Assault_PrisonEnemies((CHARACTER)S_MOO_Assault_PrisonNecromite_011_de92d007-5efa-4de5-9a8c-1025fb94a6da);
DB_MOO_Assault_PrisonEnemies((CHARACTER)S_MOO_Assault_PrisonNecromite_013_c6300094-1768-463b-b73b-e2e4715f8418);
DB_MOO_Assault_PrisonEnemies((CHARACTER)S_MOO_Assault_PrisonNecromite_015_1be1a7cb-1d5b-41eb-a6c7-b17c7c3ba54f);
DB_MOO_Assault_PrisonEnemies((CHARACTER)S_MOO_Assault_PrisonMasterOfSouls_01_344388be-2ae5-4296-93f9-0c8f3451f436);
DB_MOO_Assault_PrisonEnemies((CHARACTER)S_MOO_Assault_PrisonMasterOfSouls_02_11570320-e45b-480c-a92a-4734f560edcf);
DB_MOO_Assault_PrisonEnemies((CHARACTER)S_MOO_Assault_PrisonMasterOfSouls_03_67e8eb20-2428-4c24-bdbd-bb19b962182a);
DB_MOO_Assault_PrisonEnemies((CHARACTER)S_MOO_Assault_PrisonDeathShepard_01_8f1f3be9-d6be-4348-be20-6c291213af78);

DB_MOO_Assault_PrisonSummonHelpers((ITEM)S_MOO_Assault_PrisonSummonHelper_000_f9adfe54-64bf-40f9-aa69-8f94023d87cf);
DB_MOO_Assault_PrisonSummonHelpers((ITEM)S_MOO_Assault_PrisonSummonHelper_001_a9c92f2e-6712-4195-ab51-8ee2b85ea53b);
DB_MOO_Assault_PrisonSummonHelpers((ITEM)S_MOO_Assault_PrisonSummonHelper_002_c9379c03-18e4-4116-8215-7eee8f2039b8);
DB_MOO_Assault_PrisonSummonHelpers((ITEM)S_MOO_Assault_PrisonSummonHelper_003_4a5f6dfb-9391-422f-a755-c6217ff0eda8);
DB_MOO_Assault_PrisonSummonHelpers((ITEM)S_MOO_Assault_PrisonSummonHelper_004_cccbc4c8-5a4d-431c-958f-ac3bcb122dc6);
DB_MOO_Assault_PrisonSummonHelpers((ITEM)S_MOO_Assault_PrisonSummonHelper_005_9f3bca06-e76d-4b2e-95f8-4caca30fb250);
DB_MOO_Assault_PrisonSummonHelpers((ITEM)S_MOO_Assault_PrisonSummonHelper_006_10035e21-51d6-4413-92a3-9107680abf10);
DB_MOO_Assault_PrisonSummonHelpers((ITEM)S_MOO_Assault_PrisonSummonHelper_007_d9486745-b5e7-4b43-8b0a-678e1d3392c3);
DB_MOO_Assault_PrisonSummonHelpers((ITEM)S_MOO_Assault_PrisonSummonHelper_008_247bbbbd-c594-4fd3-9714-111d28483e6b);
DB_MOO_Assault_PrisonSummonHelpers((ITEM)S_MOO_Assault_PrisonSummonHelper_009_31c4c60c-3654-4bec-91a9-ce673745bc7d);
DB_MOO_Assault_PrisonSummonHelpers((ITEM)S_MOO_Assault_PrisonSummonHelper_010_49fef95d-330b-4c8a-a826-92ee7bc96813);
DB_MOO_Assault_PrisonSummonHelpers((ITEM)S_MOO_Assault_PrisonSummonHelper_011_0c584d5c-499a-4ba8-ae46-5f6be1ab0f63);
DB_MOO_Assault_PrisonSummonHelpers((ITEM)S_MOO_Assault_PrisonSummonHelper_012_d26b3388-7155-467f-aa29-64de8ec154a6);

//END_REGION

KBSECTION
//REGION Debug

IF
TextEvent("mooassault_flamingfist")
THEN
SetFlag(HAV_HavenOutcasts_State_FlamingFistsInHaven_f8e5cd60-867a-4584-8c50-1ff917357acc);

IF
TextEvent("mooassault_noflamingfist")
THEN
ClearFlag(HAV_HavenOutcasts_State_FlamingFistsInHaven_f8e5cd60-867a-4584-8c50-1ff917357acc);

IF
TextEvent("mooassault_alive") //"oe mooassault_alive 1"
AND
GetTextEventParamInteger(1, 1) //
THEN
SetFlag(HAV_EnteringHaven_State_GainedAccess_07c776da-353a-9050-e9be-c42d51a99412);
SetFlag(HAV_HavenOutcasts_State_FlamingFistsInHaven_f8e5cd60-867a-4584-8c50-1ff917357acc);

IF
TextEvent("mooassault_alive")
THEN
SetFlag(MOO_Assault_Debug_StartIsobelAlive_938a437c-2d45-44d1-983d-c3c17238843b);

IF
DB_GlobalFlag(MOO_Assault_Debug_StartIsobelAlive_938a437c-2d45-44d1-983d-c3c17238843b)
THEN
PROC_MOO_Assault_DEBUG_InitAssault();

IF
TextEvent("mooassault_dead") 
THEN
SetFlag(MOO_Assault_Debug_StartIsobelDead_a1aa4535-252a-45ec-b341-5695970a4ad1);

IF
DB_GlobalFlag(MOO_Assault_Debug_StartIsobelDead_a1aa4535-252a-45ec-b341-5695970a4ad1)
THEN
Die(S_GLO_Isobel_263bfbfc-6160-46f4-a9e1-1089cdb5c211, DEATHTYPE.Physical, NULL_00000000-0000-0000-0000-000000000000, 0, 1, 0.0);
PROC_State_Progress(S_HAV_Haven_SUB_6ac001f4-9c56-4a1b-963d-a509e158ffab, "HAV_Mood", "HAV_Mood_State_Siege");
PROC_MOO_Assault_DEBUG_InitAssault();

IF
TextEvent("mooassault_tadpole") 
THEN
SetFlag(MOO_Assault_Debug_StartIsobelTadpole_74830d17-daeb-431b-85da-2e9dbb1fe064);

IF
DB_GlobalFlag(MOO_Assault_Debug_StartIsobelTadpole_74830d17-daeb-431b-85da-2e9dbb1fe064)
THEN
PROC_State_Progress(S_GLO_Isobel_263bfbfc-6160-46f4-a9e1-1089cdb5c211, "HAV_Isobel", "HAV_Isobel_State_AtMoonrise");
PROC_MOO_ZrellBriefing_SetupFlamingSpy();
SysCompleteGoal("Act2_HAV_TakingIsobel_FlamingSpy");
PROC_MOO_Assault_DEBUG_InitAssault();

PROC
PROC_MOO_Assault_DEBUG_InitAssault()
AND
GetHostCharacter(_Player)
THEN
PROC_SCL_General_BlockReturnToAct1();
TeleportTo(_Player, S_MOO_TowerExterior_Waypoint_Pos_8fd66a2b-7b29-44f9-b6dd-cd957c91d19c,"MOO_Assault_DEBUG_InitAssault_Finished");
PROC_MOO_Execution_ForceResolve();
SetFlag(SHA_NightsongPrison_State_NightsongFreed_24f27b06-6665-79ed-d7bf-e4bf356ca2fa);
DB_DEBUG_MOO_Assault_ReadyNightsong(1);

//Kill named Harpers/FF to be replaced by backup characters
IF
TextEvent("mooassault_killnamedsupport")
AND
GetHostCharacter(_Player)
THEN
Die(S_HAV_HavenOutcasts_DockGuard_Left_Ranger_3a856945-e4a5-4214-89af-84a2b50789d8, DEATHTYPE.Physical, 1);
Die(S_HAV_HavenOutcasts_BarricadeRunners_Ranger_572690b6-68f5-4e7b-807b-b9376b658b65, DEATHTYPE.Physical, 1);
Die(S_HAV_HavenOutcasts_DockGuard_Ranger_a0f9d7cb-d87c-4af8-87fa-d273a8ecba93, DEATHTYPE.Physical, 1);
Die(S_HAV_HavenOutcasts_FountainGuards_Melee_2_271478dd-7efb-4ca7-b40c-593bbea91a85, DEATHTYPE.Physical, 1);
Die(S_HAV_HavenOutcasts_FountainGuards_Melee_1_3e2db417-c434-4f08-ab6a-dd60c8e9f3b5, DEATHTYPE.Physical, 1);
DebugText(_Player, "Killed supporting Harper/FF, replaced by backup for MOO Assault");

//Kill all Bazaar enemies so none will be present during the assault
IF
TextEvent("mooassault_killbazaar")
AND
DB_MOO_AssaultPositions(_Char, _Point, "MOO_Assault_BazaarEnemies")
THEN
Die(_Char, DEATHTYPE.Physical, 1);

//Kill all Throne Room enemies so none will be present during the assault
IF
TextEvent("mooassault_killthroneroom")
AND
DB_MOO_AssaultPositions(_Char, _Point, "MOO_Assault_ThroneRoomEnemies")
THEN
Die(_Char, DEATHTYPE.Physical, 1);

//Kill the dead before they're dead
IF
TextEvent("mooassault_deaddead")
AND
DB_MOO_AssaultPositions(_Char, _Point, "MOO_Assault_DeadEnemy")
THEN
Die(_Char, DEATHTYPE.Physical, 1);

IF
TextEvent("mooassault_deaddead")
AND
DB_MOO_AssaultPositions(_Char, _Point, "MOO_Assault_DeadEnemy_Radiant")
THEN
Die(_Char, DEATHTYPE.Physical, 1);

// This is meant to be used to iterate on the characters positions (it shamelessly breaks the characters)
IF
TextEvent("mooassault_chartopos")
AND
DB_MOO_AssaultPositions(_Char, _Point, _)
AND
_Point != NULL_00000000-0000-0000-0000-000000000000
THEN
PROC_SetAnubisConfig(_Char, "Dummy");
SetCanFight(_Char, 0);
TeleportTo(_Char, _Point);
SetOnStage(_Char, 1);
LookFromTrigger(_Char, _Point, 1);

IF
TextEvent("mooassault_chartopos")
AND
DB_MOO_AssaultPositions(_Char, NULL_00000000-0000-0000-0000-000000000000, _)
THEN
SetOnStage(_Char, 0);

IF
TextEvent("mooassault_toggleitems")
AND
DB_MOO_Assault_DynamicObject(_SourceItem, _NewItem)
AND
IsOnStage(_SourceItem, _SourceBool)
AND
IsOnStage(_NewItem, _NewBool)
AND
DB_Negate(_SourceBool, _SourceBoolInvert)
AND
DB_Negate(_NewBool, _NewBoolInvert)
AND
GetHostCharacter(_Player)
THEN
SetOnStage(_SourceItem, _SourceBoolInvert);
SetOnStage(_NewItem, _NewBoolInvert);
DebugText(_Player, "Assault Dynamic Item Toggled");

IF
TextEvent("mooassault_toggleitems")
AND
DB_MOO_Assault_DynamicObject(NULL_00000000-0000-0000-0000-000000000000, _NewItem)
AND
IsOnStage(_NewItem, _NewBool)
AND
DB_Negate(_NewBool, _NewBoolInvert)
AND
GetHostCharacter(_Player)
THEN
SetOnStage(_NewItem, _NewBoolInvert);
DebugText(_Player, "Assault Dynamic Item Toggled");

//set the party at the top of the stairs to the prison (for combat testing
IF
TextEvent("mooassault_prisonentrance")
THEN
DB_MOO_Assault_DEBUG_GoToPrisonEntrance(1);
PROC_MOO_Assault_DEBUG_InitAssault();

IF
EntityEvent((CHARACTER)_Player,"MOO_Assault_DEBUG_InitAssault_Finished")
AND
DB_MOO_Assault_DEBUG_GoToPrisonEntrance(1)
AND
GetHostCharacter(_Player)
THEN
TeleportTo(_Player,S_MOO_GroundFloorArrivalPos_4d07d42c-4701-4c7e-ad7a-847540281d37);
NOT DB_MOO_Assault_DEBUG_GoToPrisonEntrance(1);

//END_REGION

//REGION PATCH

PROC
PROC_ApplySavegamePatches()
AND
QRY_BG3_SavegameIsOlderThan(4,0,3,0)
THEN
PROC_MOO_Assault_PATCH_FixSwappedCharacters();

//Bazaar Ogres
PROC
PROC_MOO_Assault_PATCH_FixSwappedCharacters()
AND
DB_PermaDefeated(S_MOO_ExecutionerOgre_234ee81c-4fea-4aa5-adb4-670a73fdc511)
AND
NOT DB_PermaDefeated(S_MOO_WallTentacle_Ogress_c3b872b8-1937-4255-9d0c-29e490afd033)
AND
DB_MOO_AssaultPositions(S_MOO_WallTentacle_Ogress_c3b872b8-1937-4255-9d0c-29e490afd033, _Trigger, _Group)
AND
_Group != "MOO_Assault_BazaarEnemies"
THEN
NOT DB_MOO_AssaultPositions(S_MOO_WallTentacle_Ogress_c3b872b8-1937-4255-9d0c-29e490afd033, _Trigger, _Group);
DB_MOO_AssaultPositions(S_MOO_WallTentacle_Ogress_c3b872b8-1937-4255-9d0c-29e490afd033, _Trigger, "MOO_Assault_BazaarEnemies");

//Bazaar guard & Prison guard
PROC
PROC_MOO_Assault_PATCH_FixSwappedCharacters()
AND
DB_PermaDefeated(S_MOO_BazaarGuard_000_1d5cdba7-f2e4-4568-9bb8-94abcf9081d6)
AND
NOT DB_PermaDefeated(S_MOO_WarehouseGuard_000_d161fc7f-801c-463c-bdbd-f638c8499361)
AND
DB_MOO_AssaultPositions(S_MOO_WarehouseGuard_000_d161fc7f-801c-463c-bdbd-f638c8499361, _Trigger, _Group)
AND
_Group != "MOO_Assault_BazaarEnemies"
THEN
NOT DB_MOO_AssaultPositions(S_MOO_WarehouseGuard_000_d161fc7f-801c-463c-bdbd-f638c8499361, _Trigger, _Group);
DB_MOO_AssaultPositions(S_MOO_WarehouseGuard_000_d161fc7f-801c-463c-bdbd-f638c8499361, _Trigger, "MOO_Assault_BazaarEnemies");

//Throne room guards
PROC
PROC_MOO_Assault_PATCH_FixSwappedCharacters()
AND
DB_PermaDefeated(S_MOO_ExecutionGuard_004_d99bec80-06ca-4d81-95cd-348efd9092fc)
AND
NOT DB_PermaDefeated(S_MOO_ExecutionGuard_003_a4752cef-326a-49d7-91dd-a9de10d6539b)
AND
DB_MOO_AssaultPositions(S_MOO_ExecutionGuard_003_a4752cef-326a-49d7-91dd-a9de10d6539b, _Trigger, _Group)
AND
_Group != "MOO_Assault_ThroneRoomEnemies"
THEN
NOT DB_MOO_AssaultPositions(S_MOO_ExecutionGuard_003_a4752cef-326a-49d7-91dd-a9de10d6539b, _Trigger, _Group);
DB_MOO_AssaultPositions(S_MOO_ExecutionGuard_003_a4752cef-326a-49d7-91dd-a9de10d6539b, _Trigger, "MOO_Assault_ThroneRoomEnemies");

//END_REGION

//REGION Dynamic and Destory Items
PROC
PROC_MOO_Assault_SetOffStageDynamicItems()
AND
DB_MOO_Assault_DynamicObject(_, _Item)
THEN
SetOnStage(_Item, 0);

//If the source item has been moved around in any way or destroyed, clear it it will be ignored for the assault set-up
IF
DB_Destroyed(_Item)
THEN
PROC_MOO_Assault_RemoveItem((ITEM)_Item);

IF
MovedBy(_Item, _)
THEN
PROC_MOO_Assault_RemoveItem((ITEM)_Item);

IF
AddedTo(_Item, _, _)
THEN
PROC_MOO_Assault_RemoveItem((ITEM)_Item);

PROC
PROC_MOO_Assault_RemoveItem((ITEM)_SourceItem)
AND
DB_MOO_Assault_DynamicObject(_SourceItem, _DynamicItem)
THEN
NOT DB_MOO_Assault_DynamicObject(_SourceItem, _DynamicItem);

PROC
PROC_MOO_Assault_RemoveItem((ITEM)_Item)
AND
DB_MOO_Assault_DestroyItems(_Item)
THEN
NOT DB_MOO_Assault_DestroyItems(_Item);

//END_REGION

IF
DB_MOO_Assault_BazaarEnemyCount(_Char)
THEN
DB_NOOP(1);

IF
DB_MOO_AssaultLocations(_Trigger)
THEN
DB_NOOP(1);

IF
DB_MOO_Assault_DeadEnemyCount(_Char)
THEN
DB_NOOP(1);

IF
DB_MOO_Assault_PrisonEnemies(_Char)
THEN
PROC_SetOnStage(_Char,0);
SetCombatGroupID(_Char,"MOO_Assault_PrisonEnemies");

IF
DB_MOO_Assault_PrisonSummonHelpers((ITEM)_Helper)
THEN
AiAddInterestingItem((CHARACTER)S_MOO_Assault_PrisonMasterOfSouls_01_344388be-2ae5-4296-93f9-0c8f3451f436,_Helper);
AiAddInterestingItem((CHARACTER)S_MOO_Assault_PrisonMasterOfSouls_02_11570320-e45b-480c-a92a-4734f560edcf,_Helper);
AiAddInterestingItem((CHARACTER)S_MOO_Assault_PrisonMasterOfSouls_03_67e8eb20-2428-4c24-bdbd-bb19b962182a,_Helper);


//REGION Situational Assault Character Additions
PROC
PROC_State_Progress(S_SCL_Drider_aa59ce01-3d2e-42e8-a539-c07e0ea292ab, "SCL_TheDrider", "ReachedMoonriseTower")
THEN
PROC_MOO_Assault_AddDriderCaravan();
PROC_MOO_NightsongDeath_AddDriderCaravan();

PROC
PROC_MOO_Assault_AddDriderCaravan()
AND
DB_SCL_Drider_CaravanMemberInTower(_Char)
AND
NOT DB_PermaDefeated(_Char)
AND
_Char != S_SCL_Drider_aa59ce01-3d2e-42e8-a539-c07e0ea292ab
THEN
DB_MOO_AssaultPositions((CHARACTER)_Char,(TRIGGER)NULL_00000000-0000-0000-0000-000000000000, "");

PROC
PROC_MOO_Assault_AddDriderCaravan()
AND
NOT DB_PermaDefeated(S_SCL_Drider_aa59ce01-3d2e-42e8-a539-c07e0ea292ab)
THEN
DB_MOO_AssaultPositions((CHARACTER)S_SCL_Drider_aa59ce01-3d2e-42e8-a539-c07e0ea292ab,(TRIGGER)S_SCL_Drider_ChapelPoint_b348fc80-b45d-4129-926b-9ad00acfcee5, "MOO_Assault_RooftopEnemies");
//END_REGION
//REGION Manage Defeated Characters
//If HAV is destroyed, remove ALL Harpers and Flaming Fist from assault (this includes generics)
IF
DB_GlobalFlag(HAV_Siege_State_NoProtection_2da0dbf1-88ca-4cab-9c8f-ee8921822958)
THEN
PROC_MOO_Assault_RemoveHAVAllies();

PROC
PROC_MOO_Assault_RemoveHAVAllies()
AND
DB_MOO_Assault_AllyGroups(_AllyGroup)
AND
_AllyGroup != "MOO_Assault_GnollAlly" 
AND
DB_MOO_AssaultPositions(_Ally, _Point, _AllyGroup)
THEN
NOT DB_MOO_AssaultPositions(_Ally, _Point, _AllyGroup);

PROC
PROC_MOO_Assault_RemoveHAVAllies()
AND
DB_MOO_Assault_DeadAllyGroups(_AllyGroup)
AND
DB_MOO_AssaultPositions(_Ally, _Point, _AllyGroup)
THEN
NOT DB_MOO_AssaultPositions(_Ally, _Point, _AllyGroup);

PROC
PROC_MOO_Assault_RemoveHAVAllies()
AND
DB_MOO_AssaultHarperReplacements(_Ally)
THEN
NOT DB_MOO_AssaultHarperReplacements(_Ally);

PROC
PROC_MOO_Assault_RemoveHAVAllies()
AND
DB_MOO_Assault_AllyCombatReadyPositions(_Ally, _ReadyPoint)
THEN
NOT DB_MOO_Assault_AllyCombatReadyPositions(_Ally, _ReadyPoint);

PROC
PROC_MOO_Assault_RemoveHAVAllies()
AND
DB_MOO_Assault_AllyMainFloorPositions(_Ally, _TowerPoint)
THEN
NOT DB_MOO_Assault_AllyMainFloorPositions(_Ally, _TowerPoint);

PROC
PROC_MOO_Assault_RemoveHAVAllies()
AND
DB_MOO_AssaultFlamingFistReplacements(_Ally)
THEN
NOT DB_MOO_AssaultFlamingFistReplacements(_Ally);

PROC
PROC_MOO_Assault_RemoveHAVAllies()
AND
DB_MOO_Assault_PrisonDefenders(_FlamingFist, _PrisonPoint)
THEN
NOT DB_MOO_Assault_PrisonDefenders(_FlamingFist, _PrisonPoint);

PROC
PROC_MOO_Assault_RemoveHAVAllies()
AND
NOT DB_GlobalFlag(MOO_Assault_State_AllActiveHarpersDefeated_93c03711-7efc-44fb-b4ae-736606afe843)
THEN
PROC_GlobalSetFlagAndCache(MOO_Assault_State_AllActiveHarpersDefeated_93c03711-7efc-44fb-b4ae-736606afe843);

//If a named Harper/FF is killed before the assault, replace them with a generic
PROC
PROC_StateSet_PermaDefeated((CHARACTER)_Harper)
AND
DB_MOO_AssaultHarperReplacements(_NewHarper)
AND
DB_MOO_AssaultPositions(_Harper, _Point, "MOO_Assault_HarperAlly")
AND
DB_MOO_Assault_AllyCombatReadyPositions(_Harper, _ReadyPoint)
AND
DB_MOO_Assault_AllyMainFloorPositions(_Harper, _TowerPoint)
AND
DB_MOO_Assault_SwarmGroup(_Harper, _Swarm)
THEN
DB_MOO_AssaultPositions(_NewHarper, _Point, "MOO_Assault_HarperAlly");
DB_MOO_Assault_AllyCombatReadyPositions(_NewHarper, _ReadyPoint);
DB_MOO_Assault_AllyMainFloorPositions(_NewHarper, _TowerPoint);
DB_MOO_Assault_SwarmGroup(_NewHarper, _Swarm);
NOT DB_MOO_AssaultPositions(_Harper, _Point, "MOO_Assault_HarperAlly");
NOT DB_MOO_Assault_AllyCombatReadyPositions(_Harper,_ReadyPoint);
NOT DB_MOO_Assault_AllyMainFloorPositions(_Harper, _TowerPoint);
NOT DB_MOO_AssaultHarperReplacements(_NewHarper);
NOT DB_MOO_Assault_SwarmGroup(_Harper, _Swarm);

PROC
PROC_StateSet_PermaDefeated((CHARACTER)_Harper)
AND
DB_MOO_Assault_HarperArrivalSpeakers(_Harper)
AND
QRY_OnlyOnce_Reset("MOO_Assault_SelectFlamingFistReplacement")
AND
DB_MOO_AssaultFlamingFistReplacements(_NewHarper)
AND
QRY_OnlyOnce("MOO_Assault_SelectFlamingFistReplacement")
THEN
NOT DB_MOO_AssaultFlamingFistReplacements(_NewHarper);
NOT DB_MOO_Assault_HarperArrivalSpeakers(_Harper);
DB_MOO_Assault_HarperArrivalSpeakers(_NewHarper);

PROC
PROC_StateSet_PermaDefeated((CHARACTER)_FlamingFist)
AND
DB_MOO_AssaultFlamingFistReplacements(_NewFlamingFist)
AND
DB_MOO_AssaultPositions(_FlamingFist, _Point, "MOO_Assault_FlamingFistAlly")
AND
DB_MOO_Assault_AllyCombatReadyPositions(_FlamingFist, _ReadyPoint)
AND
DB_MOO_Assault_AllyMainFloorPositions(_FlamingFist, _TowerPoint)
AND
DB_MOO_Assault_PrisonDefenders(_FlamingFist, _PrisonPoint)
AND
DB_MOO_Assault_SwarmGroup(_FlamingFist, _Swarm)
THEN
DB_MOO_AssaultPositions(_NewFlamingFist, _Point, "MOO_Assault_FlamingFistAlly");
DB_MOO_Assault_AllyCombatReadyPositions(_NewFlamingFist, _ReadyPoint);
DB_MOO_Assault_AllyMainFloorPositions(_NewFlamingFist, _TowerPoint);
DB_MOO_Assault_PrisonDefenders(_NewFlamingFist, _PrisonPoint);
DB_MOO_Assault_SwarmGroup(_NewFlamingFist, _Swarm);
NOT DB_MOO_AssaultPositions(_FlamingFist, _Point, "MOO_Assault_FlamingFistAlly");
NOT DB_MOO_Assault_AllyCombatReadyPositions(_FlamingFist,_ReadyPoint);
NOT DB_MOO_Assault_AllyMainFloorPositions(_FlamingFist, _TowerPoint);
NOT DB_MOO_Assault_PrisonDefenders(_FlamingFist, _PrisonPoint);
NOT DB_MOO_AssaultFlamingFistReplacements(_NewFlamingFist);
NOT DB_MOO_Assault_SwarmGroup(_FlamingFist, _Swarm);

//If Ogre Glourik (Z'rell's bodyguard) is dead, replace with Mig (Ogre from the guard room)
PROC
PROC_StateSet_PermaDefeated(S_MOO_ExecutionerOgre_234ee81c-4fea-4aa5-adb4-670a73fdc511)
THEN
PROC_MOO_Assault_TrySwapCharacter((CHARACTER)S_MOO_ExecutionerOgre_234ee81c-4fea-4aa5-adb4-670a73fdc511,(CHARACTER)S_MOO_WallTentacle_Ogress_c3b872b8-1937-4255-9d0c-29e490afd033);

//If S_MOO_BazaarGuard_000 is dead, replace with S_MOO_WarehouseGuard_000
PROC
PROC_StateSet_PermaDefeated(S_MOO_BazaarGuard_000_1d5cdba7-f2e4-4568-9bb8-94abcf9081d6)
THEN
PROC_MOO_Assault_TrySwapCharacter((CHARACTER)S_MOO_BazaarGuard_000_1d5cdba7-f2e4-4568-9bb8-94abcf9081d6,(CHARACTER)S_MOO_WarehouseGuard_000_d161fc7f-801c-463c-bdbd-f638c8499361);

//If Execution Guard 004 is killed, replace with Execution Guard 003
PROC
PROC_StateSet_PermaDefeated(S_MOO_ExecutionGuard_004_d99bec80-06ca-4d81-95cd-348efd9092fc)
THEN
PROC_MOO_Assault_TrySwapCharacter((CHARACTER)S_MOO_ExecutionGuard_004_d99bec80-06ca-4d81-95cd-348efd9092fc,(CHARACTER)S_MOO_ExecutionGuard_003_a4752cef-326a-49d7-91dd-a9de10d6539b);

PROC
PROC_MOO_Assault_TrySwapCharacter((CHARACTER)_DeadChar,(CHARACTER)_ReplacementChar)
AND
DB_MOO_AssaultPositions(_DeadChar, _Point1, _Group1)
AND
DB_MOO_AssaultPositions(_ReplacementChar, _Point2, _Group2)
THEN
NOT DB_MOO_AssaultPositions(_DeadChar, _Point1, _Group1);
NOT DB_MOO_AssaultPositions(_ReplacementChar, _Point2, _Group2);
DB_MOO_AssaultPositions(_ReplacementChar, _Point1, _Group1);

PROC
PROC_MOO_Assault_TrySwapCharacter((CHARACTER)_DeadChar,(CHARACTER)_ReplacementChar)
AND
DB_MOO_AssaultJoinBazaarPositions(_DeadChar, _Point)
THEN
NOT DB_MOO_AssaultJoinBazaarPositions(_DeadChar, _Point);
DB_MOO_AssaultJoinBazaarPositions(_ReplacementChar, _Point);

PROC
PROC_StateSet_PermaDefeated((CHARACTER)_Char)
AND
DB_MOO_AssaultPositions(_Char, (TRIGGER)_Point, (STRING)_Group)
THEN
NOT DB_MOO_AssaultPositions(_Char, (TRIGGER)_Point, (STRING)_Group);

PROC
PROC_StateSet_PermaDefeated((CHARACTER)_Char)
AND
DB_MOO_Assault_SwarmGroup(_Char, _Swarm)
THEN
NOT DB_MOO_Assault_SwarmGroup(_Char, _Swarm);
//END_REGION

//REGION Combat ADs
PROC
PROC_StateSet_Defeated(_Char)
AND
DB_MOO_Assault_CombatAD((CHARACTER)_Char, _AD)
THEN
NOT DB_MOO_Assault_CombatAD(_Char, _AD);
//END_REGION
//--- State progress
//Moonrise progressed to a state that allows access to the roof, and this state is not the Audience.
//Act2_MOO_Assault will check to confirm that it's the actual assault state, otherwise it will goal complete as well
//See goal: Act2_MOO_Audience
PROC
PROC_MOO_Audience_Cancelled()
THEN
GoalCompleted;
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "Act2"
