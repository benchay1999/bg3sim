Version 1
SubGoalCombiner SGC_AND
INITSECTION
DB_AutoSaveTrigger(S_END_HighHallInteriorEntrance_AutoSave_319692f0-b47f-4449-8b5c-5c90b69d77c7);

ApplyStatus(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623,"INVULNERABLE_NOT_SHOWN",-1.0,1);
DB_DialogBlockAttackButton((DIALOGRESOURCE)END_HighHallInterior_Nautiloid_3a5cb82c-788a-e0a3-fb7b-8a99fd2c7b23);
DB_DialogBlockTradeButton((DIALOGRESOURCE)END_HighHallInterior_Nautiloid_3a5cb82c-788a-e0a3-fb7b-8a99fd2c7b23);
DB_AddCharactersInTriggerToDialog((DIALOGRESOURCE)END_HighHallInterior_Nautiloid_3a5cb82c-788a-e0a3-fb7b-8a99fd2c7b23,(TRIGGER)S_END_NautiloidCannonPoly_dcf15690-5483-40b2-8753-5d44a40ceb21, 1, 1, 1, 1);
DB_DropMutingStatussesDialog(END_HighHallInterior_Nautiloid_3a5cb82c-788a-e0a3-fb7b-8a99fd2c7b23);

UnloadLevelTemplate(S_END_FallingStatuePlatform_d988f74e-8186-41b2-a096-bf2642411c85);

SetHitpoints(S_END_InteriorBlockingDoor_de05efba-912f-4d1d-ad3b-e8019f2a618b, 26);
SetHitpoints(S_END_FallingStatue_4306e75f-1bf9-4bb7-860d-18dcd3626241, 32);

DB_QRYRTN_END_HighHallInterior_NearestPlayerToSafeRoom((CHARACTER)NULL_00000000-0000-0000-0000-000000000000, 0.0);
DB_QRYRTN_END_HighHallInterior_FurthestPlayerFromSafeRoom((CHARACTER)NULL_00000000-0000-0000-0000-000000000000, 0.0);

DB_END_HighHallInterior_BrainquakePoints((TRIGGER)S_END_InteriorBrainquakePoint_001_2f460e20-232b-41fd-a95c-1888c2c55c09);
DB_END_HighHallInterior_BrainquakePoints((TRIGGER)S_END_InteriorBrainquakePoint_002_444fd65a-de9b-4cd2-bb49-7d50d9242f55);
DB_END_HighHallInterior_BrainquakePoints((TRIGGER)S_END_InteriorBrainquakePoint_003_1a916df0-6f54-4c72-b9a0-750233251e8e);
DB_END_HighHallInterior_BrainquakePoints((TRIGGER)S_END_InteriorBrainquakePoint_004_45ca27fd-459c-4ede-a735-d3d466586449);

NOT DB_END_HighHallInterior_CannonTargets((GUIDSTRING)NULL_00000000-0000-0000-0000-000000000000,(GUIDSTRING)NULL_00000000-0000-0000-0000-000000000000,0.0,0.0,0.0);

//REGION Nautiloid Bombardment - Warning Shot
PROC_TriggerRegisterForParty(S_END_WarningShotPoly_e7b609df-682c-47a3-a6c2-977b0f5e1f81);

DB_END_HighHallInterior_WarningShotTargetTriggers((TRIGGER)S_END_WarningShotTargetSphere_001_6390c9e8-85ca-4327-a4b5-e685ea9e8715);
DB_END_HighHallInterior_WarningShotTargetTriggers((TRIGGER)S_END_WarningShotTargetSphere_002_3a224710-b9d7-477d-a898-16520807e856);
DB_END_HighHallInterior_WarningShotTargetTriggers((TRIGGER)S_END_WarningShotTargetSphere_003_b21bd12f-b61c-4d95-b0ef-b0546accad1d);
DB_END_HighHallInterior_WarningShotTargetTriggers((TRIGGER)S_END_WarningShotTargetSphere_004_6d54aaf3-3d43-4e98-a73f-bcb79e756156);
DB_END_HighHallInterior_WarningShotTargetTriggers((TRIGGER)S_END_WarningShotTargetSphere_005_67ebe80b-5856-4b1c-b0f9-7e105a6a7c41);
DB_END_HighHallInterior_WarningShotTargetTriggers((TRIGGER)S_END_WarningShotTargetSphere_006_48f1d49c-06e9-46f2-8642-7383d2dbb655);
DB_END_HighHallInterior_WarningShotTargetTriggers((TRIGGER)S_END_WarningShotTargetSphere_007_9a723db3-d1b0-4bc7-8c77-df404cc2a57f);
DB_END_HighHallInterior_WarningShotTargetTriggers((TRIGGER)S_END_WarningShotTargetSphere_008_2c6fa539-41fa-4518-9c9b-3273c7ba1089);
DB_END_HighHallInterior_WarningShotTargetTriggers((TRIGGER)S_END_WarningShotTargetSphere_009_4294d12e-2251-4e93-9313-20e577e6faac);
DB_END_HighHallInterior_WarningShotTargetTriggers((TRIGGER)S_END_WarningShotTargetSphere_010_2830bfdc-e905-47c2-a614-762b132e5517);
DB_END_HighHallInterior_WarningShotTargetTriggers((TRIGGER)S_END_WarningShotTargetSphere_011_66486464-7f88-4655-bbce-078b39e6394f);
DB_END_HighHallInterior_WarningShotTargetTriggers((TRIGGER)S_END_WarningShotTargetSphere_012_dae41d2b-fd74-44b2-bbb7-ff588a6eec8b);
DB_END_HighHallInterior_WarningShotTargetTriggers((TRIGGER)S_END_WarningShotTargetSphere_013_998ecd72-52f2-4bc1-a9c7-3f92383b92dd);
DB_END_HighHallInterior_WarningShotTargetTriggers((TRIGGER)S_END_WarningShotTargetSphere_014_0b96257c-daaa-4da8-a4e4-9495d0f8bc5d);
DB_END_HighHallInterior_WarningShotTargetTriggers((TRIGGER)S_END_WarningShotTargetSphere_015_4bb23bb2-4a3d-45d9-afc6-cc449f79f9b5);
DB_END_HighHallInterior_WarningShotTargetTriggers((TRIGGER)S_END_WarningShotTargetSphere_016_ea6f7390-6c88-4db5-88ea-abc2542623c7);
DB_END_HighHallInterior_WarningShotTargetTriggers((TRIGGER)S_END_WarningShotTargetSphere_017_445e9c20-5ca0-4d0f-8ed4-739f1b61e691);
DB_END_HighHallInterior_WarningShotTargetTriggers((TRIGGER)S_END_WarningShotTargetSphere_018_1d721d9a-da62-4b2e-a521-cdf49ad3ea0c);
DB_END_HighHallInterior_WarningShotTargetTriggers((TRIGGER)S_END_WarningShotTargetSphere_019_94db9de9-f965-4a86-b590-ba6cc38bc477);
DB_END_HighHallInterior_WarningShotTargetTriggers((TRIGGER)S_END_WarningShotTargetSphere_020_f2b8983b-94c1-46ce-8447-0c644be2e6fb);
DB_END_HighHallInterior_WarningShotTargetTriggers((TRIGGER)S_END_WarningShotTargetSphere_021_7c960ee1-3655-415e-81b2-4e85a8ba2798);
DB_END_HighHallInterior_WarningShotTargetTriggers((TRIGGER)S_END_WarningShotTargetSphere_022_a48b8267-f6ae-4909-8ce9-085afffafb96);
DB_END_HighHallInterior_WarningShotTargetTriggers((TRIGGER)S_END_WarningShotTargetSphere_023_f6dfd5b4-86a6-468c-bb3c-f2f5c84a087b);
//END_REGION
//REGION Nautiloid Bombardment - Enemies
DB_END_HighHallInterior_AvailableDropPodCount(6);
DB_END_HighHallInterior_InterceptDistance(2.0);

DB_OneShotPartyTrigger(S_END_MindFlayerSpawnReadyBox_0b1dae83-b08a-410f-9e31-6f49d04c2448);

DB_CombatReact_AD_OnTurn(S_END_AbsoluteCannonFodder_001_fa170adf-bc09-4143-8aba-e0286231a8b4,END_HighHallInterior_AD_FodderCombat_001_83e456e2-7c47-2170-2c98-b9237f42e105, 1);
DB_CombatReact_AD_OnTurn(S_END_AbsoluteCannonFodder_002_c1605cd8-238e-4589-a4fd-1d9c4edab015, END_HighHallInterior_AD_FodderCombat_002_cff75470-fbb4-017d-dc72-b4f707bc6499, 1);

DB_END_HighHallInterior_FodderADs(S_END_AbsoluteCannonFodder_001_fa170adf-bc09-4143-8aba-e0286231a8b4);
DB_END_HighHallInterior_FodderADs(S_END_AbsoluteCannonFodder_002_c1605cd8-238e-4589-a4fd-1d9c4edab015);

DB_END_HighHallInterior_Guards((CHARACTER)S_END_AbsoluteCannonFodder_001_fa170adf-bc09-4143-8aba-e0286231a8b4);
DB_END_HighHallInterior_Guards((CHARACTER)S_END_AbsoluteCannonFodder_002_c1605cd8-238e-4589-a4fd-1d9c4edab015);

DB_END_HighHallInterior_Patrollers((CHARACTER)S_END_InteriorPatroller_001_c0e413b6-69c7-4c25-b0a5-6ebb07a2bed5);
DB_END_HighHallInterior_Patrollers((CHARACTER)S_END_InteriorPatroller_002_37f664bc-e7f7-49b4-a2a3-9f5ee8d65fc3);
DB_END_HighHallInterior_Patrollers((CHARACTER)S_END_InteriorPatroller_003_f7418152-e038-4555-a0e5-2e0756633651);
DB_END_HighHallInterior_Patrollers((CHARACTER)S_END_InteriorPatroller_004_f92755f0-2022-465a-90be-d5eaace2f62f);
DB_END_HighHallInterior_Patrollers((CHARACTER)S_END_InteriorPatroller_005_b22bc8d4-b4ef-434f-8f2c-fe7a7cad4e45);
DB_END_HighHallInterior_Patrollers((CHARACTER)S_END_InteriorPatroller_006_c702ba7b-ba34-413d-b25d-b6d96b899c27);
DB_END_HighHallInterior_Patrollers((CHARACTER)S_END_InteriorPatroller_007_0556ac68-79d5-4e3a-9e7a-193b3fc1f684);

DB_END_HighHallInterior_Enemies((CHARACTER)S_END_AbsoluteCannonFodder_001_fa170adf-bc09-4143-8aba-e0286231a8b4);
DB_END_HighHallInterior_Enemies((CHARACTER)S_END_AbsoluteCannonFodder_002_c1605cd8-238e-4589-a4fd-1d9c4edab015);
DB_END_HighHallInterior_Enemies((CHARACTER)S_END_InteriorPatroller_001_c0e413b6-69c7-4c25-b0a5-6ebb07a2bed5);
DB_END_HighHallInterior_Enemies((CHARACTER)S_END_InteriorPatroller_002_37f664bc-e7f7-49b4-a2a3-9f5ee8d65fc3);
DB_END_HighHallInterior_Enemies((CHARACTER)S_END_InteriorPatroller_003_f7418152-e038-4555-a0e5-2e0756633651);
DB_END_HighHallInterior_Enemies((CHARACTER)S_END_InteriorPatroller_004_f92755f0-2022-465a-90be-d5eaace2f62f);
DB_END_HighHallInterior_Enemies((CHARACTER)S_END_InteriorPatroller_005_b22bc8d4-b4ef-434f-8f2c-fe7a7cad4e45);
DB_END_HighHallInterior_Enemies((CHARACTER)S_END_InteriorPatroller_006_c702ba7b-ba34-413d-b25d-b6d96b899c27);
DB_END_HighHallInterior_Enemies((CHARACTER)S_END_InteriorPatroller_007_0556ac68-79d5-4e3a-9e7a-193b3fc1f684);

DB_END_HighHallInterior_IntDevSwarmEnemy((CHARACTER)S_END_InteriorPatroller_001_c0e413b6-69c7-4c25-b0a5-6ebb07a2bed5);
DB_END_HighHallInterior_IntDevSwarmEnemy((CHARACTER)S_END_InteriorPatroller_002_37f664bc-e7f7-49b4-a2a3-9f5ee8d65fc3);
DB_END_HighHallInterior_IntDevSwarmEnemy((CHARACTER)S_END_InteriorPatroller_003_f7418152-e038-4555-a0e5-2e0756633651);
DB_END_HighHallInterior_IntDevSwarmEnemy((CHARACTER)S_END_InteriorPatroller_004_f92755f0-2022-465a-90be-d5eaace2f62f);
DB_END_HighHallInterior_IntDevSwarmEnemy((CHARACTER)S_END_InteriorPatroller_005_b22bc8d4-b4ef-434f-8f2c-fe7a7cad4e45);
DB_END_HighHallInterior_IntDevSwarmEnemy((CHARACTER)S_END_InteriorPatroller_006_c702ba7b-ba34-413d-b25d-b6d96b899c27);
DB_END_HighHallInterior_IntDevSwarmEnemy((CHARACTER)S_END_InteriorPatroller_007_0556ac68-79d5-4e3a-9e7a-193b3fc1f684);


DB_END_HighHallInterior_FodderReadyTriggers((CHARACTER)S_END_AbsoluteCannonFodder_001_fa170adf-bc09-4143-8aba-e0286231a8b4,(TRIGGER)S_END_Fodder001RunToPoint_Left_51a41092-8d20-4947-8c26-955e3d503682,(TRIGGER)S_END_EnemyStartSidePoly_Left_2dab35de-1d2e-4b5a-a423-30a2f1e3d256);
DB_END_HighHallInterior_FodderReadyTriggers((CHARACTER)S_END_AbsoluteCannonFodder_001_fa170adf-bc09-4143-8aba-e0286231a8b4,(TRIGGER)S_END_Fodder001RunToPoint_Right_40f0e297-b7c2-4ef7-9712-addc4c6a28d5,(TRIGGER)S_END_EnemyStartSidePoly_Right_91c94102-6550-4998-9d08-a8f9cfbc6b84);
DB_END_HighHallInterior_FodderReadyTriggers((CHARACTER)S_END_AbsoluteCannonFodder_002_c1605cd8-238e-4589-a4fd-1d9c4edab015,(TRIGGER)S_END_Fodder002RunToPoint_Left_753816f3-bce7-46a7-9740-c74e79f923bd,(TRIGGER)S_END_EnemyStartSidePoly_Left_2dab35de-1d2e-4b5a-a423-30a2f1e3d256);
DB_END_HighHallInterior_FodderReadyTriggers((CHARACTER)S_END_AbsoluteCannonFodder_002_c1605cd8-238e-4589-a4fd-1d9c4edab015,(TRIGGER)S_END_Fodder002RunToPoint_Right_e8b0d498-8eda-428e-a0f1-e7a74a5cee3d,(TRIGGER)S_END_EnemyStartSidePoly_Right_91c94102-6550-4998-9d08-a8f9cfbc6b84);

DB_END_HighHallInterior_IntDevSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnBox_4c502fa0-0dda-4e58-b55e-56b363256448);
DB_END_HighHallInterior_IntDevSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnPoint_R1_dcf40887-9cc9-4a86-8b4d-0610336162b8);
DB_END_HighHallInterior_IntDevSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnPoint_L1_b79fffcb-0b27-4d0b-8ebe-8f034a279034);
DB_END_HighHallInterior_IntDevSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnPoint_L2_32624262-58e0-4c71-a44b-d6ff3f93484f);
DB_END_HighHallInterior_IntDevSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnPoint_R2_f2a22886-8cac-4ca9-87d5-39a65cfaaee8);
DB_END_HighHallInterior_IntDevSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnPoint_L3_6e98f720-05db-4e97-975f-a625997233da);
DB_END_HighHallInterior_IntDevSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnPoint_R3_3e017c8e-121e-4cbb-bc42-16fb6b6dfc2c);

DB_END_HighHallInterior_IntDevSubSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnBox_4c502fa0-0dda-4e58-b55e-56b363256448,(TRIGGER)S_END_SwarmStartPoint_001_3019c755-71d2-47b8-9ade-ded0eb8f4f0c, 0);
DB_END_HighHallInterior_IntDevSubSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnBox_4c502fa0-0dda-4e58-b55e-56b363256448,(TRIGGER)S_END_SwarmStartPoint_002_ba4fb053-5e8c-4df7-b18b-68dcb0390ec0, 1);
DB_END_HighHallInterior_IntDevSubSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnBox_4c502fa0-0dda-4e58-b55e-56b363256448,(TRIGGER)S_END_SwarmStartPoint_003_d45f52a1-1284-493b-a6f8-0f4b9517618c, 2);
DB_END_HighHallInterior_IntDevSubSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnBox_4c502fa0-0dda-4e58-b55e-56b363256448,(TRIGGER)S_END_SwarmStartPoint_004_53aa949c-5bfe-4b85-9120-09a9290d6b5d, 3);

DB_END_HighHallInterior_IntDevSubSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnPoint_L1_b79fffcb-0b27-4d0b-8ebe-8f034a279034,(TRIGGER)S_END_SwarmStartPoint_005_56b8ab1d-614b-43ce-a1a3-0255121c5e77, 0);
DB_END_HighHallInterior_IntDevSubSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnPoint_L1_b79fffcb-0b27-4d0b-8ebe-8f034a279034,(TRIGGER)S_END_SwarmStartPoint_006_12fff5df-3cfc-4100-9744-eb2676a81deb, 1);
DB_END_HighHallInterior_IntDevSubSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnPoint_L1_b79fffcb-0b27-4d0b-8ebe-8f034a279034,(TRIGGER)S_END_SwarmStartPoint_007_40973176-2fb7-46fb-9d80-9528373807d9, 2);
DB_END_HighHallInterior_IntDevSubSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnPoint_L1_b79fffcb-0b27-4d0b-8ebe-8f034a279034,(TRIGGER)S_END_SwarmStartPoint_008_f516da89-9a71-4c1a-89f6-ef8e2ffdc4e5, 3);

DB_END_HighHallInterior_IntDevSubSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnPoint_R1_dcf40887-9cc9-4a86-8b4d-0610336162b8,(TRIGGER)S_END_SwarmStartPoint_017_ff3667ab-9c7e-4abb-87e7-c2e76a950f59, 0);
DB_END_HighHallInterior_IntDevSubSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnPoint_R1_dcf40887-9cc9-4a86-8b4d-0610336162b8,(TRIGGER)S_END_SwarmStartPoint_018_2cbd32e9-94b6-4bcb-85ff-a7d6edccae59, 1);
DB_END_HighHallInterior_IntDevSubSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnPoint_R1_dcf40887-9cc9-4a86-8b4d-0610336162b8,(TRIGGER)S_END_SwarmStartPoint_019_820df6fe-bb79-43eb-abbb-c5301ce4b782, 2);
DB_END_HighHallInterior_IntDevSubSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnPoint_R1_dcf40887-9cc9-4a86-8b4d-0610336162b8,(TRIGGER)S_END_SwarmStartPoint_020_a7369106-0951-44da-ab40-d49b86972295, 3);

DB_END_HighHallInterior_IntDevSubSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnPoint_L2_32624262-58e0-4c71-a44b-d6ff3f93484f,(TRIGGER)S_END_SwarmStartPoint_009_91672eba-4b66-40b2-93d8-6136af0141f9, 0);
DB_END_HighHallInterior_IntDevSubSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnPoint_L2_32624262-58e0-4c71-a44b-d6ff3f93484f,(TRIGGER)S_END_SwarmStartPoint_010_29db7338-2d18-4840-9d22-2333218de613, 1);
DB_END_HighHallInterior_IntDevSubSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnPoint_L2_32624262-58e0-4c71-a44b-d6ff3f93484f,(TRIGGER)S_END_SwarmStartPoint_011_4d2ba4c0-eb84-4f45-84f5-19ad7f6fe65c, 2);
DB_END_HighHallInterior_IntDevSubSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnPoint_L2_32624262-58e0-4c71-a44b-d6ff3f93484f,(TRIGGER)S_END_SwarmStartPoint_012_b0d7e5dc-8282-416d-a7c7-19275fdc677f, 3);

DB_END_HighHallInterior_IntDevSubSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnPoint_R2_f2a22886-8cac-4ca9-87d5-39a65cfaaee8,(TRIGGER)S_END_SwarmStartPoint_021_f0464ba5-531b-4f64-bc3a-59f91a406f92, 0);
DB_END_HighHallInterior_IntDevSubSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnPoint_R2_f2a22886-8cac-4ca9-87d5-39a65cfaaee8,(TRIGGER)S_END_SwarmStartPoint_022_a0eca5d9-b81e-4723-aa5e-af4ce44cb430, 1);
DB_END_HighHallInterior_IntDevSubSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnPoint_R2_f2a22886-8cac-4ca9-87d5-39a65cfaaee8,(TRIGGER)S_END_SwarmStartPoint_023_f0f1dac9-6bbb-4aae-96c9-0d21c9ffacc6, 2);
DB_END_HighHallInterior_IntDevSubSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnPoint_R2_f2a22886-8cac-4ca9-87d5-39a65cfaaee8,(TRIGGER)S_END_SwarmStartPoint_024_21dd561c-7912-4576-9a5b-5e1cc493a83e, 3);

DB_END_HighHallInterior_IntDevSubSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnPoint_L3_6e98f720-05db-4e97-975f-a625997233da,(TRIGGER)S_END_SwarmStartPoint_013_75f2baa8-15ec-4e8c-9d9a-eb10769a8422, 0);
DB_END_HighHallInterior_IntDevSubSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnPoint_L3_6e98f720-05db-4e97-975f-a625997233da,(TRIGGER)S_END_SwarmStartPoint_014_a64ab66b-7cf1-4e60-993d-226381b1a124, 1);
DB_END_HighHallInterior_IntDevSubSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnPoint_L3_6e98f720-05db-4e97-975f-a625997233da,(TRIGGER)S_END_SwarmStartPoint_015_61852a44-afbd-46f4-a605-f962f1c3a1b2, 2);
DB_END_HighHallInterior_IntDevSubSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnPoint_L3_6e98f720-05db-4e97-975f-a625997233da,(TRIGGER)S_END_SwarmStartPoint_016_60e23074-cfe2-4db4-9737-46a9efd55d83, 3);

DB_END_HighHallInterior_IntDevSubSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnPoint_R3_3e017c8e-121e-4cbb-bc42-16fb6b6dfc2c,(TRIGGER)S_END_SwarmStartPoint_025_f327640c-979b-4cf4-a844-6eaa8c9bc40e, 0);
DB_END_HighHallInterior_IntDevSubSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnPoint_R3_3e017c8e-121e-4cbb-bc42-16fb6b6dfc2c,(TRIGGER)S_END_SwarmStartPoint_026_ad29fda6-fcde-43bd-bb50-890c8759c86d, 1);
DB_END_HighHallInterior_IntDevSubSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnPoint_R3_3e017c8e-121e-4cbb-bc42-16fb6b6dfc2c,(TRIGGER)S_END_SwarmStartPoint_027_f7885109-7dad-43e3-b8db-c791a8c98e48, 2);
DB_END_HighHallInterior_IntDevSubSpawnPoints((TRIGGER)S_END_IntDevSwarmSpawnPoint_R3_3e017c8e-121e-4cbb-bc42-16fb6b6dfc2c,(TRIGGER)S_END_SwarmStartPoint_028_d4ec64c2-f291-4709-8117-fef67cffa8fa, 3);

DB_QRYRTN_END_HighHallInterior_NearestIntDevSwarmSpawnPoint((TRIGGER)NULL_00000000-0000-0000-0000-000000000000, 0.0);

DB_END_HighHallInterior_CurrentDeadEnemyCount(0);
DB_END_HighHallInterior_MaxDeadEnemyCount(60);
DB_END_HighHallInterior_CurrentDespawnEnemyIndex(1);

NOT DB_END_HighHallInterior_IntDevSwarmEnemy((CHARACTER)NULL_00000000-0000-0000-0000-000000000000);
DB_END_HighHallInterior_IntDevSwarmEnemyMaxCount(8);

DB_END_HighHallInterior_PlayerADTurnCount(0);
//END_REGION
//REGION Nautiloid Bombardment - Nautiloid
SetAmbushing(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623, 1);

DB_END_HighHallInterior_Cannons((CHARACTER)S_END_NautiloidCannon_001_a732c3a0-051d-4cf3-b841-2875aedfea04);
DB_END_HighHallInterior_Cannons((CHARACTER)S_END_NautiloidCannon_002_78bff862-02af-4407-83b8-b68f47d74bbe);
DB_END_HighHallInterior_Cannons((CHARACTER)S_END_NautiloidCannon_003_cfc4e7c4-bfe8-41f7-a82a-12dd3c9f120e);
DB_END_HighHallInterior_Cannons((CHARACTER)S_END_NautiloidCannon_004_5406467b-8c80-4e67-98b4-ca9a82524599);
DB_END_HighHallInterior_Cannons((CHARACTER)S_END_NautiloidCannon_005_4033a3bb-dadc-4e23-9676-0c1fc729489e);
DB_END_HighHallInterior_Cannons((CHARACTER)S_END_NautiloidCannon_006_b39f3386-35be-4a72-ac9d-e43978ea6d35);

SetOnStage((CHARACTER)S_END_NautiloidCannon_001_a732c3a0-051d-4cf3-b841-2875aedfea04, 0);
SetOnStage((CHARACTER)S_END_NautiloidCannon_002_78bff862-02af-4407-83b8-b68f47d74bbe, 0);
SetOnStage((CHARACTER)S_END_NautiloidCannon_003_cfc4e7c4-bfe8-41f7-a82a-12dd3c9f120e, 0);
SetOnStage((CHARACTER)S_END_NautiloidCannon_004_5406467b-8c80-4e67-98b4-ca9a82524599, 0);
SetOnStage((CHARACTER)S_END_NautiloidCannon_005_4033a3bb-dadc-4e23-9676-0c1fc729489e, 0);
SetOnStage((CHARACTER)S_END_NautiloidCannon_006_b39f3386-35be-4a72-ac9d-e43978ea6d35, 0);

DB_END_HighHallInterior_CannonPlatforms((LEVELTEMPLATE)S_END_CannonPlatform_001_e2494d24-e8fd-4d4b-ae2e-6355c019e2de);
DB_END_HighHallInterior_CannonPlatforms((LEVELTEMPLATE)S_END_CannonPlatform_002_d5134d56-6f57-4528-a672-87c8e8a19add);
DB_END_HighHallInterior_CannonPlatforms((LEVELTEMPLATE)S_END_CannonPlatform_003_e2a93273-268e-44df-8cca-b48484025cc2);
DB_END_HighHallInterior_CannonPlatforms((LEVELTEMPLATE)S_END_CannonPlatform_004_54f07a72-cb64-4a65-8aa6-26b87493dec9);
DB_END_HighHallInterior_CannonPlatforms((LEVELTEMPLATE)S_END_CannonPlatform_005_e0779cc8-afa5-4f37-a534-62db80d55427);
DB_END_HighHallInterior_CannonPlatforms((LEVELTEMPLATE)S_END_CannonPlatform_006_72ca88f8-aa5d-493f-afec-04449903a679);

//Act as "Eyes" for the Nautiloid, can probably be replaced when the arena mode is ready
DB_END_HighHallInterior_NautiloidSpotterHelpers((CHARACTER)S_END_NautiloidSpotterHelper_001_85741484-143f-4251-b34a-8840d38e0167);
DB_END_HighHallInterior_NautiloidSpotterHelpers((CHARACTER)S_END_NautiloidSpotterHelper_002_d3811118-7a6f-4cba-9898-2266fc62ee65);
DB_END_HighHallInterior_NautiloidSpotterHelpers((CHARACTER)S_END_NautiloidSpotterHelper_003_305811dc-c711-4a6a-8a7f-085bfe753f10);
DB_END_HighHallInterior_NautiloidSpotterHelpers((CHARACTER)S_END_NautiloidSpotterHelper_004_93dcc83a-c5ee-4b63-ad92-e6d2b238f650);
DB_END_HighHallInterior_NautiloidSpotterHelpers((CHARACTER)S_END_NautiloidSpotterHelper_005_c67cfed0-b2ef-409c-a76c-d81290a8e099);
DB_END_HighHallInterior_NautiloidSpotterHelpers((CHARACTER)S_END_NautiloidSpotterHelper_006_5776b1ab-8bed-4c35-abcc-64e41a09fbf1);

SetAmbushing(S_END_NautiloidSpotterHelper_001_85741484-143f-4251-b34a-8840d38e0167, 1);
SetAmbushing(S_END_NautiloidSpotterHelper_002_d3811118-7a6f-4cba-9898-2266fc62ee65, 1);
SetAmbushing(S_END_NautiloidSpotterHelper_003_305811dc-c711-4a6a-8a7f-085bfe753f10, 1);
SetAmbushing(S_END_NautiloidSpotterHelper_004_93dcc83a-c5ee-4b63-ad92-e6d2b238f650, 1);
SetAmbushing(S_END_NautiloidSpotterHelper_005_c67cfed0-b2ef-409c-a76c-d81290a8e099, 1);
SetAmbushing(S_END_NautiloidSpotterHelper_006_5776b1ab-8bed-4c35-abcc-64e41a09fbf1, 1);

//For random select it includes 0, so when the total trigger count is done the first trigger will have a 0 index
DB_QRTN_END_HighHallInterior_UnoccupiedTriggerIndexCount(-1);

//DB_END_HighHallInterior_CannonCluster(_Trigger, _ClusterGroup)
//_Selector starts at 0 because of Random() starts at 0
//REGION # Wave 1 Triggers
DB_END_HighHallInterior_CannonCluster((TRIGGER)S_END_CannonClusterSphere_Wave1_A_001_f76da5b6-fcb1-41a8-a2f6-b4d432b4bf47, 1);
DB_END_HighHallInterior_CannonCluster((TRIGGER)S_END_CannonClusterSphere_Wave1_A_002_0c0cc1e4-9606-48a6-8724-eb27f2e35ece, 1);
DB_END_HighHallInterior_CannonCluster((TRIGGER)S_END_CannonClusterSphere_Wave1_A_003_d7916b53-044a-414f-ad9f-c09bec7116c1, 1);

DB_END_HighHallInterior_CannonCluster((TRIGGER)S_END_CannonClusterSphere_Wave1_B_001_6808307c-3df1-4f29-9a11-1912a3de5af4, 2);
DB_END_HighHallInterior_CannonCluster((TRIGGER)S_END_CannonClusterSphere_Wave1_B_002_dfdfa5b8-40ac-4058-9301-d8489fc7c9ea, 2);
DB_END_HighHallInterior_CannonCluster((TRIGGER)S_END_CannonClusterSphere_Wave1_B_003_25184dd0-8af4-4e52-9b35-03d8586807d5, 2);

DB_END_HighHallInterior_CannonCluster((TRIGGER)S_END_CannonClusterSphere_Wave1_C_001_feb3da4d-eb56-4704-9874-4e2c5dfd4a0c, 3);
DB_END_HighHallInterior_CannonCluster((TRIGGER)S_END_CannonClusterSphere_Wave1_C_002_a14e4ef0-3715-44c1-9c1d-cb76e1fe16c8, 3);
DB_END_HighHallInterior_CannonCluster((TRIGGER)S_END_CannonClusterSphere_Wave1_C_003_3951d126-4db5-4ed2-a5a7-139ca48b8875, 3);

DB_END_HighHallInterior_CannonCluster((TRIGGER)S_END_CannonClusterSphere_Wave1_D_001_3be1e432-4643-49b7-8feb-f1569b2d2f00, 4);
DB_END_HighHallInterior_CannonCluster((TRIGGER)S_END_CannonClusterSphere_Wave1_D_002_f70270d4-6ae8-4ee2-8b23-b87be0c9844d, 4);

DB_END_HighHallInterior_CannonCluster((TRIGGER)S_END_CannonClusterSphere_Wave1_E_001_6edb67bc-5ebf-4f4a-aab7-d1b040c0060e, 5);
DB_END_HighHallInterior_CannonCluster((TRIGGER)S_END_CannonClusterSphere_Wave1_E_002_bc5339ea-026b-45e1-8d2f-0a8ae4996118, 5);
DB_END_HighHallInterior_CannonCluster((TRIGGER)S_END_CannonClusterSphere_Wave1_E_003_cdf1c0a5-ab7a-4cc6-a4b1-2c9c7651da2e, 5);
//END_REGION #

//REGION # Wave 2 Triggers
DB_END_HighHallInterior_CannonCluster((TRIGGER)S_END_CannonClusterSphere_Wave2_A_001_32732b03-15da-4824-9cbd-56f212615a93, 6);
DB_END_HighHallInterior_CannonCluster((TRIGGER)S_END_CannonClusterSphere_Wave2_A_002_8ff1c6bb-fded-41d0-a069-2eb6de8a6bce, 6);

DB_END_HighHallInterior_CannonCluster((TRIGGER)S_END_CannonClusterSphere_Wave2_B_001_344944b0-073f-4d5a-9b33-3fb6b2de4df3, 7);
DB_END_HighHallInterior_CannonCluster((TRIGGER)S_END_CannonClusterSphere_Wave2_B_002_7e77331e-e04c-48a2-9dbc-e5b2a1d341be, 7);

DB_END_HighHallInterior_CannonCluster((TRIGGER)S_END_CannonClusterSphere_Wave2_C_001_ab022051-1885-471a-ba0c-e06481b8877e, 8);
DB_END_HighHallInterior_CannonCluster((TRIGGER)S_END_CannonClusterSphere_Wave2_C_002_015af17b-abc7-444b-9b07-42c92b2de246, 8);
//END_REGION #

//REGION # Wave Push Triggers
DB_END_HighHallInterior_WavePushTriggers((TRIGGER)S_END_WavePushBox_001_d1cd173e-8d9e-455a-80a6-b788be00e9bc, 2);
DB_END_HighHallInterior_WavePushTriggers((TRIGGER)S_END_WavePushBox_002_21828000-4606-4c0d-bbe7-bfe4da2ce7cd, 2);
//END_REGION #

DB_END_HighHallInterior_TotalWaveCount(2);
DB_END_HighHallInterior_ActiveWave(1);

//DB_END_HighHallInterior_WaveClusters(_Wave, _TotalActiveClusters)
DB_END_HighHallInterior_WaveClusters(1, 5);
DB_END_HighHallInterior_WaveClusters(2, 8);

DB_END_HighHallInterior_TotalTargetCount(0); //Number of clusters & players
DB_END_HighHallInterior_PrimedCannonCount(0); //Used to know when targeting is done on all targets

DB_END_HighHallInterior_CannonCombatID(NULL_00000000-0000-0000-0000-000000000000);

//For randomizing if the player targeting offset is shifted negatively or positively
DB_END_HighHallInterior_PositiveOrNegativeOptions(1, -1);
//DB_END_HighHallInterior_PositiveOrNegativeOptions(-1, 1);
DB_END_HighHallInterior_PositiveOrNegativeOptions(1, 1);
//DB_END_HighHallInterior_PositiveOrNegativeOptions(-1, -1);

PROC_TriggerRegisterForParty(S_END_NautiloidCannonPoly_dcf15690-5483-40b2-8753-5d44a40ceb21);

PROC_TriggerRegisterForParty(S_END_NautiloidSafeZoneBox_fee49087-ff00-4e2f-af26-43f855014c90);
//END_REGION

//REGION Mind Meld ADs
DB_GLO_RapidAD_NonAutoMindMeldRegion("END_HighHallInterior_MindMeldADs", S_END_NautiloidCannonPoly_dcf15690-5483-40b2-8753-5d44a40ceb21);

DB_GLO_RapidAD_ADHelper("END_HighHallInterior_MindMeldADs", (ITEM)S_END_RapidMindMeldHelper_007_47c212eb-1cfb-4e2b-803f-03aa65e0a178, (DIALOGRESOURCE)END_BrainBattle_AD_RapidMindMeld_001_dc1a70c8-dcd2-94ba-835e-90b27b9de561);
DB_GLO_RapidAD_ADHelper("END_HighHallInterior_MindMeldADs", (ITEM)S_END_RapidMindMeldHelper_008_fc7f9f4a-8216-4ef7-b9b4-4e4e214cefe5, (DIALOGRESOURCE)END_BrainBattle_AD_RapidMindMeld_002_d6be2dde-cea3-31ad-ca47-408f470cc94c);
DB_GLO_RapidAD_ADHelper("END_HighHallInterior_MindMeldADs", (ITEM)S_END_RapidMindMeldHelper_009_1a6afb45-5adc-43ce-961b-93d0a8e3475e, (DIALOGRESOURCE)END_BrainBattle_AD_RapidMindMeld_003_ba5b84be-4290-009b-cd6f-a8d0337a129e);
DB_GLO_RapidAD_ADHelper("END_HighHallInterior_MindMeldADs", (ITEM)S_END_RapidMindMeldHelper_010_d0169cf1-1aa2-40a2-81e9-ab6d0ea133ca, (DIALOGRESOURCE)END_BrainBattle_AD_RapidMindMeld_004_fe055f67-495a-37a1-2f6f-783c4317197f);
DB_GLO_RapidAD_ADHelper("END_HighHallInterior_MindMeldADs", (ITEM)S_END_RapidMindMeldHelper_011_c6d06422-0376-4f3a-ba67-58b36f91468d, (DIALOGRESOURCE)END_BrainBattle_AD_RapidMindMeld_005_b31c34f4-706a-ebc9-c203-e426d402870e);
DB_GLO_RapidAD_ADHelper("END_HighHallInterior_MindMeldADs", (ITEM)S_END_RapidMindMeldHelper_012_82242af5-2273-4804-9d97-975eeb1d9ec4, (DIALOGRESOURCE)END_BrainBattle_AD_RapidMindMeld_006_513e4249-d926-2199-6f55-3ec78a07a9b9);
DB_GLO_RapidAD_ADHelper("END_HighHallInterior_MindMeldADs", (ITEM)S_END_RapidMindMeldHelper_013_3cb8ce5c-1fac-4426-bf23-a7889d020cc8, (DIALOGRESOURCE)END_BrainBattle_AD_RapidMindMeld_007_9197e648-79ee-6908-fadd-641848586566);
DB_GLO_RapidAD_ADHelper("END_HighHallInterior_MindMeldADs", (ITEM)S_END_RapidMindMeldHelper_014_7d620a11-1fd8-4a02-b0fb-524da0658f36, (DIALOGRESOURCE)END_BrainBattle_AD_RapidMindMeld_008_63b6d9ea-37f2-3886-f704-5a5f4df826b0);

NOT DB_END_HighHallInterior_MindMeldCount(NULL_00000000-0000-0000-0000-000000000000, 0);
//END_REGION

//REGION Stealth Checks
/*
//DB_END_HighHallInterior_StealthCheckTriggers((TRIGGER)S_END_NautiloidCannonPoly_dcf15690-5483-40b2-8753-5d44a40ceb21); Added when warning shot fired
DB_END_HighHallInterior_StealthCheckTriggers((TRIGGER)S_END_WarningShotPoly_e7b609df-682c-47a3-a6c2-977b0f5e1f81);
DB_END_HighHallInterior_StealthCheckTriggers((TRIGGER)S_END_NautiloidStealthBox_001_0b373c1f-2df1-4c17-80cc-7c551c104891);
DB_END_HighHallInterior_StealthCheckTriggers((TRIGGER)S_END_NautiloidStealthBox_002_a0b43a7c-19b7-4817-9a9e-6de70872e977);

NOT DB_END_HighHallInterior_StealthCheckedPlayer((CHARACTER)NULL_00000000-0000-0000-0000-000000000000,(TRIGGER)NULL_00000000-0000-0000-0000-000000000000);

PROC_TriggerRegisterForParty((TRIGGER)S_END_NautiloidStealthBox_001_0b373c1f-2df1-4c17-80cc-7c551c104891);
PROC_TriggerRegisterForParty((TRIGGER)S_END_NautiloidStealthBox_002_a0b43a7c-19b7-4817-9a9e-6de70872e977);
*/
//END_REGION

//REGION Acsending to Brain Battle
DB_OneShotPlayerTrigger(S_END_BrainStemGoalADBox_58bdf614-3d5c-4cb1-a466-a18b6d870f8c);

DB_DropMutingStatussesDialog(END_BrainBattle_Intro_4565e114-0153-0449-ea83-de3b972c7679);
DB_AddCharactersInTriggerToDialog((DIALOGRESOURCE)END_HighHallInterior_Nautiloid_3a5cb82c-788a-e0a3-fb7b-8a99fd2c7b23, (TRIGGER)S_END_HighHall_SUB_e77f25b4-3217-4ed6-8ecc-44deebe77c39, 1, 1, 1);
//END_REGION

//REGION Dragon Fire Points (After combat Cleanup)
DB_END_HighHallInterior_FirePoints((TRIGGER)S_MOO_InteriorFirePoint_001_b303c3b0-7372-4af7-90b7-9c0e739d6fb6);
DB_END_HighHallInterior_FirePoints((TRIGGER)S_MOO_InteriorFirePoint_002_aac368ae-d0a0-48ad-9da3-37a469d2aaff);
DB_END_HighHallInterior_FirePoints((TRIGGER)S_MOO_InteriorFirePoint_003_2112366c-8e9b-4d1e-bbd8-6667af7e7ded);
DB_END_HighHallInterior_FirePoints((TRIGGER)S_MOO_InteriorFirePoint_004_854c7abd-ee8e-462c-9767-257e4a083814);
DB_END_HighHallInterior_FirePoints((TRIGGER)S_MOO_InteriorFirePoint_005_db297f7b-47a2-4e4b-8e08-dd7004de82b8);
DB_END_HighHallInterior_FirePoints((TRIGGER)S_MOO_InteriorFirePoint_006_bea5be0a-00f0-4ad5-9f99-60dfb9a010af);
DB_END_HighHallInterior_FirePoints((TRIGGER)S_MOO_InteriorFirePoint_007_02e2a91f-b10e-443f-bda9-8c64c87bca70);
DB_END_HighHallInterior_FirePoints((TRIGGER)S_MOO_InteriorFirePoint_008_a36e1712-6619-43cf-bd90-34c4aa195640);
DB_END_HighHallInterior_FirePoints((TRIGGER)S_MOO_InteriorFirePoint_009_36655b12-e0ea-4943-aaa4-67ca3bd363b8);
DB_END_HighHallInterior_FirePoints((TRIGGER)S_MOO_InteriorFirePoint_010_ba5e8fc3-75f4-42ea-94aa-6187fae95f18);
DB_END_HighHallInterior_FirePoints((TRIGGER)S_MOO_InteriorFirePoint_011_caa29e8f-65d1-4f39-82f5-0a8a8721e59f);
DB_END_HighHallInterior_FirePoints((TRIGGER)S_MOO_InteriorFirePoint_012_9a4ec6e4-3c6b-4f46-8c2a-9edd7ae01434);
DB_END_HighHallInterior_FirePoints((TRIGGER)S_MOO_InteriorFirePoint_013_e8aaeb82-59bb-4372-8aea-f930b18ec218);
DB_END_HighHallInterior_FirePoints((TRIGGER)S_MOO_InteriorFirePoint_014_195b0823-a046-47bb-b59b-34c406610d52);
DB_END_HighHallInterior_FirePoints((TRIGGER)S_MOO_InteriorFirePoint_015_62f3228e-4a6a-4920-a925-f458ccfc8dcf);
DB_END_HighHallInterior_FirePoints((TRIGGER)S_MOO_InteriorFirePoint_016_5c4a70de-a7f7-45f5-b695-cac365f896bf);
DB_END_HighHallInterior_FirePoints((TRIGGER)S_MOO_InteriorFirePoint_017_3f93bd02-ec6e-4e22-849a-056129ee4db6);
DB_END_HighHallInterior_FirePoints((TRIGGER)S_MOO_InteriorFirePoint_018_5f525d6e-cfb4-47f6-9202-0168e56dab20);
DB_END_HighHallInterior_FirePoints((TRIGGER)S_MOO_InteriorFirePoint_019_e13bccdf-8b63-42a3-bd15-3e38bce8a52a);
DB_END_HighHallInterior_FirePoints((TRIGGER)S_MOO_InteriorFirePoint_020_e9df6e10-2284-49f3-976c-cb721170a6d8);
DB_END_HighHallInterior_FirePoints((TRIGGER)S_MOO_InteriorFirePoint_021_a032b5b6-a0c6-4d38-8897-064d27ed8ef4);
DB_END_HighHallInterior_FirePoints((TRIGGER)S_MOO_InteriorFirePoint_022_1b1ad979-a9dc-4750-bf69-b25e3b82c6ec);
DB_END_HighHallInterior_FirePoints((TRIGGER)S_MOO_InteriorFirePoint_023_bd646b50-b32d-4b27-8fc1-b911cb3afa57);
DB_END_HighHallInterior_FirePoints((TRIGGER)S_MOO_InteriorFirePoint_024_ca18f164-e8c6-4fc3-9b70-9ebec76dc0de);
DB_END_HighHallInterior_FirePoints((TRIGGER)S_MOO_InteriorFirePoint_025_eb354688-0046-4748-a289-c80a30e1120c);
DB_END_HighHallInterior_FirePoints((TRIGGER)S_MOO_InteriorFirePoint_026_9e1a001f-22c0-4e0e-a49a-ca934cf58008);
DB_END_HighHallInterior_FirePoints((TRIGGER)S_MOO_InteriorFirePoint_027_d39e036e-d333-4637-9c47-f34ceeddb059);
//END_REGION

DB_GLO_Chandelier((ITEM)S_END_InteriorChandelier_001_2c17eaf3-8261-4a7f-9f5c-6f4df00f2692,(ITEM)S_END_InteriorHinge_001_18c18cdf-226a-4015-bb59-00734ade7bbe);
DB_GLO_Chandelier((ITEM)S_END_InteriorChandelier_002_0e00d472-88ff-4e1f-97e8-4a16c8a9e42c,(ITEM)S_END_InteriorHinge_002_0891ceb0-7e7a-4aeb-b8a1-78d4009d7550);
DB_GLO_Chandelier((ITEM)S_END_InteriorChandelier_003_042de6db-a7bb-48ac-842e-3a1bc1d402b1,(ITEM)S_END_InteriorHinge_003_183b7ebd-9ca4-482f-a980-8e8f3775df42);

PROC_END_HighHallInterior_GetCannonHelperOrigin();
PROC_END_HighHallInterior_GetNautiloidOrigin();
KBSECTION
//REGION DEBUG
IF
TextEvent("end_hhinautiloidcamera")
AND
GetHostCharacter(_Player)
THEN
SendArenaCameraEvent(_Player, NULL_00000000-0000-0000-0000-000000000000, "END_HighHallInterior_NautiloidArrivedCamera");

IF
TextEvent("end_clearcannonvfx")
AND
DB_END_HighHallInterior_CannonCluster(_Trigger, _)
THEN
PROC_StopLoopEffect(_Trigger, "END_HighHallInterior_CannonTarget");

IF
TextEvent("end_forceprimedcannons")
THEN
DB_END_HighHallInterior_AllCannonsPrimedOnTargets(1);

IF
TextEvent("end_mindflayerpod")
AND
GetHostCharacter(_Player)
THEN
UseSpell(_Player, "ProjectileStrike_END_HighHallInterior_MindFlayerPodStrike", S_TEST_MindFlayerPodTarget_28b8e726-7994-43bb-95c4-69daf97c9034);

IF
TextEvent("end_mindflayeranim1")
THEN
PlayAnimation(S_TEST_MindFlayer_672dee18-d28f-46af-9644-96a6d94f926f, UTIL_Spawn_01_510ff37e-0618-40e4-8ce0-236e3dc9c291, "");

IF
TextEvent("end_mindflayeranim2")
THEN
PlayAnimation(S_TEST_MindFlayer_672dee18-d28f-46af-9644-96a6d94f926f, UTIL_Spawn_02_3ed4d2ef-1a38-429f-9648-3f07d9085085, "");

IF
TextEvent("testbombardmentsound")
AND
GetHostCharacter(_Player)
THEN
PlaySound(_Player, "SE_NB_ProjectileStrike");

IF
TextEvent("testbombardmentpreparesound")
AND
GetHostCharacter(_Player)
THEN
PlaySound(_Player, "SE_NB_ProjectileStrike_Prepare");

IF
TextEvent("end_killinteriorenemies")
AND
DB_END_HighHallInterior_Enemies(_Char)
THEN
Die(_Char, DEATHTYPE.Psychic, _Char, 1, 1, 0.0);

IF
TextEvent("end_killintdevswarm")
AND
DB_END_HighHallInterior_IntDevSwarmEnemy(_Char)
THEN
Die(_Char, DEATHTYPE.Psychic, _Char, 1, 1, 0.0);

IF
TextEvent("end_killdroppodintdevs")
AND
DB_END_HighHallInterior_DropPodIntDevs(_Char)
THEN
Die(_Char, DEATHTYPE.Psychic, _Char, 1, 1, 0.0);

IF
TextEvent("end_killdroppodmindflayers")
AND
DB_END_HighHallInterior_DropPodMindFlayers(_Char)
THEN
Die(_Char, DEATHTYPE.Psychic, _Char, 1, 1, 0.0);

IF
TextEvent("end_cannontest")
THEN
PlayAnimation(DEC_MF_Nautiloid_Canon_Turret_000_00049377-ebaa-4be5-bfb3-cb51fa45f350, CUST_Fire_Angled_01_2d493d5e-7220-4644-a120-b0227aa550d0, "test");

IF
GainedControl(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623)
THEN
DebugText(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623, "Assuming Control");
//END_REGION

//REGION Player Turn Tracking
IF
TurnStarted(_Player)
AND
DB_PartyMembers((CHARACTER)_Player)
AND
DB_InRegion(_Player, S_END_NautiloidCannonPoly_dcf15690-5483-40b2-8753-5d44a40ceb21)
AND
NOT DB_END_HighHallInterior_CurrentActivePartyMember(_Player)
THEN
DB_END_HighHallInterior_CurrentActivePartyMember(_Player);

IF
TurnEnded(_Player)
AND
DB_PartyMembers((CHARACTER)_Player)
AND
DB_InRegion(_Player, S_END_NautiloidCannonPoly_dcf15690-5483-40b2-8753-5d44a40ceb21)
AND
DB_END_HighHallInterior_CurrentActivePartyMember(_Player)
THEN
NOT DB_END_HighHallInterior_CurrentActivePartyMember(_Player);

IF
CombatEnded(_ID)
AND
DB_END_HighHallInterior_CannonCombatID(_ID)
AND
DB_END_HighHallInterior_CurrentActivePartyMember(_Player)
THEN
NOT DB_END_HighHallInterior_CurrentActivePartyMember(_Player);

QRY
QRY_END_HighHallInterior_PlayersIsSharingTurn((CHARACTER)_Player)
AND
DB_END_HighHallInterior_CurrentActivePartyMember(_Player)
AND
SysCount("DB_END_HighHallInterior_CurrentActivePartyMember", 1,_Count)
AND
_Count > 1
THEN
DB_NOOP(1);
//END_REGION

//REGION Brain Stem AD
IF
UseFinished(_Player, S_END_BaseBrainStem_932f0f7f-06ec-4867-89ac-db79b2aa9a51, 1)
AND
NOT DB_END_HighHallInterior_BrainquakeActive(1)
THEN
SetDisableUse(S_END_BaseBrainStem_932f0f7f-06ec-4867-89ac-db79b2aa9a51, 1);
PROC_END_HighHallInterior_StartBrainquakeShakeAndVFX(1);
DB_END_HighHallInterior_BrainquakeActive(1);
PROC_END_HighHallInterior_BrainADResponse(_Player);

IF
AttackedBy(S_END_BaseBrainStem_932f0f7f-06ec-4867-89ac-db79b2aa9a51, _, _Player, _, _, _, _)
AND
DB_PartyMembers((CHARACTER)_Player)
AND
NOT DB_END_HighHallInterior_BrainquakeActive(1)
THEN
PROC_END_HighHallInterior_StartBrainquakeShakeAndVFX(1);
DB_END_HighHallInterior_BrainquakeActive(1);

IF
AttackedBy(S_END_BrainStemClimb_3270ca2c-67ef-40d3-a980-8eeb580ece75, _, _Player, _, _, _, _)
AND
DB_PartyMembers((CHARACTER)_Player)
AND
NOT DB_END_HighHallInterior_BrainquakeActive(1)
THEN
PROC_END_HighHallInterior_StartBrainquakeShakeAndVFX(1);
DB_END_HighHallInterior_BrainquakeActive(1);


PROC
PROC_END_HighHallInterior_StartBrainquakeShakeAndVFX((INTEGER)_SlowAndStun)
AND
DB_END_HighHallInterior_BrainquakePoints(_Point)
THEN
PROC_LoopEffect(VFX_Script_Brainquake_NoOffset_01_0d5c292e-0eca-5117-bdc5-75a56b1e5eb7,_Point,"END_HighHallInterior_Brainquake","END_Main","", 1.5);
RealtimeObjectTimerLaunch(_Point, "END_HighHallInterior_BrainquakeTimer", 5000);

PROC
PROC_END_HighHallInterior_StartBrainquakeShakeAndVFX(1)
AND
DB_PartyMembers(_Player)
AND
DB_InRegion(_Player, S_END_NautiloidCannonPoly_dcf15690-5483-40b2-8753-5d44a40ceb21)
AND
NOT DB_Defeated(_Player)
THEN
PROC_ShakeCameraForTime(_Player, 5000, VFX_Script_Brainquake_01_07202ba2-fe9c-fc79-46e3-cc421fafc0e8, 1);
PROC_END_HighHallInterior_ApplyBrainquakeSlowAndStun(_Player, 1000);

PROC
PROC_END_HighHallInterior_StartBrainquakeShakeAndVFX(1)
AND
DB_END_HighHallInterior_Enemies(_Char)
AND
DB_InRegion(_Char, S_END_NautiloidCannonPoly_dcf15690-5483-40b2-8753-5d44a40ceb21)
AND
NOT DB_Defeated(_Char)
THEN
PROC_END_HighHallInterior_ApplyBrainquakeSlowAndStun(_Char, 1000);

IF
ObjectTimerFinished(_Source, "END_HighHallInterior_BrainquakeTimer")
THEN
PROC_StopLoopEffect(_Source, "END_HighHallInterior_Brainquake");

IF
ObjectTimerFinished(_, "END_HighHallInterior_BrainquakeTimer")
AND
DB_END_HighHallInterior_BrainquakeActive(1)
THEN
NOT DB_END_HighHallInterior_BrainquakeActive(1);
PROC_END_HighHallInterior_RemoveNetherbrainSlow();

PROC
PROC_END_HighHallInterior_ApplyBrainquakeSlowAndStun((CHARACTER)_Char, (INTEGER)_BaseTime)
AND
Random(_BaseTime, _RandomTime)
AND
IntegerToReal(_BaseTime, _RealBaseTime)
AND
RealProduct(_RealBaseTime, 1.5, _RealBuffer)
AND
RealToInteger(_RealBuffer, _Buffer)
AND
IntegerSum(_RandomTime, _Buffer, _OffsetDelay)
THEN
RealtimeObjectTimerLaunch(_Char, "END_HighHallInterior_NetherSlow_Timer", _RandomTime);
RealtimeObjectTimerLaunch(_Char, "END_HighHallInterior_NetherStun_Timer", _OffsetDelay);

IF
ObjectTimerFinished(_Char,"END_HighHallInterior_NetherSlow_Timer")
AND
HasActiveStatus(_Char, "END_NETHERBRAIN_SLOW", 0)
THEN
ApplyStatus(_Char, "END_NETHERBRAIN_SLOW", -1.0, 1);
DB_END_HighHallInterior_BrainquakeSlowedTargets(_Char);

PROC
PROC_END_HighHallInterior_RemoveNetherbrainSlow()
AND
DB_END_HighHallInterior_BrainquakeSlowedTargets(_Char)
THEN
RemoveStatus(_Char, "END_NETHERBRAIN_SLOW", NULL_00000000-0000-0000-0000-000000000000);
NOT DB_END_HighHallInterior_BrainquakeSlowedTargets(_Char);

IF
ObjectTimerFinished(_Char,"END_HighHallInterior_NetherStun_Timer")
THEN
RequestPassiveRoll((CHARACTER)_Char, S_GLO_Netherbrain_3858e896-d7dd-4699-b37d-d3919ff15ba7, "SavingThrow", "Constitution", (DIFFICULTYCLASS)Act3_Hard_6298329e-255c-4826-9209-e911873b64e7, 0, "END_HighHallInterior_MindStun");

IF
RollResult("END_HighHallInterior_MindStun", _Char, _, 0, _, _)
THEN
ApplyStatus(_Char,"STUNNED", 3.0, 1);

PROC
PROC_END_HighHallInterior_BrainADResponse(_Player)
AND
DB_Players(_Player)
AND
QRY_OnlyOnce("END_HighHallInterior_BrainStemADOnce")
THEN
TeleportTo(S_END_NetherbrainVoiceHelper_a80db77c-90a6-4baf-a394-383c30bdcb35, _Player);
PROC_TryStartAD(END_HighHallInterior_AD_Brainquake_349a1c1e-a0af-04b5-ca7d-3142019ad8ae,S_END_NetherbrainVoiceHelper_a80db77c-90a6-4baf-a394-383c30bdcb35);

PROC
PROC_END_HighHallInterior_BrainADResponse((CHARACTER)_Player)
AND
DB_Players(_Player)
AND
QRY_OnlyOnce("END_HighHallInterior_BrainStemPlayerVBOnce")
THEN
DB_END_HighHallInterior_BrainStemPlayerVB(_Player);

IF
AutomatedDialogEnded(END_HighHallInterior_AD_Brainquake_349a1c1e-a0af-04b5-ca7d-3142019ad8ae, _)
AND
DB_END_HighHallInterior_BrainStemPlayerVB(_Player)
THEN
NOT DB_END_HighHallInterior_BrainStemPlayerVB(_Player);
PROC_TryStartAD(END_HighHallInterior_PAD_BrainStemTouch_95082c6b-dbb4-2240-1beb-ebb9dc799f59, _Player);

PROC
PROC_OneShotTriggerEntered(_Player, S_END_BrainStemGoalADBox_58bdf614-3d5c-4cb1-a466-a18b6d870f8c)
AND
DB_Players(_Player)
THEN
StartVoiceBark(END_HighHallInterior_VB_BrainStem_8dd91ad0-e824-516d-1063-f51421d10d57, _Player);

IF
TurnStarted((CHARACTER)_Player)
AND
DB_PartyMembers(_Player)
AND
DB_END_HighHallInterior_CombatActive(1)
AND
IsInTrigger(_Player, S_END_NautiloidCannonPoly_dcf15690-5483-40b2-8753-5d44a40ceb21, 1)
THEN
PROC_END_HighHallInterior_StartMindMeldADs((CHARACTER)_Player);

PROC
PROC_END_HighHallInterior_StartMindMeldADs((CHARACTER)_Player)
AND
DB_END_HighHallInterior_MindMeldCount(_Player, _Count)
THEN
NOT DB_END_HighHallInterior_MindMeldCount(_Player, _Count);

PROC
PROC_END_HighHallInterior_StartMindMeldADs((CHARACTER)_Player)
AND
Random(3000, _RandomTime)
THEN
DB_END_HighHallInterior_MindMeldCount(_Player, 2);
RealtimeObjectTimerLaunch(_Player, "END_HighHallInterior_MindMeldTimer", _RandomTime);

IF
ObjectTimerFinished(_Player, "END_HighHallInterior_MindMeldTimer")
AND
DB_END_HighHallInterior_MindMeldCount(_Player, _Count)
AND
_Count > 0
AND
IntegerSubtract(_Count, 1, _NewCount)
AND
Random(3000, _RandomTime)
THEN
NOT DB_END_HighHallInterior_MindMeldCount(_Player, _Count);
DB_END_HighHallInterior_MindMeldCount(_Player, _NewCount);
PROC_GLO_RapidAD_TryOneRandomMindMeldAD((CHARACTER)_Player, "END_HighHallInterior_MindMeldADs");
RealtimeObjectTimerLaunch(_Player, "END_HighHallInterior_MindMeldTimer", _RandomTime);

//END_REGION

//REGION Int Dev Swarm
IF
TurnEnded(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623)
AND
NOT DB_GlobalFlag(END_HighHallInterior_State_NautiloidLeft_ed57695e-adb6-4a4e-8f84-4e9dfc28f318)
THEN
PROC_END_HighHallInterior_TrySpawnIntDevSwarm();

PROC
PROC_END_HighHallInterior_TrySpawnIntDevSwarm()
AND
DB_END_HighHallInterior_FirstIndDevSwarmWaveSpawned(1)
AND
SysCount("DB_END_HighHallInterior_IntDevSwarmEnemy", 1, _Count)
AND
DB_END_HighHallInterior_IntDevSwarmEnemyMaxCount(_MaxCount)
AND
IntegerSubtract(_MaxCount, _Count, _ReplaceCount)
THEN
NOT DB_END_HighHallInterior_FoundValidIntDevSwarmPoint(1);
PROC_END_HighHallInterior_ClearFurthestSafeRoomPlayerDB();
PROC_END_HighHallInterior_ClearNearestIntDevSwarmSpawnPointDB();
PROC_END_HighHallInterior_ReplaceIntDevsInSwarm((INTEGER)_ReplaceCount);

PROC
PROC_END_HighHallInterior_ReplaceIntDevsInSwarm((INTEGER)_Num)
AND
QRY_END_HighHallInterior_GetFurthestPlayerFromSafeRoom()
AND
DB_QRYRTN_END_HighHallInterior_FurthestPlayerFromSafeRoom(_Player, _)
AND
QRY_END_HighHallInterior_GetNearestIntDevSwarmSpawnPoint((CHARACTER)_Player)
AND
DB_QRYRTN_END_HighHallInterior_NearestIntDevSwarmSpawnPoint(_Trigger, _)
THEN
DB_END_HighHallInterior_FoundValidIntDevSwarmPoint(1);
PROC_END_HighHallInterior_StartBrainquakeShakeAndVFX(0);
DB_END_HighHallInterior_IntDevSwarmCountAndLocation(_Num, _Trigger);
RealtimeObjectTimerLaunch(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623, "END_HighHallInterior_SwarmQuakeTimer", 2500);

IF
ObjectTimerFinished(_, "END_HighHallInterior_SwarmQuakeTimer")
AND
DB_END_HighHallInterior_IntDevSwarmCountAndLocation(_Num, _Trigger)
THEN
NOT DB_END_HighHallInterior_IntDevSwarmCountAndLocation(_Num, _Trigger);
PROC_END_HighHallInterior_SpawnIntDevsInSwarm(_Num, _Trigger);

//Fallback for the edge case a player intetionally keeps a character near the entrance behind the furthest spawn point
PROC
PROC_END_HighHallInterior_ReplaceIntDevsInSwarm((INTEGER)_Num)
AND
NOT DB_END_HighHallInterior_FoundValidIntDevSwarmPoint(1)
THEN
PROC_END_HighHallInterior_SpawnIntDevsInSwarm(_Num, S_END_IntDevSwarmSpawnBox_4c502fa0-0dda-4e58-b55e-56b363256448);

PROC
PROC_END_HighHallInterior_SpawnIntDevsInSwarm((INTEGER)_Num, (TRIGGER)_Trigger)
AND
QRY_DoNTimes(_Num)
AND
DB_QRY_RTN_DoNTimes(_)
AND
TriggerGetRandomPosition((TRIGGER)_Trigger, _X, _Y, _Z)
AND
FindValidPosition(_X, _Y, _Z, 5.0, S_END_AbsoluteCannonFodder_001_fa170adf-bc09-4143-8aba-e0286231a8b4, 0, _VX, _VY, _VZ)
AND
Random(3, _Index)
AND
DB_END_HighHallInterior_IntDevSubSpawnPoints(_Trigger, _Point, _Index)
AND
GetPosition(S_END_SwarmIntDevCreatePoint_53ddaea8-3c38-4318-80ab-c1e07e11aad5, _PointX, _PointY, _PointZ)
AND
CreateAt(END_Intellect_Devourer_PodStrike_880c04e1-ed67-4233-b10f-163d007c8083, _PointX, _PointY, _PointZ, 1, 1, "END_HighHalInterior_IntDevSwarmSpawned", _IntDev)
THEN
DB_END_HighHallInterior_Enemies((CHARACTER)_IntDev);
DB_END_HighHallInterior_IntDevSwarmEnemy((CHARACTER)_IntDev);
DB_END_HighHallInterior_ReadiedIntSwarmPositions(_IntDev, _Point, _VX, _VY, _VZ);

QRY
QRY_END_HighHallInterior_GetNearestIntDevSwarmSpawnPoint((CHARACTER)_Player)
AND
DB_END_HighHallInterior_IntDevSpawnPoints(_Trigger)
AND
GetPosition(_Player, _PlayerX, _, _)
AND
GetPosition(_Trigger, _TriggerX, _, _)
AND
_TriggerX <= _PlayerX //To keep them swarming behind the player, drop pods already act as intercept
AND
RealSubtract(_PlayerX, _TriggerX, _Difference)
AND
_Difference > 8.0
AND
GetDistanceTo(_Player, _Trigger, _Dist)
THEN
DB_QRYRTN_END_HighHallInterior_NearestIntDevSwarmSpawnPoint(_Trigger, _Dist);

PROC
PROC_END_HighHallInterior_ClearNearestIntDevSwarmSpawnPointDB()
AND
DB_QRYRTN_END_HighHallInterior_NearestIntDevSwarmSpawnPoint(_Trigger, _Dist)
THEN
NOT DB_QRYRTN_END_HighHallInterior_NearestIntDevSwarmSpawnPoint(_Trigger, _Dist);

IF
DB_QRYRTN_END_HighHallInterior_NearestIntDevSwarmSpawnPoint(_Trigger1, _Dist1)
AND
DB_QRYRTN_END_HighHallInterior_NearestIntDevSwarmSpawnPoint(_Trigger2, _Dist2)
AND
_Trigger1 != _Trigger2
AND
_Dist2 >= _Dist1
THEN
NOT DB_QRYRTN_END_HighHallInterior_NearestIntDevSwarmSpawnPoint(_Trigger2, _Dist2);

PROC
PROC_END_HighHallInterior_TrySpawnIntDevSwarm()
AND
NOT DB_END_HighHallInterior_FirstIndDevSwarmWaveSpawned(1)
AND
DB_END_HighHallInterior_IntDevSwarmEnemyMaxCount(_MaxCount)
THEN
DB_END_HighHallInterior_FirstIndDevSwarmWaveSpawned(1);
PROC_END_HighHallInterior_SpawnIntDevsInSwarm(_MaxCount, S_END_IntDevSwarmSpawnBox_4c502fa0-0dda-4e58-b55e-56b363256448);

IF
EntityEvent(_IntDev, "END_HighHalInterior_IntDevSwarmSpawned")
AND
DB_END_HighHallInterior_ReadiedIntSwarmPositions((CHARACTER)_IntDev, _Point, _VX, _VY, _VZ)
THEN
LookFromTrigger(_IntDev, _Point, 1);
SetEntityEvent( _IntDev , "GLO_BlockCombatFallbackAD", 1);
RequestSetSwarmGroup(_IntDev, "END_HighHallInterior_IntDevs");
AppearAt(_IntDev,_Point, 1, UTIL_Spawn_01_510ff37e-0618-40e4-8ce0-236e3dc9c291,"");
DB_END_HighHallInterior_WaitingToOnStage(_IntDev); //Characters created go off stage before being set on stage. Going off stage clears any story moves

IF
WentOnStage(_IntDev, 1)
AND
DB_END_HighHallInterior_WaitingToOnStage((CHARACTER)_IntDev)
AND
DB_END_HighHallInterior_ReadiedIntSwarmPositions((CHARACTER)_IntDev, _Point, _VX, _VY, _VZ)
THEN
NOT DB_END_HighHallInterior_WaitingToOnStage(_IntDev);
NOT DB_END_HighHallInterior_ReadiedIntSwarmPositions(_IntDev, _Point, _VX, _VY, _VZ);
PROC_CharacterMoveToPosition(_IntDev, _VX, _VY, _VZ, "Sprint", "END_HighHalInterior_IntDevSwarmArrivedAtReadyPoint");

IF
EntityEvent(_IntDev, "END_HighHalInterior_IntDevSwarmArrivedAtReadyPoint")
AND
GetCombatGroupID(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623,_CombatGroup)
THEN
SetCombatGroupID(_IntDev, _CombatGroup);

IF
Died(_IntDev)
AND
DB_END_HighHallInterior_IntDevSwarmEnemy(_IntDev)
THEN
NOT DB_END_HighHallInterior_IntDevSwarmEnemy(_IntDev);

QRY
QRY_END_HighHallInterior_GetFurthestPlayerFromSafeRoom()
AND
DB_PartyMembers(_Player)
AND
DB_InRegion(_Player, S_END_NautiloidCannonPoly_dcf15690-5483-40b2-8753-5d44a40ceb21)
AND
NOT DB_Defeated(_Player)
AND
GetDistanceTo(_Player, S_END_PlayerDistancePoint_7f7cced3-1d3c-4f31-b2b3-040b1ce05d60, _Dist)
THEN
DB_QRYRTN_END_HighHallInterior_FurthestPlayerFromSafeRoom(_Player, _Dist);

PROC
PROC_END_HighHallInterior_ClearFurthestSafeRoomPlayerDB()
AND
DB_QRYRTN_END_HighHallInterior_FurthestPlayerFromSafeRoom(_Player, _Dist)
THEN
NOT DB_QRYRTN_END_HighHallInterior_FurthestPlayerFromSafeRoom(_Player, _Dist);

IF
DB_QRYRTN_END_HighHallInterior_FurthestPlayerFromSafeRoom(_Player1, _Dist1)
AND
DB_QRYRTN_END_HighHallInterior_FurthestPlayerFromSafeRoom(_Player2, _Dist2)
AND
_Player2 != _Player1
AND
_Dist2 <= _Dist1
THEN
NOT DB_QRYRTN_END_HighHallInterior_FurthestPlayerFromSafeRoom(_Player2, _Dist2);
//END_REGION

//REGION Nautiloid Bombardment - Warning Shot & Start
//Wacky work around for making sure the camera moves to each point, Nautiloid will move to each target position and fire on itself before returning to origin position
PROC
PROC_END_HighHallInterior_GetCannonHelperOrigin()
AND
GetPosition(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623,_X,_Y,_Z)
THEN
DB_END_NautiloidHelper_Position(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623,_X,_Y,_Z);
SetTag(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623,(TAG)CHASM_IMMUNE_1063224a-a5ab-41b1-b309-0ac730e4e8ce);
SetTag(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623,(TAG)IGNORE_CHASMS_a50cb0b1-29a6-4711-a71d-0dc3e3642287);

PROC
PROC_END_HighHallInterior_GetNautiloidOrigin()
AND
GetPosition(S_END_Nautiloid_001_2566e431-2d5a-45b4-9e6c-6cf04e01404d,_X,_Y,_Z)
AND
RealSum(_Y, 300.0, _HiddenY)
THEN
DB_END_HighHallInterior_NautiloidStartPosition(S_END_Nautiloid_001_2566e431-2d5a-45b4-9e6c-6cf04e01404d, _X, _Y, _Z);
TeleportToPosition(S_END_Nautiloid_001_2566e431-2d5a-45b4-9e6c-6cf04e01404d,_X,_HiddenY,_Z,"",0,0,0,0,0);

PROC
PROC_END_HighHallInterior_SpawnNautiloid()
AND
QRY_OnlyOnce("END_HighHallInterior_SpawnNautiloidOnce")
AND
DB_END_HighHallInterior_NautiloidStartPosition(S_END_Nautiloid_001_2566e431-2d5a-45b4-9e6c-6cf04e01404d, _X, _Y, _Z)
THEN
TeleportToPosition(S_END_Nautiloid_001_2566e431-2d5a-45b4-9e6c-6cf04e01404d,_X,_Y,_Z,"",0,0,0,0,0);
PROC_END_HighHallInterior_ForceUpdateNautiloid();

PROC
PROC_END_HighHallInterior_ForceUpdateNautiloid()
THEN
PROC_END_NautiloidStrike_SetForceUpdate(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623, 1);
PROC_END_NautiloidStrike_SetForceUpdate(S_END_Nautiloid_001_2566e431-2d5a-45b4-9e6c-6cf04e01404d, 1);

PROC
PROC_END_HighHallInterior_ForceUpdateNautiloid()
AND
DB_END_HighHallInterior_Cannons(_Cannon)
THEN
SetOnStage(_Cannon, 1);

IF
WentOnStage(_Cannon, 1)
AND
DB_END_HighHallInterior_Cannons((CHARACTER)_Cannon)
THEN
PROC_END_NautiloidStrike_SetForceUpdate(_Cannon, 1);

IF
DB_END_HighHallInterior_NautiloidSpotterHelpers(_Char)
THEN
ApplyStatus(_Char, "INVULNERABLE_NOT_SHOWN", -1.0, 1, S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623);

IF
DB_END_HighHallInterior_WarningShotTargetTriggers(_Trigger)
THEN
PROC_TriggerRegisterForParty(_Trigger);

IF
DB_END_HighHallInterior_WarningShotTargetTriggers(_Trigger)
AND
DB_END_HighHallInterior_Enemies(_Char)
THEN
TriggerRegisterForCharacter(_Trigger, _Char);

//REGION # Combat Start
IF
DB_InRegion(_Player, S_END_NautiloidCannonPoly_dcf15690-5483-40b2-8753-5d44a40ceb21)
AND
DB_PartyMembers(_Player)
AND
NOT DB_HiddenCharacters(_Player, _)
AND
NOT DB_Defeated(_Player)
AND
DB_END_HighHallInterior_WarningShotFired(1)
AND
NOT DB_GlobalFlag(END_HighHallInterior_State_NautiloidLeft_ed57695e-adb6-4a4e-8f84-4e9dfc28f318)
AND
NOT DB_END_HighHallInterior_NautiloidLeavingCombat(1)
AND
NOT DB_END_HighHallInterior_CombatActive(1)
THEN
DB_END_HighHallInterior_CombatActive(1);
PROC_END_HighHallInterior_StartNautiloidEncounter((CHARACTER)_Player);

PROC
PROC_END_HighHallInterior_StartNautiloidEncounter((CHARACTER)_Player)
AND
DB_OnlyOnce("END_HighHallInterior_ArenaCameraIntroOnce")
THEN
PROC_END_HighHallInterior_NautiloidReadyCombat((CHARACTER)_Player);
PROC_END_HighHallInterior_SelectTargets();
PROC_END_HighHallInterior_TryTargetDropPod();

PROC
PROC_END_HighHallInterior_StartNautiloidEncounter((CHARACTER)_Player)
AND
NOT DB_OnlyOnce("END_HighHallInterior_ArenaCameraIntroOnce")
AND
NOT DB_END_HighHallInterior_WaitAfterJoinCombatCamera(_)
THEN
DB_END_HighHallInterior_WaitAfterJoinCombatCamera(_Player);
PROC_END_HighHallInterior_NautiloidReadyCombat((CHARACTER)_Player);

IF
EnteredCombat(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623, _)
AND
DB_END_HighHallInterior_WaitAfterJoinCombatCamera(_Player)
THEN
PROC_END_HighHallInterior_TryStartArenaCameraIntro(_Player, 1);
NOT DB_END_HighHallInterior_WaitAfterJoinCombatCamera(_Player);

PROC
PROC_END_HighHallInterior_TryStartArenaCameraIntro((CHARACTER)_Player,(INTEGER)_NotStealth)
AND
NOT DB_GlobalFlag(END_HighHallInterior_State_NautiloidLeft_ed57695e-adb6-4a4e-8f84-4e9dfc28f318)
THEN
PROC_END_HighHallInterior_StartArenaCameraIntro(_Player, _NotStealth);

PROC
PROC_END_HighHallInterior_StartArenaCameraIntro(_, _)
AND
NOT DB_GlobalFlag(END_HighHallInterior_State_NautiloidArrived_31c66f5f-9606-42bf-a315-c06430504065)
THEN
SetFlag(END_HighHallInterior_State_NautiloidArrived_31c66f5f-9606-42bf-a315-c06430504065);

PROC
PROC_END_HighHallInterior_StartArenaCameraIntro((CHARACTER)_Player, 1)
THEN
RealtimeObjectTimerLaunch(_Player, "END_HighHallInterior_ArenaCameraIntroCombatStartTimer", 5800);

PROC
PROC_END_HighHallInterior_StartArenaCameraIntro((CHARACTER)_Player, 1)
AND
DB_Is_InCombat(_Player, _ID)
THEN
DB_END_HighHallInterior_PausedCombatPlayer(_Player, _ID);
PauseCombat(_ID);

IF
SwitchedCombat(_Player, _OldID, _NewID)
AND
DB_END_HighHallInterior_PausedCombatPlayer((CHARACTER)_Player, _OldID)
THEN
NOT DB_END_HighHallInterior_PausedCombatPlayer(_Player, _OldID);
DB_END_HighHallInterior_PausedCombatPlayer(_Player, _NewID);

PROC
PROC_END_HighHallInterior_StartArenaCameraIntro((CHARACTER)_, (INTEGER)_)
AND
QRY_OnlyOnce("END_HighHallInterior_ArenaCameraIntroOnce")
AND
DB_PartyMembers(_Player)
AND
DB_InRegion(_Player, S_END_NautiloidCannonPoly_dcf15690-5483-40b2-8753-5d44a40ceb21)
THEN
DB_END_HighHallInterior_WaitingForCamera(_Player);
SendArenaCameraEvent(_Player, NULL_00000000-0000-0000-0000-000000000000, "END_HighHallInterior_NautiloidArrivedCamera");

PROC
PROC_END_HighHallInterior_StartArenaCameraIntro((CHARACTER)_, (INTEGER)_)
AND
QRY_OnlyOnce("END_HighHallInterior_ShowReachNetherbrainUIOnce")
THEN
QuestMessageShow("END_HighHallInterior_ReachNetherbrainID", "END_HighHallInterior_ReachNetherbrainQuestMessage");

IF
ObjectTimerFinished(_Player, "END_HighHallInterior_ArenaCameraIntroCombatStartTimer")
THEN
PROC_END_HighHallInterior_SelectTargets();
PROC_END_HighHallInterior_TryTargetDropPod();

IF
ObjectTimerFinished(_, "END_HighHallInterior_ArenaCameraIntroCombatStartTimer")
AND
DB_END_HighHallInterior_PausedCombatPlayer(_Player, _ID)
THEN
ResumeCombat(_ID);
NOT DB_END_HighHallInterior_PausedCombatPlayer(_Player, _ID);

PROC
PROC_END_HighHallInterior_StartArenaCameraIntro((CHARACTER)_Player, 0)
THEN
RealtimeObjectTimerLaunch(_Player, "END_HighHallInterior_ArenaCameraIntroStealthStartTimer", 5800);

IF
DB_END_HighHallInterior_WaitingForCamera(_Player)
THEN
RealtimeObjectTimerLaunch(_Player, "END_HighHallInterior_FirstKeepGoingADTimer", 7500);

IF
ObjectTimerFinished(_Player, "END_HighHallInterior_FirstKeepGoingADTimer")
AND
DB_END_HighHallInterior_WaitingForCamera((CHARACTER)_Player)
THEN
NOT DB_END_HighHallInterior_WaitingForCamera(_Player);
PROC_END_HighHallInterior_TryAfterCameraAD(_Player);

//Stealth start
PROC
PROC_END_HighHallInterior_TryAfterCameraAD((CHARACTER)_Player)
AND
NOT DB_END_HighHallInterior_CombatActive(1)
AND
DB_Players(_Player)
AND
QRY_OnlyOnce("END_HighHallInterior_BombardmentStartAD")
THEN
PROC_TryStartAD(END_HighHallInterior_PAD_BombardmentStart_d48f4668-70e9-5684-e1d6-00dc2f3ea616, _Player);

//Combat start if the first turn is a player
PROC
PROC_END_HighHallInterior_TryAfterCameraAD((CHARACTER)_Player)
AND
DB_END_HighHallInterior_CombatActive(1)
AND
DB_END_HighHallInterior_CurrentActivePartyMember(_Player)
AND
DB_Players(_Player)
AND
QRY_OnlyOnce("END_HighHallInterior_BombardmentStartAD")
THEN
PROC_TryStartAD(END_HighHallInterior_PAD_BombardmentStart_d48f4668-70e9-5684-e1d6-00dc2f3ea616, _Player);

IF
DB_InRegion(_Player, S_END_NautiloidCannonPoly_dcf15690-5483-40b2-8753-5d44a40ceb21)
AND
DB_PartyMembers(_Player)
AND
NOT DB_HiddenCharacters(_Player, _)
AND
NOT DB_Defeated(_Player)
AND
DB_END_HighHallInterior_WarningShotFired(1)
AND
NOT DB_GlobalFlag(END_HighHallInterior_State_NautiloidLeft_ed57695e-adb6-4a4e-8f84-4e9dfc28f318)
AND
DB_END_HighHallInterior_CombatActive(1)
AND
GetCombatGroupID(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623,_CombatGroup)
THEN
SetCombatGroupID(_Player, _CombatGroup);
PROC_END_HighHallInterior_NautiloidJoinCombat((CHARACTER)_Player, (CHARACTER)S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623);

PROC
PROC_END_HighHallInterior_NautiloidReadyCombat((CHARACTER)_Player)
THEN
SetCanJoinCombat(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623, 1); //To control the bounds that the Nautiloid will stay in combat with the player
PROC_END_HighHallInterior_SpawnNautiloid();
PROC_END_HighHallInterior_NautiloidJoinCombat((CHARACTER)_Player, (CHARACTER)S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623);

PROC
PROC_END_HighHallInterior_NautiloidReadyCombat((CHARACTER)_Player)
AND
DB_END_HighHallInterior_NautiloidSpotterHelpers(_Char)
THEN
SetCanJoinCombat(_Char, 1);
PROC_END_NautiloidStrike_SetForceUpdate(_Char, 1);
PROC_END_HighHallInterior_NautiloidJoinCombat((CHARACTER)_Player, (CHARACTER)_Char);

PROC
PROC_END_HighHallInterior_NautiloidJoinCombat((CHARACTER)_Player, (CHARACTER)_Enemy)
AND
DB_END_HighHallInterior_CannonCombatID(_ID)
AND
NOT DB_Is_InCombat(_Player, _ID)
THEN
PROC_EnterCombat(_Enemy, _Player);

IF
EnteredCombat(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623, _NewID)
AND
DB_END_HighHallInterior_CannonCombatID(_OldID)
THEN
NOT DB_END_HighHallInterior_CannonCombatID(_OldID);
DB_END_HighHallInterior_CannonCombatID(_NewID);

IF
SwitchedCombat(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623, _OldID, _NewID)
AND
DB_END_HighHallInterior_CannonCombatID(_OldID)
THEN
NOT DB_END_HighHallInterior_CannonCombatID(_OldID);
DB_END_HighHallInterior_CannonCombatID(_NewID);

IF
LeftTrigger(_Player, S_END_NautiloidCannonPoly_dcf15690-5483-40b2-8753-5d44a40ceb21)
AND
DB_PartyMembers((CHARACTER)_Player)
AND
GetCombatGroupID(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623,_NautiloidCombatGroup)
AND
GetCombatGroupID(_Player,_PlayerCombatGroup)
AND
_NautiloidCombatGroup == _PlayerCombatGroup
THEN
SetCombatGroupID(_Player, "");

IF
CombatRoundStarted(_ID, _)
AND
NOT DB_GlobalFlag(END_HighHallInterior_State_NautiloidLeft_ed57695e-adb6-4a4e-8f84-4e9dfc28f318)
AND
DB_END_HighHallInterior_CannonCombatID(_ID)
AND
DB_END_HighHallInterior_PlayerADTurnCount(_OldCount)
AND
IntegerSum(_OldCount, 1, _NewCount) //So if the player leaves and joins combat it will resume where it left off
THEN
NOT DB_END_HighHallInterior_PlayerADTurnCount(_OldCount);
DB_END_HighHallInterior_PlayerADTurnCount(_NewCount);

IF
TurnStarted(_Player)
AND
NOT DB_GlobalFlag(END_HighHallInterior_State_NautiloidLeft_ed57695e-adb6-4a4e-8f84-4e9dfc28f318)
AND
DB_Players((CHARACTER)_Player)
AND
DB_Is_InCombat(_Player, _ID)
AND
NOT DB_CantTalk_IgnoreCombat(_Player)
AND
DB_END_HighHallInterior_CannonCombatID(_ID)
AND
NOT DB_END_HighHallInterior_WaitingForCamera(_Player)
THEN
PROC_END_HighHallInterior_TryPlayerKeepGoingAD(_Player);

PROC
PROC_END_HighHallInterior_TryPlayerKeepGoingAD((CHARACTER)_Player)
AND
QRY_OnlyOnce("END_HighHallInterior_BombardmentStartAD")
THEN
PROC_TryStartAD(END_HighHallInterior_PAD_BombardmentStart_d48f4668-70e9-5684-e1d6-00dc2f3ea616, _Player);

PROC
PROC_END_HighHallInterior_TryPlayerKeepGoingAD((CHARACTER)_Player)
AND
DB_END_HighHallInterior_PlayerADTurnCount(2)
AND
QRY_OnlyOnce("END_HighHallInterior_KeepGoingAD1")
THEN
PROC_TryStartAD(END_HighHallInterior_PAD_KeepGoing_dbbffe8b-a15a-c617-950c-4236350f7fb8, _Player);

PROC
PROC_END_HighHallInterior_TryPlayerKeepGoingAD((CHARACTER)_Player)
AND
DB_END_HighHallInterior_PlayerADTurnCount(4)
AND
QRY_OnlyOnce("END_HighHallInterior_KeepGoingAD2")
THEN
PROC_TryStartAD(END_HighHallInterior_PAD_KeepGoing_dbbffe8b-a15a-c617-950c-4236350f7fb8, _Player);

IF
TurnStarted(S_GLO_Orpheus_47c90728-af68-4cbc-baaa-6497eebd8d7e)
AND
DB_END_IllithidOptionsFollower_Follower(S_GLO_Orpheus_47c90728-af68-4cbc-baaa-6497eebd8d7e, _, _, _)
AND
NOT DB_GlobalFlag(END_HighHallInterior_State_NautiloidLeft_ed57695e-adb6-4a4e-8f84-4e9dfc28f318)
AND
DB_Is_InCombat(S_GLO_Orpheus_47c90728-af68-4cbc-baaa-6497eebd8d7e, _ID)
AND
NOT DB_CantTalk_IgnoreCombat(S_GLO_Orpheus_47c90728-af68-4cbc-baaa-6497eebd8d7e)
AND
DB_END_HighHallInterior_CannonCombatID(_ID)
AND
QRY_OnlyOnce("END_HighHallInterior_OrpheusCombatADOnce")
THEN
PROC_TryStartAD(END_HighHallInterior_AD_OrpheusCombatStart_ff44aa46-b473-b9e3-3533-debe8bad747b, S_GLO_Orpheus_47c90728-af68-4cbc-baaa-6497eebd8d7e);

//END_REGION

//REGION # Stealth Check
IF
DB_InRegion(_Player, S_END_WarningShotPoly_e7b609df-682c-47a3-a6c2-977b0f5e1f81)
AND
DB_PartyMembers(_Player)
AND
DB_HiddenCharacters(_Player, _)
AND
NOT DB_Is_InCombat(_Player, _)
AND
QRY_OnlyOnce("END_HighHallInterior_StealthNautiloidIntro")
THEN
PROC_END_HighHallInterior_TryStartArenaCameraIntro(_Player, 0);

//Do a stealth check on all players in the region when combat starts
PROC
PROC_END_HighHallInterior_NautiloidReadyCombat((CHARACTER)_InitiatedPlayer)
AND
QRY_OnlyOnce("END_HighHallInterior_StealthCheck")
AND
DB_InRegion(_StealthPlayer, S_END_NautiloidCannonPoly_dcf15690-5483-40b2-8753-5d44a40ceb21)
AND
DB_PartyMembers(_StealthPlayer)
AND
DB_HiddenCharacters(_StealthPlayer, _)
AND
NOT DB_Is_InCombat(_StealthPlayer, _)
AND
_InitiatedPlayer != _StealthPlayer
THEN
PROC_END_HighHallInterior_CheckForStealth((CHARACTER)_StealthPlayer);

PROC
PROC_END_HighHallInterior_CheckForStealth((CHARACTER)_Player)
AND
// No point in trying to remove sneaking when we're hidden because invisible
HasActiveStatus(_Player, "SNEAKING", 1)
AND
NOT DB_GlobalFlag(END_HighHallInterior_State_NautiloidLeft_ed57695e-adb6-4a4e-8f84-4e9dfc28f318)
THEN
RequestPassiveRoll(_Player, S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623, "SkillCheck", "Stealth", (DIFFICULTYCLASS)Act3_VeryHard_60916b01-ba4c-418e-9f30-19a669704b4d, 0, "END_HighHallInterior_NautiloidStealthCheck");

IF
RollResult("END_HighHallInterior_NautiloidStealthCheck", _Player, _, 0, _, _)
THEN
RemoveStatus(_Player, "SNEAKING");

PROC
PROC_END_HighHallInterior_StartArenaCameraIntro((CHARACTER)_Player, 0)
AND
DB_InRegion(_Player, S_END_WarningShotPoly_e7b609df-682c-47a3-a6c2-977b0f5e1f81)
AND
DB_PartyMembers(_Player)
AND
DB_HiddenCharacters(_Player, _)
AND
NOT DB_Is_InCombat(_Player, _)
AND
IsInForceTurnBasedMode(_Player, 0)
THEN
ForceTurnBasedMode(_Player, 1);

//END_REGION

//REGION # Warning Shot
IF
DB_InRegion(_Player, S_END_WarningShotPoly_e7b609df-682c-47a3-a6c2-977b0f5e1f81)
AND
DB_PartyMembers(_Player)
AND
NOT DB_HiddenCharacters(_Player, _)
AND
NOT DB_END_HighHallInterior_WarningShotFired(1)
AND
NOT DB_GlobalFlag(END_HighHallInterior_State_NautiloidLeft_ed57695e-adb6-4a4e-8f84-4e9dfc28f318)
AND
QRY_OnlyOnce("END_HighHallInterior_WarningShot")
THEN
SetFlag(END_HighHallInterior_State_BombardmentStarted_a1c156fb-3ace-46eb-800c-9c452f0a10ea);
PROC_END_HighHallInterior_WarningShot();

//To cover the edge case the player starts combat with a patroller outside the warningshot trigger
IF
DB_Is_InCombat(_Patroller, _ID)
AND
DB_END_HighHallInterior_Patrollers((CHARACTER)_Patroller)
AND
DB_PartyMembers(_Player)
AND
DB_Is_InCombat(_Player, _ID)
AND
NOT DB_END_HighHallInterior_WarningShotFired(1)
AND
NOT DB_GlobalFlag(END_HighHallInterior_State_NautiloidLeft_ed57695e-adb6-4a4e-8f84-4e9dfc28f318)
AND
QRY_OnlyOnce("END_HighHallInterior_WarningShot")
THEN
SetFlag(END_HighHallInterior_State_BombardmentStarted_a1c156fb-3ace-46eb-800c-9c452f0a10ea);
PROC_END_HighHallInterior_WarningShot();

PROC
PROC_END_HighHallInterior_WarningShot()
AND
DB_END_HighHallInterior_WarningShotTargetTriggers(_Trigger)
AND
Random(1500, _Time) //Stagger the fire
THEN
ObjectTimerLaunch(_Trigger, "END_HighHallInterior_WarningShotFire", _Time, 0);

IF
ObjectTimerFinished(_Trigger, "END_HighHallInterior_WarningShotFire")
AND
DB_END_HighHallInterior_WarningShotTargetTriggers((TRIGGER)_Trigger)
AND
NOT QRY_END_HighHallInterior_CharacterIsInWarningShotTrigger(_Trigger)
THEN
CreateProjectileStrikeAt(_Trigger,"ProjectileStrike_END_HighHallInterior_NautiloidWarningStrike");
NOT DB_END_HighHallInterior_WarningShotTargetTriggers(_Trigger);
PROC_END_HighHallInterior_CheckForWarningShotComplete();

//Avoid hitting characters with the warning shot
IF
ObjectTimerFinished(_Trigger, "END_HighHallInterior_WarningShotFire")
AND
DB_END_HighHallInterior_WarningShotTargetTriggers((TRIGGER)_Trigger)
AND
QRY_END_HighHallInterior_CharacterIsInWarningShotTrigger((TRIGGER)_Trigger)
THEN
NOT DB_END_HighHallInterior_WarningShotTargetTriggers(_Trigger);
PROC_END_HighHallInterior_CheckForWarningShotComplete();

QRY
QRY_END_HighHallInterior_CharacterIsInWarningShotTrigger((TRIGGER)_Trigger)
AND
DB_PartyMembers(_Player)
AND
IsInTrigger(_Player, _Trigger, 1)
THEN
DB_NOOP(1);

QRY
QRY_END_HighHallInterior_CharacterIsInWarningShotTrigger((TRIGGER)_Trigger)
AND
DB_END_HighHallInterior_Enemies(_Char)
AND
IsInTrigger(_Char, _Trigger, 1)
THEN
DB_NOOP(1);

PROC
PROC_END_HighHallInterior_CheckForWarningShotComplete()
AND
NOT DB_END_HighHallInterior_WarningShotTargetTriggers(_)
THEN
TimerLaunch("END_HighHallInterior_CannonStartBuffer", 500);

IF
TimerFinished("END_HighHallInterior_CannonStartBuffer")
THEN
DB_END_HighHallInterior_WarningShotFired(1);
//END_REGION

//END_REGION
//REGION Nautiloid Bombardment - Firing
IF
TurnStarted(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623)
AND
DB_END_HighHallInterior_AllCannonsPrimedOnTargets(1)
THEN
NOT DB_OnlyOnce("END_HighHallInterior_PrePositionOncePerTurn");
PROC_END_HighHallInterior_PrePositionNautiloid(); //This is to try and reduce the amount of loading screens seen caused by jumping the large distance to the Nautiloid

PROC
PROC_END_HighHallInterior_PrePositionNautiloid()
AND
DB_END_NautiloidStrike_PrimedStrikeHelpers(_TargetHelper)
AND
NOT DB_OnlyOnce("END_HighHallInterior_PrePositionOncePerTurn")
THEN
DB_OnlyOnce("END_HighHallInterior_PrePositionOncePerTurn");
TeleportTo(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623, _TargetHelper, "END_HighHallInterior_ArrivedAtPrePosition");

IF
EntityEvent(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623, "END_HighHallInterior_ArrivedAtPrePosition")
THEN
NOT DB_END_HighHallInterior_AllCannonsPrimedOnTargets(1);
PROC_END_HighHallInterior_FiringCamera();
PROC_END_HighHallInterior_AnimateCannons();
SetEntityEvent(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623,"END_HighHallInterior_Firing");
SetEntityEvent(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623, "END_HighHallInterior_DropPod");

PROC
PROC_END_HighHallInterior_FiringCamera()
AND
DB_PartyMembers(_Player)
AND
DB_InRegion(_Player, S_END_NautiloidCannonPoly_dcf15690-5483-40b2-8753-5d44a40ceb21)
THEN
SendArenaCameraEvent(_Player, NULL_00000000-0000-0000-0000-000000000000, "END_HighHallInterior_CINE_NautiloidFires");

IF
EntityEvent(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623, "END_HighHallInterior_StartFiring")
THEN
PROC_END_NautiloidStrike_FireSequence();

PROC
PROC_END_HighHallInterior_AnimateCannons()
AND
DB_END_HighHallInterior_Cannons(_Cannon)
AND
Random(1500, _Time)
THEN
RealTimeObjectTimerLaunch(_Cannon, "END_HighHallInterior_AnimateCannon", _Time);

IF
ObjectTimerFinished(_Cannon, "END_HighHallInterior_AnimateCannon")
AND
DB_END_HighHallInterior_Cannons((CHARACTER)_Cannon)
THEN
SetEntityEvent(_Cannon, "END_NautiloidCannonFire", 1);

IF
EntityEvent(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623, "END_HighHallInterior_FireDropPod")
THEN
RealtimeObjectTimerLaunch(S_END_DropPodTargetHelper_001_e433abd4-015c-4cdd-a86d-a446105f7ea2, "END_HighHallInterior_ClearDropPodVFX", 1500);
TeleportTo(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623, S_END_DropPodTargetHelper_001_e433abd4-015c-4cdd-a86d-a446105f7ea2, "END_HighHallInterior_ArrivedAtDropPodPosition");

IF
EntityEvent(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623, "END_HighHallInterior_ArrivedAtDropPodPosition")
THEN
UseSpell(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623, "ProjectileStrike_END_HighHallInterior_IntDevMindFlayerPodStrike", S_END_DropPodTargetHelper_001_e433abd4-015c-4cdd-a86d-a446105f7ea2);

IF
ObjectTimerFinished(S_END_DropPodTargetHelper_001_e433abd4-015c-4cdd-a86d-a446105f7ea2, "END_HighHallInterior_ClearDropPodVFX")
THEN
RemoveStatus(S_END_DropPodTargetHelper_001_e433abd4-015c-4cdd-a86d-a446105f7ea2, "END_HIGHHALLINTERIOR_DROPPODTARGET_VFX");
RemoveStatus(S_END_DropPodTargetHelper_001_e433abd4-015c-4cdd-a86d-a446105f7ea2, "END_BOMBARDMENT_AI_AVOIDAREA");

IF
EntityEvent(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623, "END_HighHallInterior_DropPodsDone")
AND
DB_END_HighHallInterior_AvailableDropPodCount(_OldCount)
AND
IntegerSubtract(_OldCount, 1, _NewCount)
THEN
NOT DB_END_HighHallInterior_AvailableDropPodCount(_OldCount);
DB_END_HighHallInterior_AvailableDropPodCount(_NewCount);

PROC
PROC_END_NautiloidStrike_DropPodCharSet(_Char)
AND
GetCombatGroupID(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623,_CombatGroup)
THEN
SetCombatGroupID(_Char, _CombatGroup);
DB_END_HighHallInterior_Enemies((CHARACTER)_Char);

PROC
PROC_END_NautiloidStrike_MindFlayerPodCharSet(_Char)
THEN
DB_END_HighHallInterior_DropPodMindFlayers(_Char);
SetStayInAiHints(_Char, 1);
SetAiHint(_Char, AI_HINT_UNIQUE_1902723d-dd16-4e7a-87d6-7b07f63add79);
SetFaction(_Char, (FACTION)ACT3_END_HighHallNautiloid_8b226cb2-c089-49b5-b73c-6cca493df263);

PROC
PROC_END_NautiloidStrike_IntDevPodCharSet(_IntDev)
THEN
DB_END_HighHallInterior_DropPodIntDevs(_IntDev);
RequestSetSwarmGroup(_IntDev, "END_HighHallInterior_IntDevs");
SetFaction(_IntDev, (FACTION)ACT3_END_HighHallNautiloid_8b226cb2-c089-49b5-b73c-6cca493df263);

PROC
PROC_END_NautiloidStrike_IntDevPodDetonatorCharSet(_IntDev)
THEN
DB_END_HighHallInterior_DropPodIntDevs(_IntDev);
RequestSetSwarmGroup(_IntDev, "END_HighHallInterior_IntDevsDetonators");
SetStayInAiHints(_IntDev, 1);
SetAiHint(_IntDev, AI_HINT_UNIQUE_1902723d-dd16-4e7a-87d6-7b07f63add79);
SetFaction(_IntDev, (FACTION)ACT3_END_HighHallNautiloid_8b226cb2-c089-49b5-b73c-6cca493df263);

IF
Died(_IntDev)
AND
DB_END_HighHallInterior_DropPodIntDevs(_IntDev)
THEN
NOT DB_END_HighHallInterior_DropPodIntDevs(_IntDev);

IF
Died(_MindFlayer)
AND
DB_END_HighHallInterior_DropPodMindFlayers(_MindFlayer)
THEN
NOT DB_END_HighHallInterior_DropPodMindFlayers(_MindFlayer);
PROC_END_HighHallInterior_CheckAvailableDropPods();

PROC
PROC_END_HighHallInterior_CheckAvailableDropPods()
AND
DB_END_HighHallInterior_AvailableDropPodCount(_OldCount)
AND
IntegerSum(_OldCount, 1, _NewCount)
THEN
NOT DB_END_HighHallInterior_AvailableDropPodCount(_OldCount);
DB_END_HighHallInterior_AvailableDropPodCount(_NewCount);

//END_REGION
//REGION Nautiloid Bombardment - Target Select
//For first turn so that the player is not immidiatly bombarded in the case of bad inititiative roll
IF
TurnStarted(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623)
AND
NOT DB_END_HighHallInterior_AllCannonsPrimedOnTargets(1)
THEN
SetEntityEvent(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623,"END_HighHallInterior_Targeting");

IF
UsingSpell(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623, "Target_END_Nautiloid_HighHallInterior_Targeting", _, _, _)
AND
NOT DB_END_HighHallInterior_SelectedTargetsThisTurn(1)
THEN
DB_END_HighHallInterior_SelectedTargetsThisTurn(1);
PlaySound(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623, "SE_NB_ProjectileStrike_Prepare");
PROC_END_HighHallInterior_SelectTargets();

PROC
PROC_END_HighHallInterior_SelectTargets()
AND
DB_END_HighHallInterior_TotalTargetCount(_OldCount)
THEN
NOT DB_END_HighHallInterior_TotalTargetCount(_OldCount);
DB_END_HighHallInterior_TotalTargetCount(0);

PROC
PROC_END_HighHallInterior_SelectTargets()
AND
DB_END_HighHallInterior_PrimedCannonCount(_Count)
THEN
NOT DB_END_HighHallInterior_PrimedCannonCount(_Count);
DB_END_HighHallInterior_PrimedCannonCount(0);

PROC
PROC_END_IncreaseTotalTargetCount()
AND
DB_END_HighHallInterior_TotalTargetCount(_OldCount)
AND
IntegerSum(_OldCount, 1, _NewCount)
THEN
NOT DB_END_HighHallInterior_TotalTargetCount(_OldCount);
DB_END_HighHallInterior_TotalTargetCount(_NewCount);

//REGION # Player Target Select
PROC
PROC_END_HighHallInterior_SelectTargets()
AND
DB_END_HighHallInterior_TargetedPlayer(_Player)
THEN
NOT DB_END_HighHallInterior_TargetedPlayer(_Player);

PROC
PROC_END_HighHallInterior_SelectTargets()
THEN
PROC_END_HighHallInterior_SelectPlayerTargets();

PROC
PROC_END_HighHallInterior_SelectPlayerTargets()
AND
QRY_END_HighHallInterior_GetNearestPlayerToSafeRoom()
AND
DB_QRYRTN_END_HighHallInterior_NearestPlayerToSafeRoom(_Player, _)
AND
Random(1500, _Time)
THEN
DB_END_HighHallInterior_TargetedPlayer(_Player);
PROC_END_IncreaseTotalTargetCount();
RealTimeObjectTimerLaunch(_Player, "END_HighHallInterior_SelectPlayerTarget", _Time);

PROC
PROC_END_HighHallInterior_SelectPlayerTargets()
AND
DB_PartyMembers(_Player)
AND
DB_InRegion(_Player, S_END_NautiloidCannonPoly_dcf15690-5483-40b2-8753-5d44a40ceb21)
AND
NOT DB_QRYRTN_END_HighHallInterior_NearestPlayerToSafeRoom(_Player, _)
AND
NOT DB_HiddenCharacters(_Player, _)
AND
NOT DB_Defeated(_Player)
AND
NOT QRY_END_HighHallInterior_PlayerIsNearOtherTargetedPlayers(_Player, 5.0)
AND
Random(1500, _Time) //Stagger the selection VFX
THEN
DB_END_HighHallInterior_TargetedPlayer(_Player);
PROC_END_IncreaseTotalTargetCount();
RealTimeObjectTimerLaunch(_Player, "END_HighHallInterior_SelectPlayerTarget", _Time);

QRY
QRY_END_HighHallInterior_GetNearestPlayerToSafeRoom()
AND
QRY_END_HighHallInterior_ClearNearestSafeRoomPlayerDB()
AND
DB_PartyMembers(_Player)
AND
DB_InRegion(_Player, S_END_NautiloidCannonPoly_dcf15690-5483-40b2-8753-5d44a40ceb21)
AND
NOT DB_Defeated(_Player)
AND
GetDistanceTo(_Player, S_END_PlayerDistancePoint_7f7cced3-1d3c-4f31-b2b3-040b1ce05d60, _Dist)
THEN
DB_QRYRTN_END_HighHallInterior_NearestPlayerToSafeRoom(_Player, _Dist);

QRY
QRY_END_HighHallInterior_ClearNearestSafeRoomPlayerDB()
AND
DB_QRYRTN_END_HighHallInterior_NearestPlayerToSafeRoom(_Player, _Dist)
THEN
NOT DB_QRYRTN_END_HighHallInterior_NearestPlayerToSafeRoom(_Player, _Dist);

IF
DB_QRYRTN_END_HighHallInterior_NearestPlayerToSafeRoom(_Player1, _Dist1)
AND
DB_QRYRTN_END_HighHallInterior_NearestPlayerToSafeRoom(_Player2, _Dist2)
AND
_Player2 != _Player1
AND
_Dist2 >= _Dist1
THEN
NOT DB_QRYRTN_END_HighHallInterior_NearestPlayerToSafeRoom(_Player2, _Dist2);

QRY
QRY_END_HighHallInterior_PlayerIsNearOtherTargetedPlayers((CHARACTER)_Player, (REAL)_MinDist)
AND
DB_END_HighHallInterior_TargetedPlayer(_OtherPlayer)
AND
_Player != _OtherPlayer
AND
GetDistanceTo(_Player, _OtherPlayer, _Dist)
AND
_Dist <= _MinDist
THEN
DB_NOOP(1);

IF
ObjectTimerFinished(_Player, "END_HighHallInterior_SelectPlayerTarget")
AND
GetPosition(_Player, _X, _Y, _Z)
AND
QRY_END_HighHallInterior_RandomOffSetPlayerTargetPosition(_X, _Z)
AND
DB_QRY_RTN_RandomOffSetPlayerTargetPosition(_OffsetX, _OffsetZ)
AND
FindValidPosition(_OffsetX, _Y, _OffsetZ, 5.0, _Player, 0, _VX, _, _VZ)
THEN
NOT DB_QRY_RTN_RandomOffSetPlayerTargetPosition(_OffsetX, _OffsetZ);
PROC_END_NautiloidStrike_SetTarget(_VX, _VZ);
PROC_END_HighHallInterior_IncreasePrimedCount();

IF
DB_END_HighHallInterior_PositiveOrNegativeOptions(_Int1, _Int2)
THEN
DB_NOOP(1);

QRY
QRY_END_HighHallInterior_RandomOffSetPlayerTargetPosition((REAL)_X, (REAL)_Z)
AND
Random(4, _RandomX) //Amount of offset
AND
Random(4, _RandomZ)
AND
QRY_GetRandom("DB_END_HighHallInterior_PositiveOrNegativeOptions",2,"DB_QRY_RTN_END_HighHallInterior_RandomPositiveOrNegative")
AND
DB_QRY_RTN_END_HighHallInterior_RandomPositiveOrNegative(_PoNX, _PoNZ) //Positive or Negative offset
AND
IntegerProduct(_PoNX, _RandomX, _NewRandomX)
AND
IntegerProduct(_PoNZ, _RandomZ, _NewRandomZ)
AND
IntegerToReal(_NewRandomX, _RealRandomX)
AND
IntegerToReal(_NewRandomZ, _RealRandomZ)
AND
RealSum(_X, _RealRandomX, _OffsetX)
AND
RealSum(_Z, _RealRandomZ, _OffsetZ)
THEN
DB_QRY_RTN_RandomOffSetPlayerTargetPosition(_OffsetX, _OffsetZ);
NOT DB_QRY_RTN_END_HighHallInterior_RandomPositiveOrNegative(_PoNX, _PoNZ);
//END_REGION #

//REGION # Trigger Target Select
IF
DB_END_HighHallInterior_CannonCluster(_Trigger, _)
THEN
PROC_TriggerRegisterForParty(_Trigger);

IF
DB_END_HighHallInterior_CannonCluster(_Trigger, _)
AND
DB_END_HighHallInterior_Enemies(_Char)
THEN
TriggerRegisterForCharacter(_Trigger, _Char);

PROC
PROC_END_HighHallInterior_SelectTargets()
AND
DB_END_HighHallInterior_SelectedTargetTrigger(_Trigger)
THEN
NOT DB_END_HighHallInterior_SelectedTargetTrigger(_Trigger);

PROC
PROC_END_HighHallInterior_SelectTargets()
AND
DB_END_HighHallInterior_ActiveWave(_Wave)
AND
DB_END_HighHallInterior_WaveClusters(_Wave, _TotalAvailableClusters)
AND
QRY_DoNTimes(_TotalAvailableClusters) //Number of clusters
AND
DB_QRY_RTN_DoNTimes(_ClusterGroupInt)
AND
QRY_END_HighHallInterior_GetUnoccupiedTriggers((INTEGER)_ClusterGroupInt)
AND
DB_QRTN_END_HighHallInterior_UnoccupiedTriggerIndexCount(_TotalCount)
AND
_TotalCount >= 0
AND
Random(_TotalCount, _RandomIndex)
AND
DB_QRTN_END_HighHallInterior_UnoccupiedClusterTriggers(_Trigger, _RandomIndex)
AND
Random(1500, _Time) //Stagger the selection VFX
THEN
RealTimeObjectTimerLaunch(_Trigger, "END_HighHallInterior_SelectTarget", _Time);
DB_END_HighHallInterior_SelectedTargetTrigger(_Trigger);
PROC_END_IncreaseTotalTargetCount();

QRY
QRY_END_HighHallInterior_GetUnoccupiedTriggers((INTEGER)_)
AND
DB_QRTN_END_HighHallInterior_UnoccupiedClusterTriggers(_Trigger, _SelectInt)
THEN
NOT DB_QRTN_END_HighHallInterior_UnoccupiedClusterTriggers(_Trigger, _SelectInt);

QRY
QRY_END_HighHallInterior_GetUnoccupiedTriggers((INTEGER)_)
AND
DB_QRTN_END_HighHallInterior_UnoccupiedTriggerIndexCount(_TotalCount)
THEN
NOT DB_QRTN_END_HighHallInterior_UnoccupiedTriggerIndexCount(_TotalCount);
DB_QRTN_END_HighHallInterior_UnoccupiedTriggerIndexCount(-1);

QRY
QRY_END_HighHallInterior_GetUnoccupiedTriggers((INTEGER)_ClusterGroupInt)
AND
DB_END_HighHallInterior_CannonCluster(_Trigger, _ClusterGroupInt)
AND
NOT QRY_END_HighHallInterior_AnyCharacterInTargetTrigger((TRIGGER)_Trigger) //Reduces the amount of clustering of targets. Player will already be targeted, and don't want to target own units
AND
QRY_END_HighHallInterior_TriggerWithinPartyRange(_Trigger) //No need to bombard empty areas or far behind them
AND
DB_QRTN_END_HighHallInterior_UnoccupiedTriggerIndexCount(_OldCount)
AND
IntegerSum(_OldCount, 1, _NewCount)
THEN
NOT DB_QRTN_END_HighHallInterior_UnoccupiedTriggerIndexCount(_OldCount);
DB_QRTN_END_HighHallInterior_UnoccupiedTriggerIndexCount(_NewCount);
DB_QRTN_END_HighHallInterior_UnoccupiedClusterTriggers(_Trigger, _NewCount); //_NewCount == Index

//Party
QRY
QRY_END_HighHallInterior_AnyCharacterInTargetTrigger((TRIGGER)_Trigger)
AND
DB_PartyMembers(_Player)
AND
DB_InRegion(_Player, _Trigger)
THEN
DB_NOOP(1);

//Enemies
QRY
QRY_END_HighHallInterior_AnyCharacterInTargetTrigger((TRIGGER)_Trigger)
AND
DB_END_HighHallInterior_Enemies(_Char)
AND
DB_InRegion(_Char, _Trigger)
AND
NOT DB_END_HighHallInterior_IntDevSwarmEnemy(_Char) //Don't care about hitting Int Devs
AND
NOT DB_END_HighHallInterior_DropPodIntDevs(_Char)
THEN
DB_NOOP(1);

//Distance Check
QRY
QRY_END_HighHallInterior_TriggerWithinPartyRange((TRIGGER)_Trigger)
AND
DB_PartyMembers(_Player)
AND
DB_InRegion(_Player, S_END_NautiloidCannonPoly_dcf15690-5483-40b2-8753-5d44a40ceb21)
AND
GetPosition(_Player, _PlayerX, _, _PlayerZ)
AND
GetPosition(_Trigger, _TriggerX, _, _TriggerZ)
AND
RealSum(_PlayerX, 40.0, _MaxRangeX)
AND
RealSubtract(_PlayerX, 15.0, _MinRangeX)
AND
QRY_END_HighHallInterior_DistanceWithinMinMaxRange(_MinRangeX,_MaxRangeX,_TriggerX)
AND
RealSum(_PlayerZ, 25.0, _MaxRangeZ)
AND
RealSubtract(_PlayerZ, 25.0, _MinRangeZ)
AND
QRY_END_HighHallInterior_DistanceWithinMinMaxRange(_MinRangeZ,_MaxRangeZ,_TriggerZ)
AND
GUIDToString(_Trigger, _TriggerString)
AND
Concatenate(_TriggerString, " is within player targeting range.", _TriggerDebugString)
THEN
DebugBreak(_TriggerDebugString);
DB_NOOP(1);

QRY
QRY_END_HighHallInterior_DistanceWithinMinMaxRange((REAL)_Min,(REAL)_Max,(REAL)_Current)
AND
_Current <= _Max
AND
_Current >= _Min
THEN
DB_NOOP(1);

IF
ObjectTimerFinished(_Target, "END_HighHallInterior_SelectTarget")
AND
TriggerGetRandomPosition((TRIGGER)_Target,_X,_Y,_Z)
THEN
NOT DB_END_HighHallInterior_FoundValidTriggerPosition(1);
PROC_END_HighHallInterior_TrySetTriggerTarget(_Target, _X, _Y, _Z);

PROC
PROC_END_HighHallInterior_TrySetTriggerTarget((TRIGGER)_Target, (REAL)_X, (REAL)_Y, (REAL)_Z)
AND
FindValidPosition(_X, _Y, _Z, 5.0, S_END_NautiloidStrikeTargetHelper_001_d9f6374e-f2ec-42e1-8be8-59f24e9c0091, 0, _VX, _VY, _VZ)
THEN
DB_END_HighHallInterior_FoundValidTriggerPosition(1);
PROC_END_NautiloidStrike_SetTarget(_VX, _VZ);
PROC_END_HighHallInterior_IncreasePrimedCount();

PROC
PROC_END_HighHallInterior_TrySetTriggerTarget((TRIGGER)_Target, (REAL)_, (REAL)_, (REAL)_)
AND
NOT DB_END_HighHallInterior_FoundValidTriggerPosition(1)
AND
GetPosition(_Target, _X, _Y, _Z)
AND
FindValidPosition(_X, _Y, _Z, 5.0, S_END_NautiloidStrikeTargetHelper_001_d9f6374e-f2ec-42e1-8be8-59f24e9c0091, 0, _VX, _VY, _VZ)
THEN
PROC_END_NautiloidStrike_SetTarget(_VX, _VZ);
PROC_END_HighHallInterior_IncreasePrimedCount();
//END_REGION #

//REGION # Drop Pod Target Select
//TODO: Try to migrate Drop Pod behaviour into NautiloidStrike if we can
PROC
PROC_END_HighHallInterior_TryTargetDropPod()
AND
DB_QRTN_END_HighHallInterior_NearestInterceptTrigger(_Trigger, _Dist)
THEN
NOT DB_QRTN_END_HighHallInterior_NearestInterceptTrigger(_Trigger, _Dist);

PROC
PROC_END_HighHallInterior_TryTargetDropPod()
AND
DB_QRTN_END_HighHallInterior_InterceptPosition((REAL)_X,(REAL)_Y,(REAL)_Z)
THEN
NOT DB_QRTN_END_HighHallInterior_InterceptPosition(_X, _Y, _Z);

PROC
PROC_END_HighHallInterior_TryTargetDropPod()
AND
DB_END_HighHallInterior_AvailableDropPodCount(_Count)
AND
_Count > 0
AND
QRY_END_HighHallInterior_GetTriggerNearestToIntercept()
AND
DB_QRTN_END_HighHallInterior_NearestInterceptTrigger(_Trigger, _)
AND
Random(1500, _Time)
THEN
ClearFlag(END_HighHallInterior_State_MindFlayerPodsReady_db580a5a-b7e7-4245-8796-7c6b388c37ee);
RealTimeObjectTimerLaunch(_Trigger, "END_HighHallInterior_SelectDropPodTarget", _Time);

PROC
PROC_END_HighHallInterior_TryTargetDropPod()
AND
DB_END_HighHallInterior_AvailableDropPodCount(_Count)
AND
_Count <= 0
THEN
SetFlag(END_HighHallInterior_State_MindFlayerPodsReady_db580a5a-b7e7-4245-8796-7c6b388c37ee);

QRY
QRY_END_HighHallInterior_GetTriggerNearestToIntercept()
AND
QRY_END_HighHallInterior_GetNearestPlayerToSafeRoom()
AND
DB_QRYRTN_END_HighHallInterior_NearestPlayerToSafeRoom(_Player, _)
AND
QRY_END_HighHallInterior_GetIntercept(_Player)
AND
DB_QRTN_END_HighHallInterior_InterceptPosition(_InterceptX, _InterceptY, _InterceptZ)
AND
DB_END_HighHallInterior_CannonCluster(_Trigger, _)
AND
NOT QRY_END_HighHallInterior_AnyCharacterInTargetTrigger(_Trigger)
AND
GetPosition(_Player, _, _, _PlayerZ)
AND
RealSum(_PlayerZ, 25.0, _MaxZ)
AND
RealSubtract(_PlayerZ, 25.0, _MinZ)
AND
GetPosition(_Trigger, _, _, _TriggerZ)
AND
QRY_END_HighHallInterior_DistanceWithinMinMaxRange(_MinZ, _MaxZ, _TriggerZ) //To prevent cases where the drop pod is shot into the other half where no players are
AND
NOT DB_END_HighHallInterior_SelectedTargetTrigger(_Trigger)
AND
GetDistanceToPosition(_Trigger, _InterceptX, _InterceptY, _InterceptZ, _Dist)
THEN
DB_QRTN_END_HighHallInterior_NearestInterceptTrigger(_Trigger, _Dist);

IF
DB_QRTN_END_HighHallInterior_NearestInterceptTrigger(_Trigger1, _Dist1)
AND
DB_QRTN_END_HighHallInterior_NearestInterceptTrigger(_Trigger2, _Dist2)
AND
_Trigger2 != _Trigger1
AND
_Dist2 >= _Dist1
THEN
NOT DB_QRTN_END_HighHallInterior_NearestInterceptTrigger(_Trigger2, _Dist2);

QRY
QRY_END_HighHallInterior_GetIntercept((CHARACTER)_Player)
AND
GetPosition(_Player, _PlayerX, _PlayerY, _PlayerZ)
AND
GetPosition(S_END_DropPodDoorDistancePoint_7f7cced3-1d3c-4f31-b2b3-040b1ce05d60, _DoorX, _DoorY, _DoorZ)
AND
RealSum(_PlayerX, _DoorX, _MidSumX)
AND
RealSum(_PlayerY, _DoorY, _MidSumY)
AND
RealSum(_PlayerZ, _DoorZ, _MidSumZ)
AND
DB_END_HighHallInterior_InterceptDistance(_Dist)
AND
RealDivide(_MidSumX, _Dist, _InterceptX)
AND
RealDivide(_MidSumY, _Dist, _InterceptY)
AND
RealDivide(_MidSumZ, _Dist, _InterceptZ)
THEN
DB_QRTN_END_HighHallInterior_InterceptPosition(_InterceptX, _InterceptY, _InterceptZ);

IF
ObjectTimerFinished(_Target, "END_HighHallInterior_SelectDropPodTarget")
AND
TriggerGetRandomPosition((TRIGGER)_Target,_X,_Y,_Z)
AND
GetPosition(_Target, _, _MinY, _)
AND
RealSum(_MinY, 5.0, _MinYBuffer) //This is to reduce chances of the selected point being under the ground, causing the FindValidPosition to find a weird point
AND
FindValidPosition(_X, _MinYBuffer, _Z, 5.0, S_END_NautiloidStrikeTargetHelper_001_d9f6374e-f2ec-42e1-8be8-59f24e9c0091, 0, _VX, _VY, _VZ)
THEN
PROC_END_HighHallInterior_ReadyDropPodTargetVFX(_Target,_VX,_VY,_VZ);

PROC
PROC_OneShotTriggerEntered(_Player, S_END_MindFlayerSpawnReadyBox_0b1dae83-b08a-410f-9e31-6f49d04c2448)
THEN
SetEntityEvent(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623,"END_HighHallInterior_ReadyMindFlayerPod");
//END_REGION #

//REGION # Targeting Helper & VFX Placement
PROC
PROC_END_HighHallInterior_IncreasePrimedCount()
AND
NOT DB_END_HighHallInterior_AllCannonsPrimedOnTargets(1)
AND
DB_END_HighHallInterior_PrimedCannonCount(_OldCount)
AND
IntegerSum(_OldCount, 1, _NewCount)
THEN
NOT DB_END_HighHallInterior_PrimedCannonCount(_OldCount);
DB_END_HighHallInterior_PrimedCannonCount(_NewCount);
PROC_END_HighHallInterior_CheckForAllCannonsPrimed();

PROC
PROC_END_HighHallInterior_ReadyDropPodTargetVFX((TRIGGER)_Target, (REAL)_X,(REAL)_Y,(REAL)_Z)
AND
DB_QRTN_END_HighHallInterior_NearestInterceptTrigger(_Target, _)
AND
RealSum(_Y, 5.0, _TargetY)
THEN
TeleportToPosition(S_END_DropPodTargetHelper_001_e433abd4-015c-4cdd-a86d-a446105f7ea2, _X, _TargetY, _Z, "END_HighHallInterior_DropPodVFXPointArrived", 0, 0, 0, 0, 1);

IF
EntityEvent(_DropPodHelper, "END_HighHallInterior_DropPodVFXPointArrived")
THEN
ApplyStatus(S_END_DropPodTargetHelper_001_e433abd4-015c-4cdd-a86d-a446105f7ea2, "END_HIGHHALLINTERIOR_DROPPODTARGET_VFX", -1.0, 1, S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623);
ApplyStatus(S_END_DropPodTargetHelper_001_e433abd4-015c-4cdd-a86d-a446105f7ea2, "END_BOMBARDMENT_AI_AVOIDAREA", -1.0, 1, S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623);

PROC
PROC_END_HighHallInterior_CheckForAllCannonsPrimed()
AND
DB_END_HighHallInterior_PrimedCannonCount(_CurrentCount)
AND
DB_END_HighHallInterior_TotalTargetCount(_TotalCount)
AND
_CurrentCount >= _TotalCount
THEN
DB_END_HighHallInterior_AllCannonsPrimedOnTargets(1);
PROC_END_HighHallInterior_TryTargetDropPod();
PROC_END_HighHallInterior_MoveNautiloidToNearestTargetToPlayer();

PROC
PROC_END_HighHallInterior_MoveNautiloidToNearestTargetToPlayer()
AND
QRY_END_HighHallInterior_GetNearestPlayerToSafeRoom()
AND
DB_QRYRTN_END_HighHallInterior_NearestPlayerToSafeRoom(_Player, _)
AND
QRY_END_HighHallInterior_NearestTargetToPlayer((CHARACTER)_Player)
AND
DB_QRYRTN_END_HighHallInterior_NearestTargetToPlayer(_Target, _)
THEN
TeleportTo(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623, _Target, "");

QRY
QRY_END_HighHallInterior_NearestTargetToPlayer((CHARACTER)_Player)
AND
DB_END_NautiloidStrike_PrimedStrikeHelpers(_Target)
AND
GetDistanceTo(_Player, _Target, _Dist)
THEN
DB_QRYRTN_END_HighHallInterior_NearestTargetToPlayer(_Target, _Dist);

IF
DB_QRYRTN_END_HighHallInterior_NearestTargetToPlayer(_Target1, _Dist1)
AND
DB_QRYRTN_END_HighHallInterior_NearestTargetToPlayer(_Target2, _Dist2)
AND
_Target1 != _Target2
AND
_Dist2 >= _Dist1
THEN
NOT DB_QRYRTN_END_HighHallInterior_NearestTargetToPlayer(_Target2, _Dist2);

//END_REGION #

//END_REGION
//REGION Nautiloid Bombardment - End Turn & Cleanup

//REGION # Nautiloid End Turn
IF
EntityEvent(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623, "END_HighHallInterior_FiringDone")
THEN
PROC_END_HighHallInterior_ProgressWave();

//REGION ## Wave Progress
IF
DB_END_HighHallInterior_WavePushTriggers(_Trigger, _)
THEN
DB_OneShotPlayerTrigger(_Trigger);

PROC
PROC_OneShotTriggerEntered(_Player, _Trigger)
AND
DB_END_HighHallInterior_WavePushTriggers(_Trigger, _Wave)
AND
DB_END_HighHallInterior_ActiveWave(_ActiveWave)
AND
_Wave > _ActiveWave
THEN
NOT DB_END_HighHallInterior_WavePushTriggers(_Trigger, _Wave);
NOT DB_END_HighHallInterior_ActiveWave(_ActiveWave);
DB_END_HighHallInterior_ActiveWave(_Wave);

PROC
PROC_END_HighHallInterior_ProgressWave()
AND
DB_END_HighHallInterior_ActiveWave(_ActiveWave)
AND
DB_END_HighHallInterior_TotalWaveCount(_TotalWaveCount)
AND
_ActiveWave < _TotalWaveCount
AND
IntegerSum(_ActiveWave, 1, _NextWaveCount)
THEN
NOT DB_END_HighHallInterior_ActiveWave(_ActiveWave);
DB_END_HighHallInterior_ActiveWave(_NextWaveCount);
//END_REGION ##

IF
TurnEnded(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623)
AND
DB_END_HighHallInterior_SelectedTargetsThisTurn(1)
THEN
NOT DB_END_HighHallInterior_SelectedTargetsThisTurn(1);
//END_REGION #

//REGION # Nautiloid Leave Combat
IF
LeftCombat(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623, _)
AND
DB_END_HighHallInterior_SelectedTargetsThisTurn(1)
THEN
NOT DB_END_HighHallInterior_SelectedTargetsThisTurn(1);

IF
LeftTrigger(_Player, S_END_NautiloidCannonPoly_dcf15690-5483-40b2-8753-5d44a40ceb21)
AND
DB_END_HighHallInterior_CannonCombatID(_ID)
AND
DB_PartyMembers(_Player)
AND
NOT QRY_TriggerEvents_AnyPlayerInTrigger((TRIGGER)S_END_NautiloidCannonPoly_dcf15690-5483-40b2-8753-5d44a40ceb21)
THEN
PROC_END_HighHallInterior_StopAllCannons();
PROC_END_HighHallInterior_TryNautiloidLeaveCombat();

IF
DB_Defeated(_Player)
AND
DB_PartyMembers((CHARACTER)_Player)
AND
DB_END_HighHallInterior_CannonCombatID(_ID)
AND
NOT QRY_END_HighHallInterior_AnyLivingPlayersLeftInTrigger()
THEN
PROC_END_HighHallInterior_StopAllCannons();
PROC_END_HighHallInterior_TryNautiloidLeaveCombat();
SetEntityEvent(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623,"END_HighHallInterior_Reset");

QRY
QRY_END_HighHallInterior_AnyLivingPlayersLeftInTrigger()
AND
DB_InRegion(_Player, S_END_NautiloidCannonPoly_dcf15690-5483-40b2-8753-5d44a40ceb21)
AND
DB_PartyMembers(_Player)
AND
NOT DB_Defeated(_Player)
THEN
DB_NOOP(1);

PROC
PROC_END_HighHallInterior_TryNautiloidLeaveCombat()
AND
IsInCombat(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623, 1)
AND
NOT DB_END_HighHallInterior_NautiloidLeavingCombat(1)
THEN
DB_END_HighHallInterior_NautiloidLeavingCombat(1);
PROC_END_HighHallInterior_NautiloidLeaveCombat();

//To avoid sending EndTurn event to Nautiloid Helper when it does on enter combat target select
PROC
PROC_END_HighHallInterior_NautiloidLeaveCombat()
AND
DB_END_HighHallInterior_AfterEnteredCombatBehaviourReady(1)
THEN
NOT DB_END_HighHallInterior_AfterEnteredCombatBehaviourReady(1);

PROC
PROC_END_HighHallInterior_NautiloidLeaveCombat()
AND
DB_END_HighHallInterior_CombatActive(1)
THEN
NOT DB_END_HighHallInterior_CombatActive(1);

PROC
PROC_END_HighHallInterior_NautiloidLeaveCombat()
AND
DB_END_NautiloidHelper_Position(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623,_X,_Y,_Z)
THEN
SetCanJoinCombat(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623, 0);
LeaveCombat(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623);
TeleportToPosition(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623,_X,_Y,_Z,"",0,0,0);

IF
LeftCombat(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623, _)
AND
DB_END_HighHallInterior_NautiloidLeavingCombat(1)
THEN
NOT DB_END_HighHallInterior_NautiloidLeavingCombat(1);

PROC
PROC_END_HighHallInterior_NautiloidLeaveCombat()
AND
DB_END_HighHallInterior_NautiloidSpotterHelpers(_Char)
THEN
SetCanJoinCombat(_Char, 0);
SetForceUpdate(_Char, 0);
LeaveCombat(_Char);

PROC
PROC_END_HighHallInterior_StopAllCannons()
THEN
PROC_END_NautiloidStrike_ClearAll();
RemoveStatus(S_END_DropPodTargetHelper_001_e433abd4-015c-4cdd-a86d-a446105f7ea2, "END_HIGHHALLINTERIOR_DROPPODTARGET_VFX");
RemoveStatus(S_END_DropPodTargetHelper_001_e433abd4-015c-4cdd-a86d-a446105f7ea2, "END_BOMBARDMENT_AI_AVOIDAREA");
NOT DB_END_HighHallInterior_AllCannonsPrimedOnTargets(1);

PROC
PROC_END_HighHallInterior_StopAllCannons()
AND
DB_END_HighHallInterior_CannonTargets(_Target, _SourceHelper, _X, _Y, _Z)
THEN
NOT DB_END_HighHallInterior_CannonTargets(_Target, _SourceHelper, _X, _Y, _Z);
//END_REGION #

//REGION # End Bombardment
IF
DB_InRegion(_Player, S_END_NautiloidSafeZoneBox_fee49087-ff00-4e2f-af26-43f855014c90)
AND
DB_PartyMembers(_Player)
AND
NOT DB_PlayerSummons(_Player)
AND
NOT DB_Defeated(_Player)
THEN
PROC_END_HighHallInterior_TryEndBombardmentDialog(_Player);

PROC
PROC_END_HighHallInterior_TryEndBombardmentDialog((CHARACTER)_Player)
AND
NOT DB_GlobalFlag(END_HighHallInterior_State_NautiloidLeft_ed57695e-adb6-4a4e-8f84-4e9dfc28f318)
THEN
SetFlag(END_HighHallInterior_State_NautiloidLeft_ed57695e-adb6-4a4e-8f84-4e9dfc28f318);
PROC_END_HighHallInterior_BombardmentEndDialog((CHARACTER)_Player);

IF
DB_GlobalFlag(END_HighHallInterior_State_NautiloidLeft_ed57695e-adb6-4a4e-8f84-4e9dfc28f318)
AND
DB_GlobalFlag(END_HighHallInterior_Event_MovePlayersToSafeRoom_78aa738e-77d1-4cc9-a41d-12f63770863e)
THEN
PROC_END_HighHallInterior_EndBombardment();

//If something funky happened and the dialog ended/failed before setting the flag
IF
DialogEnded(END_HighHallInterior_Nautiloid_3a5cb82c-788a-e0a3-fb7b-8a99fd2c7b23, _)
AND
NOT DB_GlobalFlag(END_HighHallInterior_Event_MovePlayersToSafeRoom_78aa738e-77d1-4cc9-a41d-12f63770863e)
THEN
PROC_END_HighHallInterior_EndBombardment();

PROC
PROC_END_HighHallInterior_EndBombardment()
AND
QRY_OnlyOnce("END_HighHallInterior_EndBombardmentOnce")
THEN
RemoveStatus(S_END_DropPodTargetHelper_001_e433abd4-015c-4cdd-a86d-a446105f7ea2, "END_HIGHHALLINTERIOR_DROPPODTARGET_VFX");
RemoveStatus(S_END_DropPodTargetHelper_001_e433abd4-015c-4cdd-a86d-a446105f7ea2, "END_BOMBARDMENT_AI_AVOIDAREA");
QuestMessageHide("END_HighHallInterior_ReachNetherbrainID");
PROC_END_HighHallInterior_NautiloidDisappear();
PROC_END_HighHallInterior_StopAllCannons();
PROC_END_HighHallInterior_NautiloidLeaveCombat();
PROC_END_HighHallInterior_KillStragglers();
PROC_END_HighHallInterior_ToppleStatue();

PROC
PROC_END_HighHallInterior_NautiloidDisappear()
THEN
PROC_Poof(S_END_Nautiloid_001_2566e431-2d5a-45b4-9e6c-6cf04e01404d);
PROC_Poof(S_END_IntDevPodLauncher_001_f8a678a3-6cc5-4cfb-a781-53de0262cf94);
PROC_END_NautiloidStrike_ClearForceUpdatedObjects();

PROC
PROC_END_HighHallInterior_NautiloidDisappear()
AND
DB_END_HighHallInterior_Cannons(_Cannon)
THEN
SetOnStage(_Cannon, 0);

PROC
PROC_END_HighHallInterior_NautiloidDisappear()
AND
DB_END_HighHallInterior_CannonPlatforms(_Platform)
THEN
UnloadLevelTemplate(_Platform);

PROC
PROC_END_HighHallInterior_BombardmentEndDialog((CHARACTER)_Player)
AND
QRY_OnlyOnce("END_HighHallInterior_NautiloidDialogOnce")
AND
NOT QRY_StartDialogCustom((DIALOGRESOURCE)END_HighHallInterior_Nautiloid_3a5cb82c-788a-e0a3-fb7b-8a99fd2c7b23, S_GLO_Netherbrain_3858e896-d7dd-4699-b37d-d3919ff15ba7, _Player, 0, 0, 0, 0)
THEN
PROC_END_HighHallInterior_EndBombardment();

PROC
PROC_StartDialog_AddExtraSpeakers((DIALOGRESOURCE)END_HighHallInterior_Nautiloid_3a5cb82c-788a-e0a3-fb7b-8a99fd2c7b23, _ID)
AND
DB_PartyMembers(_Player)
AND
DB_InRegion(_Player, S_END_NautiloidCannonPoly_dcf15690-5483-40b2-8753-5d44a40ceb21)
AND
NOT DB_DialogPlayers(_ID,_Player,_)
AND
NOT DB_Defeated(_Player) //Need a proper fix to allow dead players to see this dialog
THEN
PROC_DialogAddListeningActor(_ID, _Player);

IF
DialogEnded(END_HighHallInterior_Nautiloid_3a5cb82c-788a-e0a3-fb7b-8a99fd2c7b23, _)
THEN
DB_AutoSaveTrigger(S_END_HighHallInteriorSafeRoom_AutoSave_0a1dd14e-c249-46b6-ae0c-b56e64496c6c);

IF
FlagSet(END_HighHallInterior_Event_MovePlayersToSafeRoom_78aa738e-77d1-4cc9-a41d-12f63770863e, _, _)
THEN
PROC_END_HighHallInterior_MovePlayersToSafeRoom();

PROC
PROC_END_HighHallInterior_MovePlayersToSafeRoom()
AND
DB_PartyMembers(_Player)
AND
DB_InRegion(_Player, S_END_NautiloidCannonPoly_dcf15690-5483-40b2-8753-5d44a40ceb21)
AND
NOT DB_Defeated(_Player)
THEN
TeleportTo(_Player, S_END_SafeRoomAfterDialogPoint_cda48235-107f-43e5-89af-b5f89d47d610);

PROC
PROC_END_HighHallInterior_EndBombardment()
AND
DB_PartyMembers(_Player)
THEN
SetCombatGroupID(_Player, "");

PROC
PROC_END_HighHallInterior_EndBombardment()
THEN
SetCombatGroupID(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623, "");

PROC
PROC_END_HighHallInterior_EndBombardment()
AND
DB_END_HighHallInterior_NautiloidSpotterHelpers(_Char)
THEN
SetCombatGroupID(_Char, "");

IF
DB_END_HighHallInterior_Enemies(_Char)
THEN
TriggerRegisterForCharacter(S_END_NautiloidCannonPoly_dcf15690-5483-40b2-8753-5d44a40ceb21, _Char);

PROC
PROC_END_HighHallInterior_KillStragglers()
AND
DB_END_HighHallInterior_Enemies(_Char)
AND
IsInTrigger(_Char, S_END_NautiloidCannonPoly_dcf15690-5483-40b2-8753-5d44a40ceb21, 1)
AND
Random(2, _Random)
AND
IntegerSum(_Random, 2, _RandomAdjusted)
AND
IntegerToReal(_RandomAdjusted, _RealRandom)
THEN
Die(_Char, DEATHTYPE.Incinerate, _Char, 1, 1, 0.0);
CreateSurface(_Char,"SurfaceFire",_RealRandom,-1.0,NULL_00000000-0000-0000-0000-000000000000);

PROC
PROC_END_HighHallInterior_KillStragglers()
AND
DB_END_HighHallInterior_FirePoints(_Trigger)
AND
Random(3, _Random)
AND
IntegerSum(_Random, 1, _RandomAdjusted)
AND
IntegerToReal(_RandomAdjusted, _RealRandom)
THEN
CreateSurface(_Trigger,"SurfaceFire",_RealRandom,-1.0,NULL_00000000-0000-0000-0000-000000000000);

PROC
PROC_END_HighHallInterior_KillStragglers()
AND
DB_Players(_Player)
AND
DB_Is_InCombat(_Player, _Combat)
AND
DB_Is_InCombat(_Enemy, _Combat)
AND
NOT DB_PartyMembers((CHARACTER)_Enemy)
AND
NOT DB_END_HighHallInterior_Enemies((CHARACTER)_Enemy)
AND
IsEnemy(_Player, _Enemy, 1)
AND
Random(2, _Random)
AND
IntegerSum(_Random, 2, _RandomAdjusted)
AND
IntegerToReal(_RandomAdjusted, _RealRandom)
THEN
Die(_Enemy, DEATHTYPE.Incinerate, _Enemy, 1, 1, 0.0);
CreateSurface(_Enemy,"SurfaceFire",_RealRandom,-1.0,NULL_00000000-0000-0000-0000-000000000000);

//END_REGION #

//REGION # Dead Body Cleanup
IF
Died(_Enemy)
AND
NOT DB_END_HighHallInterior_Guards(_Enemy)
AND
DB_END_HighHallInterior_Enemies(_Enemy)
AND
DB_END_HighHallInterior_CurrentDeadEnemyCount(_OldCount)
AND
IntegerSum(_OldCount, 1, _NewCount)
THEN
NOT DB_END_HighHallInterior_CurrentDeadEnemyCount(_OldCount);
DB_END_HighHallInterior_CurrentDeadEnemyCount(_NewCount);
NOT DB_END_HighHallInterior_Enemies(_Enemy);
DB_END_HighHallInterior_DeadEnemies(_Enemy, _NewCount);

IF
DB_END_HighHallInterior_DeadEnemies(_Enemy, _Index)
AND
SysCount("DB_END_HighHallInterior_DeadEnemies", 2, _CurrentCount)
AND
DB_END_HighHallInterior_MaxDeadEnemyCount(_MaxCount)
AND
_CurrentCount > _MaxCount
THEN
PROC_END_HighHallInterior_RemoveDeadEnemy();

PROC
PROC_END_HighHallInterior_RemoveDeadEnemy()
AND
DB_END_HighHallInterior_CurrentDespawnEnemyIndex(_Index)
AND
DB_END_HighHallInterior_DeadEnemies(_Enemy, _Index)
AND
IntegerSum(_Index, 1, _NewIndex)
AND
Random(3500, _Time)
THEN
NOT DB_END_HighHallInterior_CurrentDespawnEnemyIndex(_Index);
DB_END_HighHallInterior_CurrentDespawnEnemyIndex(_NewIndex);
RealtimeObjectTimerLaunch(_Enemy, "END_HighHallInterior_RemoveDeadEnemyTimer", _Time);

IF
ObjectTimerFinished(_Enemy, "END_HighHallInterior_RemoveDeadEnemyTimer")
THEN
PlayEffect(_Enemy,(EFFECTRESOURCE)VFX_Status_END_DropPod_Disappear_ApplyEffect_01_4ac01809-5697-1a44-137d-1e125b43c3a1);
PROC_FadeOutEntity(_Enemy,"END_HighHallInterior_RemoveDeadEnemy");

IF
EntityEvent(_Enemy,"END_HighHallInterior_RemoveDeadEnemy")
AND
DB_END_HighHallInterior_DeadEnemies((CHARACTER)_Enemy, _Index)
THEN
NOT DB_END_HighHallInterior_DeadEnemies(_Enemy, _Index);
RequestDeleteTemporary(_Enemy);
//END_REGION

//END_REGION

//REGION Fodder Enemies
IF
DB_END_HighHallInterior_FodderReadyTriggers(_, _, _Trigger)
THEN
PROC_TriggerRegisterForParty(_Trigger);

//If players in both triggers, send one to each side, otherwise send them both to the side the players are on
PROC
PROC_END_HighHallInterior_WarningShot()
THEN
PROC_END_HighHallInterior_ReadyEnemyFodder();

PROC
PROC_END_HighHallInterior_ReadyEnemyFodder()
AND
QRY_TriggerEvents_AnyPlayerInTrigger((TRIGGER)S_END_EnemyStartSidePoly_Left_2dab35de-1d2e-4b5a-a423-30a2f1e3d256)
AND
QRY_TriggerEvents_AnyPlayerInTrigger((TRIGGER)S_END_EnemyStartSidePoly_Right_91c94102-6550-4998-9d08-a8f9cfbc6b84)
THEN
PROC_CharacterMoveTo(S_END_AbsoluteCannonFodder_001_fa170adf-bc09-4143-8aba-e0286231a8b4, S_END_Fodder001RunToPoint_Left_51a41092-8d20-4947-8c26-955e3d503682, "Run", "END_HighHallInterior_FodderReady");
PROC_CharacterMoveTo(S_END_AbsoluteCannonFodder_002_c1605cd8-238e-4589-a4fd-1d9c4edab015, S_END_Fodder002RunToPoint_Right_e8b0d498-8eda-428e-a0f1-e7a74a5cee3d, "Run", "END_HighHallInterior_FodderReady");
PROC_END_HighHallInterior_ClearReadyEnemyFodder();

PROC
PROC_END_HighHallInterior_ReadyEnemyFodder()
AND
DB_END_HighHallInterior_FodderReadyTriggers(_Enemy, _Point, _Trigger)
AND
QRY_TriggerEvents_AnyPlayerInTrigger(_Trigger)
THEN
PROC_CharacterMoveTo(_Enemy, _Point, "Sprint", "END_HighHallInterior_FodderReady");

IF
EntityEvent(_Enemy, "END_HighHallInterior_FodderReady")
AND
GetCombatGroupID(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623,_CombatGroup)
THEN
SetCombatGroupID(_Enemy, _CombatGroup);

PROC
PROC_END_HighHallInterior_ClearReadyEnemyFodder()
AND
DB_END_HighHallInterior_FodderReadyTriggers(_Enemy, _Point, _Trigger)
THEN
PROC_TriggerUnregisterForParty(_Trigger);
NOT DB_END_HighHallInterior_FodderReadyTriggers(_Enemy, _Point, _Trigger);

IF
TurnStarted(_Char)
AND
DB_END_HighHallInterior_FodderADs(_Char)
THEN
SetEntityEventReal(_Char, "GLO_CombatWait", 1.0);
NOT DB_END_HighHallInterior_FodderADs(_Char);

IF
DB_END_HighHallInterior_Patrollers(_IntDev)
THEN
TriggerRegisterForCharacter(S_END_EnemyStartSidePoly_Left_2dab35de-1d2e-4b5a-a423-30a2f1e3d256, _IntDev);
TriggerRegisterForCharacter(S_END_EnemyStartSidePoly_Right_91c94102-6550-4998-9d08-a8f9cfbc6b84, _IntDev);

PROC
PROC_END_HighHallInterior_ReadyEnemyFodder()
AND
QRY_TriggerEvents_AnyPlayerInTrigger((TRIGGER)S_END_EnemyStartSidePoly_Left_2dab35de-1d2e-4b5a-a423-30a2f1e3d256)
AND
DB_END_HighHallInterior_Patrollers(_IntDev)
AND
DB_InRegion(_IntDev, S_END_EnemyStartSidePoly_Left_2dab35de-1d2e-4b5a-a423-30a2f1e3d256)
AND
GetCombatGroupID(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623, _CombatGroupID)
THEN
SetCombatGroupID(_IntDev, _CombatGroupID);

PROC
PROC_END_HighHallInterior_ReadyEnemyFodder()
AND
QRY_TriggerEvents_AnyPlayerInTrigger((TRIGGER)S_END_EnemyStartSidePoly_Right_91c94102-6550-4998-9d08-a8f9cfbc6b84)
AND
DB_END_HighHallInterior_Patrollers(_IntDev)
AND
DB_InRegion(_IntDev, S_END_EnemyStartSidePoly_Right_91c94102-6550-4998-9d08-a8f9cfbc6b84)
AND
GetCombatGroupID(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623, _CombatGroupID)
THEN
SetCombatGroupID(_IntDev, _CombatGroupID);

//Make Int Dev joint combat if they see their ally in combat (is weird otherwise to have them walking around a bombarment heavy area past their allies who are fighting the player)
IF
DB_Sees(_IntDev, _Enemy)
AND
DB_END_HighHallInterior_Patrollers(_IntDev)
AND
DB_END_HighHallInterior_Enemies(_Enemy)
AND
_IntDev != _Enemy
AND
DB_Is_InCombat(_Enemy, _ID)
AND
DB_END_HighHallInterior_CannonCombatID(_ID)
AND
NOT DB_Is_InCombat(_IntDev, _)
AND
GetCombatGroupID(S_END_NautiloidCannonHelper_5f06accf-0a2e-46bb-b3d2-8219e5748623, _CombatGroupID)
AND
GetCombatGroupID(_IntDev, _IntDevGroupID)
AND
_CombatGroupID != _IntDevGroupID
THEN
DB_END_DEBUG_HighHallInterior_IntDevJoinedFromSeeing(_IntDev, _Enemy);
SetCombatGroupID(_IntDev, _CombatGroupID);

IF
DB_END_DEBUG_HighHallInterior_IntDevJoinedFromSeeing(_IntDev, _Enemy)
THEN
DB_NOOP(1);

//END_REGION

//REGION Falling Statue
IF
DestroyedBy(S_END_FallingStatue_4306e75f-1bf9-4bb7-860d-18dcd3626241, _, _, _)
THEN
PROC_END_HighHallInterior_ToppleStatue();

PROC
PROC_END_HighHallInterior_ToppleStatue()
AND
QRY_OnlyOnce("END_HighHallInterior_StatueFallen")
THEN
RealtimeObjectTimerLaunch(S_END_FallingStatue_4306e75f-1bf9-4bb7-860d-18dcd3626241, "END_HighHallInterior_FallingStatueTimer", 3600);

IF
ObjectTimerFinished(S_END_FallingStatue_4306e75f-1bf9-4bb7-860d-18dcd3626241, "END_HighHallInterior_FallingStatueTimer")
THEN
LoadLevelTemplate(S_END_FallingStatuePlatform_d988f74e-8186-41b2-a096-bf2642411c85);

IF
UseStarted(_Player, S_END_FallingStatue_4306e75f-1bf9-4bb7-860d-18dcd3626241)
THEN
UseSpell(_Player, "Target_Shove", S_END_FallingStatue_4306e75f-1bf9-4bb7-860d-18dcd3626241);
PROC_END_HighHallInterior_AttemptStatuePush((CHARACTER)_Player);

PROC
PROC_END_HighHallInterior_AttemptStatuePush((CHARACTER)_Player)
AND
HasActiveStatus(_Player, "SNEAKING", 1)
THEN
RemoveStatus(_Player, "SNEAKING");

PROC
PROC_END_HighHallInterior_AttemptStatuePush((CHARACTER)_Player)
THEN
RequestPassiveRoll(_Player, S_END_FallingStatue_4306e75f-1bf9-4bb7-860d-18dcd3626241, "Strength", (DIFFICULTYCLASS)Act3_Hard_6298329e-255c-4826-9209-e911873b64e7, "END_HighHallInterior_StatuePush");

IF
RollResult("END_HighHallInterior_StatuePush", _Player, _, 1, _, _)
THEN
Die(S_END_FallingStatue_4306e75f-1bf9-4bb7-860d-18dcd3626241);
//END_REGION

//REGION Ascending to the Brain Battle
PROC
PROC_BlockUseOfItem(_Player,  S_END_BrainStemClimb_3270ca2c-67ef-40d3-a980-8eeb580ece75)
AND
QRY_END_HighHallInterior_CanUse((CHARACTER)_Player)
THEN
PROC_TryStopDialogFor(_Player);
PROC_END_HighHallInterior_TryToClimbBrainStem(_Player);
DB_CustomUseItemResponse(_Player, S_END_BrainStemClimb_3270ca2c-67ef-40d3-a980-8eeb580ece75, 0);

PROC
PROC_BlockUseOfItem(_Player,  S_END_BrainStemClimb_3270ca2c-67ef-40d3-a980-8eeb580ece75)
AND
NOT QRY_END_HighHallInterior_CanUse((CHARACTER)_Player)
THEN
PROC_PlayCantUseItemAD(_Player);
DB_CustomUseItemResponse(_Player, S_END_BrainStemClimb_3270ca2c-67ef-40d3-a980-8eeb580ece75, 0);

QRY
QRY_END_HighHallInterior_CanUse((CHARACTER)_Player)
AND
QRY_SpeakerIsAvailable(_Player,0,1,0)
AND
QRY_END_HighHallInterior_CurrentPartyMindFlayerCanSpeak()
AND
QRY_END_HighHallInterior_FollowerCanSpeak()
AND
NOT DB_DialogName(END_HighHallInterior_Nautiloid_3a5cb82c-788a-e0a3-fb7b-8a99fd2c7b23, _)
THEN
DB_NOOP(1);

QRY
QRY_END_HighHallInterior_CurrentPartyMindFlayerCanSpeak()
AND
NOT DB_END_General_PartyMindFlayer(_) //If no one is a mind flayer yet, then all good
THEN
DB_NOOP(1);

QRY
QRY_END_HighHallInterior_CurrentPartyMindFlayerCanSpeak()
AND
DB_END_General_PartyMindFlayer(_MindFlayer)
AND
QRY_SpeakerIsAvailable(_MindFlayer,0,1,0)
THEN
DB_NOOP(1);

QRY
QRY_END_HighHallInterior_FollowerCanSpeak()
AND
NOT DB_END_IllithidOptionsFollower_Follower(_, _, _, _) //If no follower, then all good
THEN
DB_NOOP(1);

QRY
QRY_END_HighHallInterior_FollowerCanSpeak()
AND
DB_END_IllithidOptionsFollower_Follower(_Char, _, _, _)
AND
QRY_SpeakerIsAvailable(_Char,0,1,0)
THEN
DB_NOOP(1);

QRY
QRY_END_HighHallInterior_CurrentPartyMindFlayerCanSpeak()
AND
DB_END_General_PartyMindFlayer(_MindFlayer)
AND
QRY_SpeakerIsAvailable(_MindFlayer,0,1,0)
THEN
DB_NOOP(1);

PROC
PROC_END_HighHallInterior_TryToClimbBrainStem((CHARACTER)_Player)
AND
DB_GlobalFlag(END_HighHallInterior_State_NautiloidLeft_ed57695e-adb6-4a4e-8f84-4e9dfc28f318)
AND
QRY_END_General_CanProceedTowardsFinale()
THEN
DB_END_HighHallInterior_ToRoofReadyCheckPlayer(_Player);
ReadyCheckGlobal("END_ReadyCheck_BrainStem", "END_ReadyMessage_BrainStem", 1, _Player);

PROC
PROC_END_HighHallInterior_TryToClimbBrainStem((CHARACTER)_Player)
AND
DB_GlobalFlag(END_HighHallInterior_State_NautiloidLeft_ed57695e-adb6-4a4e-8f84-4e9dfc28f318)
AND
NOT QRY_END_General_CanProceedTowardsFinale()
THEN
PROC_END_General_ThrallOfTheAbsoluteWarning(_Player);

IF
ReadyCheckPassed("END_ReadyCheck_BrainStem")
THEN
PROC_END_BrainBattle_PreSetup();

PROC
PROC_END_BrainBattle_Setup()
THEN
PROC_END_General_KarsusStatusSafetyCheck();
GoalCompleted;

IF
ReadyCheckFailed("END_ReadyCheck_BrainStem")
AND
DB_END_HighHallInterior_ToRoofReadyCheckPlayer(_Player)
THEN
NOT DB_END_HighHallInterior_ToRoofReadyCheckPlayer(_Player);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "Act3c"
