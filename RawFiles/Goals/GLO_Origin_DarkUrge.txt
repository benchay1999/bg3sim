Version 1
SubGoalCombiner SGC_AND
INITSECTION
//REGION Player Init Block

DB_PreventPermaDefeated(S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10);
DB_IgnoreAssault((CHARACTER)S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10);


SetOnStage(S_Player_DarkUrge_c66bc36f-7cb0-41fa-92f0-6d81d7d17ba3, 0);
SetOnStage(S_ORI_DarkUrge_ButlerVoiceStandin_f79ea93e-4696-40d5-b146-7ae02686eaaf, 0);


DB_GLO_PartyMembers_DefaultFaction(S_Player_DarkUrge_c66bc36f-7cb0-41fa-92f0-6d81d7d17ba3, (FACTION)Hero_a1542c81-6895-929e-4522-10ce218bb360);

DB_GLO_ORI_DarkUrge_ButlerConfigs("SCL_Main_A", "SCL_DarkUrge_Butler");
DB_GLO_ORI_DarkUrge_ButlerConfigs("BGO_Main_A", "WYR_DarkUrge_Butler");

DB_GLO_ORI_DarkUrge_ButlerHats(ARM_Hat_Butler_198e801b-b91e-4b78-b8a6-4fe630a6a3f1);
DB_GLO_ORI_DarkUrge_ButlerHats(MAG_Hat_Butler_14b2e775-9734-4fa0-82c3-2e560b8f2e2f);

DB_OriginPartOfTheTeamFlag((CHARACTER)S_DEN_Bard_4a405fba-3000-4c63-97e5-a8001ebb883c, GLO_Origin_PartOfTheTeam_Alfira_f5d7c888-ccce-4a30-a0a8-6ac0c9f4c094, (FLAG)NULL_00000000-0000-0000-0000-000000000000,(FLAG)NULL_00000000-0000-0000-0000-000000000000);

DB_ORI_DarkUrge_GenderFlags((TAG)MALE_8f74d144-041e-4035-a9ac-72f41fc32de7, (FLAG)ORI_State_DU_Male_ed990e74-1cb2-8af5-58bc-2932aeeaa780);
DB_ORI_DarkUrge_GenderFlags((TAG)FEMALE_3806477c-65a7-4100-9f92-be4c12c4fa4f, (FLAG)ORI_State_DU_Female_ced5a147-785a-d927-39b1-f90f7c515f86);

//END_REGION

KBSECTION
//REGION Track who the Dark Urge is

IF
DB_Players(_DarkUrge)
AND
IsTagged((CHARACTER)_DarkUrge, (TAG)REALLY_DARK_URGE_cd611d7d-b67d-42b4-a75c-a0c6091ef8a2, 1)
AND
NOT DB_ORI_DarkUrge((CHARACTER)_DarkUrge)
THEN
DB_ORI_DarkUrge((CHARACTER)_DarkUrge);
DB_OriginCampFlags((CHARACTER)_DarkUrge,(FLAG)DARKURGE_68888003-acaa-49d5-b4f2-0c6293797e59,(FLAG)NULL_00000000-0000-0000-0000-000000000000,(FLAG)NULL_00000000-0000-0000-0000-000000000000,(FLAG)NULL_00000000-0000-0000-0000-000000000000,(FLAG)NULL_00000000-0000-0000-0000-000000000000);
DB_OriginInPartyGlobal((CHARACTER)_DarkUrge,(FLAG)ORI_DarkUrge_State_IsInParty_126c47da-7d24-49ce-b06f-5a44f09ee87e);
DB_OriginPartOfTheTeamFlag((CHARACTER)_DarkUrge, (FLAG)GLO_Origin_PartOfTheTeam_DarkUrge_fbf4c4a8-99bb-4e62-a78c-cc9c115bd938,(FLAG)GLO_Origin_Avatar_DarkUrge_d41b2dd7-42ba-4fe5-a5cc-543d9af608d4, (FLAG)NULL_00000000-0000-0000-0000-000000000000);
DB_GLO_PartyMembers_DefaultFaction((CHARACTER)_DarkUrge, (FACTION)Companion11_a36493ce-5798-d27f-1e24-01cb79fbdb1b);
DB_GLO_DieFlag((FLAG)ORI_DarkUrge_Butler_State_PermaDead_d2f18c09-105a-7cbd-8c44-9a323ca0ce28, (CHARACTER)S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10, DEATHTYPE.DoT, _DarkUrge);

IF
TagSet((CHARACTER)_DarkUrge, (TAG)REALLY_DARK_URGE_cd611d7d-b67d-42b4-a75c-a0c6091ef8a2)
AND
DB_Players(_DarkUrge)
THEN
DB_ORI_DarkUrge((CHARACTER)_DarkUrge);
DB_OriginCampFlags((CHARACTER)_DarkUrge,(FLAG)DARKURGE_68888003-acaa-49d5-b4f2-0c6293797e59,(FLAG)NULL_00000000-0000-0000-0000-000000000000,(FLAG)NULL_00000000-0000-0000-0000-000000000000,(FLAG)NULL_00000000-0000-0000-0000-000000000000,(FLAG)NULL_00000000-0000-0000-0000-000000000000);
DB_OriginInPartyGlobal((CHARACTER)_DarkUrge,(FLAG)ORI_DarkUrge_State_IsInParty_126c47da-7d24-49ce-b06f-5a44f09ee87e);
DB_OriginPartOfTheTeamFlag((CHARACTER)_DarkUrge, (FLAG)GLO_Origin_PartOfTheTeam_DarkUrge_fbf4c4a8-99bb-4e62-a78c-cc9c115bd938,(FLAG)GLO_Origin_Avatar_DarkUrge_d41b2dd7-42ba-4fe5-a5cc-543d9af608d4, (FLAG)NULL_00000000-0000-0000-0000-000000000000);
DB_GLO_PartyMembers_DefaultFaction((CHARACTER)_DarkUrge, (FACTION)Companion11_a36493ce-5798-d27f-1e24-01cb79fbdb1b);
DB_GLO_DieFlag((FLAG)ORI_DarkUrge_Butler_State_PermaDead_d2f18c09-105a-7cbd-8c44-9a323ca0ce28, (CHARACTER)S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10, DEATHTYPE.DoT, _DarkUrge);

IF
DB_ORI_DarkUrge((CHARACTER)_DarkUrge)
AND
DB_ActiveLevel("TUT_Avernus_C")
THEN
DB_TUT_Start_JournalUpdate((CHARACTER)_DarkUrge,"ORI_Avatar_DarkUrge", "Start");

IF
DB_ORI_DarkUrge((CHARACTER)_DarkUrge)
AND
NOT DB_ActiveLevel("TUT_Avernus_C")
THEN
QuestUpdate(_DarkUrge, "ORI_Avatar_DarkUrge", "Start");

//END_REGION

//REGION Debug - Adding DarkUrge To the party
IF
TextEvent("darkurge")
AND
GetHostCharacter(_Player)
AND
DB_GlobalFlag((FLAG)GEN_MaxPlayerCountReached_823b5064-8aa4-c0b7-1b8c-657b46987ccd)
THEN
DebugText(_Player,"Party Full");

IF
TextEvent("darkurge")
AND
GetHostCharacter(_Player)
AND
NOT DB_ORI_DarkUrge(_)
AND
NOT DB_GlobalFlag((FLAG)GEN_MaxPlayerCountReached_823b5064-8aa4-c0b7-1b8c-657b46987ccd)
THEN
SetOnStage((CHARACTER)S_Player_DarkUrge_c66bc36f-7cb0-41fa-92f0-6d81d7d17ba3,1);
TeleportTo((CHARACTER)S_Player_DarkUrge_c66bc36f-7cb0-41fa-92f0-6d81d7d17ba3,_Player);
MakePlayer((CHARACTER)S_Player_DarkUrge_c66bc36f-7cb0-41fa-92f0-6d81d7d17ba3,_Player);
DB_Players((CHARACTER)S_Player_DarkUrge_c66bc36f-7cb0-41fa-92f0-6d81d7d17ba3);
PROC_CheckPartyFull();
SetFlag((FLAG)SetPreset_Default_7eabc516-c15c-46ff-a99d-60d4a9f7037e, (CHARACTER)S_Player_DarkUrge_c66bc36f-7cb0-41fa-92f0-6d81d7d17ba3, 0); // flagType: Object
SetTag((CHARACTER)S_Player_DarkUrge_c66bc36f-7cb0-41fa-92f0-6d81d7d17ba3,(TAG)AVATAR_306b9b05-1057-4770-aa17-01af21acd650);

IF
TextEvent("darkurge")
AND
GetHostCharacter(_Player)
AND
DB_ORI_DarkUrge(_DarkUrge)
AND
NOT DB_Players((CHARACTER)_DarkUrge)
AND
NOT DB_GlobalFlag((FLAG)GEN_MaxPlayerCountReached_823b5064-8aa4-c0b7-1b8c-657b46987ccd)
THEN
SetOnStage((CHARACTER)S_Player_DarkUrge_c66bc36f-7cb0-41fa-92f0-6d81d7d17ba3,1);
TeleportTo((CHARACTER)S_Player_DarkUrge_c66bc36f-7cb0-41fa-92f0-6d81d7d17ba3,_Player);
MakePlayer((CHARACTER)S_Player_DarkUrge_c66bc36f-7cb0-41fa-92f0-6d81d7d17ba3,_Player);
DB_Players((CHARACTER)S_Player_DarkUrge_c66bc36f-7cb0-41fa-92f0-6d81d7d17ba3);
PROC_CheckPartyFull();
SetFlag((FLAG)SetPreset_Default_7eabc516-c15c-46ff-a99d-60d4a9f7037e, (CHARACTER)S_Player_DarkUrge_c66bc36f-7cb0-41fa-92f0-6d81d7d17ba3, 0); // flagType: Object
SetTag((CHARACTER)S_Player_DarkUrge_c66bc36f-7cb0-41fa-92f0-6d81d7d17ba3,(TAG)AVATAR_306b9b05-1057-4770-aa17-01af21acd650);

//END_REGION

//REGION Dark Urge - Butler Introduction
QRY
QRY_Camp_StartSoloDream_CustomDialogStart((DIALOGRESOURCE)_DarkUrgeButlerDream,(CHARACTER)_DarkUrge)
AND
DB_Camp_DarkUrge_ButlerDream(_DarkUrgeButlerDream)
AND
NOT DB_Defeated(_DarkUrge)
AND
QRY_CampNight_Darkurge_BringInButler()
AND
QRY_StartDialog_Fixed(_DarkUrgeButlerDream,(CHARACTER)S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10,_DarkUrge)
THEN
MakePlayerActive(_DarkUrge);

QRY
QRY_CampNight_Darkurge_BringInButler()
AND
DB_ActiveCamp(_ActiveCamp)
AND
DB_Camp(_ActiveCamp,_,_,_Entrypoint)
THEN
TeleportTo((CHARACTER)S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10,_Entrypoint);
SetVisible(S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10, 1);
SetDetached(S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10, 0);
Resurrect((CHARACTER)S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10);
NOT DB_DefeatedCauses(S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10, "Dead", 0); //Otherwise the event doesn't arrive quickly enough.
NOT DB_Dead(S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10); //Otherwise the event doesn't arrive quickly enough.
PROC_Foop((CHARACTER)S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10, VFX_Script_Stub_Poof_01_NoSound_de020641-4dbd-855e-9b2f-f008a32d6737);

IF
DialogEnded(_DarkUrgeButlerDream,_)
AND
DB_Camp_DarkUrge_ButlerDream(_DarkUrgeButlerDream)
AND
NOT DB_OffStage((CHARACTER)S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10)
THEN
PROC_Poof((CHARACTER)S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10, VFX_Script_Stub_Poof_01_NoSound_de020641-4dbd-855e-9b2f-f008a32d6737);
//END_REGION

//REGION Re-evaluate night flags
IF
DB_ORI_DarkUrge_FavouriteCharacter(_Character)
AND
DB_OriginCampFlags(_Character, _Flag, _, _, _, _)
THEN
DB_CampNight_Requirement((FLAG)NIGHT_DarkUrge_SparedIsobel_bc8b660e-33e9-44f7-9bc2-b869db5ac1f8,(FLAG)ORI_DarkUrge_SparedIsobel_Requirement_7b24b6bb-f9ef-414e-92e8-a662ce41fced,(FLAG)DARKURGE_68888003-acaa-49d5-b4f2-0c6293797e59, _Flag);
NOT DB_CampNight_Requirement((FLAG)NIGHT_DarkUrge_SparedIsobel_bc8b660e-33e9-44f7-9bc2-b869db5ac1f8,(FLAG)ORI_DarkUrge_SparedIsobel_Requirement_7b24b6bb-f9ef-414e-92e8-a662ce41fced,(FLAG)DARKURGE_68888003-acaa-49d5-b4f2-0c6293797e59, (FLAG)IMPOSSIBLE_6e4b66e9-0f72-5171-04ba-441108b45b0e);

IF
DB_CampNight_Requirement((FLAG)NIGHT_DarkUrge_SparedIsobel_bc8b660e-33e9-44f7-9bc2-b869db5ac1f8,(FLAG)ORI_DarkUrge_SparedIsobel_Requirement_7b24b6bb-f9ef-414e-92e8-a662ce41fced,(FLAG)DARKURGE_68888003-acaa-49d5-b4f2-0c6293797e59, _Flag)
AND
DB_OriginCampFlags(_Character, _Flag, _, _, _, _)
AND
NOT DB_ORI_DarkUrge_FavouriteCharacter(_Character)
THEN
NOT DB_CampNight_Requirement((FLAG)NIGHT_DarkUrge_SparedIsobel_bc8b660e-33e9-44f7-9bc2-b869db5ac1f8,(FLAG)ORI_DarkUrge_SparedIsobel_Requirement_7b24b6bb-f9ef-414e-92e8-a662ce41fced,(FLAG)DARKURGE_68888003-acaa-49d5-b4f2-0c6293797e59, _Flag);
DB_CampNight_Requirement((FLAG)NIGHT_DarkUrge_SparedIsobel_bc8b660e-33e9-44f7-9bc2-b869db5ac1f8,(FLAG)ORI_DarkUrge_SparedIsobel_Requirement_7b24b6bb-f9ef-414e-92e8-a662ce41fced,(FLAG)DARKURGE_68888003-acaa-49d5-b4f2-0c6293797e59, (FLAG)IMPOSSIBLE_6e4b66e9-0f72-5171-04ba-441108b45b0e);

//END_REGION

//REGION Dark Urge - Start

IF
DB_ORI_Darkurge(_DarkUrge)
THEN
ApplyStatus(_DarkUrge, "ORI_DARKURGE_BLOODIEDSTART", 1.0, 1, NULL_00000000-0000-0000-0000-000000000000);

IF
StatusApplied(_DarkUrge, "ORI_DARKURGE_BLOODIEDSTART", _, _)
THEN
RemoveStatus(_DarkUrge, "ORI_DARKURGE_BLOODIEDSTART", NULL_00000000-0000-0000-0000-000000000000);

IF
DB_ORI_Darkurge(_DarkUrge)
THEN
DB_TUT_Start_NonRandomPodStart(_DarkUrge, (DIALOGRESOURCE)TUT_DarkUrge_Start_58fb9ec7-966f-619d-ed1a-b1dbba06d7d9, (ITEM)S_TUT_PlayerPod_002_4a9d344d-8bfa-4bea-a8dd-cc54327b0cfb);

PROC
PROC_Tutorial_Start()
AND
DB_Avatars((CHARACTER)_DarkUrge)
AND
DB_ORI_DarkUrge((CHARACTER)_DarkUrge)
AND
QRY_StartDialog_Fixed((DIALOGRESOURCE)TUT_DarkUrge_Start_58fb9ec7-966f-619d-ed1a-b1dbba06d7d9, _DarkUrge)
THEN
SetWeaponUnsheathed((CHARACTER)_DarkUrge, 1, 1);

//END_REGION

//REGION Dark Urge - Add Butler to Camp

IF
FlagSet((FLAG)ORI_DarkUrge_State_BhaalAccepted_904c45e0-bb06-40ed-b5d7-4f1c851b9d86, _, _)
THEN
PROC_RemoveAllDialogEntriesForSpeaker(S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10);
SetOnStage((CHARACTER)S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10, 1);
DB_Dialogs(S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10, (DIALOGRESOURCE)GLO_DarkUrge_Butler_6dedd871-ae5b-a47d-bd93-a6f7f21578ea);
PROC_ORI_SetupCamp((CHARACTER)S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10, 1);

IF
FlagSet((FLAG)ORI_DarkUrge_State_BhaalAccepted_904c45e0-bb06-40ed-b5d7-4f1c851b9d86, _, _)
THEN
CharacterDisableAllCrimes(S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10);

PROC
PROC_DialogFlagSetup((DIALOGRESOURCE)GLO_DarkUrge_Butler_6dedd871-ae5b-a47d-bd93-a6f7f21578ea, S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10, _DarkUrge)
AND
DB_ORI_DarkUrge((CHARACTER)_DarkUrge)
AND
NOT QRY_ORI_DarkUrge_WearingHatForDialog(_DarkUrge)
THEN
ClearFlag((FLAG)ORI_DarkUrge_State_WearingButlerHat_d8d86554-91cd-d64d-c713-6011155814b6, _DarkUrge, 0);

PROC
PROC_DialogFlagSetup((DIALOGRESOURCE)LOW_BhaalTemple_MainDoor_6879d3df-5c9c-6cd6-78ca-340aadfbd989, _, _Player, _)
AND
DB_Players((CHARACTER)_Player)
AND
NOT QRY_ORI_DarkUrge_WearingHatForDialog(_Player)
THEN
ClearFlag((FLAG)ORI_DarkUrge_State_WearingButlerHat_d8d86554-91cd-d64d-c713-6011155814b6, _Player, 0);

QRY
QRY_ORI_DarkUrge_WearingHatForDialog((CHARACTER)_DarkUrge)
AND
GetEquippedItem(_DarkUrge, "Helmet", _Hat)
AND
GetTemplate(_Hat, _Template)
AND
DB_GLO_ORI_DarkUrge_ButlerHats(_Template)
AND
QRY_GetArmourSet(_DarkUrge)
AND
DB_QRYRTN_GetArmourSet(ARMOURSET.Normal)
THEN
SetFlag((FLAG)ORI_DarkUrge_State_WearingButlerHat_d8d86554-91cd-d64d-c713-6011155814b6, _DarkUrge, 0);

//END_REGION

//REGION Dark Urge - track Slayer form
// if flag is set, apply the appropriate level slayer form on the player.
IF
FlagSet((FLAG)ORI_DarkUrge_State_SlayerForm_88b450d5-3815-4f5d-0c6f-0de221513d64, _DarkUrge, _)
AND
DB_ORI_DarkUrge((CHARACTER)_DarkUrge)
AND
QRY_ORI_DarkUrge_GetSlayerLevel()
AND
DB_QRYRTN_ORI_DarkUrge_SlayerLevel(_SlayerLevel)
AND
HasAppliedStatus(_DarkUrge, _SlayerLevel, 0)
THEN
ApplyStatus(_DarkUrge, _SlayerLevel, -1.0, 0, _DarkUrge);

// if flag is cleared, remove slayer form regardless of the slayerform level.
IF
FlagCleared((FLAG)ORI_DarkUrge_State_SlayerForm_88b450d5-3815-4f5d-0c6f-0de221513d64, _DarkUrge, _)
AND
DB_ORI_DarkUrge((CHARACTER)_DarkUrge)
AND
HasAppliedStatus(_DarkUrge, "SLAYER_PLAYER", 1) // for below level 10 Dark Urges
THEN
RemoveStatus(_DarkUrge, "SLAYER_PLAYER", _DarkUrge);

IF
FlagCleared((FLAG)ORI_DarkUrge_State_SlayerForm_88b450d5-3815-4f5d-0c6f-0de221513d64, _DarkUrge, _)
AND
DB_ORI_DarkUrge((CHARACTER)_DarkUrge)
AND
HasAppliedStatus(_DarkUrge, "SLAYER_PLAYER_10", 1) // for above level 10 Dark Urges
THEN
RemoveStatus(_DarkUrge, "SLAYER_PLAYER_10", _DarkUrge);

// if status is applied successfully, set the flag.
IF
StatusApplied(_DarkUrge, _SlayerLevel, _, _)
AND
DB_ORI_DarkUrge((CHARACTER)_DarkUrge)
AND
QRY_ORI_DarkUrge_GetSlayerLevel()
AND
DB_QRYRTN_ORI_DarkUrge_SlayerLevel(_SlayerLevel)
AND
HasAppliedStatus(_DarkUrge, _SlayerLevel, 1)
THEN
SetFlag((FLAG)ORI_DarkUrge_State_SlayerForm_88b450d5-3815-4f5d-0c6f-0de221513d64, _DarkUrge, 0);

// if the status was removed, and no other slayer status is present, remove flag.
IF
StatusRemoved(_DarkUrge, "SLAYER_PLAYER", _, _)
AND
DB_ORI_DarkUrge((CHARACTER)_DarkUrge)
AND
HasAppliedStatus(_DarkUrge, "SLAYER_PLAYER_10", 0)
AND
HasAppliedStatus(_DarkUrge, "SLAYER_PLAYER", 0)
THEN
ClearFlag((FLAG)ORI_DarkUrge_State_SlayerForm_88b450d5-3815-4f5d-0c6f-0de221513d64, _DarkUrge, 0);

IF
StatusRemoved(_DarkUrge, "SLAYER_PLAYER_10", _, _)
AND
DB_ORI_DarkUrge((CHARACTER)_DarkUrge)
AND
HasAppliedStatus(_DarkUrge, "SLAYER_PLAYER_10", 0)
AND
HasAppliedStatus(_DarkUrge, "SLAYER_PLAYER", 0)
THEN
ClearFlag((FLAG)ORI_DarkUrge_State_SlayerForm_88b450d5-3815-4f5d-0c6f-0de221513d64, _DarkUrge, 0);

// if status apply failed, and the other slayer status is not active, clear the flag.
IF
StatusAttemptFailed(_DarkUrge, "SLAYER_PLAYER", _, _)
AND
DB_ORI_DarkUrge((CHARACTER)_DarkUrge)
AND
HasAppliedStatus(_DarkUrge, "SLAYER_PLAYER_10", 0)
AND
HasAppliedStatus(_DarkUrge, "SLAYER_PLAYER", 0)
THEN
ClearFlag((FLAG)ORI_DarkUrge_State_SlayerForm_88b450d5-3815-4f5d-0c6f-0de221513d64, _DarkUrge, 0);

IF
StatusAttemptFailed(_DarkUrge, "SLAYER_PLAYER_10", _, _)
AND
DB_ORI_DarkUrge((CHARACTER)_DarkUrge)
AND
HasAppliedStatus(_DarkUrge, "SLAYER_PLAYER", 0)
AND
HasAppliedStatus(_DarkUrge, "SLAYER_PLAYER_10", 0)
THEN
ClearFlag((FLAG)ORI_DarkUrge_State_SlayerForm_88b450d5-3815-4f5d-0c6f-0de221513d64, _DarkUrge, 0);

IF
FlagSet((FLAG)ORI_DarkUrge_State_GivenSlayerForm_14aec5bc-1013-4845-96ca-20722c5219e3, _, _)
AND
DB_ORI_DarkUrge((CHARACTER)_DarkUrge)
THEN
AddSpell((CHARACTER)_DarkUrge, "Shout_DarkUrge_Slayer", 1, 1);

// DU lost slayer ability, clear the spell from him.
IF
FlagCleared((FLAG)ORI_DarkUrge_State_GivenSlayerForm_14aec5bc-1013-4845-96ca-20722c5219e3, _, _)
AND
DB_ORI_DarkUrge((CHARACTER)_DarkUrge)
AND
HasSpell(_DarkUrge, "Shout_DarkUrge_Slayer", 1)
THEN
RemoveSpell(_DarkUrge, "Shout_DarkUrge_Slayer", 1);

IF
CastSpell(_DarkUrge, "Shout_DarkUrge_Slayer", _, _, _)
AND
QRY_OnlyOnce("GLO_DarkUrge_VB_SeesDUBecomeSlayer")
THEN
StartVoiceBark((VOICEBARKRESOURCE)GLO_DarkUrge_VB_SeesDUBecomeSlayer_bca55271-3372-65d6-27f7-207c2322d4cb, (CHARACTER)_DarkUrge);

//END_REGION

//REGION QRY to get Slayer status level.
// clear DB.
QRY
QRY_ORI_DarkUrge_GetSlayerLevel()
AND
DB_QRYRTN_ORI_DarkUrge_SlayerLevel(_SlayerLevel)
THEN
NOT DB_QRYRTN_ORI_DarkUrge_SlayerLevel(_SlayerLevel);

// if player is already level 10 and above.
QRY
QRY_ORI_DarkUrge_GetSlayerLevel()
AND
DB_ORI_DarkUrge((CHARACTER)_DarkUrge)
AND
GetLevel(_DarkUrge,_Level)
AND
_Level >= 10
THEN
DB_QRYRTN_ORI_DarkUrge_SlayerLevel("SLAYER_PLAYER_10");

// if player is below level 10.
QRY
QRY_ORI_DarkUrge_GetSlayerLevel()
AND
DB_ORI_DarkUrge((CHARACTER)_DarkUrge)
AND
GetLevel(_DarkUrge,_Level)
AND
_Level < 10
THEN
DB_QRYRTN_ORI_DarkUrge_SlayerLevel("SLAYER_PLAYER");

//END_REGION

//REGION Dark Urge - Butler's Immortality

IF
FlagSet(ORI_DarkUrge_Butler_State_PermaDead_d2f18c09-105a-7cbd-8c44-9a323ca0ce28, _, _)
THEN
NOT DB_PreventPermaDefeated(S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10);

IF
AddedTo(S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10, _Holder, _)
AND
NOT DB_ORI_DarkUrge_ButlerHolder(_, _, 0)
AND
DB_CurrentLevel(_Level)
THEN
DB_ORI_DarkUrge_ButlerHolder(_Holder, _Level, 0);

IF
RemovedFrom(S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10, _Holder)
AND
DB_ORI_DarkUrge_ButlerHolder(_Holder, _Level, 0)
AND
DB_CurrentLevel(_Level)
THEN
NOT DB_ORI_DarkUrge_ButlerHolder(_Holder, _Level, 0);

IF
DB_ORI_DarkUrge_ButlerHolder(_Holder, _Level, 1)
AND
DB_CurrentLevel(_Level)
THEN
NOT DB_ORI_DarkUrge_ButlerHolder(_Holder, _Level, 1);
TemplateAddTo(DEC_GEN_Gore_Pile_A_DarkUrgeButler_af5c6cb4-7536-4824-9fae-41bf76459ecc, _Holder, 1, 0);

IF
DB_ORI_DarkUrge_OldLoc(_Region, _X, _Y, _Z)
AND
DB_CurrentLevel(_Region)
AND
CreateAt(DEC_GEN_Gore_Pile_A_DarkUrgeButler_af5c6cb4-7536-4824-9fae-41bf76459ecc, _X, _Y, _Z, 0, 0, "", _)
THEN
NOT DB_ORI_DarkUrge_OldLoc(_Region, _X, _Y, _Z);

PROC
PROC_ORI_DarkUrge_CreateGiblets()
AND
QRY_IncreaseCounter("ORI_DarkUrge_Giblets")
AND
DB_GlobalCounter("ORI_DarkUrge_Giblets", _Num)
AND
_Num <= 11 //Arbitrary number. Match the number of Tears.
THEN
PROC_ORI_DarkUrge_DoCreateGiblets();

PROC
PROC_ORI_DarkUrge_DoCreateGiblets()
AND
DB_ORI_DarkUrge_ButlerHolder(_Holder, _Level, 0)
THEN
NOT DB_ORI_DarkUrge_ButlerHolder(_Holder, _Level, 0);
DB_ORI_DarkUrge_ButlerHolder(_Holder, _Level, 1);

PROC
PROC_ORI_DarkUrge_DoCreateGiblets()
//AND
//TODO: Check if in inventory - currently can't check that for Characters
AND
GetRegion(S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10, _Region)
AND
DB_CurrentLevel(_Region)
AND
GetPosition(S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10, _X, _Y, _Z)
AND
CreateAt(DEC_GEN_Gore_Pile_A_DarkUrgeButler_af5c6cb4-7536-4824-9fae-41bf76459ecc, _X, _Y, _Z, 0, 0, "", _)
THEN
DB_NOOP(1);

PROC
PROC_ORI_DarkUrge_DoCreateGiblets()
//AND
//TODO: Check if in inventory - currently can't check that for Characters
AND
GetRegion(S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10, _Region)
AND
NOT DB_CurrentLevel(_Region)
AND
GetPosition(S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10, _X, _Y, _Z)
THEN
DB_ORI_DarkUrge_OldLoc(_Region, _X, _Y, _Z);

IF
Died((CHARACTER)S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10)
AND
NOT DB_GlobalFlag((FLAG)ORI_DarkUrge_State_BhaalResisted_74944ac3-1ea0-4eae-9653-1f1319f8646b) // make sure in resistance path, the death is permanent
THEN
PROC_ORI_DarkUrge_CreateGiblets();
SetOnStage(S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10, 0);

QRY
QRY_ORI_DarkUrge_ButlerNeededInTemple()
AND
NOT DB_GlobalFlag(ORI_DarkUrge_State_BhaalAccepted_904c45e0-bb06-40ed-b5d7-4f1c851b9d86)
AND
DB_Players((CHARACTER)_DarkUrge)
AND
DB_ORI_DarkUrge((CHARACTER)_DarkUrge)
AND
DB_Camp_NightMode(0)
THEN
DB_NOOP(1);

PROC
PROC_LongRest()
AND
DB_Dead((CHARACTER)S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10)
AND
NOT DB_GlobalFlag(ORI_DarkUrge_Butler_State_PermaDead_d2f18c09-105a-7cbd-8c44-9a323ca0ce28)
AND
NOT DB_GlobalFlag((FLAG)ORI_DarkUrge_State_BhaalResisted_74944ac3-1ea0-4eae-9653-1f1319f8646b) // make sure in resistance path, the death is permanent
THEN
Resurrect((CHARACTER)S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10, NULL_00000000-0000-0000-0000-000000000000, 0);
PROC_ORI_DarkUrge_RestoreButlerPosition();

PROC
PROC_LongRest()
AND
NOT DB_Dead((CHARACTER)S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10)
AND
NOT DB_GlobalFlag(ORI_DarkUrge_Butler_State_PermaDead_d2f18c09-105a-7cbd-8c44-9a323ca0ce28)
AND
DB_Defeated(S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10)
AND
NOT DB_GlobalFlag((FLAG)ORI_DarkUrge_State_BhaalResisted_74944ac3-1ea0-4eae-9653-1f1319f8646b) // make sure in resistance path, the death is permanent
THEN
PROC_CharacterFullRestore((CHARACTER)S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10);
PROC_ORI_DarkUrge_RestoreButlerPosition();

//May need adjustment to "spawn a new one" at some other time.
PROC
PROC_ORI_DarkUrge_RestoreButlerPosition()
AND
QRY_ORI_DarkUrge_ButlerInCamp()
AND
DB_ORI_OriginCampData((CHARACTER)S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10, _Camp, _Trigger)
THEN
TeleportTo(S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10, _Trigger, "", 0, 0, 1);
SetOnStage(S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10, 1);

IF
Died((CHARACTER)S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10)
THEN
SetFlag(ORI_DarkUrge_Butler_Event_Died_b0ac69bd-21c6-4a5f-8f44-8802c20dce23, NULL_00000000-0000-0000-0000-000000000000, 0);

//Track who killed him
IF
KilledBy((CHARACTER)S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10, _Player, _, _)
AND
DB_ORI_DarkUrge_ButlerKiller(_Killer)
AND
_Killer != _Player
THEN
NOT DB_ORI_DarkUrge_ButlerKiller(_Killer);
ClearFlag((FLAG)ORI_DarkUrge_State_ButlerKiller_ac1f731c-0b50-3b60-5c4f-3120cbe5fc12, _Player, 0);

IF
KilledBy((CHARACTER)S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10, _Player, _, _)
AND
DB_PartOfTheTeam((CHARACTER)_Player)
AND
NOT DB_ORI_DarkUrge_ButlerKiller(_Player)
AND
QRY_ORI_DarkUrge_ButlerInCamp()
THEN
DB_ORI_DarkUrge_ButlerKiller(_Player);
SetFlag((FLAG)ORI_DarkUrge_State_ButlerKiller_ac1f731c-0b50-3b60-5c4f-3120cbe5fc12, _Player, 0);

IF
FlagCleared((FLAG)ORI_DarkUrge_State_ButlerKiller_ac1f731c-0b50-3b60-5c4f-3120cbe5fc12, _Player, _)
AND
DB_ORI_DarkUrge_ButlerKiller((CHARACTER)_Player)
THEN
NOT DB_ORI_DarkUrge_ButlerKiller(_Player);

//All is acceptable when it comes to the Butler.
QRY
QRY_CRIME_BlockRegisterCrime(_, _, _, _, (CHARACTER)S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10, _)
THEN
DB_NOOP(1);

QRY
QRY_ORI_DarkUrge_ButlerInCamp()
AND
DB_GlobalFlag((FLAG)ORI_DarkUrge_State_BhaalAccepted_904c45e0-bb06-40ed-b5d7-4f1c851b9d86)
THEN
DB_NOOP(1);

QRY
QRY_ORI_DarkUrge_ButlerInCamp()
AND
DB_ORI_DarkUrge_Debug_ButlerToCamp(1)
THEN
DB_NOOP(1);

//If you don't react to the Butler's immortality right away, don't worry about it.
IF
DialogEnded(_Dialog, _ID)
AND
DB_DialogSpeakers(_ID, S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10, _)
AND
DB_DialogPlayers(_ID, _Player, _)
AND
GetFlag(ORI_DarkUrge_Knows_ButlerDied_6832b15a-2883-4c3d-b71a-b14ef967a32e, _Player, 1)
THEN
SetFlag(ORI_DarkUrge_Knows_ButlerDiedReaction_98596b7d-f15e-4590-995a-8827f9d5287b, _Player, 1);

//END_REGION

//REGION Dark Urge - debug recruitment


// Dummy for adding the Dark Urge to the party - in certain debug flows, the query is checked just before setting the tag.
QRY
QRY_GLO_PartyMembers_GetInPartyDialog((CHARACTER)_DarkUrge)
AND
DB_ORI_DarkUrge((CHARACTER)_DarkUrge)
THEN
DB_GLO_PartyMembers_InPartyDialog(_DarkUrge, NULL_00000000-0000-0000-0000-000000000000);

// Dummy for adding the Dark Urge to the party - in certain debug flows, the query is checked just before setting the tag.
QRY
QRY_GLO_PartyMembers_GetInPartyDialog((CHARACTER)S_Player_DarkUrge_c66bc36f-7cb0-41fa-92f0-6d81d7d17ba3)
THEN
DB_GLO_PartyMembers_InPartyDialog(S_Player_DarkUrge_c66bc36f-7cb0-41fa-92f0-6d81d7d17ba3,NULL_00000000-0000-0000-0000-000000000000);

//END_REGION

//REGION Healing the Dark Urge

IF
StatusApplied(_DarkUrge, "UND_NOBLESTALK", _, _)
AND
DB_ORI_DarkUrge((CHARACTER)_DarkUrge)
AND
IsTagged(_DarkUrge, (TAG)HUMANOID_7fbed0d4-cabc-4a9d-804e-12ca6088a0a8, 1)
AND
QRY_OnlyOnce("ORI_DarkUrge_Heal_Mushroom")
AND
QRY_StartDialog_Fixed((DIALOGRESOURCE)ORI_DarkUrge_Healed_988dc8d4-cd32-9d0d-5e4c-a5857bc2fb1d, S_ORI_DarkUrge_ButlerVoiceStandin_f79ea93e-4696-40d5-b146-7ae02686eaaf, _DarkUrge)
THEN
SetFlag((FLAG)ORI_DarkUrge_Event_AteMushroom_3a67a8ff-f4a6-5aa2-a503-e5faffeed82c, _DarkUrge, 0);
SetFlag((FLAG)ORI_DarkUrge_State_RecoveredMemories_64592b1f-44fc-4725-a3cb-0891ba662e28, NULL_00000000-0000-0000-0000-000000000000, 0);


IF
UsingSpellOnTarget(_, _DarkUrge, "Target_Heal", _, _, _)
AND
DB_ORI_DarkUrge((CHARACTER)_DarkUrge)
AND
IsTagged(_DarkUrge, (TAG)HUMANOID_7fbed0d4-cabc-4a9d-804e-12ca6088a0a8, 1)
AND
QRY_OnlyOnce("ORI_DarkUrge_Heal")
AND
QRY_StartDialog_Fixed((DIALOGRESOURCE)ORI_DarkUrge_Healed_988dc8d4-cd32-9d0d-5e4c-a5857bc2fb1d, S_ORI_DarkUrge_ButlerVoiceStandin_f79ea93e-4696-40d5-b146-7ae02686eaaf, _DarkUrge)
THEN
ClearFlag((FLAG)ORI_DarkUrge_Event_AteMushroom_3a67a8ff-f4a6-5aa2-a503-e5faffeed82c, _DarkUrge, 0);
SetFlag((FLAG)ORI_DarkUrge_State_RecoveredMemories_64592b1f-44fc-4725-a3cb-0891ba662e28, NULL_00000000-0000-0000-0000-000000000000, 0);


IF
EnteredLevel(_DarkUrge, _, _)
AND
DB_ORI_DarkUrge((CHARACTER)_DarkUrge)
THEN
TeleportTo(S_ORI_DarkUrge_ButlerVoiceStandin_f79ea93e-4696-40d5-b146-7ae02686eaaf, _DarkUrge);


//END_REGION

//REGION Dark Urge reads about their background
IF
GameBookInterfaceClosed(S_MOO_NecromancerLab_DUBackgroundBook_f19e7958-819d-473e-bed3-5aa5fb4101a3, (CHARACTER)S_Player_DarkUrge_c66bc36f-7cb0-41fa-92f0-6d81d7d17ba3)
AND
QRY_OnlyOnce("MOO_NecromancerLab_AD_DUBackgroundBook")
THEN
PROC_TryStartAD(MOO_NecromancerLab_AD_DUBackgroundBook_6b576b9d-ebaa-c2af-3955-7805d282b8c9, (CHARACTER)S_Player_DarkUrge_c66bc36f-7cb0-41fa-92f0-6d81d7d17ba3);

//END_REGION

//REGION Dark Urge's Butler in different levels

IF
EnteredLevel(S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10, _, _Level)
AND
QRY_ORI_DarkUrgeButler_Config(_Level)
AND
DB_QRYRTN_DarkUrgeButler_Config(_Config)
THEN
PROC_SetAnubisConfig((CHARACTER)S_GLO_DarkUrge_Butler_f3486165-268f-4e41-9e0c-51485dfdff10, _Config);

// clear return DB before using it.
QRY
QRY_ORI_DarkUrgeButler_Config((STRING)_Level)
AND
DB_QRYRTN_DarkUrgeButler_Config(_Config)
THEN
NOT DB_QRYRTN_DarkUrgeButler_Config(_Config);

QRY
QRY_ORI_DarkUrgeButler_Config((STRING)_Level)
AND
DB_GlobalFlag(ORI_DarkUrge_State_BhaalAccepted_904c45e0-bb06-40ed-b5d7-4f1c851b9d86)
THEN
DB_QRYRTN_DarkUrgeButler_Config("WYR_DarkUrge_Butler");

QRY
QRY_ORI_DarkUrgeButler_Config(_Level)
AND
NOT DB_QRYRTN_DarkUrgeButler_Config(_)
AND
DB_GLO_ORI_DarkUrge_ButlerConfigs(_Level, _Config)
THEN
DB_QRYRTN_DarkUrgeButler_Config(_Config);

QRY
QRY_ORI_DarkUrgeButler_Config(_Level)
AND
NOT DB_QRYRTN_DarkUrgeButler_Config(_)
THEN
DB_QRYRTN_DarkUrgeButler_Config("GLO_DarkUrge_Butler");

// Making DB_QRYRTN_DarkUrgeButler_Config a singleton.
IF
DB_QRYRTN_DarkUrgeButler_Config(_NewState)
AND
DB_QRYRTN_DarkUrgeButler_Config(_OldState)
AND
_NewState != _OldState
THEN
NOT DB_QRYRTN_DarkUrgeButler_Config(_OldState);
//END_REGION

//REGION Journal

IF
FlagSet((FLAG)ORI_DarkUrge_State_GivenSlayerForm_14aec5bc-1013-4845-96ca-20722c5219e3, _, _)
AND
DB_ORI_DarkUrge(_DU)
THEN
QuestUpdate(_DU, "ORI_Avatar_DarkUrge", "AlfiraKilled_Reward");

IF
FlagSet((FLAG)ORI_DarkUrge_Quest_CrownedNetherbrain_9a885a28-82df-c786-6289-7746e90cc6ca, _, _)
AND
DB_ORI_DarkUrge(_DU)
THEN
QuestUpdate(_DU, "ORI_Avatar_DarkUrge", "ORI_Avatar_DarkUrge_OldFriends_End");

//END_REGION

//REGION TG greeting hack - TG repeats information that can be accessed in InParty through a question node if you get there through an IPRD or some other path.

IF
FlagSet((FLAG)TG_DarkUrge_SlayerForm_2784c68b-bbd0-4a7a-b382-61b11554e3bb, _Player, _)
AND
GetFlag(ORI_DarkUrge_Knows_BraggedSlayerForm_ffcc134e-c197-5727-cf61-66e7480d39f2, _Player, 1)
THEN
ClearFlag((FLAG)TG_DarkUrge_SlayerForm_2784c68b-bbd0-4a7a-b382-61b11554e3bb, _Player, 0);

//END_REGION

//REGION Tracking the Dark Urge's gender to refer to them

IF
TagSet(_DU, _Tag)
AND
DB_ORI_DarkUrge((CHARACTER)_DU)
AND
DB_ORI_DarkUrge_GenderFlags(_Tag, _Flag)
THEN
SetFlag(_Flag, NULL_00000000-0000-0000-0000-000000000000, 0, 1);

IF
TagCleared(_DU, _Tag)
AND
DB_ORI_DarkUrge((CHARACTER)_DU)
AND
DB_ORI_DarkUrge_GenderFlags(_Tag, _Flag)
THEN
ClearFlag(_Flag, NULL_00000000-0000-0000-0000-000000000000, 0, 1);

IF
DB_ORI_DarkUrge(_DU)
AND
DB_ORI_DarkUrge_GenderFlags(_Tag, _Flag)
AND
IsTagged(_DU, _Tag, 1)
THEN
SetFlag(_Flag, NULL_00000000-0000-0000-0000-000000000000, 0, 1);

IF
DB_ORI_DarkUrge(_DU)
AND
DB_ORI_DarkUrge_GenderFlags(_Tag, _Flag)
AND
IsTagged(_DU, _Tag, 0)
THEN
ClearFlag(_Flag, NULL_00000000-0000-0000-0000-000000000000, 0, 1);

//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "ModWrapper_Gustav"
