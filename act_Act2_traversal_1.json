{
  "act_id": "Act2",
  "chapter_sequence": [
    "Colony",
    "Epilogue",
    "Haven",
    "MoonriseTowers",
    "Shadowland",
    "Shar",
    "Town"
  ],
  "chapter_results": {
    "Colony": {
      "chapter_id": "Act2_Colony",
      "scenario_sequence": [
        "col_entrancedoor",
        "col_nautiloid",
        "col_tadpolechamber",
        "col_kitchenentry",
        "col_mizorarescue",
        "col_morgue",
        "col_cleansingchute",
        "col_kethericshowdown",
        "col_brainreader",
        "col_kitchen",
        "col_necrolab",
        "col_regenstation",
        "col_necromancer",
        "col_entrance",
        "col_general",
        "col_elderbrain",
        "col_arrival",
        "col_tadpolingcentre",
        "bhvr_col",
        "col_barracks",
        "col_necromancerlab",
        "col_memorylibrary",
        "col_gen",
        "col_kitchenvista",
        "col_kitchensecret",
        "col_partysuppression",
        "col_vault"
      ],
      "scenario_results": {
        "col_entrancedoor": {
          "scenario_name": "col_entrancedoor",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "col_nautiloid": {
          "scenario_name": "col_nautiloid",
          "session_sequence": [
            "PAD"
          ],
          "paths": {
            "PAD": [
              "PAD_0"
            ]
          },
          "node_data": {
            "PAD": [
              {
                "id": "PAD_0",
                "speaker": "Player",
                "text": "A whole fleet of nautiloids. How many 'True Souls' have passed through this place?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD": "While exploring the Colony, a player arrives at a precipice from which they can see a row of floating nautiloids."
          }
        },
        "col_tadpolechamber": {
          "scenario_name": "col_tadpolechamber",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "col_kitchenentry": {
          "scenario_name": "col_kitchenentry",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "col_mizorarescue": {
          "scenario_name": "col_mizorarescue",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "col_morgue": {
          "scenario_name": "col_morgue",
          "session_sequence": [
            "AD_Minthara_EnteredRoom",
            "AD_Butcher_SpotUs",
            "AD_Butcher_CombatTurn002"
          ],
          "paths": {
            "AD_Minthara_EnteredRoom": [
              "AD_Minthara_EnteredRoom_0"
            ],
            "AD_Butcher_SpotUs": [
              "AD_Butcher_SpotUs_0"
            ],
            "AD_Butcher_CombatTurn002": [
              "AD_Butcher_CombatTurn002_0"
            ]
          },
          "node_data": {
            "AD_Minthara_EnteredRoom": [
              {
                "id": "AD_Minthara_EnteredRoom_0",
                "speaker": "Nightwarden Minthara",
                "text": "Fresh recruits for Ketheric's army. To a necromancer, a morgue is a muster yard.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Butcher_SpotUs": [
              {
                "id": "AD_Butcher_SpotUs_0",
                "speaker": "Chop",
                "text": "No! Bad kitty! Back in cage!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Annoyed at his 'pet' (intellect devourer)"
              }
            ],
            "AD_Butcher_CombatTurn002": [
              {
                "id": "AD_Butcher_CombatTurn002_0",
                "speaker": "Chop",
                "text": "Kill me. No more voices. No more red. Only peace. Only dead.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Anguished moment of lucidity cried out during combat. Wants to be put out of his misery,"
              }
            ]
          },
          "session_synopses": {
            "AD_Minthara_EnteredRoom": "",
            "AD_Butcher_SpotUs": "This AD plays when Chop spots Us the intellect devourer outside of his cage, without seeing a player nearby to arrest.",
            "AD_Butcher_CombatTurn002": "This AD plays during combat with Chop, the Colony Butcher. Chop will fight you because he is enthralled, but has a secret desire to be put out of his misery."
          }
        },
        "col_cleansingchute": {
          "scenario_name": "col_cleansingchute",
          "session_sequence": [
            "PAD",
            "Corpse_Dead"
          ],
          "paths": {
            "PAD": [
              "PAD_0"
            ],
            "Corpse_Dead": [
              "Corpse_Dead_22",
              "Corpse_Dead_23",
              "Corpse_Dead_19",
              "Corpse_Dead_7"
            ]
          },
          "node_data": {
            "PAD": [
              {
                "id": "PAD_0",
                "speaker": "Player",
                "text": "An offering from Moonrise Towers.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Corpse_Dead": [
              {
                "id": "Corpse_Dead_22",
                "speaker": "Narrator",
                "text": "*The corpse regards you lifelessly.*",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Corpse_Dead_23",
                "speaker": "Player",
                "text": "Who are you?",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [
                  "b951f0e6-65af-843d-a666-f5284343cc67_MentionedTrueSoul",
                  "GLO_SpeakWithDead_Event_QuestionAsked"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Corpse_Dead_19",
                "speaker": "Corpse",
                "text": "Nimias... True Soul...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Nim-EE-ass"
              },
              {
                "id": "Corpse_Dead_7",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD": "The player witnesses a bloody corpse rolling out of the chute in the Cleansing Room of the lower Mind Flayer Colony, coming in from the Oubliette. This PAD is their reaction to seeing this, and connecting it to Moonrise above.",
            "Corpse_Dead": "The Speak With Dead dialog for the default fallback corpse that drops from the Cleansing Chute corpse. This corpse only appears when another minor character (presumably one of the tieflings) shouldn't end up dead here for some reason."
          }
        },
        "col_kethericshowdown": {
          "scenario_name": "col_kethericshowdown",
          "session_sequence": [
            "AD_Phase3Transition",
            "AD_NightsongApostle",
            "KethericIntro",
            "PAD_AfterCombatComment",
            "DaisyAD_ElderBrain",
            "AD_KethericCommandTroops",
            "CrownController",
            "PAD_NightsongCaged",
            "AD_IsobelKilled"
          ],
          "paths": {
            "AD_Phase3Transition": [
              "AD_Phase3Transition_0"
            ],
            "AD_NightsongApostle": [
              "AD_NightsongApostle_0"
            ],
            "KethericIntro": [
              "KethericIntro_71",
              "KethericIntro_44",
              "KethericIntro_76",
              "KethericIntro_3",
              "KethericIntro_36",
              "KethericIntro_26",
              "KethericIntro_21",
              "KethericIntro_25",
              "KethericIntro_48",
              "KethericIntro_57",
              "KethericIntro_13",
              "KethericIntro_27",
              "KethericIntro_0",
              "KethericIntro_78",
              "KethericIntro_56",
              "KethericIntro_12",
              "KethericIntro_14"
            ],
            "PAD_AfterCombatComment": [
              "PAD_AfterCombatComment_0"
            ],
            "DaisyAD_ElderBrain": [
              "DaisyAD_ElderBrain_0"
            ],
            "AD_KethericCommandTroops": [
              "AD_KethericCommandTroops_0"
            ],
            "CrownController": [
              "CrownController_60",
              "CrownController_47"
            ],
            "PAD_NightsongCaged": [
              "PAD_NightsongCaged_0"
            ],
            "AD_IsobelKilled": [
              "AD_IsobelKilled_1",
              "AD_IsobelKilled_0"
            ]
          },
          "node_data": {
            "AD_Phase3Transition": [
              {
                "id": "AD_Phase3Transition_0",
                "speaker": "",
                "text": "UNLIFE TO MY LIFE - SUSTAIN ME, SLAVES.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_NightsongApostle": [
              {
                "id": "AD_NightsongApostle_0",
                "speaker": "Nightsong",
                "text": "Now you wear a face to match your soul, oathbreaker.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Scorn in the heat of battle - her nemesis has just turned into a hideous monster"
              }
            ],
            "KethericIntro": [
              {
                "id": "KethericIntro_71",
                "speaker": "Ketheric Thorm",
                "text": "There you are. As predicted. What is it, I wonder, that draws one toward death like a moth to light?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "FactionHostileToPlayerGroupAfterDialog"
                ],
                "goto": "",
                "link": "74",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KethericIntro_44",
                "speaker": "Ketheric Thorm",
                "text": "You could have run away. Absconded with the Prism - the one thing that could prevent me from fulfilling my destiny.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "74",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KethericIntro_76",
                "speaker": "Ketheric Thorm",
                "text": "But the lure of one's destiny is irresistible, isn't it?",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Audience_State_SpokeToKetheric = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "74",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KethericIntro_3",
                "speaker": "Ketheric Thorm",
                "text": "Perhaps you hoped to learn your place in history before you are erased from it. A bright flash of clarity before the snuffing-out.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "74",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KethericIntro_36",
                "speaker": "Player",
                "text": "Why is the Prism so important to you?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "2",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KethericIntro_26",
                "speaker": "Ketheric Thorm",
                "text": "The very fact of your being attests to its power - despite your infection, you resisted the brain, here in the heart of its domain.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KethericIntro_21",
                "speaker": "Ketheric Thorm",
                "text": "What good is an army of thralls if they do not obey their master?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KethericIntro_25",
                "speaker": "Ketheric Thorm",
                "text": "Let us speak plainly.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KethericIntro_48",
                "speaker": "Ketheric Thorm",
                "text": "My Lord Myrkul gave me the one thing I desired - the one thing that no other god could grant me.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KethericIntro_57",
                "speaker": "Ketheric Thorm",
                "text": "My daughter's life returned. Her heart beating once more.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KethericIntro_13",
                "speaker": "Ketheric Thorm",
                "text": "For that, he asked that I serve as his Chosen, join Orin and Gortash to grow the cult of the Absolute, and then... take control of it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KethericIntro_27",
                "speaker": "Ketheric Thorm",
                "text": "He's never had a more devoted follower.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KethericIntro_0",
                "speaker": "Ketheric Thorm",
                "text": "I have fought great wars before, in the service of other gods, and other powers. But for Myrkul, I would condemn all of Faerûn to death.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KethericIntro_78",
                "speaker": "Ketheric Thorm",
                "text": "You are all that stands between me and my destiny - and you have brought the Prism here.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KethericIntro_56",
                "speaker": "Ketheric Thorm",
                "text": "I will kill you now. And then I will raise you as my servant.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Cold, merciless ire."
              },
              {
                "id": "KethericIntro_12",
                "speaker": "Player",
                "text": "Enough talk. Let's finish this.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KethericIntro_14",
                "speaker": "Ketheric Thorm",
                "text": "With pleasure.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_AfterCombatComment": [
              {
                "id": "PAD_AfterCombatComment_0",
                "speaker": "Player",
                "text": "The Chosen of Myrkul is dead - permanently, this time.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Karlach: She's distracted. More focused on Gortash."
              }
            ],
            "DaisyAD_ElderBrain": [
              {
                "id": "DaisyAD_ElderBrain_0",
                "speaker": "",
                "text": "An elder brain... One of the cruellest and most powerful creatures in existence, enslaved by mere mortals.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_KethericCommandTroops": [
              {
                "id": "AD_KethericCommandTroops_0",
                "speaker": "",
                "text": "Focus your attack, soldiers.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: battlefield orders"
              }
            ],
            "CrownController": [
              {
                "id": "CrownController_60",
                "speaker": "Narrator",
                "text": "*In death, the body is cooling, but energy radiates from the stone.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "13",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Player crouches next to Ketheric's body. Shot of the netherstone embedded in the armour. Player wrestles the stone out of the armour and lifts it into view."
              },
              {
                "id": "CrownController_47",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "13",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Player holds up stone. A portal opens up behind it (same one we used in Astral Prison to travel back to material plane.) Daisy steps out (in cine only.)"
              }
            ],
            "PAD_NightsongCaged": [
              {
                "id": "PAD_NightsongCaged_0",
                "speaker": "Player",
                "text": "So long as Nightsong's in that cage, Ketheric will keep getting back up.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_IsobelKilled": [
              {
                "id": "AD_IsobelKilled_1",
                "speaker": "",
                "text": "ISOBEL!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: More fury than grief. We killed his daughter - but he'll bring her back again"
              },
              {
                "id": "AD_IsobelKilled_0",
                "speaker": "",
                "text": "My Lord brought her back once already. Your death will be final.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Barely contained rage"
              }
            ]
          },
          "session_synopses": {
            "AD_Phase3Transition": "This AD plays during the Ketheric Showdown in the lower Colony, when the third phase of the fight starts, this will play only once on Ketheric when his turn starts. Ketheric, in his Apostle of Myrkul form, calls upon the Necromites to sacrifice themselves to heal him.",
            "AD_NightsongApostle": "This AD plays during the Ketheric Showdown in the lower Colony, after Ketheric has transformed into his Apostle form/reached his second stage, Nightsong will react to this upon her first combat turn after this.",
            "KethericIntro": "This dialog plays at the start of the Ketheric boss fight in the Colony. There are numerous permutations here: Nightsong being dead or alive, freed from her soul cage (through stealth before being spotted); Isobel being absent or tadpoled or tadpoled and killed (in the boss chamber) before entering the dialog; Jaheira being present here (and spotted) or being absent.",
            "PAD_AfterCombatComment": "A PAD commenting on defeating Ketheric in his Apostle form at the end of the mind flayer Colony. After this the player will say that they need to go discuss the next course of action with their allies (alluding to Intermezzo in Moonrise Tower).At this point the players should take Ketheric's Netherstone (but we can't ensure that a player hasn't already looted said netherstone off his corpse by the time that end node is played).If there are two players available, they will banter together, otherwise a solo PAD will play.",
            "DaisyAD_ElderBrain": "The Elder Brain. One of the cruelest and most powerful creatures that exist. Subservient to those three. And those gems seem to be the key. We must obtain them.",
            "AD_KethericCommandTroops": "This AD plays during the Ketheric Showdown in the lower Colony, when Ketheric uses his \"Command Troops\" ability to make his minions focus their efforts on attacking a specific target. This will only happen during the first phase, in Ketheric's human form.",
            "CrownController": "This dialog plays after picking up the Crown Controller ring off Ketheric’s body. The player will realize that they need to collect the other two Crown Controllers from Orin and Gortash before they can use them to command the Elder Brain. Picking up the Crown Controller allows the party to continue onward to the epilogue/intermezzo of Act 2.",
            "PAD_NightsongCaged": "This AD plays during the Ketheric Showdown in the lower Colony, while the combat has started and Nightsong is still soul caged. The players must free her before Ketheric can be damaged. Once the first (speaker available) player gets their turn in combat, this AD will play on them.",
            "AD_IsobelKilled": "This AD plays during the Ketheric Showdown in the lower Colony, when the player kills Isobel during the combat. Ketheric will react to this in human form."
          }
        },
        "col_brainreader": {
          "scenario_name": "col_brainreader",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "col_kitchen": {
          "scenario_name": "col_kitchen",
          "session_sequence": [
            "Butcher"
          ],
          "paths": {
            "Butcher": [
              "Butcher_44",
              "Butcher_30",
              "37",
              "NODE_NOT_FOUND"
            ]
          },
          "node_data": {
            "Butcher": [
              {
                "id": "Butcher_44",
                "speaker": "Chop",
                "text": "...",
                "node_type": "normal",
                "checkflags": [
                  "COL_Kitchen_Butcher_HasMet"
                ],
                "setflags": [],
                "goto": "",
                "link": "54",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Silent"
              },
              {
                "id": "Butcher_30",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "37",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "37",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ]
          },
          "session_synopses": {
            "Butcher": "This dialog is started by talking to the Butcher character in the Colony. The player may ask the Butcher questions or recruit them as a temporary follower inside the Colony. Alternatively, this dialog runs through a flag in case the player has already met the Butcher, or if the Butcher was recruited as a follower. The Butcher sounds eerily vacant unless otherwise specified, his mind destroyed by his time in Colony."
          }
        },
        "col_necrolab": {
          "scenario_name": "col_necrolab",
          "session_sequence": [
            "GrandDesignSculpture",
            "AD_Minthara_WitnessedBrainDevice"
          ],
          "paths": {
            "GrandDesignSculpture": [
              "GrandDesignSculpture_7",
              "GrandDesignSculpture_6",
              "GrandDesignSculpture_10",
              "GrandDesignSculpture_3",
              "GrandDesignSculpture_4",
              "GrandDesignSculpture_2",
              "GrandDesignSculpture_8",
              "GrandDesignSculpture_1",
              "GrandDesignSculpture_5",
              "GrandDesignSculpture_0"
            ],
            "AD_Minthara_WitnessedBrainDevice": [
              "AD_Minthara_WitnessedBrainDevice_0"
            ]
          },
          "node_data": {
            "GrandDesignSculpture": [
              {
                "id": "GrandDesignSculpture_7",
                "speaker": "Narrator",
                "text": "-OUR-<br>                     -destiny-<br>-DESIGN-<br>                 -downfall-",
                "node_type": "normal",
                "checkflags": [
                  "ILLITHID"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Wide shot of entire relief, dwarfing player"
              },
              {
                "id": "GrandDesignSculpture_6",
                "speaker": "Narrator",
                "text": "*Your tadpole echoes. Not with presence, but memory - tinged with loss.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Close-up of central figure, looming large with Brain above"
              },
              {
                "id": "GrandDesignSculpture_10",
                "speaker": "",
                "text": "-THE GRAND DESIGN-<br>             -order-<br>-perfection-<br>                -UNITY-",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Shot of nautiloids"
              },
              {
                "id": "GrandDesignSculpture_3",
                "speaker": "",
                "text": "-every plane-<br>          -AS ONE-<br>-every being-<br>          -IN THEIR PLACE-",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Shots of the various scenes of torture on the sculpture, humanoid shapes bowed in agony"
              },
              {
                "id": "GrandDesignSculpture_4",
                "speaker": "Narrator",
                "text": "*That loss blooms into a sudden fury, burying claws in your mind.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Mind-meld effect, player in pain"
              },
              {
                "id": "GrandDesignSculpture_2",
                "speaker": "",
                "text": "-taken-<br>           -corrupted-<br>-GONE-",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Mind-meld effect, player in pain"
              },
              {
                "id": "GrandDesignSculpture_8",
                "speaker": "Narrator",
                "text": "*And just as suddenly, pain and memory are gone - leaving only stone once more.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Wide shot of sculpture again, pulling out as player straightens."
              },
              {
                "id": "GrandDesignSculpture_1",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_Laezel"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "GrandDesignSculpture_5",
                "speaker": "Lae'zel",
                "text": "The Grand Design. It is every githyanki's duty to ensure the ghaik empire is never reborn.",
                "node_type": "normal",
                "checkflags": [
                  "COL_NecroLab_GrandDesignSculpture_HasMet_LaezelInclusion = False"
                ],
                "setflags": [
                  "COL_NecroLab_GrandDesignSculpture_HasMet_LaezelInclusion"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "GrandDesignSculpture_0",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_End_Laezel"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Minthara_WitnessedBrainDevice": [
              {
                "id": "AD_Minthara_WitnessedBrainDevice_0",
                "speaker": "Nightwarden Minthara",
                "text": "A splendid device. All the benefits of a cleric, no gods required.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "GrandDesignSculpture": "An interaction with the mind flayer sculpture depicting the Grand Design, as seen in the intro cutscene of the game in the Nautiloid. A psionic imprint tells you its story.",
            "AD_Minthara_WitnessedBrainDevice": ""
          }
        },
        "col_regenstation": {
          "scenario_name": "col_regenstation",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "col_necromancer": {
          "scenario_name": "col_necromancer",
          "session_sequence": [
            "AD_Combat_SteelWatchers",
            "AD_Haruspicy",
            "AD_Combat_ResendZombie",
            "AD_ZombieErrand"
          ],
          "paths": {
            "AD_Combat_SteelWatchers": [
              "AD_Combat_SteelWatchers_0"
            ],
            "AD_Haruspicy": [
              "AD_Haruspicy_0"
            ],
            "AD_Combat_ResendZombie": [
              "AD_Combat_ResendZombie_0"
            ],
            "AD_ZombieErrand": [
              "AD_ZombieErrand_0"
            ]
          },
          "node_data": {
            "AD_Combat_SteelWatchers": [
              {
                "id": "AD_Combat_SteelWatchers_0",
                "speaker": "Balthazar",
                "text": "Unafraid of a fight - good. Perhaps we'll salvage your remains for a Steel Watcher.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Taunting. 'I'm going to repurpose your corpse for one of my projects after I kill you'"
              }
            ],
            "AD_Haruspicy": [
              {
                "id": "AD_Haruspicy_0",
                "speaker": "Balthazar",
                "text": "Medullis et sanguis...",
                "node_type": "normal",
                "checkflags": [
                  "0d9d0064-babd-6e83-6ea6-5b78afb0413c_A"
                ],
                "setflags": [
                  "0d9d0064-babd-6e83-6ea6-5b78afb0413c_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: Latin translation: \"Marrow and blood...\"\rNodeContext: meh-DOOH-lis et SAN-gwis"
              }
            ],
            "AD_Combat_ResendZombie": [
              {
                "id": "AD_Combat_ResendZombie_0",
                "speaker": "Balthazar",
                "text": "Relight the candles - go!",
                "node_type": "normal",
                "checkflags": [
                  "9d0ddaf8-3f55-4255-3297-42521cfb8a5c_HappenedOnce"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Urgent command to a zombie lackey during combat"
              }
            ],
            "AD_ZombieErrand": [
              {
                "id": "AD_ZombieErrand_0",
                "speaker": "Balthazar",
                "text": "Too feeble by far. This needs muscle; the stronger, the better.",
                "node_type": "normal",
                "checkflags": [
                  "a6f2350b-ecc4-bf6c-0c73-dcb37f9e9690_A"
                ],
                "setflags": [
                  "a6f2350b-ecc4-bf6c-0c73-dcb37f9e9690_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Engrossed in his work, Ordering zombie lackeys about."
              }
            ]
          },
          "session_synopses": {
            "AD_Combat_SteelWatchers": "The necromancer is monologuing in combat.",
            "AD_Haruspicy": "The necromancer is standing over a bowl of blood and bone, conducting a ritual to see the future. This will trigger in the Necromancer's idle behavior if you entered through the main entrance while he is still alive OR after all zombies have been revived in the post-Audience combat and the players are still in the cages.For help with Latin, contact either Tom Ryckeboer or Ilya Voulis.",
            "AD_Combat_ResendZombie": "The necromancer is sending a zombie to light the candles that start an arcane ritual which drains the player's hitpoints and ultimately turns them into a zombie, after the player has extinguished them.",
            "AD_ZombieErrand": "The necromancer is standing over a bowl of blood and bone, conducting a ritual to see the future. He's sending zombies off on errands."
          }
        },
        "col_entrance": {
          "scenario_name": "col_entrance",
          "session_sequence": [
            "PAD_NeverThoughtWouldReturn"
          ],
          "paths": {
            "PAD_NeverThoughtWouldReturn": [
              "PAD_NeverThoughtWouldReturn_1",
              "PAD_NeverThoughtWouldReturn_0"
            ]
          },
          "node_data": {
            "PAD_NeverThoughtWouldReturn": [
              {
                "id": "PAD_NeverThoughtWouldReturn_1",
                "speaker": "Jaheira",
                "text": "Of all the beastly lairs I've had to poke my nose into - an illithid colony is still by far the worst.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "InternalNodeContext:  Referencing Bhaalspawn/Abdel (Unsure if it's a canon adventure? Might be)"
              },
              {
                "id": "PAD_NeverThoughtWouldReturn_0",
                "speaker": "Player",
                "text": "I think we have more pressing concerns than a trip down memory lane.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_NeverThoughtWouldReturn": "Jaheira comments about returning to a mindflayer colony, which Laez'al, Wyll and Astarion comment on. It's mentioned that this is Jaheira reflecting on coming to one of these with Abdel Adrian,"
          }
        },
        "col_general": {
          "scenario_name": "col_general",
          "session_sequence": [
            "PAD_CallLiftFail"
          ],
          "paths": {
            "PAD_CallLiftFail": [
              "PAD_CallLiftFail_0"
            ]
          },
          "node_data": {
            "PAD_CallLiftFail": [
              {
                "id": "PAD_CallLiftFail_0",
                "speaker": "Player",
                "text": "The platform's already here.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_CallLiftFail": "The player has tried to call the platform in COL while it's already at the level in question."
          }
        },
        "col_elderbrain": {
          "scenario_name": "col_elderbrain",
          "session_sequence": [
            "AD_Rapid05",
            "AD_Rapid02"
          ],
          "paths": {
            "AD_Rapid05": [
              "AD_Rapid05_0"
            ],
            "AD_Rapid02": [
              "AD_Rapid02_0"
            ]
          },
          "node_data": {
            "AD_Rapid05": [
              {
                "id": "AD_Rapid05_0",
                "speaker": "",
                "text": "---LIBERATE---",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Frantic"
              }
            ],
            "AD_Rapid02": [
              {
                "id": "AD_Rapid02_0",
                "speaker": "",
                "text": "---ASSEMBLE---",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Frantic"
              }
            ]
          },
          "session_synopses": {
            "AD_Rapid05": "Quick-fire Elder Brain ADs in the Colony corridors. If the party attacked Ketheric on the Moonrise Rooftop, there will be more frantic, fast-paced ADs from the Elder Brain surrounding us in quick succession, similar to when we approach the Elder Brain in the Morphic Pool. In this flow, the evacuation of the Colony is a lot more pressing because Ketheric was attacked.",
            "AD_Rapid02": "Quick-fire Elder Brain ADs in the Colony corridors. If the party attacked Ketheric on the Moonrise Rooftop, there will be more frantic, fast-paced ADs from the Elder Brain surrounding us in quick succession, similar to when we approach the Elder Brain in the Morphic Pool. In this flow, the evacuation of the Colony is a lot more pressing because Ketheric was attacked."
          }
        },
        "col_arrival": {
          "scenario_name": "col_arrival",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "col_tadpolingcentre": {
          "scenario_name": "col_tadpolingcentre",
          "session_sequence": [
            "AD_MemoryImprint_003_Mindflayer",
            "AD_MemoryImprint_004_Mindflayer",
            "AD_MemoryImprint_006_Zevlor",
            "Pods",
            "PAD_BrinePool_Tadpole",
            "AD_MemoryImprint_005_Mindflayer",
            "AD_MemoryImprint_007_Mindflayer",
            "DaisyAD_BrinePool",
            "Zevlor_Dead",
            "AD_MemoryImprint_009_Empty",
            "AD_MemoryImprint_008_Yeva",
            "AD_Minthara_EnteredTadpolingCenter",
            "AD_Mindflayers_EnterCombat",
            "AD_MemoryImprint_002_Manip",
            "AD_MemoryImprint_001_Mindflayer",
            "DarkUrgePod"
          ],
          "paths": {
            "AD_MemoryImprint_003_Mindflayer": [
              "AD_MemoryImprint_003_Mindflayer_1",
              "AD_MemoryImprint_003_Mindflayer_2",
              "AD_MemoryImprint_003_Mindflayer_0"
            ],
            "AD_MemoryImprint_004_Mindflayer": [
              "AD_MemoryImprint_004_Mindflayer_0"
            ],
            "AD_MemoryImprint_006_Zevlor": [
              "AD_MemoryImprint_006_Zevlor_2",
              "AD_MemoryImprint_006_Zevlor_0",
              "AD_MemoryImprint_006_Zevlor_1"
            ],
            "Pods": [
              "Pods_1",
              "Pods_7",
              "Pods_18",
              "Pods_3"
            ],
            "PAD_BrinePool_Tadpole": [
              "PAD_BrinePool_Tadpole_0"
            ],
            "AD_MemoryImprint_005_Mindflayer": [
              "AD_MemoryImprint_005_Mindflayer_1",
              "AD_MemoryImprint_005_Mindflayer_2",
              "AD_MemoryImprint_005_Mindflayer_3"
            ],
            "AD_MemoryImprint_007_Mindflayer": [
              "AD_MemoryImprint_007_Mindflayer_1",
              "AD_MemoryImprint_007_Mindflayer_2",
              "AD_MemoryImprint_007_Mindflayer_0"
            ],
            "DaisyAD_BrinePool": [
              "DaisyAD_BrinePool_0"
            ],
            "Zevlor_Dead": [
              "Zevlor_Dead_7",
              "Zevlor_Dead_15",
              "Zevlor_Dead_3",
              "Zevlor_Dead_0"
            ],
            "AD_MemoryImprint_009_Empty": [
              "AD_MemoryImprint_009_Empty_0"
            ],
            "AD_MemoryImprint_008_Yeva": [
              "AD_MemoryImprint_008_Yeva_4",
              "AD_MemoryImprint_008_Yeva_0",
              "AD_MemoryImprint_008_Yeva_1",
              "AD_MemoryImprint_008_Yeva_2"
            ],
            "AD_Minthara_EnteredTadpolingCenter": [
              "AD_Minthara_EnteredTadpolingCenter_0"
            ],
            "AD_Mindflayers_EnterCombat": [
              "AD_Mindflayers_EnterCombat_0"
            ],
            "AD_MemoryImprint_002_Manip": [
              "AD_MemoryImprint_002_Manip_0"
            ],
            "AD_MemoryImprint_001_Mindflayer": [
              "AD_MemoryImprint_001_Mindflayer_0",
              "AD_MemoryImprint_001_Mindflayer_3",
              "AD_MemoryImprint_001_Mindflayer_1"
            ],
            "DarkUrgePod": [
              "DarkUrgePod_15",
              "DarkUrgePod_8",
              "DarkUrgePod_4",
              "DarkUrgePod_20",
              "DarkUrgePod_31",
              "DarkUrgePod_12"
            ]
          },
          "node_data": {
            "AD_MemoryImprint_003_Mindflayer": [
              {
                "id": "AD_MemoryImprint_003_Mindflayer_1",
                "speaker": "Narrator",
                "text": "*The device releases a stream of fragmented memories and emotions - all that remains of the pod inhabitant's former self.*",
                "node_type": "normal",
                "checkflags": [
                  "COL_TadpolingCentre_MemoryImprint_FirstUse = False"
                ],
                "setflags": [
                  "COL_TadpolingCentre_MemoryImprint_FirstUse"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_MemoryImprint_003_Mindflayer_2",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "AD_MemoryImprint_003_Mindflayer_0",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_MemoryImprint_003_Mindflayer_0",
                "speaker": "Narrator",
                "text": "*Desperation... pain... terror. Cultists raided his village - he was the sole survivor.*",
                "node_type": "normal",
                "checkflags": [
                  "COL_TadpolingCentre_MemoryImprint_FirstUse"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_MemoryImprint_004_Mindflayer": [
              {
                "id": "AD_MemoryImprint_004_Mindflayer_0",
                "speaker": "Narrator",
                "text": "*The device does not react to your presence.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_MemoryImprint_006_Zevlor": [
              {
                "id": "AD_MemoryImprint_006_Zevlor_2",
                "speaker": "Narrator",
                "text": "*You remember the shattered windows of Elturel's High Cathedral, the burning black sky of Avernus beyond.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_MemoryImprint_006_Zevlor_0",
                "speaker": "Narrator",
                "text": "*In its horror, the Blood War unites you. Tiefling, dwarf and elf alike huddle behind the shields of your paladin order, waiting for salvation. But when it comes... disunity.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_MemoryImprint_006_Zevlor_1",
                "speaker": "Narrator",
                "text": "*The returned city casts your people out, the devils who dragged them down to hell. In the end, it is not your paladin oath that is broken: it is your faith itself.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Pods": [
              {
                "id": "Pods_1",
                "speaker": "Narrator",
                "text": "*You connect to the device, and gain control of the pods - and the fate of their occupants.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "7",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Pods_7",
                "speaker": "Narrator",
                "text": "*The device is open to your tadpole's command - to your authority.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Pods_18",
                "speaker": "Player",
                "text": "Purge.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "COL_TadpolingCentre_Event_PurgePods"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Gale -1",
                  "Karlach -5",
                  "Lae'zel 5",
                  "Shadowheart -5",
                  "Wyll 5",
                  "Minthara 1",
                  "Halsin -5"
                ],
                "context": ""
              },
              {
                "id": "Pods_3",
                "speaker": "Narrator",
                "text": "*Screams. Psychic agony. Terror. Then... nothing.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_BrinePool_Tadpole": [
              {
                "id": "PAD_BrinePool_Tadpole_0",
                "speaker": "Player",
                "text": "An unusual parasite, here. It's - it's reaching out to me.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_MemoryImprint_005_Mindflayer": [
              {
                "id": "AD_MemoryImprint_005_Mindflayer_1",
                "speaker": "Narrator",
                "text": "*The device releases a stream of fragmented memories and emotions - all that remains of the pod inhabitant's former self.*",
                "node_type": "normal",
                "checkflags": [
                  "COL_TadpolingCentre_MemoryImprint_FirstUse = False"
                ],
                "setflags": [
                  "COL_TadpolingCentre_MemoryImprint_FirstUse"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_MemoryImprint_005_Mindflayer_2",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "AD_MemoryImprint_005_Mindflayer_3",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_MemoryImprint_005_Mindflayer_3",
                "speaker": "Narrator",
                "text": "*Courage... conviction... defiance. Even as her organs began to dissolve, she believed she could resist.*",
                "node_type": "normal",
                "checkflags": [
                  "COL_TadpolingCentre_MemoryImprint_FirstUse"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_MemoryImprint_007_Mindflayer": [
              {
                "id": "AD_MemoryImprint_007_Mindflayer_1",
                "speaker": "Narrator",
                "text": "*The device releases a stream of fragmented memories and emotions - all that remains of the pod inhabitant's former self.*",
                "node_type": "normal",
                "checkflags": [
                  "COL_TadpolingCentre_MemoryImprint_FirstUse = False"
                ],
                "setflags": [
                  "COL_TadpolingCentre_MemoryImprint_FirstUse"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_MemoryImprint_007_Mindflayer_2",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "AD_MemoryImprint_007_Mindflayer_0",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_MemoryImprint_007_Mindflayer_0",
                "speaker": "Narrator",
                "text": "*Delirium... mania... laughter. His mind broke before the end, and he was laughing uncontrollably as the skin fell from his face.*",
                "node_type": "normal",
                "checkflags": [
                  "COL_TadpolingCentre_MemoryImprint_FirstUse"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "DaisyAD_BrinePool": [
              {
                "id": "DaisyAD_BrinePool_0",
                "speaker": "",
                "text": "Brine pools... but empty of tadpoles. Unusual. Harvesting all the larvae indicates they are getting ready for something big.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Zevlor_Dead": [
              {
                "id": "Zevlor_Dead_7",
                "speaker": "Narrator",
                "text": "*The corpse stares at you lifelessly.*",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Zevlor_Dead_15",
                "speaker": "Player",
                "text": "What happened to you?",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [
                  "GLO_SpeakWithDead_Event_QuestionAsked"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Zevlor_Dead_3",
                "speaker": "Zevlor",
                "text": "Blessed... by the Chosen...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "260f61d5-60df-da35-608b-a9856291b143_PlayerKnowsOrinKilledZevlor"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Zevlor_Dead_0",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ],
            "AD_MemoryImprint_009_Empty": [
              {
                "id": "AD_MemoryImprint_009_Empty_0",
                "speaker": "Narrator",
                "text": "*The device does not react to your presence.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_MemoryImprint_008_Yeva": [
              {
                "id": "AD_MemoryImprint_008_Yeva_4",
                "speaker": "Narrator",
                "text": "*The device releases a stream of fragmented memories and emotions - all that remains of the pod inhabitant's former self.*",
                "node_type": "normal",
                "checkflags": [
                  "COL_TadpolingCentre_MemoryImprint_FirstUse = False"
                ],
                "setflags": [
                  "COL_TadpolingCentre_MemoryImprint_FirstUse"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_MemoryImprint_008_Yeva_0",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "AD_MemoryImprint_008_Yeva_1",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_MemoryImprint_008_Yeva_1",
                "speaker": "Narrator",
                "text": "*Your lungs burn with the dry heat of the fires raging about you, but the pain is not enough to diminish your swing. One goblin after another falls to your blade.*",
                "node_type": "normal",
                "checkflags": [
                  "COL_TadpolingCentre_MemoryImprint_FirstUse"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_MemoryImprint_008_Yeva_2",
                "speaker": "Narrator",
                "text": "*A man's voice cries out through the thick smoke. 'Ravengard!' you call, but the clang of swords and the spell-shouts of attacking drow are your only reply.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Minthara_EnteredTadpolingCenter": [
              {
                "id": "AD_Minthara_EnteredTadpolingCenter_0",
                "speaker": "Nightwarden Minthara",
                "text": "This place has been used to make slaves of those who should be masters.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Mindflayers_EnterCombat": [
              {
                "id": "AD_Mindflayers_EnterCombat_0",
                "speaker": "",
                "text": "Eliminate.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: This line will be spoken by multiple mind flayers at the same time. They should sound as similar as possible - same start time, duration and intonation."
              }
            ],
            "AD_MemoryImprint_002_Manip": [
              {
                "id": "AD_MemoryImprint_002_Manip_0",
                "speaker": "Narrator",
                "text": "*This pod pulsates with the angry memories of Ravengard's search officer, Manip Shuurga. She laments her failure to locate him.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_MemoryImprint_001_Mindflayer": [
              {
                "id": "AD_MemoryImprint_001_Mindflayer_0",
                "speaker": "Narrator",
                "text": "*The device releases a stream of fragmented memories and emotions - all that remains of the pod inhabitant's former self.*",
                "node_type": "normal",
                "checkflags": [
                  "COL_TadpolingCentre_MemoryImprint_FirstUse = False"
                ],
                "setflags": [
                  "COL_TadpolingCentre_MemoryImprint_FirstUse"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_MemoryImprint_001_Mindflayer_3",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "AD_MemoryImprint_001_Mindflayer_1",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_MemoryImprint_001_Mindflayer_1",
                "speaker": "Narrator",
                "text": "*Amusement... curiosity... fascination. He believed the horrors of Moonrise to be a fleeting dream that fade on waking.*",
                "node_type": "normal",
                "checkflags": [
                  "COL_TadpolingCentre_MemoryImprint_FirstUse"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "DarkUrgePod": [
              {
                "id": "DarkUrgePod_15",
                "speaker": "Narrator",
                "text": "*This mind-flayer pod is not only empty, it looks abandoned.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "DarkUrgePod_8",
                "speaker": "Player",
                "text": "",
                "node_type": "normal",
                "checkflags": [
                  "COL_TadpolingCentre_State_FailedSkillCheck = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "DarkUrgePod_4",
                "speaker": "",
                "text": "True",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "DarkUrgePod_20",
                "speaker": "Narrator",
                "text": "*This pod has a different air to its chitinous cavern. Dust and dirt gather on the inside.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "DarkUrgePod_31",
                "speaker": "",
                "text": "",
                "node_type": "alias",
                "checkflags": [],
                "setflags": [
                  "COL_TadpolingCentre_Knows_IdentifiedDarkUrgePod"
                ],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "DarkUrgePod_12",
                "speaker": "Narrator",
                "text": "*This pod's inhabitant must have taken a lot of damage while they were inside.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "COL_TadpolingCentre_Knows_ImpliedDarkUrgePod"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_MemoryImprint_003_Mindflayer": "AD for a mind flayer's memory imprint in the Tadpoling Centre, showing who they used to be when they entered the pod.",
            "AD_MemoryImprint_004_Mindflayer": "AD for a memory imprint on an empty pod in the Tadpoling Centre.",
            "AD_MemoryImprint_006_Zevlor": "AD for Zevlor's memory imprint in the Tadpoling Centre, showing a memory from before he was imprisoned here.",
            "Pods": "Interacting with the mind flayer device in the Tadpoling Centre that controls the pods inside. You get to choose whether to free or purge the occupants of the pods - mind flayers and innocents alike.",
            "PAD_BrinePool_Tadpole": "The party reacts to spotting a special tadpole in one of the brine pools of the Colony Tadpoling Centre. It can be used for the tadpole powers tree.",
            "AD_MemoryImprint_005_Mindflayer": "AD for a mind flayer's memory imprint in the Tadpoling Centre, showing who they used to be when they entered the pod.",
            "AD_MemoryImprint_007_Mindflayer": "AD for a mind flayer's memory imprint in the Tadpoling Centre, showing who they used to be when they entered the pod.",
            "DaisyAD_BrinePool": "Brine pools. But they’ve been harvested. They should be full of tadpoles.",
            "Zevlor_Dead": "",
            "AD_MemoryImprint_009_Empty": "AD for an empty pod's memory imprint in the Tadpoling Centre, showing a memory from whoever was imprisoned here before.",
            "AD_MemoryImprint_008_Yeva": "AD for Flaming Fist Yeva's memory imprint in the Tadpoling Centre, showing a memory from before she was imprisoned here.",
            "AD_Minthara_EnteredTadpolingCenter": "",
            "AD_Mindflayers_EnterCombat": "The mind flayers in the pods in the Tadpoling Centre are released and enter combat with the players. They will say this AD simultaneously on the first mind flayer combat turn, only once.",
            "AD_MemoryImprint_002_Manip": "AD for Shuurga's memory imprint in the Tadpoling Centre, showing a memory from before she was imprisoned here.",
            "AD_MemoryImprint_001_Mindflayer": "AD for a mind flayer's memory imprint in the Tadpoling Centre, showing who they used to be when they entered the pod.",
            "DarkUrgePod": "A player character interacts with a pod in the Tadpoling Centre that once belonged to the Dark Urge character. Other player characters may also investigate the pod, and imply something about who the pod belonged to if they succeed a skill check."
          }
        },
        "bhvr_col": {
          "scenario_name": "bhvr_col",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "col_barracks": {
          "scenario_name": "col_barracks",
          "session_sequence": [
            "AD_Minthara_EnteredBarracks",
            "AD_SkullLasher_002_Combat",
            "AD_SkullLasher_002_AttackDummy",
            "AD_SkullLasher_003_Combat",
            "MistressOfSouls_InterruptBlessing"
          ],
          "paths": {
            "AD_Minthara_EnteredBarracks": [
              "AD_Minthara_EnteredBarracks_0"
            ],
            "AD_SkullLasher_002_Combat": [
              "AD_SkullLasher_002_Combat_0"
            ],
            "AD_SkullLasher_002_AttackDummy": [
              "AD_SkullLasher_002_AttackDummy_0"
            ],
            "AD_SkullLasher_003_Combat": [
              "AD_SkullLasher_003_Combat_0"
            ],
            "MistressOfSouls_InterruptBlessing": [
              "MistressOfSouls_InterruptBlessing_17",
              "MistressOfSouls_InterruptBlessing_6",
              "MistressOfSouls_InterruptBlessing_4",
              "MistressOfSouls_InterruptBlessing_13",
              "MistressOfSouls_InterruptBlessing_14"
            ]
          },
          "node_data": {
            "AD_Minthara_EnteredBarracks": [
              {
                "id": "AD_Minthara_EnteredBarracks_0",
                "speaker": "Nightwarden Minthara",
                "text": "Some who worked here were not thralls or undead. They were loyal to Ketheric and his grim cause.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_SkullLasher_002_Combat": [
              {
                "id": "AD_SkullLasher_002_Combat_0",
                "speaker": "Ironfinger",
                "text": "I will toast a goblet of your blood after you're dead!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Battle taunt"
              }
            ],
            "AD_SkullLasher_002_AttackDummy": [
              {
                "id": "AD_SkullLasher_002_AttackDummy_0",
                "speaker": "Ironfinger",
                "text": "I won't hold back.",
                "node_type": "normal",
                "checkflags": [
                  "2bc86ee2-13ec-992e-993a-8b2fb705bd0a_B = False",
                  "2bc86ee2-13ec-992e-993a-8b2fb705bd0a_A"
                ],
                "setflags": [
                  "2bc86ee2-13ec-992e-993a-8b2fb705bd0a_B",
                  "2bc86ee2-13ec-992e-993a-8b2fb705bd0a_A = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: attacking a training dummy and commenting after a blow has been struck"
              }
            ],
            "AD_SkullLasher_003_Combat": [
              {
                "id": "AD_SkullLasher_003_Combat_0",
                "speaker": "Maghtew Budj",
                "text": "I shall make sweet music of your screams!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Battle taunt"
              }
            ],
            "MistressOfSouls_InterruptBlessing": [
              {
                "id": "MistressOfSouls_InterruptBlessing_17",
                "speaker": "Kressa Bonedaughter",
                "text": "Halt. Who are you, warm of blood and quick of heart, that interrupts this consecration of the undying?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "FactionHostileToPlayerGroupAfterDialog"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "MistressOfSouls_InterruptBlessing_6",
                "speaker": "Player",
                "text": "I am unworthy of your notice - a nobody.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "InternalNodeContext: Non-bards. No advantage."
              },
              {
                "id": "MistressOfSouls_InterruptBlessing_4",
                "speaker": "",
                "text": "True",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "MistressOfSouls_InterruptBlessing_13",
                "speaker": "Kressa Bonedaughter",
                "text": "Tsk. A defective thrall that should have had its tongue removed.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "MistressOfSouls_InterruptBlessing_14",
                "speaker": "Kressa Bonedaughter",
                "text": "We are preparing to leave. Make yourself useful below.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "COL_Barracks_Mistress_Knows_ThinksPlayerIsThrall",
                  "COL_Barracks_State_InterruptConvinced"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_Minthara_EnteredBarracks": "",
            "AD_SkullLasher_002_Combat": "Ironfinger, a female halfling, one of three Skull Lashers in the Colony Barracks, combat AD. Played only once.",
            "AD_SkullLasher_002_AttackDummy": "Ironfinger, a female halfling, one of three Skull Lashers in the Colony Barracks, repeated behaviour AD for when she is attacking an attack dummy. She is preparing for war in the Absolute's army.",
            "AD_SkullLasher_003_Combat": "Magthew Budj, a human male, one of three Skull Lashers in the Colony Barracks, combat AD. Played only once.",
            "MistressOfSouls_InterruptBlessing": "Reaction to interrupting Krustine's blessing ceremony in the Colony Barracks. She is blessing three Skull Lashers, and approaching or interrupting will cause her to interrogate you."
          }
        },
        "col_necromancerlab": {
          "scenario_name": "col_necromancerlab",
          "session_sequence": [
            "PAD_RitualArea"
          ],
          "paths": {
            "PAD_RitualArea": [
              "PAD_RitualArea_0"
            ]
          },
          "node_data": {
            "PAD_RitualArea": [
              {
                "id": "PAD_RitualArea_0",
                "speaker": "Player",
                "text": "Curious setup. Think I'll keep my distance.",
                "node_type": "normal",
                "checkflags": [
                  "COL_NecromancerLab_State_PassedRitualArcana = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_RitualArea": "The players come upon a ritual setup where subjects are captured and held in glass containers while the magic drains their life and turns them into undead."
          }
        },
        "col_memorylibrary": {
          "scenario_name": "col_memorylibrary",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "col_gen": {
          "scenario_name": "col_gen",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "col_kitchenvista": {
          "scenario_name": "col_kitchenvista",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "col_kitchensecret": {
          "scenario_name": "col_kitchensecret",
          "session_sequence": [
            "ResonanceStone_PAD"
          ],
          "paths": {
            "ResonanceStone_PAD": [
              "ResonanceStone_PAD_0"
            ]
          },
          "node_data": {
            "ResonanceStone_PAD": [
              {
                "id": "ResonanceStone_PAD_0",
                "speaker": "Player",
                "text": "I feel... glorious.",
                "node_type": "normal",
                "checkflags": [
                  "COL_KitchenSecret_State_JoyRemoved = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "ResonanceStone_PAD": "The players react to gaining or losing the \"Eldritch Pleasure\" status effect from the Resonance Stone in the secret sideroom of the Colony kitchen/dissection room. This status is applied or removed upon gaining the \"Eldritch Pleasure\" buff bestowed by the aura effect of the Resonance Stone, and will only play once per user and nearby player. The removal dialog will only trigger upon losing the buff while inside a trigger near the Colony kitchen, as to avoid it playing unexpectedly during later parts of the game."
          }
        },
        "col_partysuppression": {
          "scenario_name": "col_partysuppression",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "col_vault": {
          "scenario_name": "col_vault",
          "session_sequence": [
            "Pod",
            "PAD_GrandDesign",
            "PAD_PuzzleSolved"
          ],
          "paths": {
            "Pod": [
              "Pod_1",
              "Pod_20",
              "Pod_7",
              "6",
              "NODE_NOT_FOUND"
            ],
            "PAD_GrandDesign": [
              "PAD_GrandDesign_0",
              "PAD_GrandDesign_1"
            ],
            "PAD_PuzzleSolved": [
              "PAD_PuzzleSolved_0"
            ]
          },
          "node_data": {
            "Pod": [
              {
                "id": "Pod_1",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [
                  "COL_VaultPuzzle_3_Pod2 = False",
                  "COL_VaultPuzzle_3_Pod3 = False",
                  "COL_VaultPuzzle_3_Pod1 = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "9",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Pod_20",
                "speaker": "Narrator",
                "text": "*A fleshy carapace, securely sealed. It emits a noiseless hum that makes your tadpole shiver.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "9",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Pod_7",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "6",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "6",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ],
            "PAD_GrandDesign": [
              {
                "id": "PAD_GrandDesign_0",
                "speaker": "Gale",
                "text": "I wonder, how did the Illithid Empire fall?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PAD_GrandDesign_1",
                "speaker": "Karlach, Lae'zel, Shadowheart",
                "text": "Probably with a great gooey bang.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_PuzzleSolved": [
              {
                "id": "PAD_PuzzleSolved_0",
                "speaker": "Player",
                "text": "That should do it. Time to see what's back there.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "Pod": "Player interacts with any individual pod.Each individual pod requires a separate tadpole use to open.",
            "PAD_GrandDesign": "",
            "PAD_PuzzleSolved": "The party reacts to solving the mind flayer \"mind puzzle\" in the Colony Vault, near the Necro-Lab. Solving the puzzle unlocks a door where you can find the rewards."
          }
        }
      },
      "final_flags": [
        "GOB_SpiderNest_State_SpidersHostile",
        "DEN_AttackOnDen_HasMet_Prodigy",
        "DEN_CapturedGoblin_GuardsHasMet",
        "GOB_Checkpoint_Event_MoveToCamp",
        "UND_MyconidRevenge_Event_TakeHead",
        "8a9a14b0-87da-5c78-aa76-7a266de7a786_Phase1",
        "PLA_TavernInvestigation_Knows_AskedStelmane",
        "DEN_AttackOnDen_HasMet_Tiefling010Victory",
        "GLO_Moonrise_Knows_AbsoluteAtGrymforge",
        "CRA_DeadPrisoner_Dead_AskedQuestion",
        "UND_DuergarMutineerFollowUp_Event_Happened",
        "CHA_Outside_Event_DoorGuardConvinced",
        "e0b6dfeb-2923-e0ad-1dc5-2a5d1e055e16_local1",
        "DEN_AttackOnDen_HasMet_GrieflingFriend",
        "DEN_AttackOnDen_HasMet_Tiefling001",
        "GOB_QuartermasterFlimsy_HasMet",
        "GEN_TransferNPCPayment_2",
        "DEN_AttackOnDen_Event_OpenGateAfterCombat",
        "5e9c4c72-4f56-2646-ce36-88207d2dc33c_KinSaved",
        "GOB_OwlbearCub_Event_InvitedToCamp",
        "PLA_Desire_Knows_RavengardTaken",
        "DEN_DruidServant005_Knows_TalkedAboutLockdown",
        "UND_SocietyOfBrilliance_MindFlayer_State_MindFlayerFeeding",
        "PLA_ConflictedFlind_Event_MindControlDamage_Minor",
        "DEN_AttackOnDen_HasMet_Servant005Victory",
        "PLA_Desire_State_WyllComTrack",
        "CHA_Chapel_Event_OpenedJergalsTomb",
        "UND_DarkLake_State_ClaimedGekhWasDead",
        "DEN_AttackOnDen_Pet004_HasMet",
        "GLO_Player_Knows_MoonlanternExists",
        "GOB_PainPriest_Event_Reward",
        "2da46374-abab-9219-f7ce-2a002cfd72a5_a",
        "DEN_AttackOnDen_Ranged_001_HasMet",
        "GLO_Volo_HasMet_Personally",
        "GOB_PainPriest_State_ReactedToPenance",
        "da38cd0f-efef-6809-231d-26f71308cd07_B",
        "DEN_RaidingParty_Event_SkipConfrontation",
        "ORI_INCLUSION_SHADOWHEART",
        "GLO_TadpoledCount6",
        "PLA_TavernInvestigation_Quest_WallCollapsed",
        "PLA_Refugee_002_TollhouseMentioned",
        "DEN_AttackOnDen_HasMet_RobberKid",
        "FOR_PriestsConqueringGod_AlliedPlayer",
        "HAG_GurHunter_Dead_Knows_Hunter",
        "DEN_AttackOnDen_HasMet_PickpocketVictory",
        "DEN_GuardedEntrance_State_ParentsKnowDeath",
        "GLO_IronhandGnomes_Knows_WulbrenInMoonrise",
        "Den_Thieflings_InterferingGuard_PCGotLore",
        "WLD_FOR_GnomeGoblinsAngry",
        "GOB_Checkpoint_Guard01_HasMet",
        "WLD_UnfortunateGnome_PayPassage",
        "4c78f756-720d-a285-a3e6-8f69a6069abc_Step1",
        "cd4b312f-5a40-b8c1-1ecb-0862c829a479_A",
        "5ebae00c-47d8-736c-6738-4ee56cebbc49_B",
        "DEN_General_YoungLovers_HasMet",
        "GOB_PainPriest_Event_CheckHP",
        "GLO_Desire_HasMet",
        "b43d3bc7-f10d-73cc-232e-c1f93cba3ed5_Local2",
        "DEN_AttackOnDen_Pet002_HasMet",
        "FOR_UnfortunateGnome_State_NonCharlatanAccess",
        "UND_MyconidCircle_PlantDuergarHasMet",
        "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_WyllSpoke",
        "GOB_WolfPens_Worg_002_HasMet",
        "PLA_GithChokepoint_State_FailedReadingMap",
        "PLA_ZhentShipment_Agent_002_StartInclusion",
        "DEN_ShadowDruid_Event_SetFaithwarden",
        "CRA_DeadPrisoner_Dead_MentionedTadpole",
        "GLO_Absolute_Knows_MoonriseTowers",
        "DEN_Rat_Event_MoveToShack",
        "DEN_DruidAttack_HasMet_Protester3AfterAttack",
        "ORI_Inclusion_End_Karlach",
        "UND_WormWall_State_RecognisedCrawlers",
        "GLO_GithChokepoint_DragonAppear",
        "df3e1892-2ab5-7b69-e57b-a75504e1a8f2_B",
        "10297257-36dd-3799-f681-657656779d4a_TieflingsLaezelAD1",
        "ORI_Inclusion_End_Wyll",
        "DEN_AttackOnDen_HasMet_BackupLeader",
        "GLO_HeadRemoval_Event_HeadToInventory",
        "CHA_Jergal_Event_AttemptedAttack",
        "9b4c05c6-0a79-ea8d-c351-43d6fbb04abc_Story1",
        "GOB_AbsoluteCultistStiff_HasMet",
        "GLO_Shadowcurse_Knows_FromGnome",
        "PLA_StuckHalfElf_Knows_ExplainedDowry",
        "FOR_BugBearLove_Event_MovePlayerInside",
        "DEN_Stargazing_Event_SawDragon",
        "ORI_INCLUSION_ASTARION",
        "FOR_UnfortunateGone_TiedUpHasmet",
        "HAG_Hagspawn_State_JakeBerserk",
        "6cf6ff37-64f7-3ccf-d702-ee2025510422_B",
        "UND_EbonLake_Event_MoveToLake",
        "FOR_SeluneStash_NoticeStashSeal_CommentedOnSeal",
        "GOB_Torturers_Rat_001_HasMet",
        "GOB_Scrying_NoddedOrShrugged",
        "DEN_BirdSender_HasMet_GobLeadersDead",
        "a759296c-5d41-f5b9-7d31-1c70d1e10dc7_Once",
        "DEN_HarpyMeal_Event_OriginCharm3",
        "683cb55e-08b9-c865-78a6-4e047ee62a24_B",
        "GLO_Tadpoled_UsedToday1",
        "DEN_Thieflings_Event_PartnerQuestionAsked",
        "HAG_SurrogateMother_HasMet",
        "b2a52f0b-5fa8-d275-f080-0fc8edbe1faf_B",
        "GOB_GoblingKing_Event_HealerPersuasion",
        "UND_DuergarCamp_State_DocksHostile",
        "PLA_ZhentShipment_Agent_001_StartInclusion",
        "57c003e7-0932-6f0c-e655-99025a4abe3a_B",
        "DEN_AttackOnDen_HasMet_TieflingLeader",
        "09983dce-d7d0-c108-506f-dcadc4044b0a_Derryth_SwD_Who",
        "PLA_TavernInvestigation_State_HasMet",
        "ORI_Inclusion_Karlach",
        "UND_BrokenMoonLantern_HasMet",
        "3483cea8-0c11-9432-2421-6b95b9140d95_B",
        "7611fa51-4b1b-3d2c-a8a5-74c04d9db7fa_AnimalHandlingSuccess",
        "UND_DuergarPatroller_03_HasMet",
        "DEN_DruidAttack_HasMet_HideoutLeaderAfterAttack",
        "DEN_TieflingScam_Event_InspectedBox",
        "GnomeAskedHelp",
        "3f665b97-a69e-81c5-68e6-5b931720721e_Part1",
        "CHA_LaezelRecruitment_MindMeld",
        "GLO_ScryingEyes_State_FeltGaze",
        "DEN_GuardedEntrance_HasMet_Guard3",
        "DEN_RaidingParty_Event_KanonOpensGate",
        "DEN_AttackOnDen_HasMet_Wyll",
        "PLA_ConflictedFlind_Knows_Gnolls",
        "GLO_TalkedToVoloAboutAbsolute",
        "UND_MyconidCircle_DwarvenAlchemist_BaelenRestoredHasmet",
        "COL_Barracks_State_InterruptConvinced",
        "GOB_Festivities_Trader_HasMet",
        "DEN_AttackOnDen_HasMet_Tiefling004",
        "ZhentDungeon_AgreedBuy",
        "11d70a18-2aae-47a0-1a18-c486858b1eaf_B",
        "DEN_GruntingKid_Event_DisappearIntoWall",
        "GOB_BattleStations_HasMet_WarDrum",
        "GOB_GoblinJolly_HasMet",
        "UND_MyconidCircle_InjuredGnome_ReportedGrymforgeFate",
        "564fac12-29bd-3abe-d380-0a864e688883_Turn1",
        "COL_TadpolingCentre_MemoryImprint_FirstUse",
        "DEN_Apprentice_HasMet_ReactedToShadowDruids",
        "DEN_CampGeneral_HasMet_Gatekeeper",
        "UND_DeadInTheWater_CorpseDisposerCompanion_HasMet",
        "UND_MyconidCircle_MyconidSuspicious_HasMet",
        "DEN_Hideout_State_GivenWarning",
        "PLA_Refugee_002_HasMet",
        "UND_DuergarGuard_AtPier_01_HasMet",
        "DEN_DruidAttack_HasMet_PickpocketTraderAfterAttack",
        "DEN_RaidingParty_Event_OpenDenGate",
        "GOB_GoblinKingDead_Event_SaidFugitives",
        "UND_State_LeaderFreedGnomes",
        "41e56e7f-1722-7350-33dc-aefe523650fe_B",
        "PLA_ZhentDungeon_State_SaidPassword",
        "c3207254-eafb-348b-d327-f690af0e213f_startedattackmove",
        "DEN_AttackOnDen_HasMet_TieflingBard",
        "UND_MyconidCircle_BroodingSovereign_State_InParty",
        "DEN_AttackOnDen_HasMet_Kid004Victory",
        "DEN_Hideout_Event_LeaveCountdown",
        "1493763b-776c-959c-259a-89f34f326e04_A",
        "DEN_AttackOnDen_ZenBear_HasMet",
        "UND_FurnaceSearch_Knows_Xargrim",
        "DEN_DevilishOx_State_ArcanaCheckComplete_SwA",
        "fa6e2ce0-64f3-bfb8-fb47-10f50f02cadf_AbsoluteMentioned",
        "DEN_AttackOnDen_Event_PassedByEntrance",
        "DEN_Thieflings_TieflingGuard11_HasMet",
        "GOB_Trader_Knows_Goods",
        "DEN_AttackOnDen_HasMet_Tiefling005",
        "GOB_GoblinToast_Event_ToastSuccess",
        "COL_Barracks_Mistress_Knows_ThinksPlayerIsThrall",
        "DEN_ZenBear_Helped",
        "FOR_KnifeInMeat_State_KnifeBroken",
        "GOB_Festivities_Goblin001_HasMet",
        "FOR_GnomeGoblin1_HasMet",
        "DEN_TieflingRefugees_Quest_HuntRewardOffered",
        "DEN_RaidingParty_Event_GatekeeperToLever",
        "DEN_DruidAttack_HasMet_ServantGnome",
        "COL_NecroLab_GrandDesignSculpture_HasMet_LaezelInclusion",
        "FOR_GoblinAmbush_Event_StopSpotting",
        "DEN_AttackOnDen_HasMet_RitualDruid003",
        "ReportedToDerryth_BaelenIsAlive",
        "GOB_Owlbear_HasMet_NotChasing",
        "UND_SocietyOfBrilliance_MindFlayer_HasMet",
        "ba2b225d-e9d4-944d-5b4f-b27dd975c626_A",
        "DEN_AttackOnDenDruidLeader_State_HasMet",
        "6fa2b72d-fde1-4ee3-e1d1-f184232f693d_A",
        "DEN_DruidAttack_HasMet_ParentBAfterAttack",
        "DEN_General_Squirrel_LearnedTerritory",
        "HAG_Hagspawn_Knows_PromisedRaiseHusband",
        "PLA_ZhentShipment_Agent_001_Inclusion_Start",
        "GOB_RaiderStupid_HasMet",
        "83fdf5e9-88b8-19e7-ba8f-ff075d2222ce_PLA_ZhentShipment_Knows_Gnolls",
        "DEN_Apprentice_Event_RevealedTadpole",
        "DEN_Thieflings_Event_HideoutTrespassCrimeResolved",
        "469a1188-028b-0e6b-b595-fa464baa551e_b",
        "GOB_RaiderBold_HasMet",
        "FoundCounsellor",
        "UND_DuergarCamp_State_SidedNone",
        "a0afae3d-53b0-192d-d822-c61da104f979_A",
        "DEN_Apprentice_State_ShadowDruidPath",
        "DEN_AttackOnDen_HasMet_LeaderKidVictory",
        "FOR_Monitor_Event_TakeFood",
        "GOB_GoblinToast_ThirdGoblinToasted",
        "FOR_Monitor_State_TransformToDevil",
        "DEN_Thieflings_HasMet_Guard2",
        "DEN_Thieflings_HasMet_Mol",
        "ORI_Karlach_HasMet",
        "GOB_Festivities_HasMet_Ogre_00",
        "GOB_RatRacket_LocalRat_002_HasMet",
        "ce2b9169-f3e7-e07f-9c58-0fd373d5df9a_PLA_ZhentDungeon_Zhent02_Dead_KnowsZarysisZhentarim",
        "DEN_AttackOnDen_Event_EnemiesAppear",
        "FOR_SchoolOgres_Event_AttemptedFirstSkillCheck",
        "GOB_Checkpoint_State_UsedAlarmOnce",
        "DEN_GoblinScouts_State_SavedDruid",
        "DEN_AttackOnDen_HasMet_Adventurer2",
        "GOB_GoblinToast_Event_IncludeFourthGoblin",
        "15b0a2b9-2b22-50ab-70c0-ab3042def597_GaleCommentTried",
        "DEN_HarpyMeal_InHideout_WasMean",
        "PreventTradeWithPlayer",
        "DEN_GoblinHunt_Event_GiveRewardBag",
        "1bddcc22-dadd-92c9-4186-4e10ebbfee68_CHA_Crypt_Jergal_DontFollow",
        "UND_AdamantineForge_Knows_Adamantine",
        "DEN_AdventurersQuest_Knows_AradinStory",
        "FOR_Bottomless_State_InteractedWithWell",
        "ORI_INCLUSION_MINTHARA",
        "DEN_AttackOnDen_HasMet_ChefAndSon",
        "ORI_Inclusion_Astarion",
        "UND_DarkJusticiarsCorpses_Recognized",
        "GLO_Desire_State_FreedInAct1",
        "DEN_DruidLair_Knows_DruidsAlliance",
        "GOB_Checkpoint_State_GainedAccess",
        "FOR_UnfortunateGnome_Bargaining",
        "DEN_AttackOnDen_HasMet_ProdigyBrother",
        "UND_Elevator_Event_GotWarning",
        "UND_FearfulRothe_Event_MakeDuergarHostileInDialog",
        "GOB_GuardUpset_State_ConvincedTrueSoul",
        "DEN_CapturedGoblin_State_InTransit",
        "GLO_Thieflings_State_PCShookPickpocketSister",
        "GOB_GEB_TorturedAdventurer_Assault_HasMet",
        "DEN_GroveConflict_Event_StoleIdolAttempt",
        "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_NoFFPresent",
        "DEN_Thieflings_Event_CallGuard",
        "DEN_AdventurersQuest_RaidAdventurerAtCorps_HasMet",
        "UND_FearfulRothe_HasMet_Rothe_001_SpeakWithAnimals",
        "UND_FearfulRothe_State_BefriendedRothe",
        "0d6dbe21-1644-b9bf-8297-dd60d820bd99_B",
        "DEN_GuardedEntrance_HasMet_LiedAboutDeath",
        "FOR_ApothecaryGoblins_Goblin01_HasMet",
        "HAG_AnimalIllusion_Revealed_HasMet1",
        "DEN_TieflingScam_Event_TalkedAboutBox",
        "UND_Automaton_Knows_AskedPlace",
        "CRA_DeadFisherman2_Dead_WhatDoing",
        "GOB_GoblinToast_Event_IncludeThirdGoblin",
        "DEN_AttackOnDen_HasMet_PickpocketTrader",
        "COL_TadpolingCentre_Knows_IdentifiedDarkUrgePod",
        "GOB_GoblinThroneCheckpoint_Pass",
        "HalsinLeft_KilledLeaders",
        "DEN_AttackOnDen_HasMet_Halsin",
        "c167cdf3-7201-e55c-222f-773c758e1000_IncludedHusband",
        "HAG_HagLair_Victim_001_HasMet",
        "PLA_StuckDwarf_HasMet_FoundWife",
        "GOB_SpiderNest_State_SpidersChill",
        "PLA_Tavern_Knows_DukeInTavern",
        "ORI_INCLUSION_KARLACH",
        "PLA_ZhentDungeon_State_AgentFreed",
        "UND_FurnaceSearch_Event_DuergarMentionsForge",
        "GLO_Moonrise_Knows_GoblinsCapturedADuke",
        "DEN_DruidLair_Knows_FoundingGrove",
        "FOR_Monitor_HasMet_Dinner",
        "AskedCircle",
        "03b6aa2e-e805-3a51-6bdb-d92f0b0da84a_UND_MyconidCircle_ServantHookHorror_01_RecognisedMonster",
        "DEN_GuardedEntrance_HasMet_Protester1",
        "ToldAboutTadpole",
        "DEN_DruidAttack_HasMet_Tiefling010AfterAttack",
        "f3f236b2-37a1-a0a2-5855-184ead7b1286_C",
        "GOB_DrowCommander_State_Hostile",
        "UND_ArguingGnomes_Event_LearnedAboutPhilomeen",
        "UND_PetrifiedDrow_Knows_WizardIsDhourn",
        "ORI_Inclusion_End_ShadowHeart",
        "ORI_Shadowheart_Knows_SeenTempleVista",
        "FOR_BugBearLove_Event_CoupleHostile",
        "HAG_AnimalIllusion_Narrator",
        "DEN_Thieflings_State_DoneChase",
        "UND_ElevatorGuard002_HasMet",
        "ThankedFreed_BeldronThulla",
        "ORI_INCLUSION_MINSC",
        "DEN_Thieflings_Knows_PlayerRobbed",
        "DEN_ShadowDruid_HasMet_Opposed",
        "GLO_TadpoledCount1",
        "DEN_DruidAttack_HasMet_ExcitedBoar",
        "3b2ae6b6-ca7e-d905-0430-128078b3119f_B",
        "720e85fb-cc00-b81a-efff-343a04ca221e_A",
        "DEN_DevilishOx_MeetAtDruidsGrove_HasMet_SwA",
        "UND_ClericPetGrave_HasMet",
        "UND_MyconidCircle_DirectToSovereign_HasMet",
        "UND_GnomeWorkerLumpy_HasmetRescued",
        "DEN_GroveConflict_Quest_Learnt3LeadersTwoNames",
        "d97f72ff-8fb1-8a4c-f169-89751bd6e125_b",
        "ORI_INCLUSION_RANDOM",
        "HAG_Well_Event_DrinkWell",
        "a7407f82-add0-9f6d-e4e6-78b9c39195a6_C",
        "ORI_INCLUSION_WYLL",
        "4118b185-9468-2295-93f3-9d6eafd8fb8a_Second_Disabled",
        "FOR_GoblinAmbush_State_DrowAutoPass",
        "DEN_TieflingLeader_Quest_GobHuntResponded",
        "GLO_Halsin_Event_TalkedWithDruidLeader",
        "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionRefused",
        "ORI_Inclusion_Gale",
        "DEN_RitualDruid_HasMet_Left5",
        "PLA_Desire_Quest_TriedForceDoor",
        "DEN_Thieflings_Pickpocket1_PCIsNotAChump",
        "DEN_AttackOnDen_HasMet_Refugee002",
        "fb0e13b6-cc68-d496-51c2-4594f4f5bf40_TauntHer",
        "182bb613-b70c-5e7c-b3ea-ea14e02d1fab_C",
        "GOB_PainPriest_Event_PickScourge",
        "DEN_GroveConflict_Knows_HeardAboutRitual",
        "d0423454-cc51-ae8e-5096-cffd1aac9f75_A",
        "FOR_BugBearLove_Knows_Lovemaking",
        "ORI_INCLUSION_LAEZEL",
        "DEN_DruidAttack_HasMet_SonOfChefAfterAttack",
        "HAG_HagLair_TalkingDoor_HasMet",
        "ORI_Inclusion_ShadowHeart",
        "1ea9e483-36a9-82b1-852f-b901ec25552a_a",
        "DEN_Prodigy_HasMet",
        "PLA_ZhentShipment_State_TalkedAfterKilledGnolls",
        "551618bc-83c9-52cc-0ca7-37c224446cf7_Local1",
        "GOB_Bravado_State_Goblin3Hasmet",
        "FOR_BottomlessWell_InteractWithWell_Knows_LookedDown",
        "ORI_INCLUSION_GALE",
        "DEN_GuardedEntrance_HasMet_Parents",
        "GOB_GoblinToast_Event_IncludeSecondGoblin",
        "ca797aab-5a73-7ec5-edb7-022122573b39_B",
        "DEN_AttackOnDen_Event_HeftyTieflingQuip",
        "GOB_WolfPens_Event_HalsinLeftParty",
        "FactionHostileToPlayerGroupAfterDialog",
        "ORI_Laezel_Quest_FoundZorru",
        "GOB_GoblinPriest_Event_FreedFromChains",
        "PLA_StuckHalfElf_Knows_MentionedDowry",
        "21e0890e-7019-66a3-1956-125405f96d7c_A",
        "DEN_DruidAttack_HasMet_DruidOpposedAfterAttack",
        "FOR_PriestOfTheConqueringGod_Cultists_Knows_Mission",
        "DEN_Apprentice_Event_RemoveBirdExhaustion",
        "DEN_CampGeneral_PCGotLore",
        "SpokeToBrothers",
        "5f09c70a-153e-77e8-731c-5c532e635809_B",
        "DEN_DruidAttack_HasMet_GatekeeperAfterAttack",
        "b951f0e6-65af-843d-a666-f5284343cc67_MentionedTrueSoul",
        "LearnedGroveSituation",
        "DEN_RaidingParty_Event_UnsheatheForFight",
        "ReachedWife",
        "GOB_Festivities_BugbearSleeper_00_HasMet",
        "GLO_TadpoleIntro_NPC",
        "DEN_Thieflings_Knows_KidsThieves",
        "DEN_ShadowDruidLeaderPostGoblins_State_HasMet",
        "DEN_GroveConflict_Knows_LeaderNameKing",
        "TemporaryHostilityAfterDialog",
        "0884581d-9f92-0a34-9440-6a54c0813bbe_ProceedToSecondStage",
        "DEN_Prodigy_HasMet_Brother",
        "GLO_Absolute_Knows_TrueSoul",
        "UND_GnomeForeman_UnfortunateGnome_InclusionStart",
        "DEN_WeepingTree_HasMet_Bear",
        "PLA_ZhentDungeon_Dog_03_HasMet",
        "a6f2350b-ecc4-bf6c-0c73-dcb37f9e9690_B",
        "GOB_DrowCommander_Knows_DrowLeader",
        "ORI_Shadowheart_State_IdolHint",
        "ea88dfe9-ff39-9b98-ae03-48d7fdf2708e_A",
        "DEN_AttackOnDen_HasMet_Refugee004Victory",
        "ORI_Inclusion_End_Astarion",
        "OrderedKillDruids",
        "DEN_DevilishOx_MeetAtDruidsGrove_State_Peaceful",
        "DEN_AttackOnDen_HasMet_RitualDruid002",
        "PLA_StuckHalfElf_StartInclusion",
        "DEN_Thieflings_Pickpocket2_HasMet",
        "GOB_Checkpoint_Event_WarnedAtCliff",
        "PLA_ZhentShipment_State_Talked",
        "RefusedHelpBrothers1",
        "GOB_PainPriest_Event_ReactToMocking",
        "DEN_DruidLair_Knows_RuneAppearance",
        "GLO_Hag_KnowsAboutSurrogate",
        "81f2a55d-d317-761f-f6a0-fe97ad6d5288_C",
        "UND_DuergarCamp_Knows_NereIsTrapped",
        "DEN_SenderBird_Event_TakeOff",
        "FOR_GnomeGoblinsPacified",
        "DEN_DruidAttack_HasMet_ChefAfterAttack",
        "ParentLied",
        "7256657b-1386-989f-0262-c6530e03a9fb_AskedWhy",
        "DEN_General_Inclusion_End_Pickpocket",
        "DEN_WeepingTree_Bear_Upset",
        "UND_TheDrowNere_Mutiny_InclusionStart_GnomeSilly",
        "bde7a4f1-933f-f6ce-4a3e-4b1f29f83704_B",
        "UND_TheDrowNere_Event_HadMindMeld",
        "57c003e7-0932-6f0c-e655-99025a4abe3a_A",
        "DEN_YoungLovers_State_MetPlayer",
        "5310a408-76a3-3498-cc26-ae866871188b_Third_Disabled",
        "7ffcf0de-e30b-ef58-fcc5-8d3a1482fa59_b",
        "GLO_Absolute_Knows_GoblinsWorship",
        "DEN_Weaponsmith_Knows_Elturel",
        "DEN_ShadowDruid_Event_ReactionDone",
        "CHA_Crypt_Event_JergalAppears",
        "PLA_ZhentDungeon_Zhent05_HasMet",
        "DEN_TieflingLeader_HasMet_ReactToDruidAttack",
        "ORI_Laezel_State_StartedTieflingsSceneAtCage",
        "DEN_BirdSender_HasMet",
        "UND_MyconidCircle_DeepRothe_BaelenAteShroom_Hasmet",
        "GOB_BattleStations_Event_ToStation",
        "DEN_AttackOnDen_HasMet_Trainer",
        "GOB_GoblinHeretic_FreeToGo",
        "GOB_GoblinThroneCheckpoint_State_NonCharlatanAccess",
        "1c74b01f-5dcf-8107-b384-204d341ed9d5_OnlyOnce",
        "DEN_Thieflings_State_MessedWithMolsKids",
        "PLA_Refugee_001_HasMet",
        "UND_MyconidCircle_State_GainedAccess",
        "DEN_DruidAttack_HasMet_ParentAAfterAttack",
        "GOB_Checkpoint_State_GoblinsToldLeaders",
        "UND_DuergarCamp_Mutineers_HasMet",
        "LearnedDukeMissingCounsellor",
        "94cd662c-844b-4dcc-ffdc-0b9a8da32bcc_BarcusSpokeUp",
        "DEN_AttackOnDen_HasMet_LairDoor",
        "RikkaAskedQuest",
        "DEN_General_Event_TriedNudgingBear",
        "DEN_HasMet_SoloParentB",
        "DEN_RitualDruid_HasMet_Left2",
        "GOB_Torturers_HasMet_Goblet",
        "FOR_BugbearLove_State_InterruptedCouple",
        "DEN_AttackOnDen_Servant005_Answered",
        "UND_BroodingSovereign_State_RefusedCircle",
        "DEN_Thieflings_HasMet_Trainee1",
        "UND_DeadInTheWater_CorpseDisposerLeader_HasMet",
        "DEN_Tiefling011_State_Met",
        "DEN_Thieflings_PersuadedPickpocket",
        "GOB_GoblinToast_Event_NoMoreRefills",
        "ORI_Inclusion_Random",
        "PLA_KarlachRecruitment_State_PersuasionSucceeded",
        "DEN_Thieflings_State_WitnessedArgument",
        "3b911555-52e5-7791-d2ac-44fe62465fa1_Loop3",
        "GOB_RaiderCunning_HasMet",
        "GOB_Eye_HasMet",
        "DEN_AttackOnDen_HasMet_Refugee003",
        "DEN_Weaponsmith_HasMet",
        "34910f06-fac0-085f-b41a-337d0dfad85a_A",
        "ORI_Inclusion_Laezel",
        "GOB_GoblinToast_SecondGoblinToasted",
        "9e2ef14b-1a2f-4edc-3f78-7e3a27967e5c_C",
        "DEN_AttackOnDen_HasMet_ScoutCaptive",
        "PLA_KarlachRecruitmentTollhouse_State_HostilitiesBegan",
        "UND_PetrifiedDrow_Knows_MemoryCrystal",
        "UND_FairyRings_Dead_AskedDrowIdentity",
        "ZevlorRewarded",
        "COL_TadpolingCentre_Knows_ImpliedDarkUrgePod",
        "GOB_PainPriest_Penanced",
        "b618166c-99f4-1c7a-02b7-32f0f0fbe420_LocalA",
        "DEN_AttackOnDen_HasMet_Servant004Victory",
        "DEN_AttackOnDen_HasMet_Mule1",
        "DEN_TieflingScam_HasMet",
        "DEN_AttackOnDen_HasMet_Kid003",
        "UND_FearfulRothe_Event_ConvincedRotheToAttackDuergar",
        "PLA_FlamingFist7_InnBurntDown_HasMet",
        "DEN_AttackOnDen_HasMet_Tiefling003Victory",
        "0d9d0064-babd-6e83-6ea6-5b78afb0413c_B",
        "DEN_GoblinScouts_HasMet_Captive",
        "GLO_Absolute_Knows_Symbol",
        "PLA_ConflictedFlind_Event_MindControl_KillHerself",
        "GLO_SpeakWithDead_Event_QuestionAsked",
        "HAG_Hah_MaskedVictim2_HasMet",
        "DEN_DruidAttack_HasMet_ZenBear",
        "GOB_PainPriest_Event_BadReaction",
        "UND_BrokenLantern_State_TriedArcane",
        "461152ff-16c3-2617-f8af-7ddb5681820b_b",
        "ed70fdfc-3d7b-7753-1171-957f7316fe55_B",
        "SidedTieflings",
        "DEN_GroveConflict_Knows_KaghaRequestedPlayers",
        "PLA_StuckHalfElf_State_PlayerAngered",
        "UND_BroodingSovereign_State_AskedCircle",
        "DEN_AttackOnDen_HasMet_Trainee001Victory",
        "UND_MyconidCircle_State_FirstGreetingDone",
        "6bde1237-aa43-36d3-9e53-ec1092198541_C",
        "2bc86ee2-13ec-992e-993a-8b2fb705bd0a_B",
        "UND_DarkLake_State_HostileResolution",
        "c3d825d1-49b8-9ae2-4554-4fc1f55d2eee_LocalA",
        "COL_TadpolingCentre_Event_PurgePods",
        "DEN_ZhentAgent_02_Inclusion_Start",
        "DEN_AttackOnDen_HasMet_ProdigySister",
        "ORI_Shadowheart_Event_DarkJusticiarHint",
        "873bc4e0-3d3c-1eac-903b-e94920fd6306_sawgithyanki",
        "DEN_CampGeneral_RufusHasMet",
        "DEN_Apprentice_HasMet",
        "DEN_General_Mule2_HasMet",
        "DEN_AttackOnDen_HasMet_ApprenticeVictory",
        "98423a2d-7b47-e379-6526-c435773e3cff_B",
        "DEN_Thieflings_Event_PlayerNotInvolved",
        "HAG_HagLair_Knows_DoorWasAlive",
        "ThankedFreed_Beldron",
        "DEN_AttackOnDen_HasMet_Griefling",
        "4d9f1cb5-200f-c998-657a-8d04f5c93c74_B",
        "DEN_AttackOnDen_HasMet_RitualDruid005",
        "4b4d2992-abb5-bd1b-9593-feb68eddf682_B",
        "ORI_Karlach_Knows_DammonWorkedInHell",
        "ORI_Inclusion_End_Random",
        "DEN_Squirrel_HasMet",
        "ORI_INCLUSION_HALSIN",
        "DEN_ShadowDruid_State_HadSelfReflection",
        "DEN_Thieflings_Pickpocket1_HasMet",
        "PLA_FlamingFist7_Knows_AskedWhatHappened",
        "DEN_DruidAttack_HasMet_BardAfterAttack",
        "GOB_PainPriest_State_NeedMoreHP",
        "FOR_BugBearLove_Event_OpenDoor",
        "DEN_Thieflings_State_PCSawKidThievesGettingCaught",
        "260f61d5-60df-da35-608b-a9856291b143_PlayerKnowsOrinKilledZevlor",
        "916a75f0-23d8-f05b-449d-d926d69fe782_FailedCheck",
        "DEN_druidservant_005_HasMet",
        "CHA_Jergal_HasMet",
        "ORI_Inclusion_End_Gale",
        "PLA_ConflictedFlind_Hyena_001_HasMet",
        "StartedAlt",
        "DEN_RaidingParty_Adventurer2_HasMet",
        "GLO_Thieflings_State_PickpocketKidGotHit",
        "GOB_WolfPens_Event_HalsinLeavesGoblinCamp",
        "e6738c9d-060d-c901-b945-4d49ca303d5b_SuccessfullyReadTracks",
        "DEN_GruntingKid_HasMet",
        "16193247-ccea-1974-45ec-e8229a7de4ef_B",
        "DEN_TieflingLeader_Quest_GobHuntDeclined",
        "DEN_RaidingParty_Event_GoblinsAppear",
        "DEN_GuardedEntrance_HasMet_Guard1",
        "GOB_PainPriest_Event_FirstHitDone",
        "ORI_Inclusion_End_Laezel",
        "DEN_General_Event_ElevatorBearMoves",
        "DEN_CapturedGoblin_OfferedRevenge",
        "DEN_General_Inclusion_Pickpocket",
        "DEN_RitualDruid_HasMet_Left4",
        "GOB_DrowCommander_HasMet",
        "GLO_Jergal_State_OutOfTomb",
        "DEN_TieflingLeader_State_KaghaResolved",
        "f3afb428-73fc-2e5c-057b-2e0e5a1b2f1c_B",
        "DEN_AttackOnDen_HasMet_Stargazer",
        "DEN_Thieflings_Event_ShookThief",
        "DEN_AttackOnDen_HasMet_Refugee001",
        "b70d5139-9980-efc6-3ba3-fe2eb56ab2e0_B",
        "DEN_DruidAttack_HasMet_PetWolf",
        "26071d89-33af-8eac-3c05-ee8dca91338d_who",
        "DEN_Apprentice_UserShortcut",
        "ReflectedKagha",
        "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionAsked",
        "FOR_GoblinAmbush_GoblinsPacified",
        "DEN_DruidAttack_HasMet_GrieflingAfterAttack",
        "DEN_GuardedEntrance_State_ClearToPass",
        "GOB_Checkpoint_State_GuidedByCapturedGoblin",
        "DEN_RaidingParty_Event_GoblinRaidFight",
        "ORI_Inclusion_Wyll",
        "RefusedCircle",
        "DEN_TieflingScam_Knows_Scam",
        "DEN_BirdSender_Knows_AskedAboutBird",
        "DEN_DevilishOx_MeetAtDruidsGrove_Incapable",
        "DEN_Thieflings_CaveGuard_002_HasMet",
        "GOB_PainPriest_Knows_PenanceIsPain",
        "6bba3537-3756-eb27-a08a-a8596d765f2e_C",
        "CHA_LaezelRecruitment_Event_LaezelHostile",
        "DEN_GoblinScouts_SavedDruid",
        "ArrivedAtGrove",
        "DEN_GruntingKid_Event_AskedCanTalk",
        "DEN_Apprentice_Event_GiveReward",
        "acc081f3-204a-2f29-a3bb-6d33ff784c39_C",
        "DEN_AttackOnDen_GrieflingFriend_Knows_Kelemvor",
        "GOB_PainPriest_Event_Mercy",
        "c68c5474-226f-4b47-b327-a22274e360a0_B",
        "UND_LoneDuergar_Event_WaitingForMainDialog",
        "OrderedBreachInn",
        "DEN_RitualDruid_HasMet_Pacified3",
        "DEN_ShadowDruidRats_Event_RememberedLetter",
        "DEN_DruidAttack_State_PrepAfterDeathOfDruids",
        "PLA_Desire_Event_HasMet",
        "4103e544-e1db-525f-81ec-b5dfa71907d7_WantNereOut",
        "PLA_StuckHalfElf_Event_ToldQuestion",
        "UND_BroodingSovereign_Event_Enlarged",
        "f108995b-14f4-7823-d218-790177a93da8_B",
        "6a98f294-9f4f-d0b0-1cba-706f1cb15009_Local1",
        "GOB_WolfPens_Worg_001_HasMet",
        "DEN_DruidAttack_HasMet_WeaponsmithAfterAttack",
        "GLO_Volo_HasMet",
        "OpenedSarcophagus",
        "Counsellor_RefusedHelp",
        "02455563-e119-58e5-1fe7-eb46fe381d30_A",
        "GOB_GuardUpset_HasMet",
        "GOB_RatRacket_LocalRat_001_HasMet",
        "c5f62c4b-fb04-1505-c35b-63119d96b127_First_Disabled",
        "698f5a3b-6d88-3d9e-ee4f-26d9c1fc5b6b_B",
        "UND_TheDrowNere_State_KilledGnomeSerene",
        "GLO_VoloBallad_MetGuardPrison",
        "PLA_ZhentDungeon_Zhent01_HasMet",
        "ORI_Karlach_HasMet_DammonUnavailable",
        "GOB_CheckpointBackup003_HasMet",
        "DEN_TieflingScam_Event_FoundOutLies",
        "UND_ArguingGnomes_Quest_Accepted",
        "DEN_Thieflings_HasMet_Chef"
      ]
    },
    "Epilogue": {
      "chapter_id": "Act2_Epilogue",
      "scenario_sequence": [
        "sce_wulbren",
        "sce_minthara",
        "sce_mattis",
        "sce_ravenguardfollowup",
        "sce_alfira",
        "sce_gnomeprisoner",
        "sce_isobelsoloreunion",
        "sce_jaheira",
        "sce_patrollingflamingfist",
        "sce_unfortunategnome",
        "sce_partyvb",
        "sce_nightsongsoloreunion",
        "sce_debrief",
        "sce_ad",
        "glo_gatheryourallies",
        "sce_umi",
        "sce_halsin",
        "sce_cursedfist",
        "sce_standingflamingfist",
        "sce_jergal",
        "sce_isobelnightsongreunion",
        "sce_ide",
        "sce_cerys"
      ],
      "scenario_results": {
        "sce_wulbren": {
          "scenario_name": "sce_wulbren",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "88",
              "29",
              "42",
              "90",
              "91",
              "37",
              "64",
              "8",
              "23",
              "21",
              "79",
              "63",
              "16",
              "46",
              "34",
              "54",
              "20",
              "81",
              "6"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "88",
                "speaker": "Wulbren Bongle",
                "text": "You helped me escape this hellspit, then took down the heart of Moonrise - Ketheric himself. I'm impressed.",
                "node_type": "normal",
                "checkflags": [
                  "SCE_GnomeFollowUp_Wulbren_HasMet = False"
                ],
                "setflags": [
                  "SCE_GnomeFollowUp_Wulbren_HasMet"
                ],
                "goto": "",
                "link": "50",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "29",
                "speaker": "Wulbren Bongle",
                "text": "And I'm not a man easily impressed.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "50",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "42",
                "speaker": "Player",
                "text": "I believe the words you're looking for are 'thank you'.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "91",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "90",
                "speaker": "Wulbren Bongle",
                "text": "I was getting to that, but all right - thank you.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "91",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: a touch annoyed"
              },
              {
                "id": "91",
                "speaker": "Wulbren Bongle",
                "text": "Back in my cell, I didn't tell you everything - about who I was, and more importantly, who I represent.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "37",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: sincere"
              },
              {
                "id": "37",
                "speaker": "Wulbren Bongle",
                "text": "I am Wulbren Bongle, leader of the Ironhand Gnomes. No doubt you've heard of us?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "63",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: said with immense pride"
              },
              {
                "id": "64",
                "speaker": "Player",
                "text": "",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "63",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "8",
                "speaker": "",
                "text": "False",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "23",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "21",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "21",
                "speaker": "Narrator",
                "text": "*You recall stories of the Ironhand Gnomes - a talented group of inventors who were banished from Baldur's Gate.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "aa1d4932-8689-5e30-2b17-9b0968663a7a_historysuccess"
                ],
                "goto": "",
                "link": "63",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "79",
                "speaker": "Player",
                "text": "Go on. I'm sure you're dying to tell me all about the Ironhand Gnomes.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "63",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "63",
                "speaker": "Wulbren Bongle",
                "text": "We are inventors of the highest order, matched, perhaps, but never surpassed by the Gondians at the High House of Wonders.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "54",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "16",
                "speaker": "Wulbren Bongle",
                "text": "But our forebears were foolish - complicit with Sarevok's madness over a century past, and so we were banished. Still are to this day.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "54",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "46",
                "speaker": "Player",
                "text": "Pity he never succeeded.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Astarion 1"
                ],
                "context": ""
              },
              {
                "id": "34",
                "speaker": "Wulbren Bongle",
                "text": "You agree with such machinations? Duly noted.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "54",
                "speaker": "Wulbren Bongle",
                "text": "I've fought tooth and nail to restore our reputation. Particularly against Gondian detractors who live in glass houses.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "20",
                "speaker": "Wulbren Bongle",
                "text": "I've filled appeals - pleaded with the High Artificer himself. They've refused us time and again. Now, however, I will make them listen.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "81",
                "speaker": "Player",
                "text": "Were I a Gondian, I'd keep you out of the city too.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "6",
                "speaker": "Wulbren Bongle",
                "text": "*Sigh.* Foolish and ignorant, like the rest. But you'll change your mind once you see what's become of Baldur's Gate, I have no doubt.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCE_GnomeFollowUp_Wulbren_UneasyAboutPlayer"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: determined and zealous"
              }
            ]
          },
          "session_synopses": {
            "": "This dialogue is peak Wulbren. If he's met you in haven (after you saved him), he rolls back on how rude he was as he realises the player would be an amazing asset in the city. If this is your first time meeting him since the escape (if haven is destroyed he waits out on the river until this scene in the epilogue), he realises how good the player would be to have on his side in the city and tells him all about how wronged the ironhand gnomes were."
          }
        },
        "sce_minthara": {
          "scenario_name": "sce_minthara",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "112",
              "123",
              "267",
              "133",
              "269",
              "248",
              "219",
              "153",
              "175",
              "282",
              "130",
              "187",
              "117",
              "43",
              "293",
              "198",
              "273",
              "177"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "112",
                "speaker": "Nightwarden Minthara",
                "text": "You killed the dead man. I'm impressed.",
                "node_type": "normal",
                "checkflags": [
                  "SCE_Minthara_HasMet",
                  "ORI_State_Recruited = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "286",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "123",
                "speaker": "Nightwarden Minthara",
                "text": "And now your path takes you to Baldur's Gate. I shall walk that path with you.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "286",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "267",
                "speaker": "Player",
                "text": "I hoped you would - we make a good team.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "286",
                "is_end": false,
                "approval": [
                  "Astarion 1",
                  "Minthara 10"
                ],
                "context": ""
              },
              {
                "id": "133",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "269",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "269",
                "speaker": "Player",
                "text": "And I'll never tire of killing their previous occupants. We make a good team.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "153",
                "is_end": false,
                "approval": [
                  "Astarion 1",
                  "Minthara 10"
                ],
                "context": ""
              },
              {
                "id": "248",
                "speaker": "Nightwarden Minthara",
                "text": "Yes - although I wish we had collaborated on the killing itself.",
                "node_type": "normal",
                "checkflags": [
                  "COL_KethericShowdown_State_MintharaInvolvedInShowdown = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "153",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "219",
                "speaker": "Nightwarden Minthara",
                "text": "But I will satisfy my war-lust soon, for there are greater challenges than Ketheric ahead of us.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "153",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "153",
                "speaker": "Nightwarden Minthara",
                "text": "It is clear, now, that he was not working alone.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "175",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "175",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "198",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Leaves throne, standing from here on"
              },
              {
                "id": "282",
                "speaker": "",
                "text": "",
                "node_type": "visualstate",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "198",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "130",
                "speaker": "Nightwarden Minthara",
                "text": "We must be free if we are to rule - and to be free, we must destroy this cult, and Ketheric's co-conspirators along with it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "198",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "187",
                "speaker": "Nightwarden Minthara",
                "text": "I know one of them all too well - Bhaal's blood-letter, Orin.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "198",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "117",
                "speaker": "Nightwarden Minthara",
                "text": "To think I thought her to be speaking for the Absolute. I worshipped that woman.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "198",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "43",
                "speaker": "Player",
                "text": "So it's personal? Good - let's take her down.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "198",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "293",
                "speaker": "Nightwarden Minthara",
                "text": "You make it sound so simple. She is the Chosen of Bhaal, Lord of Murder, and one of the cult's founders.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "198",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "198",
                "speaker": "Nightwarden Minthara",
                "text": "Indeed, she is the one who indoctrinated me with the Absolute's lies.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "29",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "273",
                "speaker": "Player",
                "text": "You committed atrocities in the name of those lies.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "265",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "177",
                "speaker": "Nightwarden Minthara",
                "text": "And for that I am sorry. I will commit all future atrocities for my own gain - and yours, should we stand together.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "": "After the SCE debrief, Minthara sits on Ketheric's throne and dreams of what lies ahead."
          }
        },
        "sce_mattis": {
          "scenario_name": "sce_mattis",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sce_ravenguardfollowup": {
          "scenario_name": "sce_ravenguardfollowup",
          "session_sequence": [
            "AD_MainGateFlamingFists"
          ],
          "paths": {
            "AD_MainGateFlamingFists": [
              "AD_MainGateFlamingFists_0",
              "AD_MainGateFlamingFists_2",
              "AD_MainGateFlamingFists_1"
            ]
          },
          "node_data": {
            "AD_MainGateFlamingFists": [
              {
                "id": "AD_MainGateFlamingFists_0",
                "speaker": "Flaming Fist",
                "text": "I ought to do the rounds again.",
                "node_type": "normal",
                "checkflags": [
                  "26007d1c-bac9-a896-4f4d-19a9d2a1e66f_A = False"
                ],
                "setflags": [
                  "26007d1c-bac9-a896-4f4d-19a9d2a1e66f_A"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_MainGateFlamingFists_2",
                "speaker": "Flaming Fist",
                "text": "No point. Everyone's wrecked. Leave 'em be.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_MainGateFlamingFists_1",
                "speaker": "Flaming Fist",
                "text": "Fair enough.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_MainGateFlamingFists": "Two flaming fists at the main gate of MOO are guarding it and discussing how finally they will be able to leave the cursed lands and go back to Baldur's Gate, and that they didn't think they would make it."
          }
        },
        "sce_alfira": {
          "scenario_name": "sce_alfira",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "14",
              "5",
              "20",
              "6",
              "9",
              "11"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "14",
                "speaker": "Alfira",
                "text": "Ah! A fellow bard. Sorry to ask out of the blue, but would you like to play together?",
                "node_type": "normal",
                "checkflags": [
                  "SCE_Alfira_State_RequestedBard",
                  "SCE_Alfira_Event_GaveShiningDawn = False",
                  "BARD"
                ],
                "setflags": [],
                "goto": "",
                "link": "42",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: cheerful and excited"
              },
              {
                "id": "5",
                "speaker": "Alfira",
                "text": "The kids have been really down - I figured a concert would cheer them up. Or distract them, at least. What do you say?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: sincere and excited"
              },
              {
                "id": "20",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "6",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "6",
                "speaker": "Alfira",
                "text": "It'd be like a private concert, just for them - they'd love it!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "9",
                "speaker": "Player",
                "text": "Let's see what you've got.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Gale 1",
                  "Astarion -1",
                  "Lae'zel -1",
                  "Wyll 1",
                  "Karlach 1",
                  "Shadowheart 1",
                  "Minthara -1",
                  "Halsin 1"
                ],
                "context": ""
              },
              {
                "id": "11",
                "speaker": "Alfira",
                "text": "Hah! Just try and keep up.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCE_Alfira_Event_GaveShiningDawn",
                  "SCE_TieflingFollowUp_Event_GiveShiningDawn"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: cheeky and playful"
              }
            ]
          },
          "session_synopses": {
            "": "Alfira is leading the kids in a bit of fun moment of constructing their story into a ballad of sorts. When the player arrives they will have just finished up the lyrics and if the player is a bard, Alfira will invite them to play along with. At the end of the duet (gameplay playing animation with music, not a full cinematic) the Bard is given the Shining Dawn ability."
          }
        },
        "sce_gnomeprisoner": {
          "scenario_name": "sce_gnomeprisoner",
          "session_sequence": [
            "002"
          ],
          "paths": {
            "002": [
              "002_0"
            ]
          },
          "node_data": {
            "002": [
              {
                "id": "002_0",
                "speaker": "Nickels",
                "text": "It'll take time, but this tower's stone will heal.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "002": "Eagerly awaiting the next steps from their leader Wulbren. Ready to do whatever he directs. If Wulbren or Nimble are dead, he'll be noticably more downbeat."
          }
        },
        "sce_isobelsoloreunion": {
          "scenario_name": "sce_isobelsoloreunion",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sce_jaheira": {
          "scenario_name": "sce_jaheira",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sce_patrollingflamingfist": {
          "scenario_name": "sce_patrollingflamingfist",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sce_unfortunategnome": {
          "scenario_name": "sce_unfortunategnome",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "1",
              "27",
              "5",
              "19",
              "40",
              "3",
              "14",
              "11",
              "32",
              "48",
              "20"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "1",
                "speaker": "Barcus Wroot",
                "text": "There you are. I was wondering where the devil you'd been.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCE_GnomeFollowUp_HasMet_WulbrenAlive"
                ],
                "goto": "",
                "link": "11",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "27",
                "speaker": "Player",
                "text": "Here I am. What do you want?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "5",
                "speaker": "Barcus Wroot",
                "text": "To talk about Wulbren, of course.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Impatiently"
              },
              {
                "id": "19",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "40",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "40",
                "speaker": "Barcus Wroot",
                "text": "Who? Oh - right. Well, forget about that magungus. We have more important things to worry about. Like Wulbren.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "11",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: 'muh-GUN-guss' (hard g's)."
              },
              {
                "id": "3",
                "speaker": "Player",
                "text": "What about him?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "14",
                "speaker": "Barcus Wroot",
                "text": "Wulbren and the Ironhand Gnomes are planning something dreadful in the city.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "11",
                "speaker": "Barcus Wroot",
                "text": "They have runepowder. They have motive. We have to stop them.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "32",
                "speaker": "Player",
                "text": "The city has more important concerns than a bunch of gnomes with a grudge.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "48",
                "speaker": "Barcus Wroot",
                "text": "You're tired from your exertions. Who could blame you? Have a smoke, a wash, and a cup of tea, and let's regroup when you're more yourself.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "20",
                "speaker": "Barcus Wroot",
                "text": "To saving the city - and my fool of a friend.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "": "He's a bit mopey but is very much wanting to stick by Wulbren's side despite being mistreated by him. He doesn't know what's happening next but he knows Wulbren has a plan. So that's something."
          }
        },
        "sce_partyvb": {
          "scenario_name": "sce_partyvb",
          "session_sequence": [
            "PAD_CurseStateComment",
            "PAD_UnfinishedBusiness"
          ],
          "paths": {
            "PAD_CurseStateComment": [
              "PAD_CurseStateComment_0"
            ],
            "PAD_UnfinishedBusiness": [
              "PAD_UnfinishedBusiness_0"
            ]
          },
          "node_data": {
            "PAD_CurseStateComment": [
              {
                "id": "PAD_CurseStateComment_0",
                "speaker": "Player",
                "text": "The shadow curse will soon be forgotten, thanks to us.",
                "node_type": "normal",
                "checkflags": [
                  "GLO_LiftingTheCurse_State_BreathHasBeenRestored"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_UnfinishedBusiness": [
              {
                "id": "PAD_UnfinishedBusiness_0",
                "speaker": "Player",
                "text": "The road to Baldur's Gate is up ahead. No turning back, once we start down that road.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_CurseStateComment": "After the act 2 epilogue, the party comments on the state of the Shadow Curse before leaving for Baldur's Gate.",
            "PAD_UnfinishedBusiness": "After the act 2 epilogue, the party comments on resolving unfinished business before moving on to Baldur's Gate/act 3."
          }
        },
        "sce_nightsongsoloreunion": {
          "scenario_name": "sce_nightsongsoloreunion",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sce_debrief": {
          "scenario_name": "sce_debrief",
          "session_sequence": [
            "AD_JaheiraAndMinthara"
          ],
          "paths": {
            "AD_JaheiraAndMinthara": [
              "AD_JaheiraAndMinthara_0",
              "AD_JaheiraAndMinthara_2",
              "AD_JaheiraAndMinthara_1"
            ]
          },
          "node_data": {
            "AD_JaheiraAndMinthara": [
              {
                "id": "AD_JaheiraAndMinthara_0",
                "speaker": "Jaheira",
                "text": "Is it true you were a member of the Absolute cult, drow?",
                "node_type": "normal",
                "checkflags": [
                  "f8e3175b-5587-d6cd-2174-e5a3e9ca4890_A = False"
                ],
                "setflags": [
                  "f8e3175b-5587-d6cd-2174-e5a3e9ca4890_A"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_JaheiraAndMinthara_2",
                "speaker": "Nightwarden Minthara",
                "text": "Do you mean to judge me if I were, darthiir?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_JaheiraAndMinthara_1",
                "speaker": "Jaheira",
                "text": "No. I mean to learn from you.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_JaheiraAndMinthara": "If Florrick is not present and Minthara is, Jaheira will approach to keep an eye on her. She can not be trusted yet since she was recently with the Absolute."
          }
        },
        "sce_ad": {
          "scenario_name": "sce_ad",
          "session_sequence": [
            "UnfortunateGnome",
            "Nickels",
            "Umi",
            "Ide",
            "Mattis",
            "Alfira"
          ],
          "paths": {
            "UnfortunateGnome": [
              "UnfortunateGnome_0"
            ],
            "Nickels": [
              "Nickels_0"
            ],
            "Umi": [
              "Umi_0"
            ],
            "Ide": [
              "Ide_0"
            ],
            "Mattis": [
              "Mattis_0"
            ],
            "Alfira": [
              "Alfira_0"
            ]
          },
          "node_data": {
            "UnfortunateGnome": [
              {
                "id": "UnfortunateGnome_0",
                "speaker": "Barcus Wroot",
                "text": "Curse this heart of mine.",
                "node_type": "normal",
                "checkflags": [
                  "d3eb78cf-ff8c-1e7a-7df7-4b6a04226b17_A"
                ],
                "setflags": [
                  "d3eb78cf-ff8c-1e7a-7df7-4b6a04226b17_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Nickels": [
              {
                "id": "Nickels_0",
                "speaker": "Nickels",
                "text": "Nimble, where is my... oh.",
                "node_type": "normal",
                "checkflags": [
                  "8ab0520b-3a8d-822f-1934-336e2d24e0a0_A"
                ],
                "setflags": [
                  "8ab0520b-3a8d-822f-1934-336e2d24e0a0_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: remembers she's dead"
              }
            ],
            "Umi": [
              {
                "id": "Umi_0",
                "speaker": "Umi",
                "text": "Maybe I should ask the grown-ups to look for Mol again.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "55452e03-17c6-9a9d-072b-80043381c98b_A"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Ide": [
              {
                "id": "Ide_0",
                "speaker": "Ide",
                "text": "Mol is gonna be waiting for us at the gates of the city - I know it.",
                "node_type": "normal",
                "checkflags": [
                  "SCE_TieflingFollowUp_Knows_MolMissingEyepatch",
                  "876dbe2e-5070-a2c1-0148-cc993aa62289_A"
                ],
                "setflags": [
                  "876dbe2e-5070-a2c1-0148-cc993aa62289_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Mattis": [
              {
                "id": "Mattis_0",
                "speaker": "Mattis",
                "text": "Just focus on packing - don't think about Mol.",
                "node_type": "normal",
                "checkflags": [
                  "SCE_TieflingFollowUp_Knows_MolMissingEyepatch"
                ],
                "setflags": [
                  "1fb21305-2e50-068c-0243-64536fe2bd6c_A"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Alfira": [
              {
                "id": "Alfira_0",
                "speaker": "Alfira",
                "text": "I hope the kids liked it...",
                "node_type": "normal",
                "checkflags": [
                  "SCE_Alfira_Event_GaveShiningDawn",
                  "888c185b-e241-7afb-8ea1-40b76a26f3e4_B"
                ],
                "setflags": [
                  "888c185b-e241-7afb-8ea1-40b76a26f3e4_A = False",
                  "888c185b-e241-7afb-8ea1-40b76a26f3e4_B = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: a little bashful"
              }
            ]
          },
          "session_synopses": {
            "UnfortunateGnome": "This occurs in the epilogue. In the top set Wulbren has died and barcus is considering his next steps. In the bottom, Wulbren is alive and barcus is determined to do everything he can to help him.",
            "Nickels": "Nickels is alive but his friend and caretaker Nimble is dead. He's lost without her and out of sorts.",
            "Umi": "Umi is worried about Mol, who is missing. In the top set, the player has down Umi Mol's eyepatch - hinting that she's dead. She's scared for her friend. In the bottom set, she's anxiously worried for her friend.",
            "Ide": "Ide is worried about Mol. In the top set of ADs, the player has shown Ide Mol's eyepatch - hinting that she might be dead. She's in stern denial about the possibility. In the bottom set, she's looking around anxiously, waiting for her leader.",
            "Mattis": "In the top nodes, the player has shown Mattis mol's eyepatch - implying that she's dead. He's distracted and just trying to focus on packing and getting ready - even though he's worried for Mol. In the bottom, he's eager to go and is scavaging Moonrise for stuff he can sell.",
            "Alfira": "This AD occurs in the epilogue of Act 2, as Alfira is keeping an eye on the kids. Mol is missing and they're really worried. She muses about she can do to cheer them up/is riding a high after performing with the player in the hopes of cheering the kids up."
          }
        },
        "glo_gatheryourallies": {
          "scenario_name": "glo_gatheryourallies",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sce_umi": {
          "scenario_name": "sce_umi",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sce_halsin": {
          "scenario_name": "sce_halsin",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "38",
              "74",
              "86",
              "9",
              "43"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "38",
                "speaker": "Halsin",
                "text": "I will miss you, my friend. Perhaps our paths will cross again some day, if the sun ever shines on this place once more.",
                "node_type": "normal",
                "checkflags": [
                  "SCE_Halsin_Event_CurseFailHasmet"
                ],
                "setflags": [],
                "goto": "",
                "link": "36",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Resigned/sad. It is now impossible for the Shadow Curse to be lifted"
              },
              {
                "id": "74",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "86",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "86",
                "speaker": "Halsin",
                "text": "Out there the curse still thrives. I failed this place - now I must remain behind, and stand watch over it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Resigned/sad. It is now impossible for the Shadow Curse to be lifted"
              },
              {
                "id": "9",
                "speaker": "Player",
                "text": "The shadow curse was always your burden - not mine.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Astarion 1",
                  "Gale -1",
                  "Wyll -1",
                  "Halsin -10"
                ],
                "context": ""
              },
              {
                "id": "43",
                "speaker": "Halsin",
                "text": "Yes, and so it must remain. I wish you success on your path. Had things been different, I might have walked it with you.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Resigned/sad. It is now impossible for the Shadow Curse to be lifted"
              }
            ]
          },
          "session_synopses": {
            "": "Dialogue with Halsin in the epilogue of Act 2. In it, he reacts to the various states that could occur in relation to his desire to rid the Act 2 region of the shadow curse:- if you've already done everything needed to ensure success. he's grateful and seeks to remain with you on the journey to Baldur's Gate.- if the curse is not yet sure to be lifted, but there's still something that can be done (ie Thaniel was saved from the Shadowfell, but hasn't been fully restored), he will implore the players to help and offer to join them.- if it's no longer possible to lift the curse, Halsin is sad and resigned to staying behind to stand sentry over it. He will not be available as a companion in Act 3, and his story effectively ends here."
          }
        },
        "sce_cursedfist": {
          "scenario_name": "sce_cursedfist",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "44",
              "14",
              "52",
              "78",
              "12",
              "76",
              "54",
              "75",
              "72",
              "57",
              "53",
              "22"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "44",
                "speaker": "Art Cullagh",
                "text": "When Duke Eltan formed the Flaming Fist, he sought out people of courage and honour to fill its ranks.",
                "node_type": "normal",
                "checkflags": [
                  "GLO_LiftingTheCurse_State_BreathHasBeenRestored",
                  "SCE_AncientFist_ToldStory = False"
                ],
                "setflags": [
                  "SCE_AncientFist_ToldStory"
                ],
                "goto": "",
                "link": "47",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "14",
                "speaker": "Art Cullagh",
                "text": "You saved Thaniel, lifted the curse, and killed an immortal.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "47",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "52",
                "speaker": "Art Cullagh",
                "text": "It's safe to say, you'd have been recruited in an instant.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "47",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "78",
                "speaker": "Player",
                "text": "The Flaming Fist are nothing but mercenaries now. Immoral ones at that.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "53",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "12",
                "speaker": "Art Cullagh",
                "text": "Maybe. I don't know what this Duke Ravengard is like.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "53",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "76",
                "speaker": "Art Cullagh",
                "text": "But the Flaming Fist are the cornerstone of the city, and the Dukes are the foundation.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "54",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "54",
                "speaker": "Art Cullagh",
                "text": "I hope you can save Duke Ravengard - for the good of Baldur's Gate.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "53",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "75",
                "speaker": "Player",
                "text": "Come with me - I could use a Flaming Fist by my side.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "53",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "72",
                "speaker": "Art Cullagh",
                "text": "Thank you, but look at me - I am a relic: a glimpse of history barely strong enough to stand on his own two feet.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "53",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "57",
                "speaker": "Art Cullagh",
                "text": "Besides - Thaniel should have someone here when he wakes up. It's the least I can do.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "53",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "53",
                "speaker": "Player",
                "text": "Then I wish you luck. Thank you for your help.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "26",
                "is_end": false,
                "approval": [
                  "Gale 1",
                  "Wyll 1",
                  "Karlach 1",
                  "Halsin 1"
                ],
                "context": ""
              },
              {
                "id": "22",
                "speaker": "Art Cullagh",
                "text": "You too, my friend. Thank you - from Thaniel and I.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "": "This covers arts three states 1) Thaniel is dead, which means the curse cannot be lifted [he is heartbroken and grieving] 2) the curse quest is in progress, and Thaniel hasn't been saved yet [he's worried for thaniel and frantic] and 3) curse has been lifted and Thaniel is safe [Art is grateful and contemplative, but also a little reserved - he knows he's going to die soon]"
          }
        },
        "sce_standingflamingfist": {
          "scenario_name": "sce_standingflamingfist",
          "session_sequence": [
            "001"
          ],
          "paths": {
            "001": [
              "001_0"
            ]
          },
          "node_data": {
            "001": [
              {
                "id": "001_0",
                "speaker": "Flaming Fist",
                "text": "We should march. Rest, maybe - then march.",
                "node_type": "normal",
                "checkflags": [
                  "SCE_StandingFlamingFist_001_HasMet"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "001": "Flaming fist one-liner."
          }
        },
        "sce_jergal": {
          "scenario_name": "sce_jergal",
          "session_sequence": [
            "Debrief",
            "AD_EpilogueIntro"
          ],
          "paths": {
            "Debrief": [
              "Debrief_26",
              "Debrief_16",
              "Debrief_103",
              "Debrief_68",
              "Debrief_76",
              "Debrief_22",
              "Debrief_82",
              "Debrief_57",
              "Debrief_7",
              "Debrief_99"
            ],
            "AD_EpilogueIntro": [
              "AD_EpilogueIntro_0"
            ]
          },
          "node_data": {
            "Debrief": [
              {
                "id": "Debrief_26",
                "speaker": "Withers",
                "text": "The shadows yet fester. The Dead Three, united under cover of darkness. The balance shifts.",
                "node_type": "normal",
                "checkflags": [
                  "GLO_LiftingTheCurse_State_BreathHasBeenRestored = False"
                ],
                "setflags": [
                  "SCE_Jergal_HasMet"
                ],
                "goto": "",
                "link": "2",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Debrief_16",
                "speaker": "Player",
                "text": "",
                "node_type": "normal",
                "checkflags": [
                  "GLO_Absolute_Knows_DeadThree = False",
                  "CLERIC_BANE = False",
                  "PALADIN_BANE = False",
                  "PALADIN_BHAAL = False",
                  "PALADIN_MYRKUL = False",
                  "CLERIC_MYRKUL = False",
                  "CLERIC_BHAAL = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "2",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Debrief_103",
                "speaker": "",
                "text": "True",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "2",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Debrief_68",
                "speaker": "Narrator",
                "text": "*The Dead Three. Myrkul, Bane, and Bhaal - lords of deathly tenets, and traitors to Ao, god of gods.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "932401b1-7763-7fd7-bee1-8731fe62084f_DeadThree"
                ],
                "goto": "",
                "link": "2",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Debrief_76",
                "speaker": "Narrator",
                "text": "*All three sowed chaos at the height of their power. And all three now walk the planes as mortals - or so it's believed.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "2",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Debrief_22",
                "speaker": "Withers",
                "text": "There are depths to this alliance yet unplumbed. Consider, mortal:",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "2",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Debrief_82",
                "speaker": "Withers",
                "text": "Do illithids possess souls?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "2",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Debrief_57",
                "speaker": "Player",
                "text": "Forget that. Who are you? What are you doing here?",
                "node_type": "normal",
                "checkflags": [
                  "SCE_JergalDebrief_Event_WhyHere = False",
                  "CHA_Jergal_HasMet = False",
                  "CAMP_Jergal_HasMet = False"
                ],
                "setflags": [
                  "SCE_JergalDebrief_Event_WhyHere"
                ],
                "goto": "",
                "link": "123",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Debrief_7",
                "speaker": "",
                "text": "",
                "node_type": "alias",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "123",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Debrief_99",
                "speaker": "Withers",
                "text": "I shall ask yet again. Do illithids possess souls?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ],
            "AD_EpilogueIntro": [
              {
                "id": "AD_EpilogueIntro_0",
                "speaker": "Withers",
                "text": "Against all odds, thou hast survived. Wilt thou reflect with me upon thy triumph?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "Debrief": "Jergal's debrief at MOO after the mind flayer colony.",
            "AD_EpilogueIntro": "Withers AD's on the player successfully defeating Ketheric and coming back to the Epilogue."
          }
        },
        "sce_isobelnightsongreunion": {
          "scenario_name": "sce_isobelnightsongreunion",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sce_ide": {
          "scenario_name": "sce_ide",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "15",
              "20",
              "6",
              "1",
              "2"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "15",
                "speaker": "",
                "text": "",
                "node_type": "alias",
                "checkflags": [
                  "COL_NecromancerLab_HasItem_MolEyepatch"
                ],
                "setflags": [
                  "SCE_TieflingFollowUp_Ide_HasMet"
                ],
                "goto": "",
                "link": "13",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "20",
                "speaker": "Player",
                "text": "I found Mol's eyepatch.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "6",
                "speaker": "Ide",
                "text": "This is Mol's... Where did you find it?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCE_TieflingFollowUp_Knows_MolMissingEyepatch"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Almost accusatory"
              },
              {
                "id": "1",
                "speaker": "Player",
                "text": "Somewhere unpleasant. But I didn't see Mol - she's probably safe somewhere.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Astarion -1",
                  "Lae'zel -1",
                  "Gale 1",
                  "Wyll 1",
                  "Karlach 1",
                  "Minthara 1",
                  "Halsin 1"
                ],
                "context": ""
              },
              {
                "id": "2",
                "speaker": "Ide",
                "text": "'Course she is! You hang onto that - I bet Mol'll be angry at you for touching her stuff.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Defiant but secretly a little relieved - she's glad the player didn't say Mol was dead"
              }
            ]
          },
          "session_synopses": {
            "": "Ide is frustrated by Alfira's attempts to cheer her and the other tiefling kids up - she's more worried about Mol (who is missing)."
          }
        },
        "sce_cerys": {
          "scenario_name": "sce_cerys",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        }
      },
      "final_flags": [
        "GOB_SpiderNest_State_SpidersHostile",
        "DEN_AttackOnDen_HasMet_Prodigy",
        "DEN_CapturedGoblin_GuardsHasMet",
        "GOB_Checkpoint_Event_MoveToCamp",
        "UND_MyconidRevenge_Event_TakeHead",
        "8a9a14b0-87da-5c78-aa76-7a266de7a786_Phase1",
        "PLA_TavernInvestigation_Knows_AskedStelmane",
        "DEN_AttackOnDen_HasMet_Tiefling010Victory",
        "GLO_Moonrise_Knows_AbsoluteAtGrymforge",
        "CRA_DeadPrisoner_Dead_AskedQuestion",
        "UND_DuergarMutineerFollowUp_Event_Happened",
        "CHA_Outside_Event_DoorGuardConvinced",
        "e0b6dfeb-2923-e0ad-1dc5-2a5d1e055e16_local1",
        "DEN_AttackOnDen_HasMet_GrieflingFriend",
        "DEN_AttackOnDen_HasMet_Tiefling001",
        "GOB_QuartermasterFlimsy_HasMet",
        "GEN_TransferNPCPayment_2",
        "DEN_AttackOnDen_Event_OpenGateAfterCombat",
        "5e9c4c72-4f56-2646-ce36-88207d2dc33c_KinSaved",
        "GOB_OwlbearCub_Event_InvitedToCamp",
        "PLA_Desire_Knows_RavengardTaken",
        "DEN_DruidServant005_Knows_TalkedAboutLockdown",
        "UND_SocietyOfBrilliance_MindFlayer_State_MindFlayerFeeding",
        "PLA_ConflictedFlind_Event_MindControlDamage_Minor",
        "DEN_AttackOnDen_HasMet_Servant005Victory",
        "PLA_Desire_State_WyllComTrack",
        "CHA_Chapel_Event_OpenedJergalsTomb",
        "UND_DarkLake_State_ClaimedGekhWasDead",
        "DEN_AttackOnDen_Pet004_HasMet",
        "GLO_Player_Knows_MoonlanternExists",
        "GOB_PainPriest_Event_Reward",
        "2da46374-abab-9219-f7ce-2a002cfd72a5_a",
        "DEN_AttackOnDen_Ranged_001_HasMet",
        "GLO_Volo_HasMet_Personally",
        "GOB_PainPriest_State_ReactedToPenance",
        "da38cd0f-efef-6809-231d-26f71308cd07_B",
        "DEN_RaidingParty_Event_SkipConfrontation",
        "ORI_INCLUSION_SHADOWHEART",
        "GLO_TadpoledCount6",
        "PLA_TavernInvestigation_Quest_WallCollapsed",
        "PLA_Refugee_002_TollhouseMentioned",
        "DEN_AttackOnDen_HasMet_RobberKid",
        "876dbe2e-5070-a2c1-0148-cc993aa62289_B",
        "FOR_PriestsConqueringGod_AlliedPlayer",
        "HAG_GurHunter_Dead_Knows_Hunter",
        "DEN_AttackOnDen_HasMet_PickpocketVictory",
        "DEN_GuardedEntrance_State_ParentsKnowDeath",
        "GLO_IronhandGnomes_Knows_WulbrenInMoonrise",
        "WLD_FOR_GnomeGoblinsAngry",
        "Den_Thieflings_InterferingGuard_PCGotLore",
        "26007d1c-bac9-a896-4f4d-19a9d2a1e66f_A",
        "GOB_Checkpoint_Guard01_HasMet",
        "WLD_UnfortunateGnome_PayPassage",
        "4c78f756-720d-a285-a3e6-8f69a6069abc_Step1",
        "cd4b312f-5a40-b8c1-1ecb-0862c829a479_A",
        "5ebae00c-47d8-736c-6738-4ee56cebbc49_B",
        "DEN_General_YoungLovers_HasMet",
        "GOB_PainPriest_Event_CheckHP",
        "GLO_Desire_HasMet",
        "b43d3bc7-f10d-73cc-232e-c1f93cba3ed5_Local2",
        "DEN_AttackOnDen_Pet002_HasMet",
        "FOR_UnfortunateGnome_State_NonCharlatanAccess",
        "UND_MyconidCircle_PlantDuergarHasMet",
        "aa1d4932-8689-5e30-2b17-9b0968663a7a_historysuccess",
        "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_WyllSpoke",
        "GOB_WolfPens_Worg_002_HasMet",
        "PLA_GithChokepoint_State_FailedReadingMap",
        "PLA_ZhentShipment_Agent_002_StartInclusion",
        "DEN_ShadowDruid_Event_SetFaithwarden",
        "CRA_DeadPrisoner_Dead_MentionedTadpole",
        "GLO_Absolute_Knows_MoonriseTowers",
        "DEN_Rat_Event_MoveToShack",
        "DEN_DruidAttack_HasMet_Protester3AfterAttack",
        "ORI_Inclusion_End_Karlach",
        "UND_WormWall_State_RecognisedCrawlers",
        "GLO_GithChokepoint_DragonAppear",
        "df3e1892-2ab5-7b69-e57b-a75504e1a8f2_B",
        "10297257-36dd-3799-f681-657656779d4a_TieflingsLaezelAD1",
        "ORI_Inclusion_End_Wyll",
        "DEN_AttackOnDen_HasMet_BackupLeader",
        "GLO_HeadRemoval_Event_HeadToInventory",
        "CHA_Jergal_Event_AttemptedAttack",
        "9b4c05c6-0a79-ea8d-c351-43d6fbb04abc_Story1",
        "GOB_AbsoluteCultistStiff_HasMet",
        "GLO_Shadowcurse_Knows_FromGnome",
        "PLA_StuckHalfElf_Knows_ExplainedDowry",
        "FOR_BugBearLove_Event_MovePlayerInside",
        "DEN_Stargazing_Event_SawDragon",
        "ORI_INCLUSION_ASTARION",
        "FOR_UnfortunateGone_TiedUpHasmet",
        "HAG_Hagspawn_State_JakeBerserk",
        "6cf6ff37-64f7-3ccf-d702-ee2025510422_B",
        "UND_EbonLake_Event_MoveToLake",
        "FOR_SeluneStash_NoticeStashSeal_CommentedOnSeal",
        "GOB_Torturers_Rat_001_HasMet",
        "GOB_Scrying_NoddedOrShrugged",
        "DEN_BirdSender_HasMet_GobLeadersDead",
        "a759296c-5d41-f5b9-7d31-1c70d1e10dc7_Once",
        "8ab0520b-3a8d-822f-1934-336e2d24e0a0_B",
        "d3eb78cf-ff8c-1e7a-7df7-4b6a04226b17_B",
        "DEN_HarpyMeal_Event_OriginCharm3",
        "683cb55e-08b9-c865-78a6-4e047ee62a24_B",
        "GLO_Tadpoled_UsedToday1",
        "DEN_Thieflings_Event_PartnerQuestionAsked",
        "HAG_SurrogateMother_HasMet",
        "b2a52f0b-5fa8-d275-f080-0fc8edbe1faf_B",
        "GOB_GoblingKing_Event_HealerPersuasion",
        "UND_DuergarCamp_State_DocksHostile",
        "PLA_ZhentShipment_Agent_001_StartInclusion",
        "57c003e7-0932-6f0c-e655-99025a4abe3a_B",
        "DEN_AttackOnDen_HasMet_TieflingLeader",
        "09983dce-d7d0-c108-506f-dcadc4044b0a_Derryth_SwD_Who",
        "PLA_TavernInvestigation_State_HasMet",
        "ORI_Inclusion_Karlach",
        "UND_BrokenMoonLantern_HasMet",
        "3483cea8-0c11-9432-2421-6b95b9140d95_B",
        "7611fa51-4b1b-3d2c-a8a5-74c04d9db7fa_AnimalHandlingSuccess",
        "UND_DuergarPatroller_03_HasMet",
        "DEN_DruidAttack_HasMet_HideoutLeaderAfterAttack",
        "DEN_TieflingScam_Event_InspectedBox",
        "GnomeAskedHelp",
        "3f665b97-a69e-81c5-68e6-5b931720721e_Part1",
        "CHA_LaezelRecruitment_MindMeld",
        "GLO_ScryingEyes_State_FeltGaze",
        "DEN_GuardedEntrance_HasMet_Guard3",
        "DEN_RaidingParty_Event_KanonOpensGate",
        "DEN_AttackOnDen_HasMet_Wyll",
        "PLA_ConflictedFlind_Knows_Gnolls",
        "GLO_TalkedToVoloAboutAbsolute",
        "UND_MyconidCircle_DwarvenAlchemist_BaelenRestoredHasmet",
        "COL_Barracks_State_InterruptConvinced",
        "GOB_Festivities_Trader_HasMet",
        "DEN_AttackOnDen_HasMet_Tiefling004",
        "ZhentDungeon_AgreedBuy",
        "11d70a18-2aae-47a0-1a18-c486858b1eaf_B",
        "DEN_GruntingKid_Event_DisappearIntoWall",
        "GOB_BattleStations_HasMet_WarDrum",
        "GOB_GoblinJolly_HasMet",
        "UND_MyconidCircle_InjuredGnome_ReportedGrymforgeFate",
        "564fac12-29bd-3abe-d380-0a864e688883_Turn1",
        "COL_TadpolingCentre_MemoryImprint_FirstUse",
        "DEN_Apprentice_HasMet_ReactedToShadowDruids",
        "DEN_CampGeneral_HasMet_Gatekeeper",
        "UND_DeadInTheWater_CorpseDisposerCompanion_HasMet",
        "UND_MyconidCircle_MyconidSuspicious_HasMet",
        "DEN_Hideout_State_GivenWarning",
        "PLA_Refugee_002_HasMet",
        "UND_DuergarGuard_AtPier_01_HasMet",
        "DEN_DruidAttack_HasMet_PickpocketTraderAfterAttack",
        "SCE_Jergal_HasMet",
        "DEN_RaidingParty_Event_OpenDenGate",
        "GOB_GoblinKingDead_Event_SaidFugitives",
        "UND_State_LeaderFreedGnomes",
        "41e56e7f-1722-7350-33dc-aefe523650fe_B",
        "PLA_ZhentDungeon_State_SaidPassword",
        "c3207254-eafb-348b-d327-f690af0e213f_startedattackmove",
        "DEN_AttackOnDen_HasMet_TieflingBard",
        "UND_MyconidCircle_BroodingSovereign_State_InParty",
        "DEN_AttackOnDen_HasMet_Kid004Victory",
        "DEN_Hideout_Event_LeaveCountdown",
        "1493763b-776c-959c-259a-89f34f326e04_A",
        "UND_FurnaceSearch_Knows_Xargrim",
        "DEN_AttackOnDen_ZenBear_HasMet",
        "DEN_DevilishOx_State_ArcanaCheckComplete_SwA",
        "SCE_TieflingFollowUp_Knows_MolMissingEyepatch",
        "fa6e2ce0-64f3-bfb8-fb47-10f50f02cadf_AbsoluteMentioned",
        "DEN_AttackOnDen_Event_PassedByEntrance",
        "DEN_Thieflings_TieflingGuard11_HasMet",
        "GOB_Trader_Knows_Goods",
        "DEN_AttackOnDen_HasMet_Tiefling005",
        "GOB_GoblinToast_Event_ToastSuccess",
        "COL_Barracks_Mistress_Knows_ThinksPlayerIsThrall",
        "DEN_ZenBear_Helped",
        "FOR_KnifeInMeat_State_KnifeBroken",
        "GOB_Festivities_Goblin001_HasMet",
        "FOR_GnomeGoblin1_HasMet",
        "DEN_TieflingRefugees_Quest_HuntRewardOffered",
        "DEN_RaidingParty_Event_GatekeeperToLever",
        "DEN_DruidAttack_HasMet_ServantGnome",
        "COL_NecroLab_GrandDesignSculpture_HasMet_LaezelInclusion",
        "FOR_GoblinAmbush_Event_StopSpotting",
        "DEN_AttackOnDen_HasMet_RitualDruid003",
        "ReportedToDerryth_BaelenIsAlive",
        "GOB_Owlbear_HasMet_NotChasing",
        "UND_SocietyOfBrilliance_MindFlayer_HasMet",
        "ba2b225d-e9d4-944d-5b4f-b27dd975c626_A",
        "DEN_AttackOnDenDruidLeader_State_HasMet",
        "6fa2b72d-fde1-4ee3-e1d1-f184232f693d_A",
        "DEN_DruidAttack_HasMet_ParentBAfterAttack",
        "DEN_General_Squirrel_LearnedTerritory",
        "HAG_Hagspawn_Knows_PromisedRaiseHusband",
        "PLA_ZhentShipment_Agent_001_Inclusion_Start",
        "GOB_RaiderStupid_HasMet",
        "83fdf5e9-88b8-19e7-ba8f-ff075d2222ce_PLA_ZhentShipment_Knows_Gnolls",
        "DEN_Apprentice_Event_RevealedTadpole",
        "DEN_Thieflings_Event_HideoutTrespassCrimeResolved",
        "469a1188-028b-0e6b-b595-fa464baa551e_b",
        "GOB_RaiderBold_HasMet",
        "FoundCounsellor",
        "UND_DuergarCamp_State_SidedNone",
        "a0afae3d-53b0-192d-d822-c61da104f979_A",
        "DEN_Apprentice_State_ShadowDruidPath",
        "DEN_AttackOnDen_HasMet_LeaderKidVictory",
        "FOR_Monitor_Event_TakeFood",
        "GOB_GoblinToast_ThirdGoblinToasted",
        "FOR_Monitor_State_TransformToDevil",
        "DEN_Thieflings_HasMet_Guard2",
        "DEN_Thieflings_HasMet_Mol",
        "ORI_Karlach_HasMet",
        "GOB_Festivities_HasMet_Ogre_00",
        "GOB_RatRacket_LocalRat_002_HasMet",
        "ce2b9169-f3e7-e07f-9c58-0fd373d5df9a_PLA_ZhentDungeon_Zhent02_Dead_KnowsZarysisZhentarim",
        "DEN_AttackOnDen_Event_EnemiesAppear",
        "FOR_SchoolOgres_Event_AttemptedFirstSkillCheck",
        "GOB_Checkpoint_State_UsedAlarmOnce",
        "DEN_GoblinScouts_State_SavedDruid",
        "DEN_AttackOnDen_HasMet_Adventurer2",
        "GOB_GoblinToast_Event_IncludeFourthGoblin",
        "15b0a2b9-2b22-50ab-70c0-ab3042def597_GaleCommentTried",
        "DEN_HarpyMeal_InHideout_WasMean",
        "PreventTradeWithPlayer",
        "DEN_GoblinHunt_Event_GiveRewardBag",
        "1bddcc22-dadd-92c9-4186-4e10ebbfee68_CHA_Crypt_Jergal_DontFollow",
        "UND_AdamantineForge_Knows_Adamantine",
        "DEN_AdventurersQuest_Knows_AradinStory",
        "FOR_Bottomless_State_InteractedWithWell",
        "ORI_INCLUSION_MINTHARA",
        "DEN_AttackOnDen_HasMet_ChefAndSon",
        "ORI_Inclusion_Astarion",
        "UND_DarkJusticiarsCorpses_Recognized",
        "GLO_Desire_State_FreedInAct1",
        "DEN_DruidLair_Knows_DruidsAlliance",
        "GOB_Checkpoint_State_GainedAccess",
        "FOR_UnfortunateGnome_Bargaining",
        "DEN_AttackOnDen_HasMet_ProdigyBrother",
        "UND_Elevator_Event_GotWarning",
        "UND_FearfulRothe_Event_MakeDuergarHostileInDialog",
        "GOB_GuardUpset_State_ConvincedTrueSoul",
        "DEN_CapturedGoblin_State_InTransit",
        "GLO_Thieflings_State_PCShookPickpocketSister",
        "GOB_GEB_TorturedAdventurer_Assault_HasMet",
        "DEN_GroveConflict_Event_StoleIdolAttempt",
        "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_NoFFPresent",
        "DEN_Thieflings_Event_CallGuard",
        "DEN_AdventurersQuest_RaidAdventurerAtCorps_HasMet",
        "UND_FearfulRothe_HasMet_Rothe_001_SpeakWithAnimals",
        "UND_FearfulRothe_State_BefriendedRothe",
        "0d6dbe21-1644-b9bf-8297-dd60d820bd99_B",
        "DEN_GuardedEntrance_HasMet_LiedAboutDeath",
        "FOR_ApothecaryGoblins_Goblin01_HasMet",
        "HAG_AnimalIllusion_Revealed_HasMet1",
        "DEN_TieflingScam_Event_TalkedAboutBox",
        "SCE_Alfira_Event_GaveShiningDawn",
        "UND_Automaton_Knows_AskedPlace",
        "CRA_DeadFisherman2_Dead_WhatDoing",
        "GOB_GoblinToast_Event_IncludeThirdGoblin",
        "DEN_AttackOnDen_HasMet_PickpocketTrader",
        "COL_TadpolingCentre_Knows_IdentifiedDarkUrgePod",
        "GOB_GoblinThroneCheckpoint_Pass",
        "HalsinLeft_KilledLeaders",
        "DEN_AttackOnDen_HasMet_Halsin",
        "c167cdf3-7201-e55c-222f-773c758e1000_IncludedHusband",
        "HAG_HagLair_Victim_001_HasMet",
        "PLA_StuckDwarf_HasMet_FoundWife",
        "GOB_SpiderNest_State_SpidersChill",
        "PLA_Tavern_Knows_DukeInTavern",
        "ORI_INCLUSION_KARLACH",
        "PLA_ZhentDungeon_State_AgentFreed",
        "UND_FurnaceSearch_Event_DuergarMentionsForge",
        "GLO_Moonrise_Knows_GoblinsCapturedADuke",
        "DEN_DruidLair_Knows_FoundingGrove",
        "FOR_Monitor_HasMet_Dinner",
        "AskedCircle",
        "03b6aa2e-e805-3a51-6bdb-d92f0b0da84a_UND_MyconidCircle_ServantHookHorror_01_RecognisedMonster",
        "DEN_GuardedEntrance_HasMet_Protester1",
        "ToldAboutTadpole",
        "DEN_DruidAttack_HasMet_Tiefling010AfterAttack",
        "f3f236b2-37a1-a0a2-5855-184ead7b1286_C",
        "GOB_DrowCommander_State_Hostile",
        "UND_ArguingGnomes_Event_LearnedAboutPhilomeen",
        "UND_PetrifiedDrow_Knows_WizardIsDhourn",
        "ORI_Inclusion_End_ShadowHeart",
        "ORI_Shadowheart_Knows_SeenTempleVista",
        "FOR_BugBearLove_Event_CoupleHostile",
        "HAG_AnimalIllusion_Narrator",
        "DEN_Thieflings_State_DoneChase",
        "UND_ElevatorGuard002_HasMet",
        "ThankedFreed_BeldronThulla",
        "ORI_INCLUSION_MINSC",
        "DEN_Thieflings_Knows_PlayerRobbed",
        "DEN_ShadowDruid_HasMet_Opposed",
        "GLO_TadpoledCount1",
        "DEN_DruidAttack_HasMet_ExcitedBoar",
        "3b2ae6b6-ca7e-d905-0430-128078b3119f_B",
        "720e85fb-cc00-b81a-efff-343a04ca221e_A",
        "DEN_DevilishOx_MeetAtDruidsGrove_HasMet_SwA",
        "UND_ClericPetGrave_HasMet",
        "UND_MyconidCircle_DirectToSovereign_HasMet",
        "UND_GnomeWorkerLumpy_HasmetRescued",
        "DEN_GroveConflict_Quest_Learnt3LeadersTwoNames",
        "SCE_GnomeFollowUp_Wulbren_UneasyAboutPlayer",
        "d97f72ff-8fb1-8a4c-f169-89751bd6e125_b",
        "ORI_INCLUSION_RANDOM",
        "HAG_Well_Event_DrinkWell",
        "a7407f82-add0-9f6d-e4e6-78b9c39195a6_C",
        "ORI_INCLUSION_WYLL",
        "4118b185-9468-2295-93f3-9d6eafd8fb8a_Second_Disabled",
        "FOR_GoblinAmbush_State_DrowAutoPass",
        "DEN_TieflingLeader_Quest_GobHuntResponded",
        "GLO_Halsin_Event_TalkedWithDruidLeader",
        "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionRefused",
        "ORI_Inclusion_Gale",
        "DEN_RitualDruid_HasMet_Left5",
        "PLA_Desire_Quest_TriedForceDoor",
        "DEN_Thieflings_Pickpocket1_PCIsNotAChump",
        "DEN_AttackOnDen_HasMet_Refugee002",
        "fb0e13b6-cc68-d496-51c2-4594f4f5bf40_TauntHer",
        "182bb613-b70c-5e7c-b3ea-ea14e02d1fab_C",
        "GOB_PainPriest_Event_PickScourge",
        "DEN_GroveConflict_Knows_HeardAboutRitual",
        "d0423454-cc51-ae8e-5096-cffd1aac9f75_A",
        "FOR_BugBearLove_Knows_Lovemaking",
        "ORI_INCLUSION_LAEZEL",
        "DEN_DruidAttack_HasMet_SonOfChefAfterAttack",
        "HAG_HagLair_TalkingDoor_HasMet",
        "ORI_Inclusion_ShadowHeart",
        "1ea9e483-36a9-82b1-852f-b901ec25552a_a",
        "DEN_Prodigy_HasMet",
        "PLA_ZhentShipment_State_TalkedAfterKilledGnolls",
        "551618bc-83c9-52cc-0ca7-37c224446cf7_Local1",
        "GOB_Bravado_State_Goblin3Hasmet",
        "SCE_GnomeFollowUp_HasMet_WulbrenAlive",
        "SCE_TieflingFollowUp_Ide_HasMet",
        "FOR_BottomlessWell_InteractWithWell_Knows_LookedDown",
        "ORI_INCLUSION_GALE",
        "DEN_GuardedEntrance_HasMet_Parents",
        "GOB_GoblinToast_Event_IncludeSecondGoblin",
        "ca797aab-5a73-7ec5-edb7-022122573b39_B",
        "DEN_AttackOnDen_Event_HeftyTieflingQuip",
        "GOB_WolfPens_Event_HalsinLeftParty",
        "FactionHostileToPlayerGroupAfterDialog",
        "ORI_Laezel_Quest_FoundZorru",
        "GOB_GoblinPriest_Event_FreedFromChains",
        "PLA_StuckHalfElf_Knows_MentionedDowry",
        "21e0890e-7019-66a3-1956-125405f96d7c_A",
        "DEN_DruidAttack_HasMet_DruidOpposedAfterAttack",
        "FOR_PriestOfTheConqueringGod_Cultists_Knows_Mission",
        "DEN_Apprentice_Event_RemoveBirdExhaustion",
        "DEN_CampGeneral_PCGotLore",
        "SpokeToBrothers",
        "5f09c70a-153e-77e8-731c-5c532e635809_B",
        "DEN_DruidAttack_HasMet_GatekeeperAfterAttack",
        "b951f0e6-65af-843d-a666-f5284343cc67_MentionedTrueSoul",
        "LearnedGroveSituation",
        "DEN_RaidingParty_Event_UnsheatheForFight",
        "ReachedWife",
        "GOB_Festivities_BugbearSleeper_00_HasMet",
        "GLO_TadpoleIntro_NPC",
        "DEN_Thieflings_Knows_KidsThieves",
        "DEN_ShadowDruidLeaderPostGoblins_State_HasMet",
        "DEN_GroveConflict_Knows_LeaderNameKing",
        "TemporaryHostilityAfterDialog",
        "0884581d-9f92-0a34-9440-6a54c0813bbe_ProceedToSecondStage",
        "DEN_Prodigy_HasMet_Brother",
        "GLO_Absolute_Knows_TrueSoul",
        "UND_GnomeForeman_UnfortunateGnome_InclusionStart",
        "DEN_WeepingTree_HasMet_Bear",
        "PLA_ZhentDungeon_Dog_03_HasMet",
        "a6f2350b-ecc4-bf6c-0c73-dcb37f9e9690_B",
        "GOB_DrowCommander_Knows_DrowLeader",
        "ORI_Shadowheart_State_IdolHint",
        "ea88dfe9-ff39-9b98-ae03-48d7fdf2708e_A",
        "DEN_AttackOnDen_HasMet_Refugee004Victory",
        "ORI_Inclusion_End_Astarion",
        "OrderedKillDruids",
        "DEN_DevilishOx_MeetAtDruidsGrove_State_Peaceful",
        "DEN_AttackOnDen_HasMet_RitualDruid002",
        "PLA_StuckHalfElf_StartInclusion",
        "DEN_Thieflings_Pickpocket2_HasMet",
        "GOB_Checkpoint_Event_WarnedAtCliff",
        "PLA_ZhentShipment_State_Talked",
        "RefusedHelpBrothers1",
        "GOB_PainPriest_Event_ReactToMocking",
        "DEN_DruidLair_Knows_RuneAppearance",
        "GLO_Hag_KnowsAboutSurrogate",
        "81f2a55d-d317-761f-f6a0-fe97ad6d5288_C",
        "UND_DuergarCamp_Knows_NereIsTrapped",
        "DEN_SenderBird_Event_TakeOff",
        "FOR_GnomeGoblinsPacified",
        "DEN_DruidAttack_HasMet_ChefAfterAttack",
        "ParentLied",
        "f8e3175b-5587-d6cd-2174-e5a3e9ca4890_A",
        "7256657b-1386-989f-0262-c6530e03a9fb_AskedWhy",
        "DEN_General_Inclusion_End_Pickpocket",
        "DEN_WeepingTree_Bear_Upset",
        "UND_TheDrowNere_Mutiny_InclusionStart_GnomeSilly",
        "bde7a4f1-933f-f6ce-4a3e-4b1f29f83704_B",
        "UND_TheDrowNere_Event_HadMindMeld",
        "57c003e7-0932-6f0c-e655-99025a4abe3a_A",
        "DEN_YoungLovers_State_MetPlayer",
        "5310a408-76a3-3498-cc26-ae866871188b_Third_Disabled",
        "7ffcf0de-e30b-ef58-fcc5-8d3a1482fa59_b",
        "GLO_Absolute_Knows_GoblinsWorship",
        "DEN_Weaponsmith_Knows_Elturel",
        "DEN_ShadowDruid_Event_ReactionDone",
        "CHA_Crypt_Event_JergalAppears",
        "PLA_ZhentDungeon_Zhent05_HasMet",
        "DEN_TieflingLeader_HasMet_ReactToDruidAttack",
        "ORI_Laezel_State_StartedTieflingsSceneAtCage",
        "DEN_BirdSender_HasMet",
        "UND_MyconidCircle_DeepRothe_BaelenAteShroom_Hasmet",
        "GOB_BattleStations_Event_ToStation",
        "DEN_AttackOnDen_HasMet_Trainer",
        "GOB_GoblinHeretic_FreeToGo",
        "GOB_GoblinThroneCheckpoint_State_NonCharlatanAccess",
        "1c74b01f-5dcf-8107-b384-204d341ed9d5_OnlyOnce",
        "DEN_Thieflings_State_MessedWithMolsKids",
        "PLA_Refugee_001_HasMet",
        "UND_MyconidCircle_State_GainedAccess",
        "DEN_DruidAttack_HasMet_ParentAAfterAttack",
        "GOB_Checkpoint_State_GoblinsToldLeaders",
        "UND_DuergarCamp_Mutineers_HasMet",
        "LearnedDukeMissingCounsellor",
        "SCE_JergalDebrief_Event_WhyHere",
        "94cd662c-844b-4dcc-ffdc-0b9a8da32bcc_BarcusSpokeUp",
        "DEN_AttackOnDen_HasMet_LairDoor",
        "RikkaAskedQuest",
        "DEN_General_Event_TriedNudgingBear",
        "DEN_HasMet_SoloParentB",
        "DEN_RitualDruid_HasMet_Left2",
        "GOB_Torturers_HasMet_Goblet",
        "FOR_BugbearLove_State_InterruptedCouple",
        "DEN_AttackOnDen_Servant005_Answered",
        "UND_BroodingSovereign_State_RefusedCircle",
        "DEN_Thieflings_HasMet_Trainee1",
        "UND_DeadInTheWater_CorpseDisposerLeader_HasMet",
        "DEN_Tiefling011_State_Met",
        "DEN_Thieflings_PersuadedPickpocket",
        "GOB_GoblinToast_Event_NoMoreRefills",
        "ORI_Inclusion_Random",
        "PLA_KarlachRecruitment_State_PersuasionSucceeded",
        "DEN_Thieflings_State_WitnessedArgument",
        "3b911555-52e5-7791-d2ac-44fe62465fa1_Loop3",
        "GOB_RaiderCunning_HasMet",
        "GOB_Eye_HasMet",
        "DEN_AttackOnDen_HasMet_Refugee003",
        "DEN_Weaponsmith_HasMet",
        "34910f06-fac0-085f-b41a-337d0dfad85a_A",
        "ORI_Inclusion_Laezel",
        "GOB_GoblinToast_SecondGoblinToasted",
        "9e2ef14b-1a2f-4edc-3f78-7e3a27967e5c_C",
        "DEN_AttackOnDen_HasMet_ScoutCaptive",
        "PLA_KarlachRecruitmentTollhouse_State_HostilitiesBegan",
        "UND_PetrifiedDrow_Knows_MemoryCrystal",
        "UND_FairyRings_Dead_AskedDrowIdentity",
        "ZevlorRewarded",
        "COL_TadpolingCentre_Knows_ImpliedDarkUrgePod",
        "GOB_PainPriest_Penanced",
        "b618166c-99f4-1c7a-02b7-32f0f0fbe420_LocalA",
        "SCE_TieflingFollowUp_Event_GiveShiningDawn",
        "DEN_AttackOnDen_HasMet_Servant004Victory",
        "DEN_AttackOnDen_HasMet_Mule1",
        "DEN_TieflingScam_HasMet",
        "DEN_AttackOnDen_HasMet_Kid003",
        "UND_FearfulRothe_Event_ConvincedRotheToAttackDuergar",
        "PLA_FlamingFist7_InnBurntDown_HasMet",
        "1fb21305-2e50-068c-0243-64536fe2bd6c_A",
        "DEN_AttackOnDen_HasMet_Tiefling003Victory",
        "SCE_AncientFist_ToldStory",
        "0d9d0064-babd-6e83-6ea6-5b78afb0413c_B",
        "DEN_GoblinScouts_HasMet_Captive",
        "GLO_Absolute_Knows_Symbol",
        "PLA_ConflictedFlind_Event_MindControl_KillHerself",
        "GLO_SpeakWithDead_Event_QuestionAsked",
        "HAG_Hah_MaskedVictim2_HasMet",
        "DEN_DruidAttack_HasMet_ZenBear",
        "GOB_PainPriest_Event_BadReaction",
        "UND_BrokenLantern_State_TriedArcane",
        "461152ff-16c3-2617-f8af-7ddb5681820b_b",
        "ed70fdfc-3d7b-7753-1171-957f7316fe55_B",
        "SidedTieflings",
        "DEN_GroveConflict_Knows_KaghaRequestedPlayers",
        "PLA_StuckHalfElf_State_PlayerAngered",
        "UND_BroodingSovereign_State_AskedCircle",
        "DEN_AttackOnDen_HasMet_Trainee001Victory",
        "UND_MyconidCircle_State_FirstGreetingDone",
        "6bde1237-aa43-36d3-9e53-ec1092198541_C",
        "2bc86ee2-13ec-992e-993a-8b2fb705bd0a_B",
        "UND_DarkLake_State_HostileResolution",
        "c3d825d1-49b8-9ae2-4554-4fc1f55d2eee_LocalA",
        "COL_TadpolingCentre_Event_PurgePods",
        "DEN_ZhentAgent_02_Inclusion_Start",
        "DEN_AttackOnDen_HasMet_ProdigySister",
        "ORI_Shadowheart_Event_DarkJusticiarHint",
        "873bc4e0-3d3c-1eac-903b-e94920fd6306_sawgithyanki",
        "DEN_CampGeneral_RufusHasMet",
        "DEN_Apprentice_HasMet",
        "DEN_General_Mule2_HasMet",
        "DEN_AttackOnDen_HasMet_ApprenticeVictory",
        "98423a2d-7b47-e379-6526-c435773e3cff_B",
        "DEN_Thieflings_Event_PlayerNotInvolved",
        "HAG_HagLair_Knows_DoorWasAlive",
        "ThankedFreed_Beldron",
        "DEN_AttackOnDen_HasMet_Griefling",
        "4d9f1cb5-200f-c998-657a-8d04f5c93c74_B",
        "DEN_AttackOnDen_HasMet_RitualDruid005",
        "4b4d2992-abb5-bd1b-9593-feb68eddf682_B",
        "ORI_Karlach_Knows_DammonWorkedInHell",
        "ORI_Inclusion_End_Random",
        "DEN_Squirrel_HasMet",
        "ORI_INCLUSION_HALSIN",
        "DEN_ShadowDruid_State_HadSelfReflection",
        "DEN_Thieflings_Pickpocket1_HasMet",
        "PLA_FlamingFist7_Knows_AskedWhatHappened",
        "DEN_DruidAttack_HasMet_BardAfterAttack",
        "GOB_PainPriest_State_NeedMoreHP",
        "FOR_BugBearLove_Event_OpenDoor",
        "DEN_Thieflings_State_PCSawKidThievesGettingCaught",
        "260f61d5-60df-da35-608b-a9856291b143_PlayerKnowsOrinKilledZevlor",
        "916a75f0-23d8-f05b-449d-d926d69fe782_FailedCheck",
        "SCE_GnomeFollowUp_Wulbren_HasMet",
        "DEN_druidservant_005_HasMet",
        "CHA_Jergal_HasMet",
        "ORI_Inclusion_End_Gale",
        "PLA_ConflictedFlind_Hyena_001_HasMet",
        "StartedAlt",
        "DEN_RaidingParty_Adventurer2_HasMet",
        "GLO_Thieflings_State_PickpocketKidGotHit",
        "GOB_WolfPens_Event_HalsinLeavesGoblinCamp",
        "e6738c9d-060d-c901-b945-4d49ca303d5b_SuccessfullyReadTracks",
        "DEN_GruntingKid_HasMet",
        "16193247-ccea-1974-45ec-e8229a7de4ef_B",
        "DEN_TieflingLeader_Quest_GobHuntDeclined",
        "DEN_RaidingParty_Event_GoblinsAppear",
        "DEN_GuardedEntrance_HasMet_Guard1",
        "GOB_PainPriest_Event_FirstHitDone",
        "ORI_Inclusion_End_Laezel",
        "DEN_General_Event_ElevatorBearMoves",
        "DEN_CapturedGoblin_OfferedRevenge",
        "DEN_General_Inclusion_Pickpocket",
        "DEN_RitualDruid_HasMet_Left4",
        "GOB_DrowCommander_HasMet",
        "GLO_Jergal_State_OutOfTomb",
        "DEN_TieflingLeader_State_KaghaResolved",
        "f3afb428-73fc-2e5c-057b-2e0e5a1b2f1c_B",
        "DEN_AttackOnDen_HasMet_Stargazer",
        "DEN_Thieflings_Event_ShookThief",
        "DEN_AttackOnDen_HasMet_Refugee001",
        "b70d5139-9980-efc6-3ba3-fe2eb56ab2e0_B",
        "DEN_DruidAttack_HasMet_PetWolf",
        "26071d89-33af-8eac-3c05-ee8dca91338d_who",
        "DEN_Apprentice_UserShortcut",
        "ReflectedKagha",
        "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionAsked",
        "FOR_GoblinAmbush_GoblinsPacified",
        "932401b1-7763-7fd7-bee1-8731fe62084f_DeadThree",
        "DEN_DruidAttack_HasMet_GrieflingAfterAttack",
        "DEN_GuardedEntrance_State_ClearToPass",
        "GOB_Checkpoint_State_GuidedByCapturedGoblin",
        "DEN_RaidingParty_Event_GoblinRaidFight",
        "ORI_Inclusion_Wyll",
        "RefusedCircle",
        "DEN_TieflingScam_Knows_Scam",
        "DEN_BirdSender_Knows_AskedAboutBird",
        "DEN_DevilishOx_MeetAtDruidsGrove_Incapable",
        "DEN_Thieflings_CaveGuard_002_HasMet",
        "GOB_PainPriest_Knows_PenanceIsPain",
        "6bba3537-3756-eb27-a08a-a8596d765f2e_C",
        "CHA_LaezelRecruitment_Event_LaezelHostile",
        "DEN_GoblinScouts_SavedDruid",
        "ArrivedAtGrove",
        "DEN_GruntingKid_Event_AskedCanTalk",
        "DEN_Apprentice_Event_GiveReward",
        "acc081f3-204a-2f29-a3bb-6d33ff784c39_C",
        "DEN_AttackOnDen_GrieflingFriend_Knows_Kelemvor",
        "GOB_PainPriest_Event_Mercy",
        "c68c5474-226f-4b47-b327-a22274e360a0_B",
        "55452e03-17c6-9a9d-072b-80043381c98b_A",
        "UND_LoneDuergar_Event_WaitingForMainDialog",
        "OrderedBreachInn",
        "DEN_RitualDruid_HasMet_Pacified3",
        "DEN_ShadowDruidRats_Event_RememberedLetter",
        "DEN_DruidAttack_State_PrepAfterDeathOfDruids",
        "PLA_Desire_Event_HasMet",
        "4103e544-e1db-525f-81ec-b5dfa71907d7_WantNereOut",
        "PLA_StuckHalfElf_Event_ToldQuestion",
        "UND_BroodingSovereign_Event_Enlarged",
        "f108995b-14f4-7823-d218-790177a93da8_B",
        "6a98f294-9f4f-d0b0-1cba-706f1cb15009_Local1",
        "GOB_WolfPens_Worg_001_HasMet",
        "DEN_DruidAttack_HasMet_WeaponsmithAfterAttack",
        "GLO_Volo_HasMet",
        "OpenedSarcophagus",
        "Counsellor_RefusedHelp",
        "02455563-e119-58e5-1fe7-eb46fe381d30_A",
        "GOB_GuardUpset_HasMet",
        "GOB_RatRacket_LocalRat_001_HasMet",
        "c5f62c4b-fb04-1505-c35b-63119d96b127_First_Disabled",
        "698f5a3b-6d88-3d9e-ee4f-26d9c1fc5b6b_B",
        "UND_TheDrowNere_State_KilledGnomeSerene",
        "GLO_VoloBallad_MetGuardPrison",
        "PLA_ZhentDungeon_Zhent01_HasMet",
        "ORI_Karlach_HasMet_DammonUnavailable",
        "GOB_CheckpointBackup003_HasMet",
        "DEN_TieflingScam_Event_FoundOutLies",
        "UND_ArguingGnomes_Quest_Accepted",
        "DEN_Thieflings_HasMet_Chef"
      ]
    },
    "Haven": {
      "chapter_id": "Act2_Haven",
      "scenario_sequence": [
        "hav_molsdeal",
        "hav_florrick",
        "hav_daisyad",
        "hav_lastlightox001",
        "hav_enteringhaven",
        "hav_tieflingdismisseshalsin",
        "hav_lakesidecombat",
        "hav_flamingfistcorpse",
        "hav_cat",
        "hav_takingisobel",
        "hav_marcus",
        "hav_alfiratale",
        "hav_savingprisoners",
        "hav_isobel",
        "hav_checkpoint",
        "hav_vb",
        "hav_general",
        "hav_jaheira",
        "hav_lonelover",
        "hav_exitblessingreminder",
        "hav_harperguard",
        "hav_havenoutcasts",
        "hav_nightsong",
        "hav_wrootrequest",
        "hav_cursedfist",
        "hav_backupleader",
        "hav_ad",
        "hav_haven",
        "hav_ngb",
        "hav_harperscouts",
        "hav_siege",
        "hav_pad",
        "hav_ravengard",
        "hav_devilishox",
        "hav_tieflingsurvivors",
        "hav_lastlightox000",
        "hav_misc",
        "hav_prodigylament",
        "hav_halsinquest",
        "hav_lastlightox002"
      ],
      "scenario_results": {
        "hav_molsdeal": {
          "scenario_name": "hav_molsdeal",
          "session_sequence": [
            "Lanceboard_AD",
            "AD_MonitorLeave",
            "Raphael",
            "AD_NoticedStolenBoard"
          ],
          "paths": {
            "Lanceboard_AD": [
              "Lanceboard_AD_1",
              "Lanceboard_AD_5",
              "Lanceboard_AD_6"
            ],
            "AD_MonitorLeave": [
              "AD_MonitorLeave_0",
              "AD_MonitorLeave_1"
            ],
            "Raphael": [
              "Raphael_55",
              "Raphael_51",
              "Raphael_2",
              "Raphael_62",
              "Raphael_27",
              "Raphael_83",
              "Raphael_7",
              "Raphael_75",
              "8",
              "NODE_NOT_FOUND"
            ],
            "AD_NoticedStolenBoard": [
              "AD_NoticedStolenBoard_0"
            ]
          },
          "node_data": {
            "Lanceboard_AD": [
              {
                "id": "Lanceboard_AD_1",
                "speaker": "Mol",
                "text": "This game's awful. Why's anyone play it?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "90a73000-b6ed-ad55-7eae-f9a6f8f00f55_A"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: pretending to be bad at the game (she's actually amazing at it)"
              },
              {
                "id": "Lanceboard_AD_5",
                "speaker": "Raphael",
                "text": "It hones a strategic mind, my dear. Take your turn.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Lanceboard_AD_6",
                "speaker": "Mol",
                "text": "Ugh.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: pretending to be bad at the game (she's actually amazing at it)"
              }
            ],
            "AD_MonitorLeave": [
              {
                "id": "AD_MonitorLeave_0",
                "speaker": "Raphael",
                "text": "If you'll excuse me, I must see to urgent matters.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_MonitorLeave_1",
                "speaker": "Raphael",
                "text": "But don't you fret. I shall always find time for my most treasured acquaintance.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Raphael": [
              {
                "id": "Raphael_55",
                "speaker": "Raphael",
                "text": "It's good to see you again. I'd ask if you've made any progress with your little problem, but the tell-tale twitching of your eye is answer enough.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "8",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Raphael turns to the player and smiles."
              },
              {
                "id": "Raphael_51",
                "speaker": "Player",
                "text": "You again - I'm sure your arrival is simply a coincidence.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "8",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Raphael_2",
                "speaker": "Raphael",
                "text": "My dear, nothing is coincidence. Mortals trifle themselves with free will, as if their betters have not moulded every potential path ahead.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "8",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Raphael_62",
                "speaker": "Raphael",
                "text": "No offence meant, of course. I'm sure everyone in Last Light thinks they could have changed things.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "8",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Raphael_27",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "8",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Raphael leans in, pressing in on the player's personal space."
              },
              {
                "id": "Raphael_83",
                "speaker": "Raphael",
                "text": "They're not the only ones ripe for temptation, you know. My last contract here fed me for decades.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "8",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Raphael_7",
                "speaker": "Player",
                "text": "You were here before? Why?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "8",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Raphael_75",
                "speaker": "Raphael",
                "text": "Family troubles. Not my family, of course.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "8",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "8",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ],
            "AD_NoticedStolenBoard": [
              {
                "id": "AD_NoticedStolenBoard_0",
                "speaker": "Mol",
                "text": "Huh. Just put this away a second ago... didn't I?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "Lanceboard_AD": "ADs for Mol and Raphael as they play lanceboard. Mol is pretending to be unskilled and disinterested in the game.",
            "AD_MonitorLeave": "AD spoken by Raphael as he stands to leave after playing chess with Mol.",
            "Raphael": "If Mol is dead or not present for other reasons, this solo dialogue for Raphael will take place instead.Rather than sitting at the lanceboard table, he is looming in the corner observing everyone else in Last Light.",
            "AD_NoticedStolenBoard": "Mol reacts to the player having stolen and put the lanceboard elsewhere."
          }
        },
        "hav_florrick": {
          "scenario_name": "hav_florrick",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "20",
              "21",
              "11",
              "25",
              "57",
              "88",
              "6",
              "62",
              "86",
              "76",
              "95",
              "70",
              "38",
              "40",
              "12",
              "33"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "20",
                "speaker": "Counsellor Florrick",
                "text": "That eye. In Tymora's name, Wyll? What's happened to you?",
                "node_type": "normal",
                "checkflags": [
                  "HAV_SavingPrisoners_HasMet_Florrick = False",
                  "GLO_Florrick_State_KnowsWyllDevil = False",
                  "8a4a686d-6c47-411f-a0b3-d79ff33e2922 = False",
                  "WYLL_DEVIL",
                  "REALLY_WYLL"
                ],
                "setflags": [
                  "HAV_SavingPrisoners_HasMet_Florrick",
                  "GLO_Florrick_State_KnowsWyllDevil"
                ],
                "goto": "",
                "link": "2",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "21",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "11",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "11",
                "speaker": "Counsellor Florrick",
                "text": "That eye. In Tymora's name, Wyll? What's happened to you?",
                "node_type": "normal",
                "checkflags": [
                  "GLO_Florrick_State_KnowsWyllDevil = False",
                  "WYLL_DEVIL",
                  "REALLY_WYLL"
                ],
                "setflags": [
                  "GLO_Florrick_State_KnowsWyllDevil"
                ],
                "goto": "",
                "link": "88",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Addressed to player\rNodeContext: Notices player suddenly. HAnd to brow in exasperation."
              },
              {
                "id": "25",
                "speaker": "Player",
                "text": "It's my business, Florrick - not yours.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "88",
                "is_end": false,
                "approval": [
                  "Astarion 1",
                  "Gale 1",
                  "Lae'zel 1",
                  "Wyll 1",
                  "Shadowheart 1",
                  "Karlach 1",
                  "Jaheira 1",
                  "Minthara 1",
                  "Halsin 1"
                ],
                "context": ""
              },
              {
                "id": "57",
                "speaker": "Counsellor Florrick",
                "text": "Fine. Gods know I've got enough worries plucking at my nerves.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "88",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "88",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "6",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "6",
                "speaker": "Counsellor Florrick",
                "text": "Gods, please, no. You were supposed to be my wildcard.",
                "node_type": "normal",
                "checkflags": [
                  "332d1f8d-f355-feae-f7fd-2c83a4816bb3_WyllIntervened = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "84",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Addressed to player\rNodeContext: Notices player suddenly. HAnd to brow in exasperation."
              },
              {
                "id": "62",
                "speaker": "Counsellor Florrick",
                "text": "We believe the cultists have taken Duke Ravengard to Moonrise Towers. I don't suppose you've found a way in?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "HAV_Florrick_Event_RavengardInTowers"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "86",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "76",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "76",
                "speaker": "Counsellor Florrick",
                "text": "I don't suppose you've found a way into the Towers?",
                "node_type": "normal",
                "checkflags": [
                  "PLA_Desire_State_ToldFlorrickAboutTowers"
                ],
                "setflags": [
                  "HAV_Florrick_Event_RavengardInTowers"
                ],
                "goto": "",
                "link": "84",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "95",
                "speaker": "Player",
                "text": "What's with the fellow in the cot?",
                "node_type": "normal",
                "checkflags": [
                  "SCL_AncientFist_HasMet = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "70",
                "speaker": "Counsellor Florrick",
                "text": "Isobel cleared this place, and he just... appeared. We think he was staying at the inn when the curse fell - which means he's been trapped inside for a century.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "38",
                "speaker": "Counsellor Florrick",
                "text": "It beggars belief he's alive at all.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "40",
                "speaker": "Counsellor Florrick",
                "text": "Hopefully he'll come 'round. Tell us something useful about getting through the shadows. Right now he seems to have little more to him than a refrain from some song or other.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "12",
                "speaker": "Player",
                "text": "What can you tell me about Isobel?",
                "node_type": "normal",
                "checkflags": [
                  "GLO_HAV_TakingIsobel_HasMet_BriefInRoom = False"
                ],
                "setflags": [
                  "GLO_HAV_TakingIsobel_HeardOfIsobel"
                ],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "33",
                "speaker": "Counsellor Florrick",
                "text": "Cleric of Selûne - she's got a room upstairs if you want to meet her. Just don't interrupt her while she's doing whatever it is that keeps this place shadow-free.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "": "Florrick is with her Flaming Fist troops in Haven. As you approach, they are furiously trying to put a plan together to rescue Ravengard. The curse is one thing, but Ketheric is invincible. They can't just storm the place. And even if they could, they would execute the prisoners if the alarm was raised - including the Grand Duke.Florrick turns to you, incredibly grateful that we have made it so far. She implores you to work with Jaheira for her rescue efforts, but tells you your priority is clear: Duke Ravengard. He must be returned to the city - it will not survive his absence."
          }
        },
        "hav_daisyad": {
          "scenario_name": "hav_daisyad",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "hav_lastlightox001": {
          "scenario_name": "hav_lastlightox001",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "hav_enteringhaven": {
          "scenario_name": "hav_enteringhaven",
          "session_sequence": [
            "PAD_Moonshield",
            "TadpoleCheckpoint",
            "PAD_Halsin"
          ],
          "paths": {
            "PAD_Moonshield": [
              "PAD_Moonshield_0"
            ],
            "TadpoleCheckpoint": [
              "TadpoleCheckpoint_87",
              "TadpoleCheckpoint_188",
              "TadpoleCheckpoint_54",
              "TadpoleCheckpoint_196",
              "TadpoleCheckpoint_173",
              "TadpoleCheckpoint_0",
              "TadpoleCheckpoint_66",
              "TadpoleCheckpoint_131",
              "TadpoleCheckpoint_137",
              "136",
              "NODE_NOT_FOUND"
            ],
            "PAD_Halsin": [
              "PAD_Halsin_1",
              "PAD_Halsin_0"
            ]
          },
          "node_data": {
            "PAD_Moonshield": [
              {
                "id": "PAD_Moonshield_0",
                "speaker": "Player",
                "text": "No shadows here - something must be keeping it at bay.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "TadpoleCheckpoint": [
              {
                "id": "TadpoleCheckpoint_87",
                "speaker": "Jaheira",
                "text": "",
                "node_type": "normal",
                "checkflags": [
                  "HAV_EnteringHaven_State_FlamingSpyRevealed",
                  "HAV_EnteringHaven_Event_ClawsKilled = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "239",
                "is_end": false,
                "approval": [],
                "context": "InternalNodeContext: Marcus transformed, but player counterspelled his summon."
              },
              {
                "id": "TadpoleCheckpoint_188",
                "speaker": "Jaheira",
                "text": "Be on the alert, Harpers! We haven't seen the last of Marcus yet.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "239",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: a martial order to her squad, who are shaken by witnessing a hideous transformation"
              },
              {
                "id": "TadpoleCheckpoint_54",
                "speaker": "Jaheira",
                "text": "As for you - you exposed a True Soul in our midst. You're no puppet of the Absolute, are you?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "239",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: turns to player, speaking more quietly\rNodeContext: Looks at us anew. Still suspicious, but intrigued too."
              },
              {
                "id": "TadpoleCheckpoint_196",
                "speaker": "Jaheira",
                "text": "How is that possible?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "239",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "TadpoleCheckpoint_173",
                "speaker": "Player",
                "text": "Because of this artefact. (Show Jaheira.)",
                "node_type": "normal",
                "checkflags": [
                  "WIZARD = False"
                ],
                "setflags": [
                  "HAV_EnteringHaven_State_RevealedArtifact"
                ],
                "goto": "",
                "link": "239",
                "is_end": false,
                "approval": [
                  "Wyll 1",
                  "Karlach 1"
                ],
                "context": ""
              },
              {
                "id": "TadpoleCheckpoint_0",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "239",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: | (CINE) The player takes Orpheus from their pocket and presents it to Jaheira who looks on intrigued. There’s a crackle of energy and she reacts to something in her pocket. She takes out the jar again and we see the tadpole flail wildly inside - then the jar explodes and the tadpole drops to the ground dead. There are gasps from the crowd, and several of the Harpers move in to strike us down. |"
              },
              {
                "id": "TadpoleCheckpoint_66",
                "speaker": "Jaheira",
                "text": "What in the hells is that thing?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "239",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "TadpoleCheckpoint_131",
                "speaker": "Player",
                "text": "Your guess is as good as mine.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "136",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "TadpoleCheckpoint_137",
                "speaker": "Jaheira",
                "text": "Strangest magic I've seen since roaming the ruins of Myth Drannor, but I can't argue with the results.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "136",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "136",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ],
            "PAD_Halsin": [
              {
                "id": "PAD_Halsin_1",
                "speaker": "Halsin",
                "text": "Last Light Inn... we rallied here once, years ago, before the assault on Moonrise Towers.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Faintly bittersweet reminiscence. Enrtering a place he passed through 100 years ago."
              },
              {
                "id": "PAD_Halsin_0",
                "speaker": "Halsin",
                "text": "The Archdruid at the time spoke to us all, inspiring our courage... he was a fine leader.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Wondering how he himself measures up as Archdruid in comparison, perhaps."
              }
            ]
          },
          "session_synopses": {
            "PAD_Moonshield": "VB played on the first time the players reach the Moonshield on the Haven bridge. They comment on how it holding back the shodows.",
            "TadpoleCheckpoint": "The main dialog for the Tadpole Checkpoint event. Triggered either by simply entering Haven, or being caught sneaking inside.Jaheira tests us to see if we carry a tadpole - and must be convinced to let us enter once she discovers we do. Mol and Marcus vouching for the player is aliased across both states of the player being entangled and free from vines.",
            "PAD_Halsin": "Voicebark for Halsin on Entering Last Light. He has some history with the place (and the region in general)"
          }
        },
        "hav_tieflingdismisseshalsin": {
          "scenario_name": "hav_tieflingdismisseshalsin",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "0"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "0",
                "speaker": "Narrator",
                "text": "*Still rattled by what happened at the Emerald Grove, they'll need time to recover before they'll be ready to talk.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "": "Triggers if Halsin tries to talk to any of the Tiefling refugees in Haven"
          }
        },
        "hav_lakesidecombat": {
          "scenario_name": "hav_lakesidecombat",
          "session_sequence": [
            "ARENA_Wave2",
            "ARENA_Wave0"
          ],
          "paths": {
            "ARENA_Wave2": [
              "ARENA_Wave2_0"
            ],
            "ARENA_Wave0": [
              "ARENA_Wave0_0"
            ]
          },
          "node_data": {
            "ARENA_Wave2": [
              {
                "id": "ARENA_Wave2_0",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ARENA_Wave0": [
              {
                "id": "ARENA_Wave0_0",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "ARENA_Wave2": "Arena Cam for Halsins Lakeside Combat for Wave 2 of enemies spawning",
            "ARENA_Wave0": "Arena Cam for Halsins Lakeside Combat for Wave 0 of enemies spawning"
          }
        },
        "hav_flamingfistcorpse": {
          "scenario_name": "hav_flamingfistcorpse",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "hav_cat": {
          "scenario_name": "hav_cat",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "hav_takingisobel": {
          "scenario_name": "hav_takingisobel",
          "session_sequence": [
            "JaheiraCallToArm",
            "PAD_SpyTransformationClue",
            "IsobelSaved",
            "AD_ReactingToRoofNoise",
            "CoolingDown",
            "FlamingSpy_Dead",
            "BriefInRoom",
            "AD_CombatBetrayalReveal"
          ],
          "paths": {
            "JaheiraCallToArm": [
              "JaheiraCallToArm_0"
            ],
            "PAD_SpyTransformationClue": [
              "PAD_SpyTransformationClue_0"
            ],
            "IsobelSaved": [
              "IsobelSaved_0"
            ],
            "AD_ReactingToRoofNoise": [
              "AD_ReactingToRoofNoise_0"
            ],
            "CoolingDown": [
              "CoolingDown_0"
            ],
            "FlamingSpy_Dead": [
              "FlamingSpy_Dead_27",
              "FlamingSpy_Dead_28",
              "FlamingSpy_Dead_23",
              "FlamingSpy_Dead_10"
            ],
            "BriefInRoom": [
              "BriefInRoom_160",
              "BriefInRoom_157",
              "BriefInRoom_110"
            ],
            "AD_CombatBetrayalReveal": [
              "AD_CombatBetrayalReveal_0"
            ]
          },
          "node_data": {
            "JaheiraCallToArm": [
              {
                "id": "JaheiraCallToArm_0",
                "speaker": "Jaheira",
                "text": "To arms! Protect Isobel at all cost!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "CinematicNodeContext: Focus should be on the shoulders up to obscure whether or not Jaheira has a weapon in hand (cannot be guaranteed).\rNodeContext: Shouted during the onset of battle"
              }
            ],
            "PAD_SpyTransformationClue": [
              {
                "id": "PAD_SpyTransformationClue_0",
                "speaker": "Player",
                "text": "Someone - something - shed Flaming Fist armour like a second skin.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "IsobelSaved": [
              {
                "id": "IsobelSaved_0",
                "speaker": "Isobel",
                "text": "Help the others - hurry!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Doubled over coughing but telling player not to worry about her."
              }
            ],
            "AD_ReactingToRoofNoise": [
              {
                "id": "AD_ReactingToRoofNoise_0",
                "speaker": "Isobel",
                "text": "Who's stomping around up there?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "CoolingDown": [
              {
                "id": "CoolingDown_0",
                "speaker": "Isobel",
                "text": "Where's Jaheira?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: A little out-of-breath-- you just defeated Marcus after hte kidnapping scene and are waiting for Jaheira to arrive."
              }
            ],
            "FlamingSpy_Dead": [
              {
                "id": "FlamingSpy_Dead_27",
                "speaker": "Narrator",
                "text": "*The corpse regards you lifelessly.*",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "FlamingSpy_Dead_28",
                "speaker": "Player",
                "text": "Who are you?",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [
                  "GLO_SpeakWithDead_Event_QuestionAsked"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "FlamingSpy_Dead_23",
                "speaker": "Fist Marcus",
                "text": "Marcus Falgor... raised in... Baldur's Gate...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "FlamingSpy_Dead_10",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ],
            "BriefInRoom": [
              {
                "id": "BriefInRoom_160",
                "speaker": "Isobel",
                "text": "",
                "node_type": "normal",
                "checkflags": [
                  "HAV_Isobel_State_Kneeling",
                  "HAV_TakingIsobel_Event_SpyIsDefeatedInRoom"
                ],
                "setflags": [
                  "GLO_HAV_TakingIsobel_HasMet_BriefInRoom"
                ],
                "goto": "",
                "link": "206",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Isobel kneeling at corpse"
              },
              {
                "id": "BriefInRoom_157",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "206",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Isobel gets up"
              },
              {
                "id": "BriefInRoom_110",
                "speaker": "Isobel",
                "text": "What the hells is this?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "206",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ],
            "AD_CombatBetrayalReveal": [
              {
                "id": "AD_CombatBetrayalReveal_0",
                "speaker": "Isobel",
                "text": "There are traitors among us - Marcus and the True Soul!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Fury in her voice, called out during combat"
              }
            ]
          },
          "session_synopses": {
            "JaheiraCallToArm": "Isobel is being attacked. Jaheira calls people to defend Isobel, as their lives depend on her.This dialog can happen anywhere in Last Light, but mainly close to Isobel's room.",
            "PAD_SpyTransformationClue": "If we go up on the roof above Isobel’s room, we’ll find discarded FF armour and some bloodstains from a transformation of some kind. A successful med check shows someone burst out of their armour (Marcus)",
            "IsobelSaved": "Once the Flaming Fist has been defeated, a shaken Isobel urges players who helped her to go and assist with the fight in the main room. She is coughing and unwell.",
            "AD_ReactingToRoofNoise": "The player is walking on the roof above Isobel's room and VoiceBarking about the Flaming Spy's transformation leftovers. Isobel reacts if she is close enough to hear.",
            "CoolingDown": "Isobel has a one-liner in case the player clicks on her while Jaheira is running up to her to do a dual dialog after Marcus' failed attempt at kidnapping Jaheira.",
            "FlamingSpy_Dead": "SwD for the Flaming Fist Spy Marcus. Which questions is relevant may vary depending on the moment he dies (before the capture happens, during the capture or in Moonrise).",
            "BriefInRoom": "Isobel is in her room re-casting the spell that is protecting the inn. After she spots you, she gives you information about Ketheric and a spell to protect you from the shadowcurse.After Isobel gives this information, she is interrupted by the Absolute-tadpoled Flaming Fist, who attempts to kidnap her.",
            "AD_CombatBetrayalReveal": "Isobel announces player's betral during combat"
          }
        },
        "hav_marcus": {
          "scenario_name": "hav_marcus",
          "session_sequence": [
            "DismissesHalsin"
          ],
          "paths": {
            "DismissesHalsin": [
              "DismissesHalsin_0"
            ]
          },
          "node_data": {
            "DismissesHalsin": [
              {
                "id": "DismissesHalsin_0",
                "speaker": "Narrator",
                "text": "*The Flaming Fist looks past your shoulder; it seems he'd prefer not to speak to you.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "DismissesHalsin": "Narrator line for the situation where Halsin tries to talk to Marcus while marcus is waiting to talk to a True Soul"
          }
        },
        "hav_alfiratale": {
          "scenario_name": "hav_alfiratale",
          "session_sequence": [
            "AD_WithFlirty"
          ],
          "paths": {
            "AD_WithFlirty": [
              "AD_WithFlirty_1",
              "AD_WithFlirty_4",
              "AD_WithFlirty_6",
              "AD_WithFlirty_12"
            ]
          },
          "node_data": {
            "AD_WithFlirty": [
              {
                "id": "AD_WithFlirty_1",
                "speaker": "Lakrissa",
                "text": "Anything happen while I was away?",
                "node_type": "normal",
                "checkflags": [
                  "512d5ba7-a884-f1f5-5d26-fad488c07e2c_B"
                ],
                "setflags": [
                  "512d5ba7-a884-f1f5-5d26-fad488c07e2c_C"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: trying to make convo but she's actually worried for alfira"
              },
              {
                "id": "AD_WithFlirty_4",
                "speaker": "Alfira",
                "text": "Too much. I can't wait for things to just be... quiet.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: little bit tired and down but trying not to sound it."
              },
              {
                "id": "AD_WithFlirty_6",
                "speaker": "Lakrissa",
                "text": "It'll be quiet in the city. We'll have a little house, maybe a garden?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: sincere and heartfelt - trying to make alfira smile"
              },
              {
                "id": "AD_WithFlirty_12",
                "speaker": "Alfira",
                "text": "That sounds perfect.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: relieved and grateful"
              }
            ]
          },
          "session_synopses": {
            "AD_WithFlirty": "This occurs after alfira and lakrissa have their reunion scene in last light (player has rescued lakrissa from moonrise). Lakrissa and Alfira are being cute and concenered for each other."
          }
        },
        "hav_savingprisoners": {
          "scenario_name": "hav_savingprisoners",
          "session_sequence": [
            "AD_LoverInspection",
            "FlamingFist_006",
            "AD_BrotherInspection",
            "AD_ArguingWithFlorrick",
            "AD_WulbrenInspection",
            "FlirtyTiefling",
            "Manip",
            "AD_SisterInspection",
            "AD_FlamingFist_003_InCombat",
            "FlamingFist_001",
            "AD_FlamingFist_001_CouncillorDefeated",
            "FlamingFist_002",
            "AD_Gnome02Inspection",
            "FlamingFist_004",
            "AD_FlamingFist_005_InCombat"
          ],
          "paths": {
            "AD_LoverInspection": [
              "AD_LoverInspection_0"
            ],
            "FlamingFist_006": [
              "FlamingFist_006_0"
            ],
            "AD_BrotherInspection": [
              "AD_BrotherInspection_0"
            ],
            "AD_ArguingWithFlorrick": [
              "AD_ArguingWithFlorrick_0",
              "AD_ArguingWithFlorrick_6",
              "AD_ArguingWithFlorrick_1",
              "AD_ArguingWithFlorrick_3"
            ],
            "AD_WulbrenInspection": [
              "AD_WulbrenInspection_0"
            ],
            "FlirtyTiefling": [
              "FlirtyTiefling_0"
            ],
            "Manip": [
              "Manip_3",
              "Manip_14",
              "Manip_7",
              "Manip_16"
            ],
            "AD_SisterInspection": [
              "AD_SisterInspection_0"
            ],
            "AD_FlamingFist_003_InCombat": [
              "AD_FlamingFist_003_InCombat_0"
            ],
            "FlamingFist_001": [
              "FlamingFist_001_0"
            ],
            "AD_FlamingFist_001_CouncillorDefeated": [
              "AD_FlamingFist_001_CouncillorDefeated_0"
            ],
            "FlamingFist_002": [
              "FlamingFist_002_0"
            ],
            "AD_Gnome02Inspection": [
              "AD_Gnome02Inspection_0"
            ],
            "FlamingFist_004": [
              "FlamingFist_004_0"
            ],
            "AD_FlamingFist_005_InCombat": [
              "AD_FlamingFist_005_InCombat_0"
            ]
          },
          "node_data": {
            "AD_LoverInspection": [
              {
                "id": "AD_LoverInspection_0",
                "speaker": "Danis",
                "text": "We have to worry about parasites now? Gods.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: nervous"
              }
            ],
            "FlamingFist_006": [
              {
                "id": "FlamingFist_006_0",
                "speaker": "Fist Cyril",
                "text": "I'd offer to help, but with Duke Ravengard missing, we can't spare anyone. I'm sorry.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_SavingPrisoners_FlamingFist_006_Protected_HasMet",
                  "HAV_Mood_State_Protected"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "CinematicNodeContext: <GL> reshoot, last version had almost no movement\rInternalNodeContext: Protected state. Barrier is On, nothing bad happened yet. Met.\rNodeContext: sincere and emotive - you care deeply and are worried for the player's loved ones"
              }
            ],
            "AD_BrotherInspection": [
              {
                "id": "AD_BrotherInspection_0",
                "speaker": "Danis",
                "text": "I would tell you if I had one, I swear it!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: nervous"
              }
            ],
            "AD_ArguingWithFlorrick": [
              {
                "id": "AD_ArguingWithFlorrick_0",
                "speaker": "Manip Vidor",
                "text": "J'ehlar is doing her best, but he shows no signs of waking.",
                "node_type": "normal",
                "checkflags": [
                  "99aa7b78-defd-57bc-eabf-a8aa43a030d9_A"
                ],
                "setflags": [
                  "99aa7b78-defd-57bc-eabf-a8aa43a030d9_B"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: J'ehlar pronounced (Jay-LAR)"
              },
              {
                "id": "AD_ArguingWithFlorrick_6",
                "speaker": "Counsellor Florrick",
                "text": "We can wait.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_ArguingWithFlorrick_1",
                "speaker": "Manip Vidor",
                "text": "But Baldur's Gate can't.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_ArguingWithFlorrick_3",
                "speaker": "Counsellor Florrick",
                "text": "If you have an alternative in mind, please do propose it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_WulbrenInspection": [
              {
                "id": "AD_WulbrenInspection_0",
                "speaker": "Wulbren Bongle",
                "text": "This is ridiculous - as if I'd let some parasite infect me.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Loathing in his voice at the thought"
              }
            ],
            "FlirtyTiefling": [
              {
                "id": "FlirtyTiefling_0",
                "speaker": "Lakrissa",
                "text": "The light - it's happening. Ketheric is about to get a long overdue arse-kicking - I can feel it.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_FlirtyTiefling_NightsongFreed_HasMet",
                  "HAV_Mood_State_NightsongFreed"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: hopeful and determined"
              }
            ],
            "Manip": [
              {
                "id": "Manip_3",
                "speaker": "Manip Vidor",
                "text": "Heard you're meant to be heading toward the Towers.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_SavingPrisoners_HasMet_Manip = False"
                ],
                "setflags": [
                  "HAV_SavingPrisoners_HasMet_Manip"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Manip_14",
                "speaker": "Player",
                "text": "Doing your job, you mean.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Astarion 1",
                  "Gale 1",
                  "Shadowheart 1",
                  "Lae'zel 1",
                  "Wyll 1",
                  "Karlach 1",
                  "Minthara 1",
                  "Halsin 1"
                ],
                "context": ""
              },
              {
                "id": "Manip_7",
                "speaker": "Manip Vidor",
                "text": "'A good soldier knows when he isn't the man for the job.' So sayeth Florrick.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: With a bit of a bitter edge. He's not super pissed, but isn't happy."
              },
              {
                "id": "Manip_16",
                "speaker": "Manip Vidor",
                "text": "If you find us a way into the Towers, we'll be there, shield to shield. Until then... we wait.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_SisterInspection": [
              {
                "id": "AD_SisterInspection_0",
                "speaker": "Lia",
                "text": "Can we hurry this up? I need a drink. Now.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: annoyed and a little nervous"
              }
            ],
            "AD_FlamingFist_003_InCombat": [
              {
                "id": "AD_FlamingFist_003_InCombat_0",
                "speaker": "Fist Rahir",
                "text": "Stand your ground.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: battle cry - determined and unafraid despite being outnumbered"
              }
            ],
            "FlamingFist_001": [
              {
                "id": "FlamingFist_001_0",
                "speaker": "Fist Thadwick",
                "text": "This is no place for amateurs.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_SavingPrisoners_FlamingFist_001_HasMet_Protected",
                  "HAV_Mood_State_Protected"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: Protected state. Barrier is On, nothing bad happened yet. Met.\rNodeContext: now annoyed that player is talking again"
              }
            ],
            "AD_FlamingFist_001_CouncillorDefeated": [
              {
                "id": "AD_FlamingFist_001_CouncillorDefeated_0",
                "speaker": "Fist Thadwick",
                "text": "The Cousellor's fallen - Fists, don't give up!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "FlamingFist_002": [
              {
                "id": "FlamingFist_002_0",
                "speaker": "Fist Aubree",
                "text": "I've heard the stories about Moonrise. I hope the Duke is all right.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_SavingPrisoners_FlamingFist_002_Hasmet_Protected",
                  "HAV_Mood_State_Protected"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "CinematicNodeContext: <GL> reshoot, last version had almost no movement\rInternalNodeContext: Protected state. Barrier is On, nothing bad happened yet. Met.\rNodeContext: concerned"
              }
            ],
            "AD_Gnome02Inspection": [
              {
                "id": "AD_Gnome02Inspection_0",
                "speaker": "Nickels",
                "text": "I want to go inside - to the wood and stone. Where it's quiet - safe.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: nervous"
              }
            ],
            "FlamingFist_004": [
              {
                "id": "FlamingFist_004_0",
                "speaker": "Fist J'ehlar",
                "text": "A hundred years locked away inside a curse - can you imagine?",
                "node_type": "normal",
                "checkflags": [
                  "HAV_SavingPrisoners_FlamingFist_004_HasMet_Protected",
                  "HAV_Mood_State_Protected",
                  "SCL_AncientFist_ItemReturned = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: Protected state. Barrier is On, nothing bad happened yet. Met."
              }
            ],
            "AD_FlamingFist_005_InCombat": [
              {
                "id": "AD_FlamingFist_005_InCombat_0",
                "speaker": "Fist Gretta",
                "text": "The Flaming Fist bow to no one.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: in combat - fearless and determined"
              }
            ]
          },
          "session_synopses": {
            "AD_LoverInspection": "Character is under inspection after arriving to HAV from MOO. They need to be checked for a tadpole.",
            "FlamingFist_006": "Flaming Fist Cyril is an elf who feels things deeply. An emotive person, he is positive and tries to see the good in everything.  This dialogue contains several states, including resting, on high alert against ghouls, under attack etc..",
            "AD_BrotherInspection": "Character is under inspection after arriving to HAV from MOO. They need to be checked for a tadpole.",
            "AD_ArguingWithFlorrick": "Florrick and Vidor are talking between themselves about how to proceed. Florrick wants to wait until Mart Cullagh is awake and can tell them more about the shadowcurse. Vidor wants to plan an attack on Moonrise Towers to rescue Grand Duke Ravengard. They aren't at cross purposes, but they don't agree on much.",
            "AD_WulbrenInspection": "Character is under inspection after arriving to HAV from MOO. They need to be checked for a tadpole.",
            "FlirtyTiefling": "Lakrissa's dialogue after her reunion scene with alfira (or potentially this is her only scene if alfira is dead). Lakrissa is usually playful and flirty but she is a but more restrained here. Still smiling but more somber.",
            "Manip": "The Flaming FIst Manip, Vidor, has conflict with Florrick prior to any of these dialogues. He is the sergeant of the FF troops, and believes Florrick is a terrible leader. Player can respond to his idea that he should attack Moonrise.",
            "AD_SisterInspection": "Character is under inspection after arriving to HAV from MOO. They need to be checked for a tadpole.",
            "AD_FlamingFist_003_InCombat": "On turn voice bark.",
            "FlamingFist_001": "Thadwick is a male dwarf and grumpy is his middle name. He's a bit rough and gruff and has little time for the player - an amateur in his eyes. He warms up to him slightly as we progress through the dialogue. This dialogue cover his major states in Haven.",
            "AD_FlamingFist_001_CouncillorDefeated": "On turn voice bark.",
            "FlamingFist_002": "Flaming Fist Aubree is devoted to the Ravengard but also pragmatic. She's unafraid of asking for the player's help and is concerned for Ravengard. Does her best to look at things in a non-judgemental way.",
            "AD_Gnome02Inspection": "Character is under inspection after arriving to HAV from MOO. They need to be checked for a tadpole.",
            "FlamingFist_004": "A mercenary with the Flaming Fist, stuck in Haven with the refugees and one too pleased about it.",
            "AD_FlamingFist_005_InCombat": "On turn voice bark."
          }
        },
        "hav_isobel": {
          "scenario_name": "hav_isobel",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "108",
              "124",
              "49",
              "93",
              "2",
              "85",
              "35",
              "104",
              "102",
              "103",
              "194",
              "83",
              "154",
              "185",
              "90",
              "72",
              "21",
              "63",
              "116",
              "129",
              "113",
              "146",
              "139"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "108",
                "speaker": "Isobel",
                "text": "",
                "node_type": "normal",
                "checkflags": [
                  "ORI_DarkUrge_Knows_MetIsobel = False",
                  "NIGHT_DarkUrge_SparedIsobel = False",
                  "REALLY_DARK_URGE"
                ],
                "setflags": [
                  "ORI_DarkUrge_Knows_MetIsobel"
                ],
                "goto": "",
                "link": "0",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "124",
                "speaker": "Narrator",
                "text": "*Every scrap of your marrow yearns to end her. Dooming the village would bring foul glory. You can almost taste it.*",
                "node_type": "normal",
                "checkflags": [
                  "NIGHT_DarkUrge_IsobelKillOrder = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "49",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "93",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "93",
                "speaker": "Narrator",
                "text": "*This is the one Sceleritas sent you to kill. Every scrap of your marrow yearns to end her.*",
                "node_type": "normal",
                "checkflags": [
                  "NIGHT_DarkUrge_IsobelKillOrder"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "2",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "85",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "85",
                "speaker": "Isobel",
                "text": "On with you. Unless you want to come back to a gaggle of shadow-cursed Harpers.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_Isobel_HasMetDefault = False"
                ],
                "setflags": [
                  "HAV_Isobel_KidnappingQuestions_DarkUrge",
                  "HAV_Isobel_HasMetDefault"
                ],
                "goto": "",
                "link": "105",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "35",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "104",
                "link": "105",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "104",
                "speaker": "Player",
                "text": "My blood... it's telling me to kill you.",
                "node_type": "normal",
                "checkflags": [
                  "c76693dc-e4a4-5631-a9b5-8abc6b4ab36e_DarkUrgeThreatened = False",
                  "REALLY_DARK_URGE"
                ],
                "setflags": [],
                "goto": "",
                "link": "169",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "102",
                "speaker": "Isobel",
                "text": "And yet you hesitate.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "169",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Suspicious, hardened voice"
              },
              {
                "id": "103",
                "speaker": "Narrator",
                "text": "*She doesn't believe you will do it. You can see, she wants to believe there is mercy in all, even in the worst.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "169",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "194",
                "speaker": "Isobel",
                "text": "You aren't the first to threaten me. But I know the eyes of a killer when I see them. You mean me no harm. Do you? An experienced cleric can tell such things.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "169",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "83",
                "speaker": "Narrator",
                "text": "*The Urge within does not want to talk. The restless Urge starts to scream.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "169",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "154",
                "speaker": "Player",
                "text": "Chase away your putrid desires.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "133",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "185",
                "speaker": "Narrator",
                "text": "*As suddenly as it started, you have tamed the Urge. It slumbers again.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "133",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "90",
                "speaker": "Isobel",
                "text": "There we are. The real you. Your - affliction, is it? - doesn't rule you, does it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "133",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "72",
                "speaker": "Player",
                "text": "I'm cursed with spells of madness, forgive me what I said.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "133",
                "is_end": false,
                "approval": [
                  "Karlach 5",
                  "Wyll 1",
                  "Gale 1",
                  "Halsin 1",
                  "Shadowheart 1",
                  "Lae'zel 1",
                  "Astarion 1",
                  "Minthara 1"
                ],
                "context": ""
              },
              {
                "id": "21",
                "speaker": "Isobel",
                "text": "Let things begin again, as long as you keep the peace in Last Light.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "c76693dc-e4a4-5631-a9b5-8abc6b4ab36e_DarkUrgeThreatened"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "63",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "116",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "116",
                "speaker": "Player",
                "text": "I still have a few questions.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "129",
                "speaker": "Isobel",
                "text": "Go on, then.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: An invitation"
              },
              {
                "id": "113",
                "speaker": "Player",
                "text": "This curse seems incredibly powerful. What more can you tell me about it?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "146",
                "speaker": "Isobel",
                "text": "It belongs to the goddess Shar - according to the Harpers, it fell here when they defeated - or thought they defeated - one of her disciples, Ketheric Thorm.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "139",
                "speaker": "Isobel",
                "text": "It's incredibly powerful. We'll have our work cut out for us trying to shift the thing, but I believe we - you - can do it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: She knows a lot more than she's letting on. This is her father, and he resurrected her."
              }
            ]
          },
          "session_synopses": {
            "": "Isobel's default dialog in HAV. Varies greatly depending on the state of HAV and what the player has discovered in Moonrise or Shar Temple."
          }
        },
        "hav_checkpoint": {
          "scenario_name": "hav_checkpoint",
          "session_sequence": [
            "AD_Combat_Jaheira_000",
            "AD_Combat_Jaheira_002"
          ],
          "paths": {
            "AD_Combat_Jaheira_000": [
              "AD_Combat_Jaheira_000_0"
            ],
            "AD_Combat_Jaheira_002": [
              "AD_Combat_Jaheira_002_0"
            ]
          },
          "node_data": {
            "AD_Combat_Jaheira_000": [
              {
                "id": "AD_Combat_Jaheira_000_0",
                "speaker": "Jaheira",
                "text": "You should have stayed in your tower.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Combat_Jaheira_002": [
              {
                "id": "AD_Combat_Jaheira_002_0",
                "speaker": "Jaheira",
                "text": "You'll make excellent fertiliser.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_Combat_Jaheira_000": "Combat AD",
            "AD_Combat_Jaheira_002": "Combat AD"
          }
        },
        "hav_vb": {
          "scenario_name": "hav_vb",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "hav_general": {
          "scenario_name": "hav_general",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "hav_jaheira": {
          "scenario_name": "hav_jaheira",
          "session_sequence": [
            "AD_CombatTaunts",
            "AD_PlayersAttackJaheira"
          ],
          "paths": {
            "AD_CombatTaunts": [
              "AD_CombatTaunts_0"
            ],
            "AD_PlayersAttackJaheira": [
              "AD_PlayersAttackJaheira_0"
            ]
          },
          "node_data": {
            "AD_CombatTaunts": [
              {
                "id": "AD_CombatTaunts_0",
                "speaker": "Jaheira",
                "text": "Serene she might seem, but nature has fangs!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "d3d3855d-6721-b089-5c1e-d6d255a46fdc_A"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_PlayersAttackJaheira": [
              {
                "id": "AD_PlayersAttackJaheira_0",
                "speaker": "Jaheira",
                "text": "Harpers, to me! We have a True Soul to crush.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_CombatTaunts": "Jaheira combat taunts",
            "AD_PlayersAttackJaheira": "Jaheira calls all of the Harpers in the Haven to fight if you choose to attack them as part of the Entering Haven situation"
          }
        },
        "hav_lonelover": {
          "scenario_name": "hav_lonelover",
          "session_sequence": [
            "Reunited",
            "Danis"
          ],
          "paths": {
            "Reunited": [
              "Reunited_31",
              "Reunited_10",
              "Reunited_40",
              "Reunited_20",
              "Reunited_22",
              "Reunited_19",
              "Reunited_8",
              "Reunited_13",
              "Reunited_15",
              "Reunited_35"
            ],
            "Danis": [
              "Danis_6",
              "Danis_9"
            ]
          },
          "node_data": {
            "Reunited": [
              {
                "id": "Reunited_31",
                "speaker": "Bex",
                "text": "You're all right. My gods, you're all right!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "21",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Danis and Bex facing each other"
              },
              {
                "id": "Reunited_10",
                "speaker": "Danis",
                "text": "Come here, darling.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "HAV_LoneLover_Event_ReunionDone"
                ],
                "goto": "",
                "link": "21",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Danis and Bex embrace completely. They are so fckn happy to be reunited after Danis was taken to MOO. They end their hug and gaze into each others' eyes at the end of the node"
              },
              {
                "id": "Reunited_40",
                "speaker": "",
                "text": "",
                "node_type": "visualstate",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "21",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Reunited_20",
                "speaker": "Player",
                "text": "A beautiful sight, and all thanks to me.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "21",
                "is_end": false,
                "approval": [
                  "Lae'zel 1",
                  "Gale 1",
                  "Shadowheart 1",
                  "Astarion 1",
                  "Karlach 1",
                  "Wyll 1",
                  "Minthara 1",
                  "Halsin 1"
                ],
                "context": ""
              },
              {
                "id": "Reunited_22",
                "speaker": "Danis",
                "text": "Credit where it's due - Bex, this is the one who helped me and the others escape.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "21",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: \"Credit where it's due\" turns to player\n\"Bex' - Danis places hand on Bex's shoulder and looks at her\n\"This is the one who helped me\" alternates between player and Bex to make introductions\rNodeContext: With a chuckle, super happy and amused by the player even though player's being a prick"
              },
              {
                "id": "Reunited_19",
                "speaker": "Bex",
                "text": "This isn't the first time you've helped us - saved our lives, really. Why?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "21",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Bex breaks away and steps toward player, looks at them closely."
              },
              {
                "id": "Reunited_8",
                "speaker": "",
                "text": "",
                "node_type": "alias",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "21",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Reunited_13",
                "speaker": "Player",
                "text": "I suppose it seemed pertinent.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Reunited_15",
                "speaker": "Bex",
                "text": "We'll take it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: With a smile, accepting the player's remote reason for helping them. She's sincere and grateful."
              },
              {
                "id": "Reunited_35",
                "speaker": "Danis",
                "text": "Thanks aren't enough, but we'll give them anyway. Every day, for the rest of our very long lives.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "HAV_LoneLover_State_HatesPlayer = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: With a twinkle in his eye. He's grateful to the player."
              }
            ],
            "Danis": [
              {
                "id": "Danis_6",
                "speaker": "Danis",
                "text": "Bex isn't easily offended, so gods know what you said to upset her so much.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_LoneLover_State_HatesPlayer"
                ],
                "setflags": [
                  "HAV_LoneLover_HasMet_DanisUpset"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: If the player really offended Bex earlier, Danis reacts. He's still grateful to the player, but wary now."
              },
              {
                "id": "Danis_9",
                "speaker": "Danis",
                "text": "After everything you've done for us, she'll come around eventually, I'm sure.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "Reunited": "Danis and Bex are reunited in the Last Light Inn after the player has saved Danis from being trapped in MOO. The two are ecstatic to see one another for the first time in a long time and very grateful to the player.",
            "Danis": "Danis' dialog in Haven after his rescue.He has made it safely to Haven after escaping Moonrise Towers and has been reunited with Bex, his partner, if she's alive, or is alone if she's not. If she's alive, the player witnessed a really cute reunion between them, and these dialogues cover Danis' followups to that conversation, as well as versions for if he's alone and for a few states in Haven. Not all states are covered since Danis doesn't care much about Ketheric"
          }
        },
        "hav_exitblessingreminder": {
          "scenario_name": "hav_exitblessingreminder",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "hav_harperguard": {
          "scenario_name": "hav_harperguard",
          "session_sequence": [
            "001",
            "002"
          ],
          "paths": {
            "001": [
              "001_0"
            ],
            "002": [
              "002_0"
            ]
          },
          "node_data": {
            "001": [
              {
                "id": "001_0",
                "speaker": "Harper Mijah",
                "text": "Glad you made it through the dark.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_HarperGuard_001_Protected_HasMet",
                  "HAV_Mood_State_Protected"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: Protected state. Barrier is On, nothing bad happened yet. Met.\rNodeContext: Sincere - you know what could have happened out there"
              }
            ],
            "002": [
              {
                "id": "002_0",
                "speaker": "Harper Bor",
                "text": "We might actually survive this.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_HarperGuard_002_HasMet_Freed",
                  "HAV_Mood_State_NightsongFreed"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: nervous, but hope is returning"
              }
            ]
          },
          "session_synopses": {
            "001": "Mijah is calm, cool and collected. Despite her young age Mijah has seen more than her fair share of fights. She is an excellent example of a Harper Veteran. This dialogue covers all main states in Haven.",
            "002": "Bor is a grizzled Harper veteran who treats all twists of fate with the same cheerful resignation."
          }
        },
        "hav_havenoutcasts": {
          "scenario_name": "hav_havenoutcasts",
          "session_sequence": [
            "AD_Combat_BarricadeRunners_Ranger",
            "AD_Combat_RoofWatcher_Caster",
            "AD_Combat_DockGuard_Ranger",
            "AD_Combat_EntranceGuards_Halfling_Melee_JaheiraDied"
          ],
          "paths": {
            "AD_Combat_BarricadeRunners_Ranger": [
              "AD_Combat_BarricadeRunners_Ranger_0"
            ],
            "AD_Combat_RoofWatcher_Caster": [
              "AD_Combat_RoofWatcher_Caster_0"
            ],
            "AD_Combat_DockGuard_Ranger": [
              "AD_Combat_DockGuard_Ranger_0"
            ],
            "AD_Combat_EntranceGuards_Halfling_Melee_JaheiraDied": [
              "AD_Combat_EntranceGuards_Halfling_Melee_JaheiraDied_0"
            ]
          },
          "node_data": {
            "AD_Combat_BarricadeRunners_Ranger": [
              {
                "id": "AD_Combat_BarricadeRunners_Ranger_0",
                "speaker": "Harper Antony",
                "text": "Pray to your gods!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Combat_RoofWatcher_Caster": [
              {
                "id": "AD_Combat_RoofWatcher_Caster_0",
                "speaker": "Harper Terradissia",
                "text": "Stay back!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Combat_DockGuard_Ranger": [
              {
                "id": "AD_Combat_DockGuard_Ranger_0",
                "speaker": "Harper Naysa",
                "text": "Got a blade with your name on it!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Combat_EntranceGuards_Halfling_Melee_JaheiraDied": [
              {
                "id": "AD_Combat_EntranceGuards_Halfling_Melee_JaheiraDied_0",
                "speaker": "Harper Callie",
                "text": "I'll not let you take anyone else from me!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_Combat_BarricadeRunners_Ranger": "Combat AD",
            "AD_Combat_RoofWatcher_Caster": "Combat AD",
            "AD_Combat_DockGuard_Ranger": "Combat AD",
            "AD_Combat_EntranceGuards_Halfling_Melee_JaheiraDied": "Combat AD"
          }
        },
        "hav_nightsong": {
          "scenario_name": "hav_nightsong",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "hav_wrootrequest": {
          "scenario_name": "hav_wrootrequest",
          "session_sequence": [
            "Reunion"
          ],
          "paths": {
            "Reunion": [
              "Reunion_12",
              "Reunion_67",
              "Reunion_1",
              "Reunion_61",
              "Reunion_30",
              "Reunion_34",
              "Reunion_72",
              "Reunion_76",
              "24",
              "NODE_NOT_FOUND"
            ]
          },
          "node_data": {
            "Reunion": [
              {
                "id": "Reunion_12",
                "speaker": "Barcus Wroot",
                "text": "Wulbren!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "HAV_WrootRequest_Event_TalkedToWulbrenInHaven",
                  "HAV_WrootRequest_State_ReunionDone"
                ],
                "goto": "",
                "link": "24",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Reunion_67",
                "speaker": "Wulbren Bongle",
                "text": "Ah. I'd heard you might be about. How the devil did you get stuck here, Barcus?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "24",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Reunion_1",
                "speaker": "Barcus Wroot",
                "text": "I'm not stuck. I came to find you, of course.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "24",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Faux chagrin but it's really happy to see Wulbren"
              },
              {
                "id": "Reunion_61",
                "speaker": "Wulbren Bongle",
                "text": "Why would you do a foolish thing like that? Really, Barcus.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "24",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: 'Really' in kind of sarcastic disbelief that Barcus would annoy him like this."
              },
              {
                "id": "Reunion_30",
                "speaker": "Barcus Wroot",
                "text": "Unfortunately for me, you're my friend. Rescuing you from mortal peril is my right.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "24",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Reunion_34",
                "speaker": "Wulbren Bongle",
                "text": "But you didn't rescue me, did you? I rescued myself, with the aid of this - helper.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "24",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Wulbren waves a hand dismissively, indicating the player on 'helper'\rNodeContext: 'Helper' applies to the player. Wulbren is being dismissive of the player's ocntributions to his escape."
              },
              {
                "id": "Reunion_72",
                "speaker": "Barcus Wroot",
                "text": "Ah - it's you! I should've guessed. Thank you very much for your help finding Wulbren!",
                "node_type": "normal",
                "checkflags": [
                  "HAV_SavingPrisoners_UnfortunateGnome_HasMet = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "24",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Reunion_76",
                "speaker": "Wulbren Bongle",
                "text": "You don't belong here, Barcus. Soon as the way is clear, pack up and head to Baldur's Gate.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_Mood_State_NightsongFreed = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "24",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "24",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ]
          },
          "session_synopses": {
            "Reunion": "Barcus runs up to Wulbren in Haven after Wulbren is released from MOO. This is the culmination of everything he's been working for for the whole game and is so excited to see his friend - and find out what the deal wis with the runepowder plot. Barcus is swiftly rebuked by Wulbren and left disappointed but trying to save face."
          }
        },
        "hav_cursedfist": {
          "scenario_name": "hav_cursedfist",
          "session_sequence": [
            "AD_CursedFistSinging"
          ],
          "paths": {
            "AD_CursedFistSinging": [
              "AD_CursedFistSinging_5",
              "AD_CursedFistSinging_3",
              "AD_CursedFistSinging_6"
            ]
          },
          "node_data": {
            "AD_CursedFistSinging": [
              {
                "id": "AD_CursedFistSinging_5",
                "speaker": "Art Cullagh",
                "text": "Mm, mm, Thaniel and me are<br>Climb, climb, climbing up a tree and",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "d6df8edb-ac4b-e1d2-794b-6bfd00757cbf_A"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: gently singing this song while sleeping"
              },
              {
                "id": "AD_CursedFistSinging_3",
                "speaker": "Art Cullagh",
                "text": "We, we see what we see and<br>Do just what we please, together,<br>Waiting for the sun, forever.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: gently singing this song while sleeping"
              },
              {
                "id": "AD_CursedFistSinging_6",
                "speaker": "Art Cullagh",
                "text": "We see shadows, they get darker,<br>But our hiding place is brighter.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: gently singing this song while sleeping"
              }
            ]
          },
          "session_synopses": {
            "AD_CursedFistSinging": "Art Cullagh is unconscious after being pulled out of the shadowfell. He is in a deep slumber and quietly sings this to himself. Eerie and breathy."
          }
        },
        "hav_backupleader": {
          "scenario_name": "hav_backupleader",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "34",
              "71",
              "85",
              "29",
              "35",
              "88",
              "95",
              "51",
              "78",
              "55",
              "90",
              "42",
              "24",
              "25",
              "32",
              "3",
              "45"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "34",
                "speaker": "Cerys",
                "text": "Thought you'd be ten yards tall, the way Zevlor spoke of you.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_TieflingSurvivors_State_ZevlorWasLeader"
                ],
                "setflags": [
                  "HAV_BackupLeader_HasMet"
                ],
                "goto": "",
                "link": "13",
                "is_end": false,
                "approval": [],
                "context": "InternalNodeContext: Protected state. Barrier is On, nothing bad happened yet. Met.\rNodeContext: Blunt, eyeing us up (friendly, not unimpressed - but muted due to circumstances)"
              },
              {
                "id": "71",
                "speaker": "Cerys",
                "text": "Cerys. Scout. Seems we missed one another at the grove, but the others told me how you helped us.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "13",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "85",
                "speaker": "Cerys",
                "text": "A pity. You pulled them from one death-trap only for me to land them in this one.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "13",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Sighing, looking around at the inn. She's exhausted and guilty in equal measure."
              },
              {
                "id": "29",
                "speaker": "Player",
                "text": "The inn is old, but 'death-trap' is a bit much.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "HAV_SavingPrisoners_Knows_CapturedTieflings"
                ],
                "goto": "",
                "link": "88",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "35",
                "speaker": "Cerys",
                "text": "Glad you've kept your humour. The others could use it - what's left of us.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "88",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Smiling at our joke - less at the content than the fact we can joke at all."
              },
              {
                "id": "88",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "95",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "95",
                "speaker": "Cerys",
                "text": "Aye, and more than half the others with him.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "98",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "51",
                "speaker": "Cerys",
                "text": "We were ambushed out in the cursed lands - cultists of this Absolute. Likely we should have surrendered, but...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "HAV_SavingPrisoners_Knows_CapturedTieflings"
                ],
                "goto": "",
                "link": "78",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "78",
                "speaker": "Cerys",
                "text": "They were toying with us. Making examples. And we'd had enough of taking it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "98",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "55",
                "speaker": "Cerys",
                "text": "Those of us who cut free just kept running 'til we found this place. The others... maybe the cult got them. Maybe the curse.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "98",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Shrugging, helpless. It's not that she doesn't care what happened to them, but she's exhausted and knows there's little she can do"
              },
              {
                "id": "90",
                "speaker": "Player",
                "text": "What are you doing out here to begin with? You were bound for Baldur's Gate.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "98",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "42",
                "speaker": "Cerys",
                "text": "This army of the Absolute is growing, and flowing towards Moonrise. There's worse than goblins on the roads now.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "GLO_Absolute_Knows_MoonriseTowers"
                ],
                "goto": "",
                "link": "98",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Ominous, frustrated. They met much more resistance than she imagined"
              },
              {
                "id": "24",
                "speaker": "Cerys",
                "text": "I thought we might pass unnoticed along the fringes of this place. Escape the owlbear by hiding in its shadow, so to speak.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "98",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "25",
                "speaker": "Cerys",
                "text": "You can see exactly how well that went.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "98",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Making light of her own foolish plan. Not jokey, just tired - her failure is self-evident"
              },
              {
                "id": "32",
                "speaker": "Player",
                "text": "Sounds like you made a right mess of things.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Astarion 1",
                  "Gale -1",
                  "Karlach -1",
                  "Lae'zel 1",
                  "Shadowheart 1",
                  "Minthara 1",
                  "Wyll -1",
                  "Halsin -1"
                ],
                "context": ""
              },
              {
                "id": "3",
                "speaker": "Cerys",
                "text": "Aye, I did. Maybe you'd have been the one to save us all, if you'd been there.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: No pretense - she openly accepts she abandoned some people, but has to be pragmatic."
              },
              {
                "id": "45",
                "speaker": "Cerys",
                "text": "Or maybe you'd be missing along with the rest.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Stark - not trying to provoke or insult us, just stating facts"
              }
            ]
          },
          "session_synopses": {
            "": "Cerys, a tiefling scout, is now present in Last Light along with the others who evaded capture by the cultists. She has reluctantly assumed the role of leader in Zevlor's absence (assuming she hadn't already). She's exhausted by the responisibility but still capable of a little gallows humour."
          }
        },
        "hav_ad": {
          "scenario_name": "hav_ad",
          "session_sequence": [
            "Combat_FlamingFist_006",
            "Combat_FlamingFist_001_DesireDied",
            "Combat_FlamingFist_003"
          ],
          "paths": {
            "Combat_FlamingFist_006": [
              "Combat_FlamingFist_006_0"
            ],
            "Combat_FlamingFist_001_DesireDied": [
              "Combat_FlamingFist_001_DesireDied_0"
            ],
            "Combat_FlamingFist_003": [
              "Combat_FlamingFist_003_0"
            ]
          },
          "node_data": {
            "Combat_FlamingFist_006": [
              {
                "id": "Combat_FlamingFist_006_0",
                "speaker": "Fist Cyril",
                "text": "Come at me, you freaks!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Combat_FlamingFist_001_DesireDied": [
              {
                "id": "Combat_FlamingFist_001_DesireDied_0",
                "speaker": "Fist Thadwick",
                "text": "Florrick! You bastards.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Combat_FlamingFist_003": [
              {
                "id": "Combat_FlamingFist_003_0",
                "speaker": "Fist Rahir",
                "text": "Stand your ground, Fists!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "Combat_FlamingFist_006": "Combat AD",
            "Combat_FlamingFist_001_DesireDied": "Combat AD",
            "Combat_FlamingFist_003": "Combat AD"
          }
        },
        "hav_haven": {
          "scenario_name": "hav_haven",
          "session_sequence": [
            "AD_Jaheira_SiegeCombat_000"
          ],
          "paths": {
            "AD_Jaheira_SiegeCombat_000": [
              "AD_Jaheira_SiegeCombat_000_0"
            ]
          },
          "node_data": {
            "AD_Jaheira_SiegeCombat_000": [
              {
                "id": "AD_Jaheira_SiegeCombat_000_0",
                "speaker": "Jaheira",
                "text": "This fight is winnable. Do not stop!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_Jaheira_SiegeCombat_000": "Combat AD"
          }
        },
        "hav_ngb": {
          "scenario_name": "hav_ngb",
          "session_sequence": [
            "EnteringHaven_Trespassing"
          ],
          "paths": {
            "EnteringHaven_Trespassing": [
              "EnteringHaven_Trespassing_0"
            ]
          },
          "node_data": {
            "EnteringHaven_Trespassing": [
              {
                "id": "EnteringHaven_Trespassing_0",
                "speaker": "Narrator",
                "text": "*You haven't got permission to remain here; now you'll need to defend yourself.*",
                "node_type": "normal",
                "checkflags": [
                  "GLO_Jaheira_State_Defeated"
                ],
                "setflags": [
                  "TemporaryHostilityAfterDialog"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "EnteringHaven_Trespassing": "A player got spotted by an NPC as they were trespassing without Jaheira's premission in Haven."
          }
        },
        "hav_harperscouts": {
          "scenario_name": "hav_harperscouts",
          "session_sequence": [
            "AD_Arrival_Harper_001",
            "Harper_003",
            "Harper_001"
          ],
          "paths": {
            "AD_Arrival_Harper_001": [
              "AD_Arrival_Harper_001_0"
            ],
            "Harper_003": [
              "Harper_003_0"
            ],
            "Harper_001": [
              "Harper_001_18",
              "Harper_001_55",
              "Harper_001_24",
              "Harper_001_36",
              "Harper_001_13",
              "Harper_001_52",
              "Harper_001_26",
              "Harper_001_28",
              "Harper_001_51",
              "Harper_001_16",
              "Harper_001_35",
              "Harper_001_20"
            ]
          },
          "node_data": {
            "AD_Arrival_Harper_001": [
              {
                "id": "AD_Arrival_Harper_001_0",
                "speaker": "Harper Meygan",
                "text": "We made it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Harper_003": [
              {
                "id": "Harper_003_0",
                "speaker": "Harper Karrow",
                "text": "We lost a good one today. Yonas. He was green as they come, poor kid.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_HarperScouts_ShadowCreatures_HasMet = False",
                  "HAV_HarperScouts_Harper_003_HasMet_Protected = False"
                ],
                "setflags": [
                  "HAV_HarperScouts_Harper_003_HasMet_Protected"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: Protected state. Barrier is On, nothing bad happened yet. Not Met.\rNodeContext: Reflecting on a dead soldier"
              }
            ],
            "Harper_001": [
              {
                "id": "Harper_001_18",
                "speaker": "Harper Meygan",
                "text": "He was joking, this morning. Yonas, I mean.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_General_HarperScout_001_HasMet = False"
                ],
                "setflags": [
                  "HAV_General_HarperScout_001_HasMet"
                ],
                "goto": "",
                "link": "36",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: The player walks up to stand behind Meygan, but she doesn't look at them.\rInternalNodeContext: Protected state. Barrier is On, nothing bad happened yet."
              },
              {
                "id": "Harper_001_55",
                "speaker": "Player",
                "text": "Is he... gone?",
                "node_type": "normal",
                "checkflags": [
                  "SCL_HarperScouts_ShadowCreatures_HasMet = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "11",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Harper_001_24",
                "speaker": "Harper Meygan",
                "text": "There was an ambush in the dark. The shadows dragged him away...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "11",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Harper_001_36",
                "speaker": "Harper Meygan",
                "text": "He was always joking. Said it was good for morale, but he just liked seeing people laugh.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "11",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Small pause before the line."
              },
              {
                "id": "Harper_001_13",
                "speaker": "Harper Meygan",
                "text": "He was a good Harper. A good friend...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "HAV_HarperScouts_Event_SawYonasFuneral"
                ],
                "goto": "",
                "link": "11",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Turns to face player after finishing this line"
              },
              {
                "id": "Harper_001_52",
                "speaker": "",
                "text": "",
                "node_type": "visualstate",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "11",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Harper_001_26",
                "speaker": "Player",
                "text": "Sounds like you were close.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "11",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Harper_001_28",
                "speaker": "Harper Meygan",
                "text": "We were. Comrades in arms.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "11",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Harper_001_51",
                "speaker": "Harper Meygan",
                "text": "I thought we could have been something more, one day, but...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "11",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Chokes up a little. Swallows back her tears."
              },
              {
                "id": "Harper_001_16",
                "speaker": "Harper Meygan",
                "text": "...too late now.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "11",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Quiet, holding back tears"
              },
              {
                "id": "Harper_001_35",
                "speaker": "Player",
                "text": "Hey - it will be all right.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "11",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Harper_001_20",
                "speaker": "Harper Meygan",
                "text": "No, he... Sorry, I - I'd like to be alone.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_Arrival_Harper_001": "Single-shot AD when the Harpers arrive back into Haven from the ambush in the shadow-curse where one of their own, Yonas, is killed by shadow creatures. Relieved but sad.",
            "Harper_003": "Harper Scout's default dialogue through several states in Haven.",
            "Harper_001": "Dialogue with Meygan in Last Light. She is standing before an altar, mourning Yonas' death. She might give us something if we give her his sword. Despite changes in the state of the grove, she usually reverts to her normal dialogue/ state of sadness as she was close to Yonas and that's more to the front of her mind than stuff like Ketheric"
          }
        },
        "hav_siege": {
          "scenario_name": "hav_siege",
          "session_sequence": [
            "Outro",
            "Intro"
          ],
          "paths": {
            "Outro": [
              "Outro_9",
              "Outro_7",
              "Outro_50",
              "Outro_6",
              "Outro_8",
              "Outro_4",
              "Outro_5",
              "Outro_22",
              "Outro_46",
              "Outro_44",
              "Outro_54"
            ],
            "Intro": [
              "Intro_76",
              "Intro_90",
              "Intro_109",
              "Intro_44",
              "5",
              "NODE_NOT_FOUND"
            ]
          },
          "node_data": {
            "Outro": [
              {
                "id": "Outro_9",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "23",
                "is_end": false,
                "approval": [],
                "context": "InternalNodeContext: Player and Jaheira gather in Haven yard after combat."
              },
              {
                "id": "Outro_7",
                "speaker": "Jaheira",
                "text": "It's all over. They're all gone. My brave ones, my friends, my Harpers.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "23",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Outro_50",
                "speaker": "Jaheira",
                "text": "I led them here - to this.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "23",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: (Cine) On ‘to this' she waves her arm signalling the carnage all around."
              },
              {
                "id": "Outro_6",
                "speaker": "Player",
                "text": "Get a grip. This isn't over yet.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "22",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Outro_8",
                "speaker": "Jaheira",
                "text": "After such carnage you'd persist? Sometimes there's folly in such courage.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Outro_4",
                "speaker": "Player",
                "text": "Then by all means I'm a fool. But I'm not giving up.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Outro_5",
                "speaker": "Jaheira",
                "text": "Perhaps it's right that you're not. You're twice blessed after all: by Isobel and by your artefact. But as for myself, I don't see another option than to make a desperate dash back to Baldur's Gate.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Outro_22",
                "speaker": "Jaheira",
                "text": "Chances are slim I'd survive the journey back, but if I can warn the dukes an army of Absolutists is on the march, perhaps the city still stands a fighting chance.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Outro_46",
                "speaker": "Player",
                "text": "In that case, good luck and godsspeed.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "HAV_Siege_State_RefusedJaheira"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Outro_44",
                "speaker": "Jaheira",
                "text": "Thank you, truly. May you succeed where I have failed. You are the stuff of legends now. Pray that I live to tell your tale.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Outro_54",
                "speaker": "Jaheira",
                "text": "Farewell.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Intro": [
              {
                "id": "Intro_76",
                "speaker": "",
                "text": "",
                "node_type": "alias",
                "checkflags": [
                  "HAV_EnteringHaven_State_GainedAccess",
                  "HAV_Siege_State_BlockPlayerFromTeleport = False",
                  "HAV_General_State_IsHostileToPlayers",
                  "c6b28a2d-4095-40fc-bed0-de222e6af105"
                ],
                "setflags": [],
                "goto": "",
                "link": "78",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Intro_90",
                "speaker": "Jaheira",
                "text": "Do you understand what you've done? Without Isobel, everyone in this inn is as good as dead!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "HAV_Siege_Intro_DoSetup",
                  "HAV_Siege_Intro_JaheiraAggroToPlayer"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Intro_109",
                "speaker": "Jaheira",
                "text": "I trusted you. Silvanus forgive me, I let you in.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Intro_44",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "5",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "5",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ]
          },
          "session_synopses": {
            "Outro": "After the battle against the shadows is over, we speak with Jaheira again. Either she hates us because she knows we killed Isobel, or she's contemplative in the aftermath of the battle, and we can have her join our camp.",
            "Intro": "Huge cinematic showing start of the Shadow Siege. Jaheira assesses the situation with the players, urgently, as darkness takes over the inn. Then a legion of shadows tear the guards apart as everyone else flees, and the party emerges to fight."
          }
        },
        "hav_pad": {
          "scenario_name": "hav_pad",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "hav_ravengard": {
          "scenario_name": "hav_ravengard",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "hav_devilishox": {
          "scenario_name": "hav_devilishox",
          "session_sequence": [
            "PAD_DeathReaction"
          ],
          "paths": {
            "PAD_DeathReaction": [
              "PAD_DeathReaction_0",
              "PAD_DeathReaction_2"
            ]
          },
          "node_data": {
            "PAD_DeathReaction": [
              {
                "id": "PAD_DeathReaction_0",
                "speaker": "Player",
                "text": "Perhaps next time we shouldn't poke the mysterious ox.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PAD_DeathReaction_2",
                "speaker": "Player",
                "text": "Perhaps. But that's certainly a fight I won't soon forget.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_DeathReaction": "Player has fought and defeated an infernal creature that was masqeurading as an ox."
          }
        },
        "hav_tieflingsurvivors": {
          "scenario_name": "hav_tieflingsurvivors",
          "session_sequence": [
            "AD_PlayerFoundTreasure_UmisComment",
            "KidsAfterGhoulAttack",
            "Mirkon",
            "Mattis"
          ],
          "paths": {
            "AD_PlayerFoundTreasure_UmisComment": [
              "AD_PlayerFoundTreasure_UmisComment_0"
            ],
            "KidsAfterGhoulAttack": [
              "KidsAfterGhoulAttack_16",
              "KidsAfterGhoulAttack_17",
              "KidsAfterGhoulAttack_3",
              "KidsAfterGhoulAttack_1",
              "KidsAfterGhoulAttack_11",
              "KidsAfterGhoulAttack_10",
              "KidsAfterGhoulAttack_4",
              "KidsAfterGhoulAttack_5",
              "KidsAfterGhoulAttack_2",
              "KidsAfterGhoulAttack_9"
            ],
            "Mirkon": [
              "Mirkon_0"
            ],
            "Mattis": [
              "Mattis_0",
              "Mattis_23",
              "Mattis_66",
              "Mattis_38",
              "Mattis_81",
              "Mattis_87"
            ]
          },
          "node_data": {
            "AD_PlayerFoundTreasure_UmisComment": [
              {
                "id": "AD_PlayerFoundTreasure_UmisComment_0",
                "speaker": "Umi",
                "text": "Aw, I should've checked there!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "KidsAfterGhoulAttack": [
              {
                "id": "KidsAfterGhoulAttack_16",
                "speaker": "Ide",
                "text": "Mol would do the same for any of us. You know it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Kids are talking amongst themselves. \rNodeContext: Determined. Ide would die for Mol. Arguing everyone should leave and save her."
              },
              {
                "id": "KidsAfterGhoulAttack_17",
                "speaker": "Umi",
                "text": "But how do we get into Moonrise? We can't fight those shadow things.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Kids are talking amongst themselves. \rNodeContext: Afraid. Trying to be the voice of reason."
              },
              {
                "id": "KidsAfterGhoulAttack_3",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "HAV_TieflingSurvivors_Mirkon_StartInclusion"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KidsAfterGhoulAttack_1",
                "speaker": "Mirkon",
                "text": "We could! I beat up those harpies and they're way scarier than shadows.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Kids are talking amongst themselves. \rNodeContext: Surprisingly confident. This is Mirkon's moment to be an adventurer he'd always dreamed. (he didn't actually beat up the harpies)"
              },
              {
                "id": "KidsAfterGhoulAttack_11",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "HAV_TieflingSurvivors_Mirkon_EndInclusion"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KidsAfterGhoulAttack_10",
                "speaker": "Mattis",
                "text": "You know what Mol would hate more than anything? Bad things happening to us.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Kids are talking amongst themselves. \rNodeContext: Trying to be smart and calculated."
              },
              {
                "id": "KidsAfterGhoulAttack_4",
                "speaker": "Mattis",
                "text": "You've seen what's out there. We wouldn't stand a chance.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KidsAfterGhoulAttack_5",
                "speaker": "Player",
                "text": "She's probably dead already.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Karlach -1",
                  "Gale -1",
                  "Wyll -1",
                  "Lae'zel 1",
                  "Astarion 1",
                  "Halsin -1",
                  "Minthara 1"
                ],
                "context": ""
              },
              {
                "id": "KidsAfterGhoulAttack_2",
                "speaker": "Mattis",
                "text": "You don't know what you're talking about - Mol's a survivor.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "HAV_TieflingSurvivors_State_DidNotPromiseToSaveMol"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KidsAfterGhoulAttack_9",
                "speaker": "Ide",
                "text": "We'll see her again. She's twice the hero you'll ever be.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Mirkon": [
              {
                "id": "Mirkon_0",
                "speaker": "Mirkon",
                "text": "Once Ketheric is gone, we can get out of here. I can't wait.<br>",
                "node_type": "normal",
                "checkflags": [
                  "HAV_Mirkon_NightsongFreed_HasMet",
                  "HAV_Mood_State_NightsongFreed"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: Nightsong arrived to Haven/dead, people know that Ketheric can be killed\rNodeContext: This is the first bit of hope you've felt in a while. Thinking of the outside and travelling without fear"
              }
            ],
            "Mattis": [
              {
                "id": "Mattis_0",
                "speaker": "Mattis",
                "text": "I can't wait to get outta this dump and never come back. Grab what you can before we scarper, yeah?",
                "node_type": "normal",
                "checkflags": [
                  "HAV_SavingPrisoners_HasMet_MattisPostRescue",
                  "MOO_NecroLab_State_KidsRescued_DEPRECATED"
                ],
                "setflags": [],
                "goto": "",
                "link": "23",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Sigh at the beginning fo the sentence. Excited ot get out. Sick of the place."
              },
              {
                "id": "Mattis_23",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "Mattis_66",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Mattis_66",
                "speaker": "Mattis",
                "text": "Check it out - we've gone legitimate, and Mol put me in charge. Whaddya need?",
                "node_type": "normal",
                "checkflags": [
                  "HAV_TieflingSurvivors_HasMet_Mattis = False"
                ],
                "setflags": [
                  "HAV_TieflingSurvivors_HasMet_Mattis"
                ],
                "goto": "",
                "link": "9",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Proud of himself."
              },
              {
                "id": "Mattis_38",
                "speaker": "Player",
                "text": "Let me see what you have.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Mattis_81",
                "speaker": "",
                "text": "",
                "node_type": "trade",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Mattis_87",
                "speaker": "Mattis",
                "text": "Pleasure doing business with you.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Very dodger oliver twist, hamming it up a bit"
              }
            ]
          },
          "session_synopses": {
            "AD_PlayerFoundTreasure_UmisComment": "AD in which Umi sees the player finding a treasure. Disappointed because he'd been looking for a cool treasure and had found nothing.",
            "KidsAfterGhoulAttack": "Group dialogs for Tiefling kids when Mol is kidnapped. Ide, Mattis, Umi (and Mirkon, if he survived the harpy attack in the grove) are planning on sneaking out and heading to Moonrise to rescue their 'boss', Mol. The player can offer to go in their place, or encourage them to go (if they go, they die).",
            "Mirkon": "Mirkon is the boy who survived the Harpies trying to lull him into the water in the grove. He is a timid boy who does his best to be brave, and dreams of being an adventurer one day. This is his dialogue in Haven, which covers the main states of the kidnapping, losing Isobel, reporting that his fellow tieflings died, when the player returns them and so on.",
            "Mattis": "Dialog with Mattis in Haven. He's a young tiefling boy who dreams of opening up his own shop in baldur's gate. He's delighted to be given the responsibility of the 'shop' in the Last Light Inn and does his best to sound more 'grown-up' and 'formal'. But he fumbles it a bit.This is his main dialogue in Haven and covers all major states, Isobel and Mol kidnapped, the Inn attacked, tieflings dead, etc."
          }
        },
        "hav_lastlightox000": {
          "scenario_name": "hav_lastlightox000",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "0",
              "15",
              "5"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "0",
                "speaker": "Ox",
                "text": "Glad to see you made it. I am, indeed I am.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_LastLightOx000_HasMet_SpeakWithAnimals = False",
                  "PETPAL"
                ],
                "setflags": [
                  "HAV_LastLightOx000_HasMet_SpeakWithAnimals"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "15",
                "speaker": "Player",
                "text": "Glad to see you made it, too.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "5",
                "speaker": "Ox",
                "text": "I remember you from the grove with the druids. I hoped I'd see you again. And now I have.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "": "The player talks to an Ox. This is the same creature as S_DEN_Mule_001, Peter Hannah"
          }
        },
        "hav_misc": {
          "scenario_name": "hav_misc",
          "session_sequence": [
            "PAD_SeluneShrine"
          ],
          "paths": {
            "PAD_SeluneShrine": [
              "PAD_SeluneShrine_0",
              "PAD_SeluneShrine_3"
            ]
          },
          "node_data": {
            "PAD_SeluneShrine": [
              {
                "id": "PAD_SeluneShrine_0",
                "speaker": "Shadowheart",
                "text": "A Selûnite shrine, hidden away.",
                "node_type": "normal",
                "checkflags": [
                  "SHAR"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Arc - SH is loyal to shar"
              },
              {
                "id": "PAD_SeluneShrine_3",
                "speaker": "Player",
                "text": "Perhaps they had no choice but to hide.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_SeluneShrine": "Comment on the Selunite shrine at 35; 0; -694 in Haven."
          }
        },
        "hav_prodigylament": {
          "scenario_name": "hav_prodigylament",
          "session_sequence": [
            "AD_AngryBrother",
            "Rolan",
            "AD_RolanReturns",
            "Hologram",
            "Ide",
            "AD_AfterReunion",
            "AD_BeforeReunion",
            "AD_SisterWaitingAlone",
            "AD_SiblingsReturn",
            "PAD_HologramReaction",
            "Umi",
            "Brother",
            "AD_BartendingKids",
            "Sister"
          ],
          "paths": {
            "AD_AngryBrother": [
              "AD_AngryBrother_4",
              "AD_AngryBrother_5",
              "AD_AngryBrother_3"
            ],
            "Rolan": [
              "Rolan_52",
              "Rolan_56",
              "Rolan_37",
              "Rolan_72",
              "Rolan_15",
              "Rolan_6",
              "Rolan_10",
              "Rolan_64",
              "Rolan_18",
              "Rolan_39",
              "Rolan_118",
              "Rolan_71",
              "Rolan_100",
              "Rolan_28",
              "Rolan_85",
              "Rolan_110"
            ],
            "AD_RolanReturns": [
              "AD_RolanReturns_9",
              "AD_RolanReturns_1",
              "AD_RolanReturns_12",
              "AD_RolanReturns_0",
              "AD_RolanReturns_8"
            ],
            "Hologram": [
              "Hologram_1",
              "Hologram_2"
            ],
            "Ide": [
              "Ide_33",
              "Ide_24",
              "Ide_74",
              "Ide_31",
              "Ide_0",
              "Ide_95",
              "Ide_60",
              "Ide_63",
              "Ide_53",
              "Ide_38",
              "Ide_41",
              "Ide_94",
              "Ide_3",
              "Ide_32",
              "Ide_93",
              "Ide_59",
              "Ide_10",
              "Ide_2",
              "Ide_70"
            ],
            "AD_AfterReunion": [
              "AD_AfterReunion_26",
              "AD_AfterReunion_40",
              "AD_AfterReunion_29",
              "AD_AfterReunion_25"
            ],
            "AD_BeforeReunion": [
              "AD_BeforeReunion_4",
              "AD_BeforeReunion_17",
              "AD_BeforeReunion_14",
              "AD_BeforeReunion_18"
            ],
            "AD_SisterWaitingAlone": [
              "AD_SisterWaitingAlone_1",
              "AD_SisterWaitingAlone_4",
              "AD_SisterWaitingAlone_3"
            ],
            "AD_SiblingsReturn": [
              "AD_SiblingsReturn_4",
              "AD_SiblingsReturn_9",
              "AD_SiblingsReturn_1",
              "AD_SiblingsReturn_3"
            ],
            "PAD_HologramReaction": [
              "PAD_HologramReaction_0"
            ],
            "Umi": [
              "Umi_0"
            ],
            "Brother": [
              "Brother_0",
              "Brother_31",
              "Brother_21",
              "Brother_11",
              "Brother_13",
              "Brother_12"
            ],
            "AD_BartendingKids": [
              "AD_BartendingKids_13",
              "AD_BartendingKids_7",
              "AD_BartendingKids_16",
              "AD_BartendingKids_4"
            ],
            "Sister": [
              "Sister_16",
              "Sister_2",
              "Sister_29",
              "Sister_36",
              "Sister_23"
            ]
          },
          "node_data": {
            "AD_AngryBrother": [
              {
                "id": "AD_AngryBrother_4",
                "speaker": "Cal",
                "text": "Lia, I'm so sorry.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "29ddc96b-303b-373d-2b6f-37ae4e8d534b_A"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: upset, grieving his sister"
              },
              {
                "id": "AD_AngryBrother_5",
                "speaker": "Cal",
                "text": "Rolan's right - I should have done more, I should have saved you.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: upset, grieving his sister"
              },
              {
                "id": "AD_AngryBrother_3",
                "speaker": "Cal",
                "text": "I'm worthless.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: upset, grieving his sister"
              }
            ],
            "Rolan": [
              {
                "id": "Rolan_52",
                "speaker": "Rolan",
                "text": "...There's another bottle of Arabellan Dry back there. Put it on the bar, then piss off and leave me alone.",
                "node_type": "normal",
                "checkflags": [
                  "7fd98b6e-11d5-28e0-bc67-bb0925834fa3",
                  "8a4a686d-6c47-411f-a0b3-d79ff33e2922"
                ],
                "setflags": [
                  "HAV_ProdigyLament_HasMet_Rolan",
                  "HAV_ProdigyLament_Event_Intro",
                  "HAV_ProdigyLament_Knows_RolanAlive"
                ],
                "goto": "",
                "link": "87",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Looking at Umi\rNodeContext: Slurring slightly, a little bit drunk and irritable - talking to Ide, a tiefling child behind the bar"
              },
              {
                "id": "Rolan_56",
                "speaker": "Ide",
                "text": "Jaheira said we should serve drinks, but that we shouldn't serve drunks.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "87",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: cheerful, playing the part of a bartender - it's a game to him and this is a line he's learned"
              },
              {
                "id": "Rolan_37",
                "speaker": "Rolan",
                "text": "Jaheira didn't save your ragged little tail from the cultists - I did.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "87",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: venemous - bitter, addressed to Umi"
              },
              {
                "id": "Rolan_72",
                "speaker": "Player",
                "text": "You saved the kid? Sounds like you deserve a drink.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_AlfiraTale_Knows_SavedByRolan = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "87",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Rolan_15",
                "speaker": "Rolan",
                "text": "Oh, it's you. I'd recognise that self-righteous tone anywhere.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "87",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Turns to face player after noticing them, and sneers at them"
              },
              {
                "id": "Rolan_6",
                "speaker": "",
                "text": "",
                "node_type": "alias",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "87",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Rolan_10",
                "speaker": "Rolan",
                "text": "If you're here to save the day again, you're a little late this time.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "25",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Sneering, bitter"
              },
              {
                "id": "Rolan_64",
                "speaker": "Player",
                "text": "What's wrong? Can I help?",
                "node_type": "normal",
                "checkflags": [
                  "HAV_AlfiraTale_Knows_SavedByRolan = False",
                  "HAV_SavingPrisoners_Knows_CapturedTieflings = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "25",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Rolan_18",
                "speaker": "Rolan",
                "text": "Oh, sod off. I'm only here because you 'helped' me and my family.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "25",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Heavy sarcasm on 'helped' - not quite doing airquotes but that's the tone"
              },
              {
                "id": "Rolan_39",
                "speaker": "Rolan",
                "text": "I was ready to cut and run back at the grove, but you had other ideas.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "25",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Rolan_118",
                "speaker": "Rolan",
                "text": "Cal and Lia were taken in by your crap. You convinced them to play hero, and now they're gone.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "HAV_ProdigyLament_State_ToldStory"
                ],
                "goto": "",
                "link": "25",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Rolan_71",
                "speaker": "Player",
                "text": "Do you know where they are?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "HAV_ProdigyLament_Knows_SiblingsInMoonrise"
                ],
                "goto": "",
                "link": "25",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Rolan_100",
                "speaker": "Rolan",
                "text": "Dead for all I know. Or in the cult's tower with the others who were taken.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Rolan_28",
                "speaker": "Player",
                "text": "They're better off dead than in the cult's hands.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Astarion 1",
                  "Lae'zel 1",
                  "Wyll -1",
                  "Shadowheart 1",
                  "Gale -1",
                  "Karlach -1",
                  "Minthara 1",
                  "Halsin -1"
                ],
                "context": ""
              },
              {
                "id": "Rolan_85",
                "speaker": "Rolan",
                "text": "Bullshit. If they're alive, I can save them.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Rolan_110",
                "speaker": "Rolan",
                "text": "You go save the world, or your own arse, or whatever it is you do. I'll fix this.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "CinematicNodeContext: Turns away, back to the bar when he's done talking"
              }
            ],
            "AD_RolanReturns": [
              {
                "id": "AD_RolanReturns_9",
                "speaker": "Rolan",
                "text": "Lia! Thank the gods.",
                "node_type": "normal",
                "checkflags": [
                  "25c1ac70-f65f-4869-8a74-eff5827d9cde = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: exuberant - just returned from a dark place to find your sister Lia, having thought she was lost"
              },
              {
                "id": "AD_RolanReturns_1",
                "speaker": "Lia",
                "text": "You arsehole, where have you been?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: sounds annoyed but actually just relieved"
              },
              {
                "id": "AD_RolanReturns_12",
                "speaker": "Rolan",
                "text": "Never mind me - where is Cal?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Talking about your brother, who you haven't seen in some time - you're about to find out he's dead"
              },
              {
                "id": "AD_RolanReturns_0",
                "speaker": "Rolan",
                "text": "Lia - answer me. Where is Cal?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: sees sister''s face and fears the worst. Accusatory in worry"
              },
              {
                "id": "AD_RolanReturns_8",
                "speaker": "Lia",
                "text": "Rolan, I'm sorry.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: sad and defeated"
              }
            ],
            "Hologram": [
              {
                "id": "Hologram_1",
                "speaker": "",
                "text": "Lia, Cal, if you see this... I'm dead. It's nothing to get upset about - it's simply the way life is.",
                "node_type": "normal",
                "checkflags": [
                  "GLO_Prodigy_State_PermaDefeated"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: voice thick with emotion at the thought of never seeing his siblings again, but he's trying to be no nonsense. Doesn't want them to grieve."
              },
              {
                "id": "Hologram_2",
                "speaker": "",
                "text": "Head to Baldur's Gate immediately. You'll both do excellently there, I have no doubt. And thank you for, well, you know.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: voice thick with emotion at the thought of never seeing his siblings again, but he's trying to be no nonsense. Doesn't want them to grieve."
              }
            ],
            "Ide": [
              {
                "id": "Ide_33",
                "speaker": "Ide",
                "text": "If this is about Rolan, go away.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "HAV_ProdigyLament_HasMet_Ide"
                ],
                "goto": "",
                "link": "95",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Looking away from player, avoiding eye contact\rNodeContext: Upset frustrated"
              },
              {
                "id": "Ide_24",
                "speaker": "Player",
                "text": "No need to snap at me.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "95",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ide_74",
                "speaker": "Ide",
                "text": "...Sorry. Rolan snapped too and I didn't like it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "95",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Sincere and downcast."
              },
              {
                "id": "Ide_31",
                "speaker": "Player",
                "text": "Rolan isn't very good with kids.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "70",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ide_0",
                "speaker": "Ide",
                "text": "He isn't very good with anyone. He yelled at me just because I told him not to drink anymore.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "70",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: subtle petulance and hurt."
              },
              {
                "id": "Ide_95",
                "speaker": "Ide",
                "text": "It was for his own good! He can barely stand up straight.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "70",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: your voice could be mistake for petulance but you're just hurt and frustrated."
              },
              {
                "id": "Ide_60",
                "speaker": "Player",
                "text": "I get it - you were trying to look after him.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "70",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ide_63",
                "speaker": "Ide",
                "text": "Yeah. He did save us, after all.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "70",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Kind of awkward and bashful about it"
              },
              {
                "id": "Ide_53",
                "speaker": "Ide",
                "text": "Anyway, it's his loss.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "70",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ide_38",
                "speaker": "Player",
                "text": "What do you mean, his loss?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "70",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ide_41",
                "speaker": "Ide",
                "text": "I found this book. Old, dusty, full of strange lettering. Pretty sure it's magic.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "70",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ide_94",
                "speaker": "Ide",
                "text": "I was gonna give it to Rolan so he could learn new spells, you know? Beats drinking 'til he forgets the ones he knows.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "HAV_ProdigyLament_Knows_AboutBook"
                ],
                "goto": "",
                "link": "70",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: a little downcast - you were trying to make a gesture and you feel it's been trodden on"
              },
              {
                "id": "Ide_3",
                "speaker": "Player",
                "text": "Can I have it?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "70",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ide_32",
                "speaker": "Ide",
                "text": "It's for Rolan.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "70",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: with attitude!"
              },
              {
                "id": "Ide_93",
                "speaker": "Player",
                "text": "If you give it to me, I'll make sure he gets it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "70",
                "is_end": false,
                "approval": [
                  "Shadowheart 1",
                  "Minthara 1",
                  "Karlach -1",
                  "Astarion 1",
                  "Gale 1",
                  "Halsin -1",
                  "Wyll -1"
                ],
                "context": ""
              },
              {
                "id": "Ide_59",
                "speaker": "",
                "text": "True",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "70",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ide_10",
                "speaker": "Ide",
                "text": "Fine. Here, you ... huh, where is it?",
                "node_type": "normal",
                "checkflags": [
                  "HAV_ProdigyLament_State_HasBook = False"
                ],
                "setflags": [
                  "HAV_ProdigyLament_Event_BookGivenAway"
                ],
                "goto": "",
                "link": "70",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Reaching behind back for the book to find it missing. Looking around - confused. \rNodeContext: You can't find the book on your person. You're looking around confused."
              },
              {
                "id": "Ide_2",
                "speaker": "Ide",
                "text": "I musta dropped it. Well, you can look for it if you want.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Nonchalant - it's not your problem."
              },
              {
                "id": "Ide_70",
                "speaker": "Ide",
                "text": "Anyway, I'm sick of talking. You can go now. Bye-bye.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Shrug and nonchalant as you end the convo"
              }
            ],
            "AD_AfterReunion": [
              {
                "id": "AD_AfterReunion_26",
                "speaker": "Cal",
                "text": "How did you even find this place?",
                "node_type": "normal",
                "checkflags": [
                  "1591cb60-9e65-980a-c49e-69f68b958a1d_A",
                  "8a4a686d-6c47-411f-a0b3-d79ff33e2922 = False"
                ],
                "setflags": [
                  "1591cb60-9e65-980a-c49e-69f68b958a1d_B"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: looking in wonder about last light inn"
              },
              {
                "id": "AD_AfterReunion_40",
                "speaker": "Rolan",
                "text": "Never mind that - do you need anything? Something to eat or drink, perhaps?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: concerned for his little brother"
              },
              {
                "id": "AD_AfterReunion_29",
                "speaker": "Cal",
                "text": "I'm fine. The bar looks cleared out, anyway.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: reassuring, curious about the bottles strewn about the bar"
              },
              {
                "id": "AD_AfterReunion_25",
                "speaker": "Rolan",
                "text": "...Yes, well, this place has been abandoned for some time.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: he drank the bar dry but is too ashamed to admit it. Looking away as answers"
              }
            ],
            "AD_BeforeReunion": [
              {
                "id": "AD_BeforeReunion_4",
                "speaker": "Lia",
                "text": "Gods, you smell like a brewery.",
                "node_type": "normal",
                "checkflags": [
                  "28259eb0-5f20-5094-45f1-3292253ae1ed_B"
                ],
                "setflags": [
                  "28259eb0-5f20-5094-45f1-3292253ae1ed_C"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: worried but mainly irritated"
              },
              {
                "id": "AD_BeforeReunion_17",
                "speaker": "Rolan",
                "text": "What does that have to do with anything?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: pissed off, doesn't like anyone being worried about him"
              },
              {
                "id": "AD_BeforeReunion_14",
                "speaker": "Lia",
                "text": "You're enough of an arse when you're sober, never mind drunk.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: knows she's adding fuel to the fire but is too mad not to"
              },
              {
                "id": "AD_BeforeReunion_18",
                "speaker": "Rolan",
                "text": "Oh, don't get all high and mighty with me, Lia.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_SisterWaitingAlone": [
              {
                "id": "AD_SisterWaitingAlone_1",
                "speaker": "Lia",
                "text": "What would Cal say? Heh. Probably to trust that Rolan knows what he's doing.",
                "node_type": "normal",
                "checkflags": [
                  "6d9043f1-e0c3-43de-a895-b87cae60e0c0_B"
                ],
                "setflags": [
                  "6d9043f1-e0c3-43de-a895-b87cae60e0c0_C"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_SisterWaitingAlone_4",
                "speaker": "Lia",
                "text": "Cal... what am I going to tell Rolan?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_SisterWaitingAlone_3",
                "speaker": "Lia",
                "text": "'Our little brother is dead, but hey I'm still here?' Gods.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_SiblingsReturn": [
              {
                "id": "AD_SiblingsReturn_4",
                "speaker": "Cal",
                "text": "Rolan! Rolan, thank the gods.",
                "node_type": "normal",
                "checkflags": [
                  "8a4a686d-6c47-411f-a0b3-d79ff33e2922 = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: relief as he sees his siblings just ahead of him"
              },
              {
                "id": "AD_SiblingsReturn_9",
                "speaker": "Rolan",
                "text": "Cal! Wretched gods, where have you been? Where's Lia?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: worried and concern"
              },
              {
                "id": "AD_SiblingsReturn_1",
                "speaker": "Rolan",
                "text": "Cal, answer me. Where is Lia?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: worried and concern. sees the look on siblings face andfears the worst"
              },
              {
                "id": "AD_SiblingsReturn_3",
                "speaker": "Cal",
                "text": "I'm so sorry, Rolan.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: upset and defeated"
              }
            ],
            "PAD_HologramReaction": [
              {
                "id": "PAD_HologramReaction_0",
                "speaker": "Player",
                "text": "He'll need help to survive those shadows. Only a fool would face them alone.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Umi": [
              {
                "id": "Umi_0",
                "speaker": "Umi",
                "text": "The sky looks so pretty with the light. Whoever it is must be good - they must be.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_Mood_State_NightsongFreed"
                ],
                "setflags": [
                  "HAV_Umi_NightsongFreed_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: awe and hope"
              }
            ],
            "Brother": [
              {
                "id": "Brother_0",
                "speaker": "Cal",
                "text": "When you told me about Rolan, I didn't believe you. But it's true...",
                "node_type": "normal",
                "checkflags": [
                  "HAV_ProdigyLament_Brother_RolanDead_HasMet = False",
                  "GLO_Prodigy_State_ToldSiblingsProdigyDead"
                ],
                "setflags": [
                  "HAV_ProdigyLament_Brother_RolanDead_HasMet"
                ],
                "goto": "",
                "link": "13",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: distant voice, he can't believe what he's just learned"
              },
              {
                "id": "Brother_31",
                "speaker": "Cal",
                "text": "My big brother is dead.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "GLO_Prodigy_State_ToldSiblingsProdigyDead"
                ],
                "goto": "",
                "link": "13",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: distant voice, he can't believe what he's just learned"
              },
              {
                "id": "Brother_21",
                "speaker": "Player",
                "text": "He died as he lived - stupidly.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "28",
                "is_end": false,
                "approval": [
                  "Astarion 1",
                  "Gale -1",
                  "Shadowheart 1",
                  "Lae'zel 1",
                  "Wyll -1",
                  "Karlach -1",
                  "Minthara 1",
                  "Halsin -1"
                ],
                "context": ""
              },
              {
                "id": "Brother_11",
                "speaker": "Cal",
                "text": "Rolan could be stubborn, but he was never malicious. Not like you.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: despite his grief he feels pity for the player."
              },
              {
                "id": "Brother_13",
                "speaker": "Cal",
                "text": "Everyone I've ever loved is dead. I have nothing.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: shellshocked, unable to process what's happened"
              },
              {
                "id": "Brother_12",
                "speaker": "Cal",
                "text": "You won't see me again.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: he's planning to walk into the cursed darkness to die - alone"
              }
            ],
            "AD_BartendingKids": [
              {
                "id": "AD_BartendingKids_13",
                "speaker": "Ide",
                "text": "This is easy! We should open our own place in Baldur's Gate.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_Mood_State_Unprotected = False",
                  "HAV_Mood_State_Alert = False",
                  "16f542b8-5ef8-49a4-33e7-495ec95944b2_A"
                ],
                "setflags": [
                  "16f542b8-5ef8-49a4-33e7-495ec95944b2_B"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_BartendingKids_7",
                "speaker": "Umi",
                "text": "Yeah, let's ask Mol!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_BartendingKids_16",
                "speaker": "Ide",
                "text": "I thought maybe we could just do it ourselves?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_BartendingKids_4",
                "speaker": "Umi",
                "text": "I dunno. I don't think Mol would like that...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Sister": [
              {
                "id": "Sister_16",
                "speaker": "Lia",
                "text": "Now that I'm here, that I'm safe, it's finally sinking in.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_ProdigyLament_Sister_RolanDead_HasMet = False",
                  "GLO_Prodigy_State_ToldSiblingsProdigyDead"
                ],
                "setflags": [
                  "HAV_ProdigyLament_Sister_RolanDead_HasMet"
                ],
                "goto": "",
                "link": "30",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: voice distant, barely processing the news"
              },
              {
                "id": "Sister_2",
                "speaker": "Lia",
                "text": "Rolan is dead.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "30",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: fists curling, quietly angry in her grief"
              },
              {
                "id": "Sister_29",
                "speaker": "Player",
                "text": "He died as he lived - stupidly.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Lae'zel 1",
                  "Astarion 1",
                  "Shadowheart 1",
                  "Gale 1",
                  "Karlach -1",
                  "Wyll -1",
                  "Halsin 1",
                  "Minthara 1"
                ],
                "context": ""
              },
              {
                "id": "Sister_36",
                "speaker": "Lia",
                "text": "You and everyone in this dump can rot for all I damn care. And you will.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: player has been cruel about rolan's death and lia is lashing out in her fury"
              },
              {
                "id": "Sister_23",
                "speaker": "Lia",
                "text": "Just pray we never meet again - you slimy sack of shit.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: player has been cruel about rolan's death and lia is lashing out in her fury"
              }
            ]
          },
          "session_synopses": {
            "AD_AngryBrother": "Lia died in Moonrise. Upon his return to Last Light, Cal and Rolan had a massive argument that the player failed to dispel. Cal, upset, walked away from Rolan and now stands on the balcony. He's upset, grieving, and wishing he had died instead of his sister.",
            "Rolan": "Rolan is an apprentice wizard whose siblings were recently captured by cultists. He's stuck in a tavern in the middle of the cursed lands where they were taken, drinking heavily, blaming himself for their loss. When he sees the players, he turns his frustration onto them - he's only here because they convinced him to stay with the other tieflings who were captured in the first place.Rolan is in fact the only reason any of the tieflings are still alive, having protected them from the traitorous Zevlor, who planned to give them over to the cult. He doesn't feel like a hero though - he feels like a failure.",
            "AD_RolanReturns": "A one off AD that triggers when the siblings return and spot each other in haven. In this version cal and/or lia are waiting in Last light when rolan returns.",
            "Hologram": "Rolan has left a message behind in Haven, for his siblings. This is a small automated hologram that is fixed to the bar counter. It plays a message (that he's gone looking for his siblings or that he's dead) when the player interacts with it.",
            "Ide": "Ide mainly talks about the interaction the player can have with Rolan in his dialog (HAV_ProdigyLament_Rolan), where he berates the kid for not giving him more alcohol. This dialog continues that narrative beat, and players can acquire a book Ide was planning to give Rolan.",
            "AD_AfterReunion": "Cal and/or Lia has been rescued from Moonrise. They have reunited with Rolan and are reminscing/checking up on one another. This occurs after the reunion scene.",
            "AD_BeforeReunion": "This AD covers the following scenarios: Lia alive, Cal dead. Cal alive, Lia dead. Cal, Lia and Rolan all alive and well. This AD occurs after the player has rescued Cal and/ or Lia from Moonrise towers, but BEFORE the player triggers the reunion scene in Last Light. The siblings are standing together and arguing.",
            "AD_SisterWaitingAlone": "",
            "AD_SiblingsReturn": "A one off AD that occurs when Lia and/or Cal spot Rolan upon entering Last Light after being rescued from Moonrise.",
            "PAD_HologramReaction": "PAD for after players see Rolan's hologram in the Last Light Inn for the first time. They comment on needing to go save Rolan as he won't be able to shadow creatures on his own.",
            "Umi": "Umi is young boy in the Haven. He spends most of his time hunting for valuable items in the Inn. He really looks up to the boss of his crew, Mol. This dialogue covers all his main states in Haven, including isobel and mol's kidnapping, when haven is left unprotected, when it's being attacked etc.",
            "Brother": "Cal has been rescued from Moonrise Towers by the player and is now in Last Light. This dialogue covers multiple states: Rolan is missing, Rolan is dead, Rolan and Cal had a fight (player must pass a persuade to calm the fight, pass and fail states here), and a general state for when cal, lia and rolan are all alive and well and cal is grateful to the player.",
            "AD_BartendingKids": "Two kids are playing bartender in the bar of an abandoned inn. They're having fun initially, but after an attack on the town they start to get worried and are more downbeat.",
            "Sister": "Lia has been rescued from Moonrise Towers by the player and is now in Last Light. This dialogue covers multiple states: Rolan is missing, Rolan is dead, Rolan and Lia had a fight (player must pass a persuade to calm the fight, pass and fail states here), and a general state for when cal, lia and rolan are all alive and well and Lia is grateful to the player."
          }
        },
        "hav_halsinquest": {
          "scenario_name": "hav_halsinquest",
          "session_sequence": [
            "Portal"
          ],
          "paths": {
            "Portal": [
              "Portal_33",
              "Portal_18",
              "Portal_31",
              "Portal_32",
              "Portal_26",
              "Portal_2",
              "Portal_25",
              "Portal_3",
              "Portal_28",
              "20",
              "NODE_NOT_FOUND"
            ]
          },
          "node_data": {
            "Portal": [
              {
                "id": "Portal_33",
                "speaker": "Halsin",
                "text": "You're here, good. Now we can begin.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_LiftingTheCurse_Portal_HasMet = False"
                ],
                "setflags": [
                  "HAV_LiftingTheCurse_Portal_HasMet"
                ],
                "goto": "",
                "link": "2",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Portal_18",
                "speaker": "Player",
                "text": "First, I want to know what to expect.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "2",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Portal_31",
                "speaker": "Halsin",
                "text": "Thaniel is trapped in the Shadowfell, but thanks to your efforts, I know where to look. Now I must go there - alone.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "2",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Thaniel rhymes with Daniel"
              },
              {
                "id": "Portal_32",
                "speaker": "Player",
                "text": "Sounds like you don't need my help anymore.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Portal_26",
                "speaker": "Halsin",
                "text": "Wrong. You are the beacon that will guide me home.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Portal_2",
                "speaker": "Halsin",
                "text": "With the Oak Father's blessing, I can infiltrate the Shadowfell, but doing so will sap my strength. I'll need your help if I'm to return.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Portal_25",
                "speaker": "Halsin",
                "text": "I need you to stay here. Keep the portal open until I return - and defend it at all costs.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Portal_3",
                "speaker": "Player",
                "text": "You can count on me.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [
                  "Gale 1",
                  "Wyll 1",
                  "Karlach 1"
                ],
                "context": ""
              },
              {
                "id": "Portal_28",
                "speaker": "Halsin",
                "text": "Good. Now it's important that only I pass through the portal once it opens. The magic is fragile - any mistake, and our one chance will be lost forever.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "HAV_LiftingTheCurse_Portal_Knows_DontTouchPortal"
                ],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "20",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ]
          },
          "session_synopses": {
            "Portal": "After the player acquires Art's instrument from the Surgeon, and speaks to Art, Halsin is able to use information given by Art to navigate through the Shadowfell, with the intention of recuing Thaniel, the spirit of the land, and ultimately lifting the shadow curse. He asks the player to help him by protecting a portal to the Shadowfell until he can return with Thaniel. He waits by the shore a short distance from Last Light. Once Halsin enters the portal and the dialogue ends, shadow creatures attack. The player must fight off the creatures until Halsin returns. However, if the player attempts to go through the portal themselves, the ritual will fail."
          }
        },
        "hav_lastlightox002": {
          "scenario_name": "hav_lastlightox002",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "151",
              "106",
              "166",
              "39",
              "115",
              "180",
              "107",
              "130",
              "98",
              "113",
              "4",
              "90",
              "165",
              "29",
              "146",
              "178"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "151",
                "speaker": "Phasm",
                "text": "Hm. No. Still incapable.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_DevilishOx_LastLight_HasMet_SwA = False",
                  "DEN_DevilishOx_MeetAtDruidsGrove_HasMet_SwA",
                  "DEN_DevilishOx_MeetAtDruidsGrove_Incapable",
                  "HAV_DevilishOx_State_InRegion",
                  "PETPAL"
                ],
                "setflags": [
                  "HAV_DevilishOx_LastLight_HasMet_SwA"
                ],
                "goto": "",
                "link": "166",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "106",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "166",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "166",
                "speaker": "Phasm",
                "text": "Hm. No. Incapable.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_DevilishOx_LastLight_HasMet_SwA = False",
                  "DEN_DevilishOx_MeetAtDruidsGrove_HasMet_SwA",
                  "DEN_DevilishOx_MeetAtDruidsGrove_Incapable = False",
                  "HAV_DevilishOx_State_InRegion",
                  "PETPAL"
                ],
                "setflags": [
                  "HAV_DevilishOx_LastLight_HasMet_SwA"
                ],
                "goto": "",
                "link": "91",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "39",
                "speaker": "Player",
                "text": "Incapable of what?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "91",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "115",
                "speaker": "Phasm",
                "text": "Not for you to know.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "91",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "180",
                "speaker": "Player",
                "text": "You're a rare breed. An authentic Red-Backed River Ox. I thought you'd be more discerning...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Halsin 1"
                ],
                "context": ""
              },
              {
                "id": "107",
                "speaker": "",
                "text": "True",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "130",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "98",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "98",
                "speaker": "Phasm",
                "text": "Well...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "91",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "113",
                "speaker": "Phasm",
                "text": "Come close. Your mind to mine.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "91",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Ox and player lean close, foreheads close but not touching."
              },
              {
                "id": "4",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "91",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: | Show a spliced together horror clip of spooky and/or gross images - this will be handled by a bespoke movie)"
              },
              {
                "id": "90",
                "speaker": "Phasm",
                "text": "Are you satisfied?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "91",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "165",
                "speaker": "Player",
                "text": "Those are the least bovine thoughts I've ever seen. What are you really?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "178",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "29",
                "speaker": "Phasm",
                "text": "Keep quiet, and you won't have to find out.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "146",
                "speaker": "Player",
                "text": "Is that a threat?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "178",
                "speaker": "Phasm",
                "text": "That's up to you.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "": "This Ox is a fiendish creature in an ox's body. The ox will show the player a horrific vision from its mind, and potentially go aggro on the player if the player demands answers from it. The ox could also give a gift if the player is evil, like it."
          }
        }
      },
      "final_flags": [
        "HAV_Isobel_KidnappingQuestions_DarkUrge",
        "GOB_SpiderNest_State_SpidersHostile",
        "DEN_AttackOnDen_HasMet_Prodigy",
        "DEN_CapturedGoblin_GuardsHasMet",
        "HAV_HarperScouts_Harper_003_HasMet_Protected",
        "GOB_Checkpoint_Event_MoveToCamp",
        "UND_MyconidRevenge_Event_TakeHead",
        "8a9a14b0-87da-5c78-aa76-7a266de7a786_Phase1",
        "HAV_Umi_NightsongFreed_HasMet",
        "PLA_TavernInvestigation_Knows_AskedStelmane",
        "DEN_AttackOnDen_HasMet_Tiefling010Victory",
        "GLO_Moonrise_Knows_AbsoluteAtGrymforge",
        "CRA_DeadPrisoner_Dead_AskedQuestion",
        "UND_DuergarMutineerFollowUp_Event_Happened",
        "CHA_Outside_Event_DoorGuardConvinced",
        "e0b6dfeb-2923-e0ad-1dc5-2a5d1e055e16_local1",
        "DEN_AttackOnDen_HasMet_GrieflingFriend",
        "DEN_AttackOnDen_HasMet_Tiefling001",
        "GOB_QuartermasterFlimsy_HasMet",
        "HAV_SavingPrisoners_HasMet_Manip",
        "GEN_TransferNPCPayment_2",
        "DEN_AttackOnDen_Event_OpenGateAfterCombat",
        "5e9c4c72-4f56-2646-ce36-88207d2dc33c_KinSaved",
        "GOB_OwlbearCub_Event_InvitedToCamp",
        "PLA_Desire_Knows_RavengardTaken",
        "DEN_DruidServant005_Knows_TalkedAboutLockdown",
        "UND_SocietyOfBrilliance_MindFlayer_State_MindFlayerFeeding",
        "PLA_ConflictedFlind_Event_MindControlDamage_Minor",
        "DEN_AttackOnDen_HasMet_Servant005Victory",
        "PLA_Desire_State_WyllComTrack",
        "CHA_Chapel_Event_OpenedJergalsTomb",
        "UND_DarkLake_State_ClaimedGekhWasDead",
        "DEN_AttackOnDen_Pet004_HasMet",
        "HAV_Isobel_HasMetDefault",
        "GLO_Player_Knows_MoonlanternExists",
        "GOB_PainPriest_Event_Reward",
        "2da46374-abab-9219-f7ce-2a002cfd72a5_a",
        "DEN_AttackOnDen_Ranged_001_HasMet",
        "GLO_Volo_HasMet_Personally",
        "GOB_PainPriest_State_ReactedToPenance",
        "da38cd0f-efef-6809-231d-26f71308cd07_B",
        "HAV_ProdigyLament_Knows_RolanAlive",
        "DEN_RaidingParty_Event_SkipConfrontation",
        "ORI_INCLUSION_SHADOWHEART",
        "GLO_TadpoledCount6",
        "PLA_TavernInvestigation_Quest_WallCollapsed",
        "PLA_Refugee_002_TollhouseMentioned",
        "DEN_AttackOnDen_HasMet_RobberKid",
        "876dbe2e-5070-a2c1-0148-cc993aa62289_B",
        "FOR_PriestsConqueringGod_AlliedPlayer",
        "HAG_GurHunter_Dead_Knows_Hunter",
        "HAV_TieflingSurvivors_State_DidNotPromiseToSaveMol",
        "DEN_AttackOnDen_HasMet_PickpocketVictory",
        "DEN_GuardedEntrance_State_ParentsKnowDeath",
        "GLO_IronhandGnomes_Knows_WulbrenInMoonrise",
        "Den_Thieflings_InterferingGuard_PCGotLore",
        "WLD_FOR_GnomeGoblinsAngry",
        "26007d1c-bac9-a896-4f4d-19a9d2a1e66f_A",
        "HAV_LastLightOx000_HasMet_SpeakWithAnimals",
        "GOB_Checkpoint_Guard01_HasMet",
        "HAV_TieflingSurvivors_HasMet_Mattis",
        "WLD_UnfortunateGnome_PayPassage",
        "4c78f756-720d-a285-a3e6-8f69a6069abc_Step1",
        "cd4b312f-5a40-b8c1-1ecb-0862c829a479_A",
        "5ebae00c-47d8-736c-6738-4ee56cebbc49_B",
        "GLO_Prodigy_State_ToldSiblingsProdigyDead",
        "DEN_General_YoungLovers_HasMet",
        "GOB_PainPriest_Event_CheckHP",
        "GLO_Desire_HasMet",
        "b43d3bc7-f10d-73cc-232e-c1f93cba3ed5_Local2",
        "DEN_AttackOnDen_Pet002_HasMet",
        "FOR_UnfortunateGnome_State_NonCharlatanAccess",
        "UND_MyconidCircle_PlantDuergarHasMet",
        "aa1d4932-8689-5e30-2b17-9b0968663a7a_historysuccess",
        "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_WyllSpoke",
        "GOB_WolfPens_Worg_002_HasMet",
        "PLA_GithChokepoint_State_FailedReadingMap",
        "PLA_ZhentShipment_Agent_002_StartInclusion",
        "GLO_HAV_TakingIsobel_HasMet_BriefInRoom",
        "DEN_ShadowDruid_Event_SetFaithwarden",
        "CRA_DeadPrisoner_Dead_MentionedTadpole",
        "GLO_Absolute_Knows_MoonriseTowers",
        "DEN_Rat_Event_MoveToShack",
        "DEN_DruidAttack_HasMet_Protester3AfterAttack",
        "ORI_Inclusion_End_Karlach",
        "UND_WormWall_State_RecognisedCrawlers",
        "GLO_GithChokepoint_DragonAppear",
        "df3e1892-2ab5-7b69-e57b-a75504e1a8f2_B",
        "10297257-36dd-3799-f681-657656779d4a_TieflingsLaezelAD1",
        "ORI_Inclusion_End_Wyll",
        "HAV_Siege_Intro_JaheiraAggroToPlayer",
        "DEN_AttackOnDen_HasMet_BackupLeader",
        "GLO_HeadRemoval_Event_HeadToInventory",
        "CHA_Jergal_Event_AttemptedAttack",
        "9b4c05c6-0a79-ea8d-c351-43d6fbb04abc_Story1",
        "GOB_AbsoluteCultistStiff_HasMet",
        "GLO_Shadowcurse_Knows_FromGnome",
        "PLA_StuckHalfElf_Knows_ExplainedDowry",
        "FOR_BugBearLove_Event_MovePlayerInside",
        "DEN_Stargazing_Event_SawDragon",
        "ORI_INCLUSION_ASTARION",
        "FOR_UnfortunateGone_TiedUpHasmet",
        "HAG_Hagspawn_State_JakeBerserk",
        "6cf6ff37-64f7-3ccf-d702-ee2025510422_B",
        "UND_EbonLake_Event_MoveToLake",
        "FOR_SeluneStash_NoticeStashSeal_CommentedOnSeal",
        "GOB_Torturers_Rat_001_HasMet",
        "GOB_Scrying_NoddedOrShrugged",
        "DEN_BirdSender_HasMet_GobLeadersDead",
        "a759296c-5d41-f5b9-7d31-1c70d1e10dc7_Once",
        "8ab0520b-3a8d-822f-1934-336e2d24e0a0_B",
        "d3eb78cf-ff8c-1e7a-7df7-4b6a04226b17_B",
        "DEN_HarpyMeal_Event_OriginCharm3",
        "683cb55e-08b9-c865-78a6-4e047ee62a24_B",
        "GLO_Tadpoled_UsedToday1",
        "GLO_HAV_TakingIsobel_HeardOfIsobel",
        "DEN_Thieflings_Event_PartnerQuestionAsked",
        "HAG_SurrogateMother_HasMet",
        "b2a52f0b-5fa8-d275-f080-0fc8edbe1faf_B",
        "GOB_GoblingKing_Event_HealerPersuasion",
        "UND_DuergarCamp_State_DocksHostile",
        "PLA_ZhentShipment_Agent_001_StartInclusion",
        "57c003e7-0932-6f0c-e655-99025a4abe3a_B",
        "DEN_AttackOnDen_HasMet_TieflingLeader",
        "09983dce-d7d0-c108-506f-dcadc4044b0a_Derryth_SwD_Who",
        "PLA_TavernInvestigation_State_HasMet",
        "ORI_Inclusion_Karlach",
        "UND_BrokenMoonLantern_HasMet",
        "3483cea8-0c11-9432-2421-6b95b9140d95_B",
        "7611fa51-4b1b-3d2c-a8a5-74c04d9db7fa_AnimalHandlingSuccess",
        "UND_DuergarPatroller_03_HasMet",
        "DEN_DruidAttack_HasMet_HideoutLeaderAfterAttack",
        "DEN_TieflingScam_Event_InspectedBox",
        "GnomeAskedHelp",
        "3f665b97-a69e-81c5-68e6-5b931720721e_Part1",
        "CHA_LaezelRecruitment_MindMeld",
        "GLO_ScryingEyes_State_FeltGaze",
        "DEN_GuardedEntrance_HasMet_Guard3",
        "DEN_RaidingParty_Event_KanonOpensGate",
        "DEN_AttackOnDen_HasMet_Wyll",
        "PLA_ConflictedFlind_Knows_Gnolls",
        "GLO_TalkedToVoloAboutAbsolute",
        "UND_MyconidCircle_DwarvenAlchemist_BaelenRestoredHasmet",
        "COL_Barracks_State_InterruptConvinced",
        "GOB_Festivities_Trader_HasMet",
        "DEN_AttackOnDen_HasMet_Tiefling004",
        "ZhentDungeon_AgreedBuy",
        "11d70a18-2aae-47a0-1a18-c486858b1eaf_B",
        "DEN_GruntingKid_Event_DisappearIntoWall",
        "GOB_BattleStations_HasMet_WarDrum",
        "GOB_GoblinJolly_HasMet",
        "UND_MyconidCircle_InjuredGnome_ReportedGrymforgeFate",
        "564fac12-29bd-3abe-d380-0a864e688883_Turn1",
        "COL_TadpolingCentre_MemoryImprint_FirstUse",
        "HAV_TieflingSurvivors_Mirkon_EndInclusion",
        "DEN_Apprentice_HasMet_ReactedToShadowDruids",
        "DEN_CampGeneral_HasMet_Gatekeeper",
        "UND_DeadInTheWater_CorpseDisposerCompanion_HasMet",
        "UND_MyconidCircle_MyconidSuspicious_HasMet",
        "DEN_Hideout_State_GivenWarning",
        "PLA_Refugee_002_HasMet",
        "UND_DuergarGuard_AtPier_01_HasMet",
        "DEN_DruidAttack_HasMet_PickpocketTraderAfterAttack",
        "SCE_Jergal_HasMet",
        "6d9043f1-e0c3-43de-a895-b87cae60e0c0_C",
        "DEN_RaidingParty_Event_OpenDenGate",
        "GOB_GoblinKingDead_Event_SaidFugitives",
        "HAV_SavingPrisoners_HasMet_Florrick",
        "HAV_EnteringHaven_State_RevealedArtifact",
        "UND_State_LeaderFreedGnomes",
        "41e56e7f-1722-7350-33dc-aefe523650fe_B",
        "d3d3855d-6721-b089-5c1e-d6d255a46fdc_A",
        "PLA_ZhentDungeon_State_SaidPassword",
        "c3207254-eafb-348b-d327-f690af0e213f_startedattackmove",
        "DEN_AttackOnDen_HasMet_TieflingBard",
        "UND_MyconidCircle_BroodingSovereign_State_InParty",
        "DEN_AttackOnDen_HasMet_Kid004Victory",
        "DEN_Hideout_Event_LeaveCountdown",
        "1493763b-776c-959c-259a-89f34f326e04_A",
        "DEN_AttackOnDen_ZenBear_HasMet",
        "UND_FurnaceSearch_Knows_Xargrim",
        "SCE_TieflingFollowUp_Knows_MolMissingEyepatch",
        "DEN_DevilishOx_State_ArcanaCheckComplete_SwA",
        "HAV_ProdigyLament_Knows_SiblingsInMoonrise",
        "fa6e2ce0-64f3-bfb8-fb47-10f50f02cadf_AbsoluteMentioned",
        "DEN_AttackOnDen_Event_PassedByEntrance",
        "DEN_Thieflings_TieflingGuard11_HasMet",
        "GOB_Trader_Knows_Goods",
        "DEN_AttackOnDen_HasMet_Tiefling005",
        "HAV_LiftingTheCurse_Portal_Knows_DontTouchPortal",
        "GOB_GoblinToast_Event_ToastSuccess",
        "COL_Barracks_Mistress_Knows_ThinksPlayerIsThrall",
        "DEN_ZenBear_Helped",
        "FOR_KnifeInMeat_State_KnifeBroken",
        "GOB_Festivities_Goblin001_HasMet",
        "FOR_GnomeGoblin1_HasMet",
        "DEN_TieflingRefugees_Quest_HuntRewardOffered",
        "DEN_RaidingParty_Event_GatekeeperToLever",
        "DEN_DruidAttack_HasMet_ServantGnome",
        "COL_NecroLab_GrandDesignSculpture_HasMet_LaezelInclusion",
        "FOR_GoblinAmbush_Event_StopSpotting",
        "DEN_AttackOnDen_HasMet_RitualDruid003",
        "ReportedToDerryth_BaelenIsAlive",
        "GOB_Owlbear_HasMet_NotChasing",
        "UND_SocietyOfBrilliance_MindFlayer_HasMet",
        "ba2b225d-e9d4-944d-5b4f-b27dd975c626_A",
        "DEN_AttackOnDenDruidLeader_State_HasMet",
        "6fa2b72d-fde1-4ee3-e1d1-f184232f693d_A",
        "DEN_DruidAttack_HasMet_ParentBAfterAttack",
        "DEN_General_Squirrel_LearnedTerritory",
        "HAG_Hagspawn_Knows_PromisedRaiseHusband",
        "PLA_ZhentShipment_Agent_001_Inclusion_Start",
        "GOB_RaiderStupid_HasMet",
        "83fdf5e9-88b8-19e7-ba8f-ff075d2222ce_PLA_ZhentShipment_Knows_Gnolls",
        "DEN_Apprentice_Event_RevealedTadpole",
        "DEN_Thieflings_Event_HideoutTrespassCrimeResolved",
        "469a1188-028b-0e6b-b595-fa464baa551e_b",
        "GOB_RaiderBold_HasMet",
        "FoundCounsellor",
        "UND_DuergarCamp_State_SidedNone",
        "99aa7b78-defd-57bc-eabf-a8aa43a030d9_B",
        "a0afae3d-53b0-192d-d822-c61da104f979_A",
        "DEN_Apprentice_State_ShadowDruidPath",
        "DEN_AttackOnDen_HasMet_LeaderKidVictory",
        "FOR_Monitor_Event_TakeFood",
        "GOB_GoblinToast_ThirdGoblinToasted",
        "FOR_Monitor_State_TransformToDevil",
        "DEN_Thieflings_HasMet_Guard2",
        "DEN_Thieflings_HasMet_Mol",
        "ORI_Karlach_HasMet",
        "GOB_Festivities_HasMet_Ogre_00",
        "GOB_RatRacket_LocalRat_002_HasMet",
        "ce2b9169-f3e7-e07f-9c58-0fd373d5df9a_PLA_ZhentDungeon_Zhent02_Dead_KnowsZarysisZhentarim",
        "HAV_ProdigyLament_Event_BookGivenAway",
        "DEN_AttackOnDen_Event_EnemiesAppear",
        "FOR_SchoolOgres_Event_AttemptedFirstSkillCheck",
        "GOB_Checkpoint_State_UsedAlarmOnce",
        "HAV_ProdigyLament_Event_Intro",
        "DEN_GoblinScouts_State_SavedDruid",
        "DEN_AttackOnDen_HasMet_Adventurer2",
        "d6df8edb-ac4b-e1d2-794b-6bfd00757cbf_A",
        "HAV_ProdigyLament_HasMet_Ide",
        "GOB_GoblinToast_Event_IncludeFourthGoblin",
        "15b0a2b9-2b22-50ab-70c0-ab3042def597_GaleCommentTried",
        "DEN_HarpyMeal_InHideout_WasMean",
        "PreventTradeWithPlayer",
        "DEN_GoblinHunt_Event_GiveRewardBag",
        "1bddcc22-dadd-92c9-4186-4e10ebbfee68_CHA_Crypt_Jergal_DontFollow",
        "UND_AdamantineForge_Knows_Adamantine",
        "DEN_AdventurersQuest_Knows_AradinStory",
        "FOR_Bottomless_State_InteractedWithWell",
        "ORI_INCLUSION_MINTHARA",
        "DEN_AttackOnDen_HasMet_ChefAndSon",
        "ORI_Inclusion_Astarion",
        "UND_DarkJusticiarsCorpses_Recognized",
        "GLO_Florrick_State_KnowsWyllDevil",
        "GLO_Desire_State_FreedInAct1",
        "DEN_DruidLair_Knows_DruidsAlliance",
        "1591cb60-9e65-980a-c49e-69f68b958a1d_B",
        "GOB_Checkpoint_State_GainedAccess",
        "FOR_UnfortunateGnome_Bargaining",
        "DEN_AttackOnDen_HasMet_ProdigyBrother",
        "UND_Elevator_Event_GotWarning",
        "UND_FearfulRothe_Event_MakeDuergarHostileInDialog",
        "GOB_GuardUpset_State_ConvincedTrueSoul",
        "HAV_LiftingTheCurse_Portal_HasMet",
        "DEN_CapturedGoblin_State_InTransit",
        "GLO_Thieflings_State_PCShookPickpocketSister",
        "GOB_GEB_TorturedAdventurer_Assault_HasMet",
        "DEN_GroveConflict_Event_StoleIdolAttempt",
        "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_NoFFPresent",
        "29ddc96b-303b-373d-2b6f-37ae4e8d534b_A",
        "DEN_Thieflings_Event_CallGuard",
        "DEN_AdventurersQuest_RaidAdventurerAtCorps_HasMet",
        "UND_FearfulRothe_HasMet_Rothe_001_SpeakWithAnimals",
        "UND_FearfulRothe_State_BefriendedRothe",
        "0d6dbe21-1644-b9bf-8297-dd60d820bd99_B",
        "DEN_GuardedEntrance_HasMet_LiedAboutDeath",
        "FOR_ApothecaryGoblins_Goblin01_HasMet",
        "HAG_AnimalIllusion_Revealed_HasMet1",
        "DEN_TieflingScam_Event_TalkedAboutBox",
        "SCE_Alfira_Event_GaveShiningDawn",
        "UND_Automaton_Knows_AskedPlace",
        "HAV_Florrick_Event_RavengardInTowers",
        "CRA_DeadFisherman2_Dead_WhatDoing",
        "GOB_GoblinToast_Event_IncludeThirdGoblin",
        "DEN_AttackOnDen_HasMet_PickpocketTrader",
        "COL_TadpolingCentre_Knows_IdentifiedDarkUrgePod",
        "GOB_GoblinThroneCheckpoint_Pass",
        "HalsinLeft_KilledLeaders",
        "DEN_AttackOnDen_HasMet_Halsin",
        "c167cdf3-7201-e55c-222f-773c758e1000_IncludedHusband",
        "HAG_HagLair_Victim_001_HasMet",
        "512d5ba7-a884-f1f5-5d26-fad488c07e2c_C",
        "PLA_StuckDwarf_HasMet_FoundWife",
        "GOB_SpiderNest_State_SpidersChill",
        "PLA_Tavern_Knows_DukeInTavern",
        "ORI_INCLUSION_KARLACH",
        "PLA_ZhentDungeon_State_AgentFreed",
        "UND_FurnaceSearch_Event_DuergarMentionsForge",
        "GLO_Moonrise_Knows_GoblinsCapturedADuke",
        "DEN_DruidLair_Knows_FoundingGrove",
        "FOR_Monitor_HasMet_Dinner",
        "AskedCircle",
        "03b6aa2e-e805-3a51-6bdb-d92f0b0da84a_UND_MyconidCircle_ServantHookHorror_01_RecognisedMonster",
        "DEN_GuardedEntrance_HasMet_Protester1",
        "ToldAboutTadpole",
        "DEN_DruidAttack_HasMet_Tiefling010AfterAttack",
        "f3f236b2-37a1-a0a2-5855-184ead7b1286_C",
        "GOB_DrowCommander_State_Hostile",
        "UND_ArguingGnomes_Event_LearnedAboutPhilomeen",
        "HAV_DevilishOx_LastLight_HasMet_SwA",
        "UND_PetrifiedDrow_Knows_WizardIsDhourn",
        "ORI_Inclusion_End_ShadowHeart",
        "ORI_Shadowheart_Knows_SeenTempleVista",
        "FOR_BugBearLove_Event_CoupleHostile",
        "HAG_AnimalIllusion_Narrator",
        "DEN_Thieflings_State_DoneChase",
        "UND_ElevatorGuard002_HasMet",
        "ThankedFreed_BeldronThulla",
        "ORI_INCLUSION_MINSC",
        "DEN_Thieflings_Knows_PlayerRobbed",
        "DEN_ShadowDruid_HasMet_Opposed",
        "GLO_TadpoledCount1",
        "HAV_ProdigyLament_Brother_RolanDead_HasMet",
        "DEN_DruidAttack_HasMet_ExcitedBoar",
        "3b2ae6b6-ca7e-d905-0430-128078b3119f_B",
        "720e85fb-cc00-b81a-efff-343a04ca221e_A",
        "DEN_DevilishOx_MeetAtDruidsGrove_HasMet_SwA",
        "UND_ClericPetGrave_HasMet",
        "UND_MyconidCircle_DirectToSovereign_HasMet",
        "UND_GnomeWorkerLumpy_HasmetRescued",
        "DEN_GroveConflict_Quest_Learnt3LeadersTwoNames",
        "SCE_GnomeFollowUp_Wulbren_UneasyAboutPlayer",
        "HAV_SavingPrisoners_Knows_CapturedTieflings",
        "d97f72ff-8fb1-8a4c-f169-89751bd6e125_b",
        "ORI_INCLUSION_RANDOM",
        "HAG_Well_Event_DrinkWell",
        "a7407f82-add0-9f6d-e4e6-78b9c39195a6_C",
        "ORI_INCLUSION_WYLL",
        "4118b185-9468-2295-93f3-9d6eafd8fb8a_Second_Disabled",
        "FOR_GoblinAmbush_State_DrowAutoPass",
        "DEN_TieflingLeader_Quest_GobHuntResponded",
        "GLO_Halsin_Event_TalkedWithDruidLeader",
        "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionRefused",
        "HAV_ProdigyLament_State_ToldStory",
        "ORI_Inclusion_Gale",
        "DEN_RitualDruid_HasMet_Left5",
        "PLA_Desire_Quest_TriedForceDoor",
        "DEN_Thieflings_Pickpocket1_PCIsNotAChump",
        "DEN_AttackOnDen_HasMet_Refugee002",
        "fb0e13b6-cc68-d496-51c2-4594f4f5bf40_TauntHer",
        "182bb613-b70c-5e7c-b3ea-ea14e02d1fab_C",
        "GOB_PainPriest_Event_PickScourge",
        "DEN_GroveConflict_Knows_HeardAboutRitual",
        "d0423454-cc51-ae8e-5096-cffd1aac9f75_A",
        "FOR_BugBearLove_Knows_Lovemaking",
        "ORI_INCLUSION_LAEZEL",
        "DEN_DruidAttack_HasMet_SonOfChefAfterAttack",
        "HAG_HagLair_TalkingDoor_HasMet",
        "ORI_Inclusion_ShadowHeart",
        "HAV_TieflingSurvivors_Mirkon_StartInclusion",
        "1ea9e483-36a9-82b1-852f-b901ec25552a_a",
        "DEN_Prodigy_HasMet",
        "PLA_ZhentShipment_State_TalkedAfterKilledGnolls",
        "551618bc-83c9-52cc-0ca7-37c224446cf7_Local1",
        "GOB_Bravado_State_Goblin3Hasmet",
        "SCE_GnomeFollowUp_HasMet_WulbrenAlive",
        "SCE_TieflingFollowUp_Ide_HasMet",
        "FOR_BottomlessWell_InteractWithWell_Knows_LookedDown",
        "ORI_INCLUSION_GALE",
        "DEN_GuardedEntrance_HasMet_Parents",
        "GOB_GoblinToast_Event_IncludeSecondGoblin",
        "ca797aab-5a73-7ec5-edb7-022122573b39_B",
        "HAV_ProdigyLament_Sister_RolanDead_HasMet",
        "DEN_AttackOnDen_Event_HeftyTieflingQuip",
        "HAV_ProdigyLament_HasMet_Rolan",
        "GOB_WolfPens_Event_HalsinLeftParty",
        "FactionHostileToPlayerGroupAfterDialog",
        "ORI_Laezel_Quest_FoundZorru",
        "GOB_GoblinPriest_Event_FreedFromChains",
        "PLA_StuckHalfElf_Knows_MentionedDowry",
        "21e0890e-7019-66a3-1956-125405f96d7c_A",
        "DEN_DruidAttack_HasMet_DruidOpposedAfterAttack",
        "FOR_PriestOfTheConqueringGod_Cultists_Knows_Mission",
        "DEN_Apprentice_Event_RemoveBirdExhaustion",
        "DEN_CampGeneral_PCGotLore",
        "SpokeToBrothers",
        "5f09c70a-153e-77e8-731c-5c532e635809_B",
        "DEN_DruidAttack_HasMet_GatekeeperAfterAttack",
        "b951f0e6-65af-843d-a666-f5284343cc67_MentionedTrueSoul",
        "LearnedGroveSituation",
        "DEN_RaidingParty_Event_UnsheatheForFight",
        "ReachedWife",
        "GOB_Festivities_BugbearSleeper_00_HasMet",
        "GLO_TadpoleIntro_NPC",
        "DEN_Thieflings_Knows_KidsThieves",
        "DEN_ShadowDruidLeaderPostGoblins_State_HasMet",
        "DEN_GroveConflict_Knows_LeaderNameKing",
        "TemporaryHostilityAfterDialog",
        "0884581d-9f92-0a34-9440-6a54c0813bbe_ProceedToSecondStage",
        "DEN_Prodigy_HasMet_Brother",
        "GLO_Absolute_Knows_TrueSoul",
        "UND_GnomeForeman_UnfortunateGnome_InclusionStart",
        "HAV_WrootRequest_State_ReunionDone",
        "DEN_WeepingTree_HasMet_Bear",
        "PLA_ZhentDungeon_Dog_03_HasMet",
        "a6f2350b-ecc4-bf6c-0c73-dcb37f9e9690_B",
        "GOB_DrowCommander_Knows_DrowLeader",
        "ORI_Shadowheart_State_IdolHint",
        "ea88dfe9-ff39-9b98-ae03-48d7fdf2708e_A",
        "DEN_AttackOnDen_HasMet_Refugee004Victory",
        "ORI_Inclusion_End_Astarion",
        "OrderedKillDruids",
        "DEN_DevilishOx_MeetAtDruidsGrove_State_Peaceful",
        "DEN_AttackOnDen_HasMet_RitualDruid002",
        "PLA_StuckHalfElf_StartInclusion",
        "DEN_Thieflings_Pickpocket2_HasMet",
        "GOB_Checkpoint_Event_WarnedAtCliff",
        "PLA_ZhentShipment_State_Talked",
        "RefusedHelpBrothers1",
        "GOB_PainPriest_Event_ReactToMocking",
        "DEN_DruidLair_Knows_RuneAppearance",
        "GLO_Hag_KnowsAboutSurrogate",
        "81f2a55d-d317-761f-f6a0-fe97ad6d5288_C",
        "UND_DuergarCamp_Knows_NereIsTrapped",
        "DEN_SenderBird_Event_TakeOff",
        "FOR_GnomeGoblinsPacified",
        "DEN_DruidAttack_HasMet_ChefAfterAttack",
        "ParentLied",
        "f8e3175b-5587-d6cd-2174-e5a3e9ca4890_A",
        "7256657b-1386-989f-0262-c6530e03a9fb_AskedWhy",
        "DEN_General_Inclusion_End_Pickpocket",
        "DEN_WeepingTree_Bear_Upset",
        "UND_TheDrowNere_Mutiny_InclusionStart_GnomeSilly",
        "bde7a4f1-933f-f6ce-4a3e-4b1f29f83704_B",
        "UND_TheDrowNere_Event_HadMindMeld",
        "57c003e7-0932-6f0c-e655-99025a4abe3a_A",
        "DEN_YoungLovers_State_MetPlayer",
        "5310a408-76a3-3498-cc26-ae866871188b_Third_Disabled",
        "HAV_General_HarperScout_001_HasMet",
        "7ffcf0de-e30b-ef58-fcc5-8d3a1482fa59_b",
        "GLO_Absolute_Knows_GoblinsWorship",
        "DEN_Weaponsmith_Knows_Elturel",
        "DEN_ShadowDruid_Event_ReactionDone",
        "CHA_Crypt_Event_JergalAppears",
        "PLA_ZhentDungeon_Zhent05_HasMet",
        "DEN_TieflingLeader_HasMet_ReactToDruidAttack",
        "ORI_Laezel_State_StartedTieflingsSceneAtCage",
        "HAV_Siege_State_RefusedJaheira",
        "DEN_BirdSender_HasMet",
        "UND_MyconidCircle_DeepRothe_BaelenAteShroom_Hasmet",
        "GOB_BattleStations_Event_ToStation",
        "DEN_AttackOnDen_HasMet_Trainer",
        "GOB_GoblinHeretic_FreeToGo",
        "GOB_GoblinThroneCheckpoint_State_NonCharlatanAccess",
        "1c74b01f-5dcf-8107-b384-204d341ed9d5_OnlyOnce",
        "DEN_Thieflings_State_MessedWithMolsKids",
        "PLA_Refugee_001_HasMet",
        "UND_MyconidCircle_State_GainedAccess",
        "DEN_DruidAttack_HasMet_ParentAAfterAttack",
        "GOB_Checkpoint_State_GoblinsToldLeaders",
        "UND_DuergarCamp_Mutineers_HasMet",
        "LearnedDukeMissingCounsellor",
        "SCE_JergalDebrief_Event_WhyHere",
        "94cd662c-844b-4dcc-ffdc-0b9a8da32bcc_BarcusSpokeUp",
        "DEN_AttackOnDen_HasMet_LairDoor",
        "RikkaAskedQuest",
        "DEN_General_Event_TriedNudgingBear",
        "DEN_HasMet_SoloParentB",
        "DEN_RitualDruid_HasMet_Left2",
        "GOB_Torturers_HasMet_Goblet",
        "16f542b8-5ef8-49a4-33e7-495ec95944b2_B",
        "FOR_BugbearLove_State_InterruptedCouple",
        "DEN_AttackOnDen_Servant005_Answered",
        "UND_BroodingSovereign_State_RefusedCircle",
        "HAV_Siege_Intro_DoSetup",
        "DEN_Thieflings_HasMet_Trainee1",
        "UND_DeadInTheWater_CorpseDisposerLeader_HasMet",
        "DEN_Tiefling011_State_Met",
        "DEN_Thieflings_PersuadedPickpocket",
        "GOB_GoblinToast_Event_NoMoreRefills",
        "ORI_Inclusion_Random",
        "PLA_KarlachRecruitment_State_PersuasionSucceeded",
        "DEN_Thieflings_State_WitnessedArgument",
        "3b911555-52e5-7791-d2ac-44fe62465fa1_Loop3",
        "GOB_RaiderCunning_HasMet",
        "GOB_Eye_HasMet",
        "DEN_AttackOnDen_HasMet_Refugee003",
        "DEN_Weaponsmith_HasMet",
        "34910f06-fac0-085f-b41a-337d0dfad85a_A",
        "ORI_Inclusion_Laezel",
        "GOB_GoblinToast_SecondGoblinToasted",
        "9e2ef14b-1a2f-4edc-3f78-7e3a27967e5c_C",
        "DEN_AttackOnDen_HasMet_ScoutCaptive",
        "PLA_KarlachRecruitmentTollhouse_State_HostilitiesBegan",
        "UND_PetrifiedDrow_Knows_MemoryCrystal",
        "UND_FairyRings_Dead_AskedDrowIdentity",
        "ZevlorRewarded",
        "COL_TadpolingCentre_Knows_ImpliedDarkUrgePod",
        "GOB_PainPriest_Penanced",
        "b618166c-99f4-1c7a-02b7-32f0f0fbe420_LocalA",
        "SCE_TieflingFollowUp_Event_GiveShiningDawn",
        "DEN_AttackOnDen_HasMet_Servant004Victory",
        "DEN_AttackOnDen_HasMet_Mule1",
        "DEN_TieflingScam_HasMet",
        "DEN_AttackOnDen_HasMet_Kid003",
        "UND_FearfulRothe_Event_ConvincedRotheToAttackDuergar",
        "PLA_FlamingFist7_InnBurntDown_HasMet",
        "1fb21305-2e50-068c-0243-64536fe2bd6c_A",
        "DEN_AttackOnDen_HasMet_Tiefling003Victory",
        "SCE_AncientFist_ToldStory",
        "0d9d0064-babd-6e83-6ea6-5b78afb0413c_B",
        "DEN_GoblinScouts_HasMet_Captive",
        "GLO_Absolute_Knows_Symbol",
        "PLA_ConflictedFlind_Event_MindControl_KillHerself",
        "HAV_BackupLeader_HasMet",
        "GLO_SpeakWithDead_Event_QuestionAsked",
        "HAG_Hah_MaskedVictim2_HasMet",
        "DEN_DruidAttack_HasMet_ZenBear",
        "GOB_PainPriest_Event_BadReaction",
        "UND_BrokenLantern_State_TriedArcane",
        "461152ff-16c3-2617-f8af-7ddb5681820b_b",
        "ed70fdfc-3d7b-7753-1171-957f7316fe55_B",
        "SidedTieflings",
        "DEN_GroveConflict_Knows_KaghaRequestedPlayers",
        "PLA_StuckHalfElf_State_PlayerAngered",
        "UND_BroodingSovereign_State_AskedCircle",
        "DEN_AttackOnDen_HasMet_Trainee001Victory",
        "UND_MyconidCircle_State_FirstGreetingDone",
        "6bde1237-aa43-36d3-9e53-ec1092198541_C",
        "2bc86ee2-13ec-992e-993a-8b2fb705bd0a_B",
        "UND_DarkLake_State_HostileResolution",
        "c3d825d1-49b8-9ae2-4554-4fc1f55d2eee_LocalA",
        "COL_TadpolingCentre_Event_PurgePods",
        "DEN_ZhentAgent_02_Inclusion_Start",
        "DEN_AttackOnDen_HasMet_ProdigySister",
        "HAV_HarperScouts_Event_SawYonasFuneral",
        "ORI_Shadowheart_Event_DarkJusticiarHint",
        "873bc4e0-3d3c-1eac-903b-e94920fd6306_sawgithyanki",
        "DEN_CampGeneral_RufusHasMet",
        "DEN_Apprentice_HasMet",
        "DEN_General_Mule2_HasMet",
        "DEN_AttackOnDen_HasMet_ApprenticeVictory",
        "98423a2d-7b47-e379-6526-c435773e3cff_B",
        "DEN_Thieflings_Event_PlayerNotInvolved",
        "HAG_HagLair_Knows_DoorWasAlive",
        "ThankedFreed_Beldron",
        "DEN_AttackOnDen_HasMet_Griefling",
        "4d9f1cb5-200f-c998-657a-8d04f5c93c74_B",
        "DEN_AttackOnDen_HasMet_RitualDruid005",
        "4b4d2992-abb5-bd1b-9593-feb68eddf682_B",
        "ORI_Karlach_Knows_DammonWorkedInHell",
        "ORI_Inclusion_End_Random",
        "DEN_Squirrel_HasMet",
        "ORI_INCLUSION_HALSIN",
        "DEN_ShadowDruid_State_HadSelfReflection",
        "DEN_Thieflings_Pickpocket1_HasMet",
        "PLA_FlamingFist7_Knows_AskedWhatHappened",
        "DEN_DruidAttack_HasMet_BardAfterAttack",
        "GOB_PainPriest_State_NeedMoreHP",
        "FOR_BugBearLove_Event_OpenDoor",
        "DEN_Thieflings_State_PCSawKidThievesGettingCaught",
        "260f61d5-60df-da35-608b-a9856291b143_PlayerKnowsOrinKilledZevlor",
        "916a75f0-23d8-f05b-449d-d926d69fe782_FailedCheck",
        "SCE_GnomeFollowUp_Wulbren_HasMet",
        "DEN_druidservant_005_HasMet",
        "CHA_Jergal_HasMet",
        "ORI_Inclusion_End_Gale",
        "PLA_ConflictedFlind_Hyena_001_HasMet",
        "StartedAlt",
        "DEN_RaidingParty_Adventurer2_HasMet",
        "GLO_Thieflings_State_PickpocketKidGotHit",
        "GOB_WolfPens_Event_HalsinLeavesGoblinCamp",
        "e6738c9d-060d-c901-b945-4d49ca303d5b_SuccessfullyReadTracks",
        "DEN_GruntingKid_HasMet",
        "16193247-ccea-1974-45ec-e8229a7de4ef_B",
        "DEN_TieflingLeader_Quest_GobHuntDeclined",
        "DEN_RaidingParty_Event_GoblinsAppear",
        "DEN_GuardedEntrance_HasMet_Guard1",
        "GOB_PainPriest_Event_FirstHitDone",
        "ORI_Inclusion_End_Laezel",
        "DEN_General_Event_ElevatorBearMoves",
        "DEN_CapturedGoblin_OfferedRevenge",
        "DEN_General_Inclusion_Pickpocket",
        "DEN_RitualDruid_HasMet_Left4",
        "GOB_DrowCommander_HasMet",
        "GLO_Jergal_State_OutOfTomb",
        "HAV_ProdigyLament_Knows_AboutBook",
        "DEN_TieflingLeader_State_KaghaResolved",
        "f3afb428-73fc-2e5c-057b-2e0e5a1b2f1c_B",
        "ORI_DarkUrge_Knows_MetIsobel",
        "DEN_AttackOnDen_HasMet_Stargazer",
        "DEN_Thieflings_Event_ShookThief",
        "DEN_AttackOnDen_HasMet_Refugee001",
        "b70d5139-9980-efc6-3ba3-fe2eb56ab2e0_B",
        "HAV_LoneLover_HasMet_DanisUpset",
        "DEN_DruidAttack_HasMet_PetWolf",
        "26071d89-33af-8eac-3c05-ee8dca91338d_who",
        "DEN_Apprentice_UserShortcut",
        "ReflectedKagha",
        "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionAsked",
        "FOR_GoblinAmbush_GoblinsPacified",
        "932401b1-7763-7fd7-bee1-8731fe62084f_DeadThree",
        "HAV_WrootRequest_Event_TalkedToWulbrenInHaven",
        "DEN_DruidAttack_HasMet_GrieflingAfterAttack",
        "DEN_GuardedEntrance_State_ClearToPass",
        "GOB_Checkpoint_State_GuidedByCapturedGoblin",
        "DEN_RaidingParty_Event_GoblinRaidFight",
        "ORI_Inclusion_Wyll",
        "RefusedCircle",
        "DEN_TieflingScam_Knows_Scam",
        "DEN_BirdSender_Knows_AskedAboutBird",
        "DEN_DevilishOx_MeetAtDruidsGrove_Incapable",
        "DEN_Thieflings_CaveGuard_002_HasMet",
        "GOB_PainPriest_Knows_PenanceIsPain",
        "6bba3537-3756-eb27-a08a-a8596d765f2e_C",
        "28259eb0-5f20-5094-45f1-3292253ae1ed_C",
        "CHA_LaezelRecruitment_Event_LaezelHostile",
        "DEN_GoblinScouts_SavedDruid",
        "ArrivedAtGrove",
        "DEN_GruntingKid_Event_AskedCanTalk",
        "DEN_Apprentice_Event_GiveReward",
        "acc081f3-204a-2f29-a3bb-6d33ff784c39_C",
        "DEN_AttackOnDen_GrieflingFriend_Knows_Kelemvor",
        "GOB_PainPriest_Event_Mercy",
        "c68c5474-226f-4b47-b327-a22274e360a0_B",
        "HAV_LoneLover_Event_ReunionDone",
        "55452e03-17c6-9a9d-072b-80043381c98b_A",
        "UND_LoneDuergar_Event_WaitingForMainDialog",
        "OrderedBreachInn",
        "DEN_RitualDruid_HasMet_Pacified3",
        "DEN_ShadowDruidRats_Event_RememberedLetter",
        "DEN_DruidAttack_State_PrepAfterDeathOfDruids",
        "PLA_Desire_Event_HasMet",
        "4103e544-e1db-525f-81ec-b5dfa71907d7_WantNereOut",
        "PLA_StuckHalfElf_Event_ToldQuestion",
        "UND_BroodingSovereign_Event_Enlarged",
        "f108995b-14f4-7823-d218-790177a93da8_B",
        "6a98f294-9f4f-d0b0-1cba-706f1cb15009_Local1",
        "c76693dc-e4a4-5631-a9b5-8abc6b4ab36e_DarkUrgeThreatened",
        "GOB_WolfPens_Worg_001_HasMet",
        "DEN_DruidAttack_HasMet_WeaponsmithAfterAttack",
        "GLO_Volo_HasMet",
        "OpenedSarcophagus",
        "Counsellor_RefusedHelp",
        "02455563-e119-58e5-1fe7-eb46fe381d30_A",
        "GOB_GuardUpset_HasMet",
        "GOB_RatRacket_LocalRat_001_HasMet",
        "c5f62c4b-fb04-1505-c35b-63119d96b127_First_Disabled",
        "698f5a3b-6d88-3d9e-ee4f-26d9c1fc5b6b_B",
        "UND_TheDrowNere_State_KilledGnomeSerene",
        "GLO_VoloBallad_MetGuardPrison",
        "PLA_ZhentDungeon_Zhent01_HasMet",
        "90a73000-b6ed-ad55-7eae-f9a6f8f00f55_A",
        "ORI_Karlach_HasMet_DammonUnavailable",
        "GOB_CheckpointBackup003_HasMet",
        "DEN_TieflingScam_Event_FoundOutLies",
        "UND_ArguingGnomes_Quest_Accepted",
        "DEN_Thieflings_HasMet_Chef"
      ]
    },
    "MoonriseTowers": {
      "chapter_id": "Act2_MoonriseTowers",
      "scenario_sequence": [
        "moo_infernalvendor",
        "moo_flyingghoul",
        "bhvr_wrld",
        "moo_prison",
        "moo_nightsongdeath",
        "moo_warehouse",
        "moo_ngb",
        "moo_library",
        "moo_jailbreak_all_approval_traversals",
        "moo_traproom",
        "moo_crime",
        "moo_alarm",
        "moo_guardroom",
        "moo_executioner",
        "moo_docks",
        "moo_bazentranceguard",
        "moo_necromancersroom",
        "moo_ketherichound",
        "moo_mintharafate",
        "moo_throneroom",
        "moo_oubliette",
        "moo_dridercaravan",
        "moo_kethericschambers",
        "moo_walltentacle",
        "moo_audience",
        "moo_executionthrone",
        "geb_moo",
        "moo_catbusiness",
        "moo_balthazarlab",
        "moo_hiddentreasure",
        "moo_bugbearvendor",
        "moo_execution",
        "moo_kitchen",
        "moo_isobelroom",
        "moo_upperfloor",
        "moo_bazaar",
        "moo_misc",
        "moo_entrancecheckpoint",
        "moo_necromancerlab",
        "moo_jailbreak",
        "moo_outcast",
        "moo_assault",
        "moo_balthazarssecrets",
        "moo_drider",
        "moo_ketheric",
        "moo_kethericroom",
        "moo_kethetic",
        "moo_kitchenfight",
        "hav_minthara",
        "moo_apostleentry",
        "moo_monkamulet",
        "moo_zrellbriefing"
      ],
      "scenario_results": {
        "moo_infernalvendor": {
          "scenario_name": "moo_infernalvendor",
          "session_sequence": [
            "",
            "PAD_FeelingSick"
          ],
          "paths": {
            "": [
              "73",
              "130",
              "34",
              "42",
              "114",
              "100",
              "31",
              "118",
              "78",
              "115",
              "69",
              "66"
            ],
            "PAD_FeelingSick": [
              "PAD_FeelingSick_0"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "73",
                "speaker": "",
                "text": "",
                "node_type": "alias",
                "checkflags": [
                  "MOO_InfernalVendor_State_ConsentedLowHealth"
                ],
                "setflags": [
                  "MOO_InfernalVendor_Event_SellingBlood"
                ],
                "goto": "",
                "link": "0",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "130",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "34",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "42",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "42",
                "speaker": "Araj Oblodra",
                "text": "Should you be interested, I have a particular offer I'd like to make.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "99",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Taking a moment to size us up to see if she wants to offer us this deal - resolves she does"
              },
              {
                "id": "114",
                "speaker": "Player",
                "text": "Let's hear about this special offer of yours.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_InfernalVendor_State_AskedAboutDeals = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "44",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "100",
                "speaker": "Araj Oblodra",
                "text": "Put plainly - I'd like your blood. A vial of True Soul's blood, specifically.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "44",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Satisfied - we're getting on to the topic she cares most about. States her strange request plainly."
              },
              {
                "id": "31",
                "speaker": "Araj Oblodra",
                "text": "With one drop, I can brew a rather potent potion for you. The rest, I keep for myself.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_InfernalVendor_State_AskedAboutDeals"
                ],
                "goto": "",
                "link": "44",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Pleasant - this is of course a perfectly normal thing to offer"
              },
              {
                "id": "118",
                "speaker": "Player",
                "text": "And what exactly are you planning to do with your share?",
                "node_type": "normal",
                "checkflags": [
                  "MOO_InfernalVendor_Knows_Identity = False",
                  "MOO_InfernalVendor_Knows_AskedAboutResearch = False"
                ],
                "setflags": [
                  "MOO_InfernalVendor_Knows_AskedAboutResearch"
                ],
                "goto": "",
                "link": "44",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "78",
                "speaker": "Araj Oblodra",
                "text": "Research, naturally. We Oblodras are simply curious by nature.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "44",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Shrugging - she doesn't want to to be drawn on her true motive. (Oblodra = o-BLOD-ruh)"
              },
              {
                "id": "115",
                "speaker": "Player",
                "text": "",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "44",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "69",
                "speaker": "",
                "text": "False",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "66",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_FeelingSick": [
              {
                "id": "PAD_FeelingSick_0",
                "speaker": "Player",
                "text": "Ugh. That potion... did not go down well.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Feeling ill"
              }
            ]
          },
          "session_synopses": {
            "": "A merchant selling in the bazaar on the ground floor of Moonrise Tower. She is very interested in illithid-tainted blood from each race, which when traded grants a different kind of potion as a reward. The player can also learn her house's origins - and the fact that she's here to research the illithids.For nodes marked as OOM AND COM are in their own dialog fileFor nodes not marked as OOM or COM the dialog will have these speakers:1. Araj2. Group_Players (that might include Astarion since the default dialog and AOM version are pretty much the same).",
            "PAD_FeelingSick": "The player has given blood to the Infernal Vendor to make a unique potion. Once this potion is used, the player who gave the blood will feel sick after long rest (applying a debuff).The potion's effect depends on the player, but the debuff is universal."
          }
        },
        "moo_flyingghoul": {
          "scenario_name": "moo_flyingghoul",
          "session_sequence": [
            "AD_Hungry"
          ],
          "paths": {
            "AD_Hungry": [
              "AD_Hungry_7",
              "AD_Hungry_8",
              "AD_Hungry_1",
              "AD_Hungry_3"
            ]
          },
          "node_data": {
            "AD_Hungry": [
              {
                "id": "AD_Hungry_7",
                "speaker": "Winged Horror",
                "text": "Why foot-flesh?",
                "node_type": "normal",
                "checkflags": [
                  "375a6f59-375f-f5eb-5f42-60de2dc6aa6b_B = False"
                ],
                "setflags": [
                  "375a6f59-375f-f5eb-5f42-60de2dc6aa6b_B"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_Hungry_8",
                "speaker": "Winged Horror",
                "text": "Hrnng, chewy. Best flesh.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_Hungry_1",
                "speaker": "Winged Horror",
                "text": "But... it is all full of little bones.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_Hungry_3",
                "speaker": "Winged Horror",
                "text": "Yes, good crunch! And sooo salty, too.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_Hungry": "There are three winged ghouls on the upper exterior of Moonrise. They are slightly more intellegent then the wingless ghouls near the Moonrise entrance and the two groups have beef with eachother, They crave fresh meat and don't think much of anything else."
          }
        },
        "bhvr_wrld": {
          "scenario_name": "bhvr_wrld",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "moo_prison": {
          "scenario_name": "moo_prison",
          "session_sequence": [
            "AD_CellPlaque5"
          ],
          "paths": {
            "AD_CellPlaque5": [
              "AD_CellPlaque5_0"
            ]
          },
          "node_data": {
            "AD_CellPlaque5": [
              {
                "id": "AD_CellPlaque5_0",
                "speaker": "Narrator",
                "text": "Cell Five",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_CellPlaque5": ""
          }
        },
        "moo_nightsongdeath": {
          "scenario_name": "moo_nightsongdeath",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "moo_warehouse": {
          "scenario_name": "moo_warehouse",
          "session_sequence": [
            "Guard01"
          ],
          "paths": {
            "Guard01": [
              "Guard01_0"
            ]
          },
          "node_data": {
            "Guard01": [
              {
                "id": "Guard01_0",
                "speaker": "Zealot Zira",
                "text": "I hear we'll be marching west soon. Hope to see you on the front line.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: looking forward to the war that's coming"
              }
            ]
          },
          "session_synopses": {
            "Guard01": "A guard in the Moonrise Tower warehouse. Looking forward to the coming war."
          }
        },
        "moo_ngb": {
          "scenario_name": "moo_ngb",
          "session_sequence": [
            "Jailbreak_SpeakToPrisonerCrime"
          ],
          "paths": {
            "Jailbreak_SpeakToPrisonerCrime": [
              "Jailbreak_SpeakToPrisonerCrime_4",
              "Jailbreak_SpeakToPrisonerCrime_9",
              "Jailbreak_SpeakToPrisonerCrime_2",
              "Jailbreak_SpeakToPrisonerCrime_3",
              "Jailbreak_SpeakToPrisonerCrime_7"
            ]
          },
          "node_data": {
            "Jailbreak_SpeakToPrisonerCrime": [
              {
                "id": "Jailbreak_SpeakToPrisonerCrime_4",
                "speaker": "Narrator",
                "text": "*Your conversation has been cut short. These prisoners are for Disciple Balthazar's attention only.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_Jailbreak_Event_SpeakToTieflingsWarning",
                  "MOO_Jailbreak_Event_SpeakToGnomesWarning",
                  "MOO_Jailbreak_State_WulbrenAlerted"
                ],
                "goto": "",
                "link": "7",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Jailbreak_SpeakToPrisonerCrime_9",
                "speaker": "Player",
                "text": "What are the prisoners going to do? Talk me to death?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "7",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Jailbreak_SpeakToPrisonerCrime_2",
                "speaker": "",
                "text": "False",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Jailbreak_SpeakToPrisonerCrime_3",
                "speaker": "Narrator",
                "text": "*Your words fail to be convincing.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Jailbreak_SpeakToPrisonerCrime_7",
                "speaker": "Narrator",
                "text": "*You have been let off with a warning, but you will not be so lucky next time.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "Jailbreak_SpeakToPrisonerCrime": "This dialogues occurs when you try to speak to the prisoners in Moonrise and are caught by one of the scrying eyes (who summons a guard who will use this dialogues). It can be triggered by any guard."
          }
        },
        "moo_library": {
          "scenario_name": "moo_library",
          "session_sequence": [
            "AD_Minthara_EnteredLibrary"
          ],
          "paths": {
            "AD_Minthara_EnteredLibrary": [
              "AD_Minthara_EnteredLibrary_0"
            ]
          },
          "node_data": {
            "AD_Minthara_EnteredLibrary": [
              {
                "id": "AD_Minthara_EnteredLibrary_0",
                "speaker": "Nightwarden Minthara",
                "text": "Security is tight here. Z'rell made this library her command post.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_Minthara_EnteredLibrary": ""
          }
        },
        "moo_jailbreak_all_approval_traversals": {
          "error": "'metadata'"
        },
        "moo_traproom": {
          "scenario_name": "moo_traproom",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "moo_crime": {
          "scenario_name": "moo_crime",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "moo_alarm": {
          "scenario_name": "moo_alarm",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "moo_guardroom": {
          "scenario_name": "moo_guardroom",
          "session_sequence": [
            "Guard01"
          ],
          "paths": {
            "Guard01": [
              "Guard01_0"
            ]
          },
          "node_data": {
            "Guard01": [
              {
                "id": "Guard01_0",
                "speaker": "Acolyte Kimmeral",
                "text": "Don't mind Mig and her 'meat sounds'. It's just her brain slopping around in her skull.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_GuardRoom_HasMet_Guard01 = False"
                ],
                "setflags": [
                  "MOO_GuardRoom_HasMet_Guard01"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Mig is an ogre complaining about 'meat sounds' - you are reluctantly sharing a room with the ogre, and explaining his weirdness away"
              }
            ]
          },
          "session_synopses": {
            "Guard01": "A guard stationed alongside Mig the ogre. Mig is complaining of hearing \"meat sounds\" - in actuality it's a monster moving through the walls. This guard doesn't believe him either way."
          }
        },
        "moo_executioner": {
          "scenario_name": "moo_executioner",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "moo_docks": {
          "scenario_name": "moo_docks",
          "session_sequence": [
            "GuardObserver",
            "Vat",
            "AD_Patroller000Witness",
            "GuardPatroller000"
          ],
          "paths": {
            "GuardObserver": [
              "GuardObserver_2",
              "GuardObserver_28",
              "GuardObserver_38",
              "GuardObserver_26"
            ],
            "Vat": [
              "Vat_28",
              "Vat_29",
              "Vat_39"
            ],
            "AD_Patroller000Witness": [
              "AD_Patroller000Witness_0"
            ],
            "GuardPatroller000": [
              "GuardPatroller000_0"
            ]
          },
          "node_data": {
            "GuardObserver": [
              {
                "id": "GuardObserver_2",
                "speaker": "Zealot Arden",
                "text": "I see Marls took... took a bit of a dive.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Docks_HasMet_OberverTadpolePowers = False",
                  "MOO_Docks_State_GuardWitnessTrueSoul"
                ],
                "setflags": [
                  "MOO_Docks_HasMet_OberverTadpolePowers"
                ],
                "goto": "",
                "link": "40",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Shaky, nervous of us."
              },
              {
                "id": "GuardObserver_28",
                "speaker": "Zealot Arden",
                "text": "Good riddance. He deserved it! ... whatever he did.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "40",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Vehemently on our side - he does not want to piss us off like his ill-fated friend did. Last line a little uncertain."
              },
              {
                "id": "GuardObserver_38",
                "speaker": "Player",
                "text": "Are you much of a swimmer?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "40",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "GuardObserver_26",
                "speaker": "Zealot Arden",
                "text": "No, True Soul. Not I. Too busy doing my job. Which... I'll get back to, aye?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_Docks_State_PersuasionSuccess"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Nervous, vehement"
              }
            ],
            "Vat": [
              {
                "id": "Vat_28",
                "speaker": "Narrator",
                "text": "*A wave of sick familiarity radiates from one barrel amidst the cargo.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_Docks_Knows_TadpoleVats"
                ],
                "goto": "",
                "link": "44",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Vat_29",
                "speaker": "Narrator",
                "text": "*Tadpoles. Sleeping and scarcely aware, but echoing yours a hundredfold.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_Docks_Knows_TadpoleVats"
                ],
                "goto": "",
                "link": "44",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Vat_39",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_Random"
                ],
                "goto": "",
                "link": "44",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Patroller000Witness": [
              {
                "id": "AD_Patroller000Witness_0",
                "speaker": "Zealot Renan",
                "text": "Did he just...?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: hesitant, incredulous"
              }
            ],
            "GuardPatroller000": [
              {
                "id": "GuardPatroller000_0",
                "speaker": "Zealot Renan",
                "text": "Hold your nose 'round the crates. Some got a little ripe down in the cellar.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "GuardObserver": "Guard is watching operations at Moonrise Docks. If the other guard jumped into the water, the player can use it to send this last guard away so they can examine the cargo.",
            "Vat": "The player has investigated the vat, showing thousands of tadpoles. They are being used to bolster their number of soldiers for their attack on Baldurs Gate. The player can destroy the Vat, depriving some of their numbers, or utter a phrase to influence whoever these tadpoles end up attached to.",
            "AD_Patroller000Witness": "DockPatroller_000 witness DockJumper jumping into the water.",
            "GuardPatroller000": "An Absolute guard protecting crates at the dock."
          }
        },
        "moo_bazentranceguard": {
          "scenario_name": "moo_bazentranceguard",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "moo_necromancersroom": {
          "scenario_name": "moo_necromancersroom",
          "session_sequence": [
            "AD_Minthara_EnteredNecromancerRoom"
          ],
          "paths": {
            "AD_Minthara_EnteredNecromancerRoom": [
              "AD_Minthara_EnteredNecromancerRoom_0"
            ]
          },
          "node_data": {
            "AD_Minthara_EnteredNecromancerRoom": [
              {
                "id": "AD_Minthara_EnteredNecromancerRoom_0",
                "speaker": "Nightwarden Minthara",
                "text": "Balthazar's chamber. Digging through the offal is unappealing, but may be worthwhile.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_Minthara_EnteredNecromancerRoom": ""
          }
        },
        "moo_ketherichound": {
          "scenario_name": "moo_ketherichound",
          "session_sequence": [
            "AD_Patrol"
          ],
          "paths": {
            "AD_Patrol": [
              "AD_Patrol_0"
            ]
          },
          "node_data": {
            "AD_Patrol": [
              {
                "id": "AD_Patrol_0",
                "speaker": "Squire",
                "text": "*Bark.*",
                "node_type": "normal",
                "checkflags": [
                  "23867c04-54b8-6ee9-a6bf-55a1a4c8b75d_A"
                ],
                "setflags": [
                  "23867c04-54b8-6ee9-a6bf-55a1a4c8b75d_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_Patrol": "Squire patrols Ketheric room, making sure no trouble makers come poking around where they shouldn't. All sounds are animals noises - no VO!"
          }
        },
        "moo_mintharafate": {
          "scenario_name": "moo_mintharafate",
          "session_sequence": [
            "AD_TorturersPostTorture",
            "Checkpoint",
            "AD_FailedInterrogation",
            "PAD_HelpMinthara",
            "Drow"
          ],
          "paths": {
            "AD_TorturersPostTorture": [
              "AD_TorturersPostTorture_2",
              "AD_TorturersPostTorture_16",
              "AD_TorturersPostTorture_0"
            ],
            "Checkpoint": [
              "Checkpoint_19"
            ],
            "AD_FailedInterrogation": [
              "AD_FailedInterrogation_0"
            ],
            "PAD_HelpMinthara": [
              "PAD_HelpMinthara_0"
            ],
            "Drow": [
              "Drow_17",
              "Drow_9",
              "Drow_0",
              "Drow_5"
            ]
          },
          "node_data": {
            "AD_TorturersPostTorture": [
              {
                "id": "AD_TorturersPostTorture_2",
                "speaker": "Questioner Jasin",
                "text": "Soon, we will be in Baldur's Gate. What say you to that, sister?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "8916beac-0385-3df9-de07-8be3cc6752a7_A"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_TorturersPostTorture_16",
                "speaker": "Questioner Sumera",
                "text": "A whole city in service of the Absolute - it will be glorious.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_TorturersPostTorture_0",
                "speaker": "Questioner Jasin",
                "text": "And so many minds for us to break.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Checkpoint": [
              {
                "id": "Checkpoint_19",
                "speaker": "Zealot Malik",
                "text": "Halt!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "17",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ],
            "AD_FailedInterrogation": [
              {
                "id": "AD_FailedInterrogation_0",
                "speaker": "Nightwarden Minthara",
                "text": "Break them, before they call for help.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: in combat, either goading her enemies, or on the 'let us free them' line, relishing the fight while speaking to her allies"
              }
            ],
            "PAD_HelpMinthara": [
              {
                "id": "PAD_HelpMinthara_0",
                "speaker": "Player",
                "text": "Minthara was dragged to the prison in Moonrise. If she's still there, this is our last chance to save her.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Drow": [
              {
                "id": "Drow_17",
                "speaker": "Nightwarden Minthara",
                "text": "I expected to be greeted as a hero - but the wretches imprisoned me, and tried to tear my mind apart.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_MintharaFate_State_Freed"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Drow_9",
                "speaker": "Nightwarden Minthara",
                "text": "I didn't think anyone would come for me.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Drow_0",
                "speaker": "Player",
                "text": "I came here for the pleasure of killing you myself.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Astarion -1",
                  "Gale -1",
                  "Shadowheart -1",
                  "Karlach -1",
                  "Jaheira 1"
                ],
                "context": ""
              },
              {
                "id": "Drow_5",
                "speaker": "Nightwarden Minthara",
                "text": "I think not - the pleasure will be all mine.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "FactionHostileToPlayerGroupAfterDialog"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_TorturersPostTorture": "Torture scene with Minthara and her torturers is over. This dialog holds two variants, the variant where Minthara is present, therefore she's been pacified mentally and is now an obedient soldier. The other variant is the one where players take over and make the torturers leave by faking that Minthara's pacified.",
            "Checkpoint": "The player is accompanied by Minthara and is stopped by the entrance guards. They do not think Minthara should be allowed to leave.",
            "AD_FailedInterrogation": "On Minthara's turn, in combat after failing to pass by an interrogating guard.",
            "PAD_HelpMinthara": "When party exits Moonrise after Execution scene, if player have not started helping Minthara in any way we play this PAD to remind about her.",
            "Drow": "Minthara is being psychically tortured in the Moonrise Tower dungeon, having been sent there for failing in her mission to capture the weapon the Absolute was seeking (the Orpheus artefact).Two drow guards are torturing her, but they do not lay a finger on her. Instead, they have stripped away her psychic defenses and are using mind-melds to destroy her from the inside.The player can free her by killing the guards, or by mind-melding with Minthara and pulling her out of the despair. If she is freed from the mind-meld while the guards are alive, she kills them.The player can also destroy Minthara completely, by telepathically lobotomising her inside her own mind."
          }
        },
        "moo_throneroom": {
          "scenario_name": "moo_throneroom",
          "session_sequence": [
            "AD_Minthara_ThroneRoomEntered"
          ],
          "paths": {
            "AD_Minthara_ThroneRoomEntered": [
              "AD_Minthara_ThroneRoomEntered_0"
            ]
          },
          "node_data": {
            "AD_Minthara_ThroneRoomEntered": [
              {
                "id": "AD_Minthara_ThroneRoomEntered_0",
                "speaker": "Nightwarden Minthara",
                "text": "I'll never forget how Ketheric humiliated me here.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_Minthara_ThroneRoomEntered": ""
          }
        },
        "moo_oubliette": {
          "scenario_name": "moo_oubliette",
          "session_sequence": [
            "PAD_HorrorScreech",
            "PAD_Entry",
            "PAD_ColonyComment",
            "CorpseMembranes_Dead"
          ],
          "paths": {
            "PAD_HorrorScreech": [
              "PAD_HorrorScreech_0"
            ],
            "PAD_Entry": [
              "PAD_Entry_0"
            ],
            "PAD_ColonyComment": [
              "PAD_ColonyComment_0"
            ],
            "CorpseMembranes_Dead": [
              "CorpseMembranes_Dead_26",
              "CorpseMembranes_Dead_27",
              "CorpseMembranes_Dead_24",
              "CorpseMembranes_Dead_10"
            ]
          },
          "node_data": {
            "PAD_HorrorScreech": [
              {
                "id": "PAD_HorrorScreech_0",
                "speaker": "Player",
                "text": "Hook horror. Wonderful.",
                "node_type": "normal",
                "checkflags": [
                  "UND_HookHorrors_Knows_SeenHookHorrors"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_Entry": [
              {
                "id": "PAD_Entry_0",
                "speaker": "Player",
                "text": "Every bit as disgusting as the first time.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Oubliette_State_HasEntered"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_ColonyComment": [
              {
                "id": "PAD_ColonyComment_0",
                "speaker": "Player",
                "text": "Look - there's something on the other side. No way through from here though.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "CorpseMembranes_Dead": [
              {
                "id": "CorpseMembranes_Dead_26",
                "speaker": "Narrator",
                "text": "*The corpse regards you lifelessly.*",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "CorpseMembranes_Dead_27",
                "speaker": "Player",
                "text": "Who are you?",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [
                  "GLO_SpeakWithDead_Event_QuestionAsked"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "CorpseMembranes_Dead_24",
                "speaker": "Goblin",
                "text": "Vermit... True Soul...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "CorpseMembranes_Dead_10",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_HorrorScreech": "A PAD reacting to an audible screech from a hook horror in the Oubliette. The screech plays and the player character reacts to hearing it. If they have encountered Hook Horrors before in the Underdark, they will react differently.",
            "PAD_Entry": "A PAD reacting to arriving in the bloodbath section of the Oubliette. This will also trigger a second time if the player leaves the Oubliette area and re-enters the bloodbath section.",
            "PAD_ColonyComment": "Party reacts to seeing the Colony through the blood aquarium window that separates the Oubliette from the Colony Morgue. The intention here is to strongly imply that we cannot get into the Colony from the Oubliette.",
            "CorpseMembranes_Dead": "The Speak With Dead dialog for the corpse hidden behind the mind flayer membranes in the bloodbath section of the Oubliette. This corpse is currently a goblin, but its race and backstory can be changed at the writer's behest."
          }
        },
        "moo_dridercaravan": {
          "scenario_name": "moo_dridercaravan",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "moo_kethericschambers": {
          "scenario_name": "moo_kethericschambers",
          "session_sequence": [
            "PAD_ReadWifesNote"
          ],
          "paths": {
            "PAD_ReadWifesNote": [
              "PAD_ReadWifesNote_0"
            ]
          },
          "node_data": {
            "PAD_ReadWifesNote": [
              {
                "id": "PAD_ReadWifesNote_0",
                "speaker": "Player",
                "text": "A letter from Ketheric's wife. Sounds like she loved him very much.<br>",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_ReadWifesNote": "The player found and read the letter written by Melodia, wife of Ketheric (string name: MOO_KethericsChambers_NoteFromWife). It is found in Ketherics room under a loose floor board. Reading this letter opens the option to have Ketheric stand down during the colony fight (he still dies). The VB helps support the notion that this letter is significant."
          }
        },
        "moo_walltentacle": {
          "scenario_name": "moo_walltentacle",
          "session_sequence": [
            "Ogre",
            "DaisyAD_FeignSuprise"
          ],
          "paths": {
            "Ogre": [
              "Ogre_1",
              "Ogre_0",
              "Ogre_33",
              "Ogre_29",
              "Ogre_11",
              "Ogre_30"
            ],
            "DaisyAD_FeignSuprise": [
              "DaisyAD_FeignSuprise_0",
              "DaisyAD_FeignSuprise_1"
            ]
          },
          "node_data": {
            "Ogre": [
              {
                "id": "Ogre_1",
                "speaker": "Mig",
                "text": "Hush! Meat sounds above. Hear?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_WallTentacle_HasMet_Mig"
                ],
                "goto": "",
                "link": "30",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Quieting us, listening  /  (MartinK) - Distracted, focused on walls as sound is sublte. It may be something she can eat... or might eat her"
              },
              {
                "id": "Ogre_0",
                "speaker": "Player",
                "text": "",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "30",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ogre_33",
                "speaker": "",
                "text": "False",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "30",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ogre_29",
                "speaker": "Player",
                "text": "Is it you...?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "30",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ogre_11",
                "speaker": "Mig",
                "text": "No! Mig only small. This huge. In walls above. Maybe whole tower.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Frustrated - we don't get it"
              },
              {
                "id": "Ogre_30",
                "speaker": "Mig",
                "text": "You find meat? You SHARE.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Warning and utterly earnest - a child making you pinky swear to share your treat"
              }
            ],
            "DaisyAD_FeignSuprise": [
              {
                "id": "DaisyAD_FeignSuprise_0",
                "speaker": "",
                "text": "Careful. It nearly had you.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_WallTentacle_Daisy_Interacted"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: with awe and fear"
              },
              {
                "id": "DaisyAD_FeignSuprise_1",
                "speaker": "",
                "text": "Whatever that creature was, its telepathic force was unlike anything I've ever encountered. It must be the source of the Absolute.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: with awe and fear"
              }
            ]
          },
          "session_synopses": {
            "Ogre": "An ogre in the guard room of Moonrise Tower. He's hearing 'meat sounds' in the wall - in actuality, a tendril of the Elder Brain no one else is aware of.",
            "DaisyAD_FeignSuprise": "The player has just made contact with the tentacle in the wall of Moonrise (the Elder Brain). Daisy reacts."
          }
        },
        "moo_audience": {
          "scenario_name": "moo_audience",
          "session_sequence": [
            "Skeletons",
            "Ketheric",
            "WaitingKetheric",
            "AccessCultist"
          ],
          "paths": {
            "Skeletons": [
              "Skeletons_0"
            ],
            "Ketheric": [
              "Ketheric_24",
              "Ketheric_108",
              "Ketheric_110",
              "Ketheric_35",
              "Ketheric_87",
              "Ketheric_16",
              "Ketheric_34",
              "Ketheric_96",
              "Ketheric_60",
              "Ketheric_125",
              "Ketheric_66",
              "Ketheric_52",
              "Ketheric_51",
              "Ketheric_74",
              "Ketheric_109",
              "Ketheric_63",
              "Ketheric_86",
              "Ketheric_116"
            ],
            "WaitingKetheric": [
              "WaitingKetheric_0"
            ],
            "AccessCultist": [
              "AccessCultist_20",
              "AccessCultist_32",
              "AccessCultist_0",
              "AccessCultist_40"
            ]
          },
          "node_data": {
            "Skeletons": [
              {
                "id": "Skeletons_0",
                "speaker": "Narrator",
                "text": "*You think you hear a whisper - but perhaps it was just wind draughting through a dull and empty thing.*",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Audience_Skeletons_SpokeOnce"
                ],
                "setflags": [
                  "MOO_Audience_Skeletons_SpokeTwice"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Not sure if \"draughting\" is correct usage but feels good for this moment - creepy wind creepily sighing through a creepy skeleton"
              }
            ],
            "Ketheric": [
              {
                "id": "Ketheric_24",
                "speaker": "Ketheric Thorm",
                "text": "I'll tell you a story, True Soul. About a man who sold himself piece by piece.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_Isobel_State_IsDead"
                ],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_108",
                "speaker": "Ketheric Thorm",
                "text": "He had... everything. A wonderful wife. A brilliant daughter. They lived not far from here.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_110",
                "speaker": "Ketheric Thorm",
                "text": "His wife died too young. Grief tore through their home like a thief, snatching away the scent of her hair, the rustle of her skirts. But the man did not break.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_35",
                "speaker": "Ketheric Thorm",
                "text": "He could not break. His daughter needed him whole, after all.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_87",
                "speaker": "Ketheric Thorm",
                "text": "She grew up - grew strong. Challenged him. Filled his heart with such joy it supplanted all sorrow.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_16",
                "speaker": "Ketheric Thorm",
                "text": "When she was killed, the man... he tried to remain whole, but it wasn't possible. Do you understand?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_34",
                "speaker": "Player",
                "text": "So the man fell to pieces.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_96",
                "speaker": "Ketheric Thorm",
                "text": "The pain was unbearable. All-consuming. He decided he'd do anything for reprieve.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_60",
                "speaker": "Ketheric Thorm",
                "text": "First, he sold himself to the goddess of loss. But the pain did not subside, no matter his obscene feats of devotion.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_125",
                "speaker": "Ketheric Thorm",
                "text": "Then a new god came - a god who promised the man something wonderful: his daughter. Her life returned. Imagine it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_66",
                "speaker": "Ketheric Thorm",
                "text": "He would have to give everything: his body and soul entire. He did not hesitate. Not for a moment.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_52",
                "speaker": "Ketheric Thorm",
                "text": "And the new god did as promised. The man's brilliant, beautiful daughter came back. She was whole - she was alive. But she despised the pitiful wretch her father had become.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_51",
                "speaker": "Ketheric Thorm",
                "text": "Her hatred he could bear, perhaps, as long as she had another chance to live.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_74",
                "speaker": "Ketheric Thorm",
                "text": "Everything I've done, everything I have built, has been to give Isobel that chance. And you, True Soul - you have squandered it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_109",
                "speaker": "Player",
                "text": "You brought her back once. Do it again.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_63",
                "speaker": "Ketheric Thorm",
                "text": "I can. I will. But it is not without cost. Who will pay this time, True Soul?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_86",
                "speaker": "Ketheric Thorm",
                "text": "I have no mercy left in me - but it is for the Absolute to decide your fate.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "GLO_Ketheric_State_AngryAtPlayer"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Almost sarcastic, like a very annoyed child talking to their parent"
              },
              {
                "id": "Ketheric_116",
                "speaker": "Ketheric Thorm",
                "text": "Kneel at the altar. Now.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_Audience_State_KethericToldToKneelAtAltar"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "WaitingKetheric": [
              {
                "id": "WaitingKetheric_0",
                "speaker": "Ketheric Thorm",
                "text": "You've come here for a reason. See it through. Kneel at the altar. The Absolute will answer.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_Audience_HasMet_WaitingKetheric"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Neutral/ cold - Isobel isn't here with him and he's pissed."
              }
            ],
            "AccessCultist": [
              {
                "id": "AccessCultist_20",
                "speaker": "Radija",
                "text": "It is not your time yet, blessed one.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_Audience_HasMet_AccessCultist"
                ],
                "goto": "",
                "link": "3",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Looking us up and down, unimpressed but (barely) polite. Main note for entire dialogue is a customer service worker who knows they have to be polite, but secretly hates you."
              },
              {
                "id": "AccessCultist_32",
                "speaker": "Radija",
                "text": "The rooftop chapel is reserved for the General's private contemplation - save for those he chooses to ascend.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "3",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Shot of the doors\rNodeContext: Polite facade, but secretly enjoying telling us we're not so special"
              },
              {
                "id": "AccessCultist_0",
                "speaker": "",
                "text": "This must be the place. We have to get inside.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "3",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AccessCultist_40",
                "speaker": "Player",
                "text": "Leave.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "Skeletons": "Animated skeleton of MyrkulThe skeletons don' talk, they don't have the animations. It's doable, but should be thought through and requested, then the scripting will have to change too.",
            "Ketheric": "Evil route. Captured Nightsong",
            "WaitingKetheric": "Audience path, which means Nightsong was captured in SHA. Ketheric is on the roof. This is afterthe bigger interactive dialog - when the player must go to the altar",
            "AccessCultist": "The Mistress of Souls won't let us pass into Ketheric's chapel until we've completed MOO quests. Her tone is vaguely respectful, but not as deferential as a True Soul is used to. When we press her on this, we'll see her contempt - True Souls might be a big deal out in the world, but not here. In truth, she is a Myrkul cultist playing her role in the church of the Absolute, secretly contemptuous of every true believer."
          }
        },
        "moo_executionthrone": {
          "scenario_name": "moo_executionthrone",
          "session_sequence": [
            "PAD_Use"
          ],
          "paths": {
            "PAD_Use": [
              "PAD_Use_2",
              "PAD_Use_1",
              "PAD_Use_0"
            ]
          },
          "node_data": {
            "PAD_Use": [
              {
                "id": "PAD_Use_2",
                "speaker": "Narrator",
                "text": "*From this seat, Ketheric defied gods and raised an army for the Absolute.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Grand shot of Ketheric's hall over the player's shoulder."
              },
              {
                "id": "PAD_Use_1",
                "speaker": "Narrator",
                "text": "*It is not particularly comfortable.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Shot of player shifting"
              },
              {
                "id": "PAD_Use_0",
                "speaker": "Player",
                "text": "Don't get used to it. One taste of regal power might have you craving more.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_Use": "The player sits on Ketherics throne. They feel powerful, though their companions are not convinced. ."
          }
        },
        "geb_moo": {
          "scenario_name": "geb_moo",
          "session_sequence": [
            "General_SpottedUnwelcomeVisitors"
          ],
          "paths": {
            "General_SpottedUnwelcomeVisitors": [
              "General_SpottedUnwelcomeVisitors_0"
            ]
          },
          "node_data": {
            "General_SpottedUnwelcomeVisitors": [
              {
                "id": "General_SpottedUnwelcomeVisitors_0",
                "speaker": "Narrator",
                "text": "*You're not welcome in Moonrise, and your presence hasn't gone unnoticed. Time to fight... or flee.*",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Crimes_State_UnwelcomeVisitorAccompanied = False"
                ],
                "setflags": [
                  "FactionHostileToPlayerGroupAfterDialog"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "General_SpottedUnwelcomeVisitors": ""
          }
        },
        "moo_catbusiness": {
          "scenario_name": "moo_catbusiness",
          "session_sequence": [
            "",
            "AD_CrimeReaction"
          ],
          "paths": {
            "": [
              "77",
              "87",
              "35",
              "65",
              "7",
              "59",
              "31",
              "63",
              "14"
            ],
            "AD_CrimeReaction": [
              "AD_CrimeReaction_0"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "77",
                "speaker": "Steelclaw",
                "text": "These are the stalking grounds of Steelclaw, furless one - tread lightly.",
                "node_type": "normal",
                "checkflags": [
                  "REALLY_DARK_URGE = False",
                  "PETPAL"
                ],
                "setflags": [
                  "MOO_CatBusiness_HasMet_SwA",
                  "MOO_Background_Outlander_CatBusiness"
                ],
                "goto": "",
                "link": "7",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: low threatening tone"
              },
              {
                "id": "87",
                "speaker": "Steelclaw",
                "text": "Fortunately for you, the slithering vermin I hunt has my attention - for now.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_CatBusiness_State_TadpoleMissing = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "7",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: cold and murderous, hinting that she'd turn on the player in an instant"
              },
              {
                "id": "35",
                "speaker": "Player",
                "text": "The parasites are dangerous, don't go near them.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_CatBusiness_State_TadpoleMissing = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "7",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "65",
                "speaker": "Steelclaw",
                "text": "Do not push your own cowardice upon me.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "7",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: disgusted with the player. She is a hunter, she will kill only the most deadly of prey"
              },
              {
                "id": "7",
                "speaker": "Steelclaw",
                "text": "I braved lapping waters and leaking ships to find this prey. I butchered many, and will butcher many more.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "89",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: cold and murderous but starting to get a little excited at the mention of the butchering"
              },
              {
                "id": "59",
                "speaker": "Steelclaw",
                "text": "But this one - this one I toy with. I slice, I tear, and when the time is right, I will bite its head off and bathe in its innards.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_CatBusiness_State_TadpoleMissing = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "89",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: going full on murderous psychopath as her excitement builds, peaking in the last line."
              },
              {
                "id": "31",
                "speaker": "Player",
                "text": "How boring, surely you can be a bit more creative?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "39",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "63",
                "speaker": "Steelclaw",
                "text": "Your mocking tone is a mistake, your first and last.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "39",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: cold and murderous"
              },
              {
                "id": "14",
                "speaker": "",
                "text": "",
                "node_type": "alias",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_CrimeReaction": [
              {
                "id": "AD_CrimeReaction_0",
                "speaker": "Steelclaw",
                "text": "*Hiss.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "": "As the player explore the surrounding of Moonrise, they can encounter a cat playing with a dead tadpole. Upon interacting with this cat, player can learn where the tadpoles are actually being stored at (SWA) or the location of a nearby tunnel they can use in cat form (Non-SWA). Steelclaw is a murdering psychopath who revels in blood and gore.",
            "AD_CrimeReaction": ""
          }
        },
        "moo_balthazarlab": {
          "scenario_name": "moo_balthazarlab",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "moo_hiddentreasure": {
          "scenario_name": "moo_hiddentreasure",
          "session_sequence": [
            "PAD_TreasureDiscovered"
          ],
          "paths": {
            "PAD_TreasureDiscovered": [
              "PAD_TreasureDiscovered_0"
            ]
          },
          "node_data": {
            "PAD_TreasureDiscovered": [
              {
                "id": "PAD_TreasureDiscovered_0",
                "speaker": "Player",
                "text": "This is the spot that's marked on that map.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_TreasureDiscovered": "Player passes a spot at the base of MOO that they'd earlier found marked on a map."
          }
        },
        "moo_bugbearvendor": {
          "scenario_name": "moo_bugbearvendor",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "50",
              "122",
              "12",
              "81"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "50",
                "speaker": "Lann Tarv",
                "text": "If you have coin, then show it.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_BugBearVendor_HasMet_BazBugBear = False"
                ],
                "setflags": [
                  "MOO_BugBearVendor_HasMet_BazBugBear"
                ],
                "goto": "",
                "link": "22",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: suspicious, weighing up the person he's greeting"
              },
              {
                "id": "122",
                "speaker": "Player",
                "text": "You'll never peddle your wares with that attitude.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_BugBearVendor_State_FoundMotive = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "81",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "12",
                "speaker": "Lann Tarv",
                "text": "I do not peddle. I put weapons in worthy hands.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: proud"
              },
              {
                "id": "81",
                "speaker": "Lann Tarv",
                "text": "The Absolute needs warriors for Her crusade. But I see only weaklings in this place.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_BugBearVendor_State_FoundMotive"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Faintly disgusted - he looks around and sees typically 'non-monstrous' races - the kind his people usually prey on"
              }
            ]
          },
          "session_synopses": {
            "": "A merchant selling in the bazaar on the ground floor of Moonrise Tower. He is a passionate bugbear who believes only the strongest should enjoy the Absolute's spoils. Players can earn his respect for a discount."
          }
        },
        "moo_execution": {
          "scenario_name": "moo_execution",
          "session_sequence": [
            "AD_MintharaPlea",
            "Guard_003",
            "Guard_002",
            "AD_DarraPlea",
            "AD_SazzaPlea",
            "AD_GoblinsInCombat",
            ""
          ],
          "paths": {
            "AD_MintharaPlea": [
              "AD_MintharaPlea_0"
            ],
            "Guard_003": [
              "Guard_003_0"
            ],
            "Guard_002": [
              "Guard_002_0"
            ],
            "AD_DarraPlea": [
              "AD_DarraPlea_0"
            ],
            "AD_SazzaPlea": [
              "AD_SazzaPlea_0"
            ],
            "AD_GoblinsInCombat": [
              "AD_GoblinsInCombat_0"
            ],
            "": [
              "297",
              "291",
              "221",
              "46",
              "73",
              "283",
              "88",
              "36",
              "261",
              "349",
              "78",
              "214",
              "100",
              "335",
              "336",
              "64",
              "10",
              "349",
              "78",
              "125",
              "81",
              "94"
            ]
          },
          "node_data": {
            "AD_MintharaPlea": [
              {
                "id": "AD_MintharaPlea_0",
                "speaker": "Nightwarden Minthara",
                "text": "I await your judgement, General.",
                "node_type": "normal",
                "checkflags": [
                  "d66f886c-c9bb-0221-2536-0749f5162225_B"
                ],
                "setflags": [
                  "d66f886c-c9bb-0221-2536-0749f5162225_B = False",
                  "d66f886c-c9bb-0221-2536-0749f5162225_A = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: defiant, confident"
              }
            ],
            "Guard_003": [
              {
                "id": "Guard_003_0",
                "speaker": "Zealot Falla",
                "text": "In Her name, Her design.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Execution_Guard_003_Hasmet"
                ],
                "setflags": [
                  "MOO_Execution_Guard_003_Hasmet = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: General fallback nodes where none of the above apply. Almost ALWAYS comes after Execution state (directly above)\rNodeContext: a blessing / saying in their church"
              }
            ],
            "Guard_002": [
              {
                "id": "Guard_002_0",
                "speaker": "Zealot Niram",
                "text": "To the city, True Soul! The waiting's done.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Execution_Guard_002_Hasmet = False",
                  "MOO_Audience_State_Ready"
                ],
                "setflags": [
                  "MOO_Execution_Guard_002_Hasmet"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: The player has kidnapped Isobel and helped return Nightsong and Balthazar to Moonrise. The army of the Absolute is ready to march.\rNodeContext: Quietly fanatic - can't wait to march"
              }
            ],
            "AD_DarraPlea": [
              {
                "id": "AD_DarraPlea_0",
                "speaker": "Darra",
                "text": "Spare us!",
                "node_type": "normal",
                "checkflags": [
                  "5a06a8ed-94c6-2f89-1294-63be32905562_B"
                ],
                "setflags": [
                  "5a06a8ed-94c6-2f89-1294-63be32905562_B = False",
                  "5a06a8ed-94c6-2f89-1294-63be32905562_A = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: a plea to nobody in particular"
              }
            ],
            "AD_SazzaPlea": [
              {
                "id": "AD_SazzaPlea_0",
                "speaker": "Sazza",
                "text": "I didn't survive mad druids and hungry spiders to die here.",
                "node_type": "normal",
                "checkflags": [
                  "e7931ff2-b371-33f2-96e1-9b3bb157f2ad_B"
                ],
                "setflags": [
                  "e7931ff2-b371-33f2-96e1-9b3bb157f2ad_B = False",
                  "e7931ff2-b371-33f2-96e1-9b3bb157f2ad_A = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Muttering anxiously"
              }
            ],
            "AD_GoblinsInCombat": [
              {
                "id": "AD_GoblinsInCombat_0",
                "speaker": "Darra",
                "text": "I won't go easy, if that's what yeh think.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: The drow that was controlling your actions just died and you're about to run away"
              }
            ],
            "": [
              {
                "id": "297",
                "speaker": "Fezzerk",
                "text": "We did as we was told, General! Followed every order -",
                "node_type": "normal",
                "checkflags": [
                  "FOR_GOBLINTRIBE"
                ],
                "setflags": [],
                "goto": "",
                "link": "291",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "291",
                "speaker": "Disciple Z'rell",
                "text": "The facts suggest otherwise. You were ordered to retrieve the artefact - you failed to do so.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_Execution_Knows_Executioner"
                ],
                "goto": "",
                "link": "343",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "221",
                "speaker": "Drenn",
                "text": "Take it up with Minthara. She's the one who -",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "46",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "46",
                "speaker": "Disciple Z'rell",
                "text": "Enough!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "343",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Via mind meld\rNodeContext: Via mind meld"
              },
              {
                "id": "73",
                "speaker": "Narrator",
                "text": "*A blast of mental energy washes over you, filling the room. Your tadpole squirms, urging you to obey.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "343",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Mindmeld"
              },
              {
                "id": "283",
                "speaker": "Disciple Z'rell",
                "text": "You failed to retrieve the artefact. You failed to protect your True Soul. You do not deserve to live.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "343",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "88",
                "speaker": "Player",
                "text": "Attack.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Execution_State_PlayerWantedToAttack = False"
                ],
                "setflags": [
                  "MOO_Execution_State_PlayerWantedToAttack"
                ],
                "goto": "",
                "link": "10",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "36",
                "speaker": "",
                "text": "",
                "node_type": "alias",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_Random"
                ],
                "goto": "",
                "link": "10",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "261",
                "speaker": "",
                "text": "",
                "node_type": "alias",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "349",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "349",
                "speaker": "Narrator",
                "text": "*You're standing in the lion's den, facing a legendary general, his guards, and who knows what eldritch powers. Just in case you needed a reminder.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "78",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: The player is about to attack someone that's probably going to absolutely crush them, and we're reminding them it might not be a great idea"
              },
              {
                "id": "78",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_End_Random"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "214",
                "speaker": "Player",
                "text": "Hold back.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "100",
                "speaker": "Disciple Z'rell",
                "text": "Well, True Soul? What about the goblins?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "335",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "336",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "336",
                "speaker": "Disciple Z'rell",
                "text": "Enough! True Soul - tell the General how the goblins served our cause.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "64",
                "speaker": "Player",
                "text": "Attack the half-orc and the general.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Execution_State_PlayerWantedToAttack = False"
                ],
                "setflags": [
                  "MOO_Execution_State_PlayerWantedToAttack"
                ],
                "goto": "",
                "link": "78",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "10",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_Random"
                ],
                "goto": "",
                "link": "78",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "349",
                "speaker": "Narrator",
                "text": "*You're standing in the lion's den, facing a legendary general, his guards, and who knows what eldritch powers. Just in case you needed a reminder.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "78",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: The player is about to attack someone that's probably going to absolutely crush them, and we're reminding them it might not be a great idea"
              },
              {
                "id": "78",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_End_Random"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "125",
                "speaker": "Player",
                "text": "Attack!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "81",
                "speaker": "Disciple Z'rell",
                "text": "You blasphemous little wretch!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: furious, directed at player"
              },
              {
                "id": "94",
                "speaker": "Ketheric Thorm",
                "text": "How amusing. Take care of them, Z'rell.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_MoonriseTower_State_Outcast"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_MintharaPlea": "Minthara is pleading for her life before Ketheric at the MOO Execution scene.These are played as interjections after Ketheric finishes his own AD.",
            "Guard_003": "Female Human. Guard and Absolute cultist.",
            "Guard_002": "Male Drow. Guard and Absolute cultist.",
            "AD_DarraPlea": "Goblins are pleading for their lives before Ketheric at the MOO Execution scene.These are played as interjections after Ketheric finishes his own AD.",
            "AD_SazzaPlea": "Goblins are pleading for their lives before Ketheric at the MOO Execution scene.These are played as interjections after Ketheric finishes his own AD.",
            "AD_GoblinsInCombat": "The goblins have just been attacked by the player - they know the player is probably going to kill then.",
            "": "When we arrive in Moonrise towers, we almost immediately stumble upon a drow True Soul executing three goblins. Critpath."
          }
        },
        "moo_kitchen": {
          "scenario_name": "moo_kitchen",
          "session_sequence": [
            "AD_Gnoll02"
          ],
          "paths": {
            "AD_Gnoll02": [
              "AD_Gnoll02_0"
            ]
          },
          "node_data": {
            "AD_Gnoll02": [
              {
                "id": "AD_Gnoll02_0",
                "speaker": "'Tomelia'",
                "text": "*Snarl*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_Gnoll02": "A gnoll in the kitchen of Moonrise Tower"
          }
        },
        "moo_isobelroom": {
          "scenario_name": "moo_isobelroom",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "moo_upperfloor": {
          "scenario_name": "moo_upperfloor",
          "session_sequence": [
            "AD_AccessCultistPrayer",
            "Guard01"
          ],
          "paths": {
            "AD_AccessCultistPrayer": [
              "AD_AccessCultistPrayer_0"
            ],
            "Guard01": [
              "Guard01_2",
              "Guard01_1"
            ]
          },
          "node_data": {
            "AD_AccessCultistPrayer": [
              {
                "id": "AD_AccessCultistPrayer_0",
                "speaker": "Radija",
                "text": "Many hearts, one soul. In Your name, Absolute.",
                "node_type": "normal",
                "checkflags": [
                  "3e7a6665-f36f-0ddb-3882-7d68260b2104_A"
                ],
                "setflags": [
                  "3e7a6665-f36f-0ddb-3882-7d68260b2104_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Guard01": [
              {
                "id": "Guard01_2",
                "speaker": "Zealot Bennel",
                "text": "Seen the view out west from the terrace? All those beasts camped under one banner.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_UpperFloor_HasMet_Guard01 = False"
                ],
                "setflags": [
                  "MOO_UpperFloor_HasMet_Guard01"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Proud"
              },
              {
                "id": "Guard01_1",
                "speaker": "Zealot Bennel",
                "text": "That's the Absolute's power. The General's power.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_AccessCultistPrayer": "The cultest standing by the door to the roof of Moonrise recites prayers to herself in tones of quiet reverence. 2 of her ADs echo the prayers of Myrkulite cultist we meet below.",
            "Guard01": "An Absolute guard on the upper floor. An officer in the army, reverent and deferential to General Thorm."
          }
        },
        "moo_bazaar": {
          "scenario_name": "moo_bazaar",
          "session_sequence": [
            "PAD_SharranObservation",
            "Zhent02",
            "BazEntranceGuard",
            "AD_BugbearThrow",
            "BazaarStander_006",
            "BazaarStander_007",
            "Guard01",
            "Bystander01",
            "Bystander00",
            "Guard00",
            "AD_GoblinsListening",
            "AD_BazEntranceGuard_002",
            "AD_Minthara_BazaarEntry",
            "AD_GoblinsAfterExecution",
            "AD_ZhentarimCrew"
          ],
          "paths": {
            "PAD_SharranObservation": [
              "PAD_SharranObservation_0"
            ],
            "Zhent02": [
              "Zhent02_0"
            ],
            "BazEntranceGuard": [
              "BazEntranceGuard_0",
              "BazEntranceGuard_8",
              "BazEntranceGuard_4",
              "BazEntranceGuard_27",
              "BazEntranceGuard_26"
            ],
            "AD_BugbearThrow": [
              "AD_BugbearThrow_0"
            ],
            "BazaarStander_006": [
              "BazaarStander_006_0"
            ],
            "BazaarStander_007": [
              "BazaarStander_007_0"
            ],
            "Guard01": [
              "Guard01_0"
            ],
            "Bystander01": [
              "Bystander01_0",
              "Bystander01_1"
            ],
            "Bystander00": [
              "Bystander00_0"
            ],
            "Guard00": [
              "Guard00_5",
              "Guard00_2",
              "Guard00_3",
              "Guard00_6"
            ],
            "AD_GoblinsListening": [
              "AD_GoblinsListening_0",
              "AD_GoblinsListening_6",
              "AD_GoblinsListening_4"
            ],
            "AD_BazEntranceGuard_002": [
              "AD_BazEntranceGuard_002_0"
            ],
            "AD_Minthara_BazaarEntry": [
              "AD_Minthara_BazaarEntry_0"
            ],
            "AD_GoblinsAfterExecution": [
              "AD_GoblinsAfterExecution_2",
              "AD_GoblinsAfterExecution_4",
              "AD_GoblinsAfterExecution_8",
              "AD_GoblinsAfterExecution_1"
            ],
            "AD_ZhentarimCrew": [
              "AD_ZhentarimCrew_8",
              "AD_ZhentarimCrew_6",
              "AD_ZhentarimCrew_7",
              "AD_ZhentarimCrew_2"
            ]
          },
          "node_data": {
            "PAD_SharranObservation": [
              {
                "id": "PAD_SharranObservation_0",
                "speaker": "Shadowheart",
                "text": "There is nothing Sharran about this man. He has betrayed the Dark Lady.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Quiet anger and disgust."
              }
            ],
            "Zhent02": [
              {
                "id": "Zhent02_0",
                "speaker": "Yerle",
                "text": "Ain't looking to convert, True Soul. Gods mind their mess, I mind mine.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Bazaar_HasMet_Zhent02"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Respectful but flat refusal - most Absolutists want to convert others, and she's pre-empting it."
              }
            ],
            "BazEntranceGuard": [
              {
                "id": "BazEntranceGuard_0",
                "speaker": "Acolyte Belub",
                "text": "Each pack of 'recruits' they bring in is worse than the last.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Bazaar_State_TalkedAboutPilgrims = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "7",
                "is_end": false,
                "approval": [],
                "context": "InternalNodeContext: Belub is not impressed by the new pilgrims who have shown up to join the Absolutes cause."
              },
              {
                "id": "BazEntranceGuard_8",
                "speaker": "Acolyte Belub",
                "text": "Can't trust them to sweep the stables, let alone swing a sword.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "BazEntranceGuard_4",
                "speaker": "Player",
                "text": "Its not our place to question the Absolute's will.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_Bazaar_State_TalkedAboutPilgrims"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "BazEntranceGuard_27",
                "speaker": "Acolyte Belub",
                "text": "O' course - wouldn't dare! I'm sure She's got a plan.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Reiterating his faith to us"
              },
              {
                "id": "BazEntranceGuard_26",
                "speaker": "Acolyte Belub",
                "text": "And only She knows what part twits like them have to play in it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_BugbearThrow": [
              {
                "id": "AD_BugbearThrow_0",
                "speaker": "Lann Tarv",
                "text": "I could hit a pixie from a hundred paces.",
                "node_type": "normal",
                "checkflags": [
                  "fd9ed69f-475f-def2-bae0-25065ccc4143_A"
                ],
                "setflags": [
                  "fd9ed69f-475f-def2-bae0-25065ccc4143_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: congratulating himself on a well-thrown axe, while practicing"
              }
            ],
            "BazaarStander_006": [
              {
                "id": "BazaarStander_006_0",
                "speaker": "Pilgrim Nalira",
                "text": "The prisoners below are gone, True Soul. I cannot understand why they would flee Her mercy.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Bazaar_BazaarStander_006_JailbreakSuccess_HasMet = False",
                  "MOO_MutuallyExclusive_State_JailbreakSuccess"
                ],
                "setflags": [
                  "MOO_Bazaar_BazaarStander_006_JailbreakSuccess_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: The prisoners successfully escaped from Moonrise's dungeons (perhaps all, perhaps only one)\rNodeContext: Confused, hurt - prisoners in the cell escaped - she saw them as heathens her church was trying to 'save'"
              }
            ],
            "BazaarStander_007": [
              {
                "id": "BazaarStander_007_0",
                "speaker": "Pilgrim Taima",
                "text": "I hear you've been summoned for an audience with Her. You will return changed, I'm sure of it.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Audience_State_Ready"
                ],
                "setflags": [
                  "MOO_Bazaar_BazaarStander_007_AudienceReady_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: The player has kidnapped Isobel and helped return Nightsong and Balthazar to Moonrise. The army of the Absolute is ready to march.\rNodeContext: Wishing us well - we're about to get our 'reward'"
              }
            ],
            "Guard01": [
              {
                "id": "Guard01_0",
                "speaker": "Adept Furek",
                "text": "You should go through the main hall. Witnessing the General's justice is an honour.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Bazaar_HasMet_Guard01_BeforeExecution",
                  "MOO_Execution_Event_KethericLeaves = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Bystander01": [
              {
                "id": "Bystander01_0",
                "speaker": "Brawler Weneg",
                "text": "Heard a rumour some do-gooder stopped a horde of Absolutists from getting their hands on a load of druids in some grove.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Bazaar_HasMet_Bystander01 = False",
                  "DEN_AttackOnDen_State_DenVictory"
                ],
                "setflags": [
                  "MOO_Bazaar_HasMet_Bystander01"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Bystander01_1",
                "speaker": "Brawler Weneg",
                "text": "Whoever it was better pray the General doesn't smoke 'em out. Be a bloodbath, so it would.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Bystander00": [
              {
                "id": "Bystander00_0",
                "speaker": "Brawler Orik",
                "text": "You're the best True Soul I ever met.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Bazaar_Bystander00_GoblinsReleased_Hasmet",
                  "MOO_Execution_Event_ReleasedGoblins"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Guard00": [
              {
                "id": "Guard00_5",
                "speaker": "Adept Dorikel",
                "text": "I saw it, True Soul. The army. They're nearly ready. It's nearly time.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Bazaar_HasMet_Guard00 = False"
                ],
                "setflags": [
                  "MOO_Bazaar_HasMet_Guard00"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Guard00_2",
                "speaker": "Player",
                "text": "What role will you take?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Guard00_3",
                "speaker": "Adept Dorikel",
                "text": "I'm trained as an assassin. House Hekar. Perhaps I can serve as a scout - or special operations.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Guard00_6",
                "speaker": "Adept Dorikel",
                "text": "When the call comes, I'll be ready.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ],
            "AD_GoblinsListening": [
              {
                "id": "AD_GoblinsListening_0",
                "speaker": "Brawler Weneg",
                "text": "Enough! Just leave the bloody True Souls to their business.",
                "node_type": "normal",
                "checkflags": [
                  "c69edf86-a729-aaf0-24b7-3606b44b35a3_B"
                ],
                "setflags": [
                  "c69edf86-a729-aaf0-24b7-3606b44b35a3_A = False",
                  "c69edf86-a729-aaf0-24b7-3606b44b35a3_B = False"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_GoblinsListening_6",
                "speaker": "Brawler Wim",
                "text": "And what's to say that couldn't be us? They say the General rewards them as serve him well.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_GoblinsListening_4",
                "speaker": "Brawler Orik",
                "text": "And what about them who hang around his door like a bad smell?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_BazEntranceGuard_002": [
              {
                "id": "AD_BazEntranceGuard_002_0",
                "speaker": "Zealot Brinn",
                "text": "Another True Soul. The Disciple will want to see you - through the main doors.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Minthara_BazaarEntry": [
              {
                "id": "AD_Minthara_BazaarEntry_0",
                "speaker": "Nightwarden Minthara",
                "text": "Converts, pilgrims, mercenaries. They all seek power, but will find only death.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_GoblinsAfterExecution": [
              {
                "id": "AD_GoblinsAfterExecution_2",
                "speaker": "Brawler Orik",
                "text": "This ain't what we was promised. The Absolute's our god.",
                "node_type": "normal",
                "checkflags": [
                  "a2fa1f0f-b9b5-f8bf-bf27-b11194b8502f_A"
                ],
                "setflags": [
                  "a2fa1f0f-b9b5-f8bf-bf27-b11194b8502f_B"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Bitter, been quietly seething on this for a while"
              },
              {
                "id": "AD_GoblinsAfterExecution_4",
                "speaker": "Brawler Wim",
                "text": "She belongs to everyone, git. That's the point.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Hushing a friend who's saying things that might get them killed"
              },
              {
                "id": "AD_GoblinsAfterExecution_8",
                "speaker": "Brawler Weneg",
                "text": "We're all friends, right? All one under the Absolute.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Said with a meaningful tone, overrding the doubts/concerns of his comrade who's speaking blasphemy"
              },
              {
                "id": "AD_GoblinsAfterExecution_1",
                "speaker": "Brawler Orik",
                "text": "Don't bloody feel like it, all of a sudden.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: muttered to self."
              }
            ],
            "AD_ZhentarimCrew": [
              {
                "id": "AD_ZhentarimCrew_8",
                "speaker": "Roah Moonglow",
                "text": "Smile, Yerle. We're among friends.",
                "node_type": "normal",
                "checkflags": [
                  "cb7a0736-07d5-cc1e-8bab-2e1f7c2a32ca_B"
                ],
                "setflags": [
                  "cb7a0736-07d5-cc1e-8bab-2e1f7c2a32ca_A = False",
                  "cb7a0736-07d5-cc1e-8bab-2e1f7c2a32ca_B = False"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Half-mocking, half-prodding. Her dour bodyguards are looking around at cultists suspiciously"
              },
              {
                "id": "AD_ZhentarimCrew_6",
                "speaker": "Yerle",
                "text": "Too damn friendly, you ask me. Gods-fearing folk ought to be more... fearful.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: The cultists bother her - they're too friendly, too faithful. It's not right."
              },
              {
                "id": "AD_ZhentarimCrew_7",
                "speaker": "Roah Moonglow",
                "text": "Why not join this Absolute, see what all the fuss is about?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Smirking"
              },
              {
                "id": "AD_ZhentarimCrew_2",
                "speaker": "Yerle",
                "text": "...I'll stick with the monster I know, thanks.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Wry, knows she's being mocked  - she's referring to her boss, who she knows is tougher than any cultist of the Absolute"
              }
            ]
          },
          "session_synopses": {
            "PAD_SharranObservation": "Shadowheart notices that Ketheric is no longer a Sharran",
            "Zhent02": "A Zhentarim agent guarding Roah Moonglow. She's looking around at the growing power of the church and feeling wary of it.",
            "BazEntranceGuard": "Standing at the entrance of Moonrise Tower, the guard is keeping eye on all the fresh blood seeking audience with the Absolute. The player can influence the guard to send the pilgrims to their death in Town, or to take a chance on them and send them as fodder to colony. Either way the pilgrims will have a bad time.",
            "AD_BugbearThrow": "The bugbear vendor in Moonrise spends his time throwing an axe at a target. He is quite full of himself and proud of his strength.",
            "BazaarStander_006": "A novice of the church of the Absolute, by turns praying to herself or speaking to us, who she sees as a leading follower of her god",
            "BazaarStander_007": "This novice has joined the church in the hopes of being elevated to True Soul. She's not here for personal gain, but seeking an actual religious experience - one she believes we've already been blessed to have.",
            "Guard01": "A guard watching the alarm system on the ground floor of Moonrise Tower. He love and respects authority, and enjoys the thought of failure being punished.",
            "Bystander01": "A goblin on the floor of Moonrise Towers, chatting absently while being a bystander. His commentary changes depending on how the player handled the grove.",
            "Bystander00": "A goblin on the floor of Moonrise Towers, chatting absently while being a bystander. This one is worried about the other goblins that were sent to the execution room.",
            "Guard00": "A guard watching the alarm system on the ground floor of Moonrise Tower. He's brusque to anyone who approaches.",
            "AD_GoblinsListening": "The Bazaar Goblins are listening into the execution, worried about their own necks.",
            "AD_BazEntranceGuard_002": "The guard points the player towards the execution room after they first enter the tower.",
            "AD_Minthara_BazaarEntry": "",
            "AD_GoblinsAfterExecution": "The Bazaar Goblins talk among themselves after the execution scene.",
            "AD_ZhentarimCrew": "Inside Moonrise Towers, the Zhentarim Guards and Merchant are making a deal with a rising cult. These are their idle exchanges."
          }
        },
        "moo_misc": {
          "scenario_name": "moo_misc",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "moo_entrancecheckpoint": {
          "scenario_name": "moo_entrancecheckpoint",
          "session_sequence": [
            "Guard2",
            "Ghoul2",
            "AD_Guards",
            "AD_Guard001Greeting",
            "Drider"
          ],
          "paths": {
            "Guard2": [
              "Guard2_0"
            ],
            "Ghoul2": [
              "Ghoul2_2"
            ],
            "AD_Guards": [
              "AD_Guards_9",
              "AD_Guards_3",
              "AD_Guards_4",
              "AD_Guards_6"
            ],
            "AD_Guard001Greeting": [
              "AD_Guard001Greeting_0"
            ],
            "Drider": [
              "Drider_12",
              "Drider_33",
              "Drider_14",
              "Drider_47"
            ]
          },
          "node_data": {
            "Guard2": [
              {
                "id": "Guard2_0",
                "speaker": "Adept Merim",
                "text": "Plenty of supplies if you're running low, True Soul.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_EntranceCheckpoint_Guard2_HasMet_AllowedIn = False"
                ],
                "setflags": [
                  "MOO_EntranceCheckpoint_Guard2_HasMet_AllowedIn"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Gruff greeting"
              }
            ],
            "Ghoul2": [
              {
                "id": "Ghoul2_2",
                "speaker": "Ghoul",
                "text": "Worship Her. Love... Her.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Guards": [
              {
                "id": "AD_Guards_9",
                "speaker": "Zealot Malik",
                "text": "Malik?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_Guards_3",
                "speaker": "Zealot Malik",
                "text": "Yes?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_Guards_4",
                "speaker": "Zealot Malik",
                "text": "Who were you before?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_Guards_6",
                "speaker": "Zealot Malik",
                "text": "Before the Absolute? I was nobody.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Guard001Greeting": [
              {
                "id": "AD_Guard001Greeting_0",
                "speaker": "Zealot Malik",
                "text": "You brought Balthazar back from the darkness, I hear. The General will be pleased.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_MutuallyExclusive_State_BalthazarReturn",
                  "550fa509-db7a-cd6d-0854-705de6d21f37_A"
                ],
                "setflags": [
                  "550fa509-db7a-cd6d-0854-705de6d21f37_A = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: The player has helped Balthazar (and this Nightsong) return to Moonrise. He's down in the Colony."
              }
            ],
            "Drider": [
              {
                "id": "Drider_12",
                "speaker": "Kar'niss",
                "text": "You! Heretic!",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_State_FoughtInAmbushWithHarpers",
                  "SCL_Drider_State_SidedWithHarpers"
                ],
                "setflags": [
                  "SCL_Drider_HasMet"
                ],
                "goto": "",
                "link": "21",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Drider_33",
                "speaker": "Narrator",
                "text": "*Your minds connect and you hear a voice whispering to you. The Absolute? Or just the echoes of his fractured mind, reverberating in the darkness?*<br>",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "21",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Mind meld SFX"
              },
              {
                "id": "Drider_14",
                "speaker": "Kar'niss",
                "text": "A - a True Soul? Why would one of your followers fight with the Harpers, Majesty?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "21",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Drider_47",
                "speaker": "Player",
                "text": "Attack.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "TemporaryHostilityAfterDialog"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "Guard2": "Guard who stops you at the entrance to Moonrise Towers.",
            "Ghoul2": "Trianglehead ghoul at the entrance to Moonrise TowerInclusion will only trigger once on one of the three ghouls (so the inclusion on all three should be the same.)",
            "AD_Guards": "The two guards at Moonrise entrance kill time wile on duty.",
            "AD_Guard001Greeting": "The guard at the entrance of Moonrise welcomes the player when they return (after already been formally greeted).",
            "Drider": "Player arrives at Moonrise Tower with the drider.https://docs.google.com/document/d/11ofonJmDnosKsHlpOAejRRQ_lbzwimo8nMFIjcSUkYo"
          }
        },
        "moo_necromancerlab": {
          "scenario_name": "moo_necromancerlab",
          "session_sequence": [
            "AD_DUBackgroundBook"
          ],
          "paths": {
            "AD_DUBackgroundBook": [
              "AD_DUBackgroundBook_0"
            ]
          },
          "node_data": {
            "AD_DUBackgroundBook": [
              {
                "id": "AD_DUBackgroundBook_0",
                "speaker": "",
                "text": "Tendays of dissections of a still-living victim.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_DUBackgroundBook": "Dark Urge reads S_MOO_NecromancerLab_DUBackgroundBook_f19e7958-819d-473e-bed3-5aa5fb4101a3"
          }
        },
        "moo_jailbreak": {
          "scenario_name": "moo_jailbreak",
          "session_sequence": [
            "PAD_ApproachingPrisoners",
            "AD_FlirtyTiefling",
            "AD_TieflingsFreed",
            "AD_TieflingInspection",
            "AD_GnomesInJail",
            "ProdigyBrother",
            "AD_ProdigiesInJail",
            "AD_WardenInspection",
            "AD_ToolRefused",
            "AD_WaitingForGnomes",
            "Guard_004",
            "GnomePrisoner_002",
            "Boat",
            "ProdigySister",
            "AD_ProdigySister",
            "AD_WardenChase",
            "Wulbren",
            "AD_ProdigyBrother",
            "AD_Gnome01",
            "AD_WardenSpottedMissingPrisoners",
            "AD_TieflingLover",
            "AD_Gnome02",
            "AD_Wulbren"
          ],
          "paths": {
            "PAD_ApproachingPrisoners": [
              "PAD_ApproachingPrisoners_0",
              "PAD_ApproachingPrisoners_1"
            ],
            "AD_FlirtyTiefling": [
              "AD_FlirtyTiefling_1"
            ],
            "AD_TieflingsFreed": [
              "AD_TieflingsFreed_0"
            ],
            "AD_TieflingInspection": [
              "AD_TieflingInspection_17",
              "AD_TieflingInspection_3",
              "AD_TieflingInspection_16",
              "AD_TieflingInspection_9"
            ],
            "AD_GnomesInJail": [
              "AD_GnomesInJail_2",
              "AD_GnomesInJail_4",
              "AD_GnomesInJail_5",
              "AD_GnomesInJail_10",
              "AD_GnomesInJail_8"
            ],
            "ProdigyBrother": [
              "ProdigyBrother_0"
            ],
            "AD_ProdigiesInJail": [
              "AD_ProdigiesInJail_5",
              "AD_ProdigiesInJail_12",
              "AD_ProdigiesInJail_11",
              "AD_ProdigiesInJail_3"
            ],
            "AD_WardenInspection": [
              "AD_WardenInspection_4",
              "AD_WardenInspection_16",
              "AD_WardenInspection_11",
              "AD_WardenInspection_9"
            ],
            "AD_ToolRefused": [
              "AD_ToolRefused_0"
            ],
            "AD_WaitingForGnomes": [
              "AD_WaitingForGnomes_0"
            ],
            "Guard_004": [
              "Guard_004_0"
            ],
            "GnomePrisoner_002": [
              "GnomePrisoner_002_0"
            ],
            "Boat": [
              "Boat_101",
              "Boat_0",
              "Boat_32",
              "Boat_15",
              "Boat_6",
              "Boat_93",
              "51",
              "NODE_NOT_FOUND"
            ],
            "ProdigySister": [
              "ProdigySister_47",
              "ProdigySister_12",
              "ProdigySister_23",
              "ProdigySister_110"
            ],
            "AD_ProdigySister": [
              "AD_ProdigySister_3"
            ],
            "AD_WardenChase": [
              "AD_WardenChase_0"
            ],
            "Wulbren": [
              "Wulbren_213",
              "Wulbren_241",
              "Wulbren_8",
              "Wulbren_188",
              "Wulbren_239",
              "Wulbren_162",
              "Wulbren_10"
            ],
            "AD_ProdigyBrother": [
              "AD_ProdigyBrother_1"
            ],
            "AD_Gnome01": [
              "AD_Gnome01_1"
            ],
            "AD_WardenSpottedMissingPrisoners": [
              "AD_WardenSpottedMissingPrisoners_0",
              "AD_WardenSpottedMissingPrisoners_1"
            ],
            "AD_TieflingLover": [
              "AD_TieflingLover_0"
            ],
            "AD_Gnome02": [
              "AD_Gnome02_3"
            ],
            "AD_Wulbren": [
              "AD_Wulbren_0"
            ]
          },
          "node_data": {
            "PAD_ApproachingPrisoners": [
              {
                "id": "PAD_ApproachingPrisoners_0",
                "speaker": "Player",
                "text": "Prisoners. I doubt they'll last long in here.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PAD_ApproachingPrisoners_1",
                "speaker": "Player",
                "text": "Careful. One wrong move and we'll be behind bars with them.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_FlirtyTiefling": [
              {
                "id": "AD_FlirtyTiefling_1",
                "speaker": "Lakrissa",
                "text": "Go, go!",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Jailbreak_State_BoatReady",
                  "d7a346d3-3876-7ab2-4b3a-f12103c2b096_H",
                  "MOO_Jailbreak_Event_ADPrepareBoatCombat"
                ],
                "setflags": [
                  "MOO_Jailbreak_Event_ForceBoatLeave",
                  "d7a346d3-3876-7ab2-4b3a-f12103c2b096_H = False",
                  "MOO_Jailbreak_Event_ADPrepareBoatCombat = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: leaving without the player, broken hearted and filled with regret"
              }
            ],
            "AD_TieflingsFreed": [
              {
                "id": "AD_TieflingsFreed_0",
                "speaker": "Wulbren Bongle",
                "text": "Follow or die, tieflings!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: yelling with authority and confidence"
              }
            ],
            "AD_TieflingInspection": [
              {
                "id": "AD_TieflingInspection_17",
                "speaker": "The Warden",
                "text": "Few survive Disciple Balthazar's experiments. This is your chance to submit to the Absolute - to find peace.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "4466a73c-607a-4a7e-c1e5-94d549e8f23d_A"
                ],
                "goto": "",
                "link": "12",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: this is, in a strange way, the warden trying to be comforting, even if it comes across cruel"
              },
              {
                "id": "AD_TieflingInspection_3",
                "speaker": "Danis",
                "text": "Leave me alone. Please.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: tried of being afraid"
              },
              {
                "id": "AD_TieflingInspection_16",
                "speaker": "The Warden",
                "text": "I am far gentler than Disciple Balthazar. You wish to live? Grow a spine.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: rubbing salt in the wound"
              },
              {
                "id": "AD_TieflingInspection_9",
                "speaker": "The Warden",
                "text": "Or, if you're very lucky, perhaps he will split you open and sew in a new one.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: a venemous smile at her cruel words"
              }
            ],
            "AD_GnomesInJail": [
              {
                "id": "AD_GnomesInJail_2",
                "speaker": "Nimble",
                "text": "We should leave - and soon.",
                "node_type": "normal",
                "checkflags": [
                  "74d25b24-618f-3f38-da72-8fbb9f6a8385_B"
                ],
                "setflags": [
                  "74d25b24-618f-3f38-da72-8fbb9f6a8385_A = False",
                  "74d25b24-618f-3f38-da72-8fbb9f6a8385_B = False"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: scared and a little frantic"
              },
              {
                "id": "AD_GnomesInJail_4",
                "speaker": "Wulbren Bongle",
                "text": "That is the plan, Nickels.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: sarcasm and condescending"
              },
              {
                "id": "AD_GnomesInJail_5",
                "speaker": "Nickels",
                "text": "There's something evil here. Below, down, down... argh!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: scared and panicked, noise of pain at 'argh'. Clutches head briefly"
              },
              {
                "id": "AD_GnomesInJail_10",
                "speaker": "Nimble",
                "text": "Breathe - I've got you.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: comforting her friend"
              },
              {
                "id": "AD_GnomesInJail_8",
                "speaker": "Wulbren Bongle",
                "text": "Unless this 'evil' can get us out of here, I don't want to hear about it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: doesn't really give a shit his comrade is scrared - focused on himself and the plan"
              }
            ],
            "ProdigyBrother": [
              {
                "id": "ProdigyBrother_0",
                "speaker": "Cal",
                "text": "Don't talk to us. You're just making it worse.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Jailbreak_HasMet_AngrySister",
                  "MOO_Jailbreak_HasMet_ProdigyBrother"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: player has refused to help you - furious"
              }
            ],
            "AD_ProdigiesInJail": [
              {
                "id": "AD_ProdigiesInJail_5",
                "speaker": "Cal",
                "text": "I can't believe Rolan is gone. Gods, just saying it out loud...",
                "node_type": "normal",
                "checkflags": [
                  "GLO_Prodigy_State_ToldSiblingsProdigyDead",
                  "3174fc37-851b-0494-321e-b606f7e43901_A"
                ],
                "setflags": [
                  "3174fc37-851b-0494-321e-b606f7e43901_B"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: frantic, looking through the bars, panicked"
              },
              {
                "id": "AD_ProdigiesInJail_12",
                "speaker": "Lia",
                "text": "Let's focus on escaping, all right?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: gently practical"
              },
              {
                "id": "AD_ProdigiesInJail_11",
                "speaker": "Lia",
                "text": "We'll give Rolan the send off he deserves - when we're both safe.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: gently practical"
              },
              {
                "id": "AD_ProdigiesInJail_3",
                "speaker": "Cal",
                "text": "You're right. Let's... let's talk about something else.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: heartbroken, but knows lia is right"
              }
            ],
            "AD_WardenInspection": [
              {
                "id": "AD_WardenInspection_4",
                "speaker": "The Warden",
                "text": "I know what you're doing, and there's little point.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Jailbreak_State_SpecialInspection",
                  "25c1ac70-f65f-4869-8a74-eff5827d9cde"
                ],
                "setflags": [
                  "MOO_Jailbreak_State_SpecialInspection = False"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: smirking, taunting her prisoners"
              },
              {
                "id": "AD_WardenInspection_16",
                "speaker": "The Warden",
                "text": "Submit to the Absolute or perish - it's that simple.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: to the warden this is the easiest choice in the world"
              },
              {
                "id": "AD_WardenInspection_11",
                "speaker": "Wulbren Bongle",
                "text": "I'm afraid I don't know what you mean.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: very clearly feigning ignorance"
              },
              {
                "id": "AD_WardenInspection_9",
                "speaker": "The Warden",
                "text": "Playing coy? Very well. I'll enjoy breaking you when the time comes.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: smirking, taunting her prisoners"
              }
            ],
            "AD_ToolRefused": [
              {
                "id": "AD_ToolRefused_0",
                "speaker": "Wulbren Bongle",
                "text": "Gaerdal help me - how about a club? A hammer? Hurry!",
                "node_type": "normal",
                "checkflags": [
                  "100f38ef-e9bb-ae9b-0804-f82a335fb3c9_B"
                ],
                "setflags": [
                  "100f38ef-e9bb-ae9b-0804-f82a335fb3c9_A = False",
                  "100f38ef-e9bb-ae9b-0804-f82a335fb3c9_B = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: on the brink of losing his temper, trying to sound authorative but he really just wants to call the player an idiot"
              }
            ],
            "AD_WaitingForGnomes": [
              {
                "id": "AD_WaitingForGnomes_0",
                "speaker": "Lakrissa",
                "text": "Shh. Not a word - the gnomes are on their way.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Quiet, hushed, determined (about to escape the prison)"
              }
            ],
            "Guard_004": [
              {
                "id": "Guard_004_0",
                "speaker": "Zealot Nadi",
                "text": "Don't speak to the prisoners. The Absolute forbids it.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Jailbreak_HasMet_Guard004 = False"
                ],
                "setflags": [
                  "MOO_Jailbreak_HasMet_Guard004"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "GnomePrisoner_002": [
              {
                "id": "GnomePrisoner_002_0",
                "speaker": "Nickels",
                "text": "Nimble said to close my eyes. But I can hear it - the stone is screaming.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Jailbreak_HasMet_Gnome003AtBoat",
                  "MOO_Jailbreak_State_Escaping",
                  "MOO_Jailbreak_State_BoatEscape"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: terrified"
              }
            ],
            "Boat": [
              {
                "id": "Boat_101",
                "speaker": "Wulbren Bongle",
                "text": "Boat's good to go - all that's left is to ship off.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Jailbreak_State_BoatLeader"
                ],
                "setflags": [],
                "goto": "",
                "link": "1",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: tense but relieved - they've made it to the boat and are about to flee moonrise"
              },
              {
                "id": "Boat_0",
                "speaker": "Wulbren Bongle",
                "text": "My plan, for now, is to hide out on the water. Unless you have a better idea?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "30d43adb-dcaf-c0f3-d432-af96a1c2e1ea_spoketowulbren"
                ],
                "goto": "",
                "link": "1",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Boat_32",
                "speaker": "Player",
                "text": "If I were you, I'd stay on the water. But it's your call.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_Jailbreak_Event_BoatLeavesWithoutPlayers"
                ],
                "goto": "",
                "link": "93",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Boat_15",
                "speaker": "Danis",
                "text": "True - anywhere is better than here.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: worried but trying to be confident"
              },
              {
                "id": "Boat_6",
                "speaker": "Danis",
                "text": "But I can't leave without saying this - something big is going on in Moonrise. I heard whispers of something - an army. Do what you have to here, and then leave. Soon.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: worried for player"
              },
              {
                "id": "Boat_93",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "51",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "51",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ],
            "ProdigySister": [
              {
                "id": "ProdigySister_47",
                "speaker": "Lia",
                "text": "Let me guess - 'The Absolute is the only way.'? Don't bother.",
                "node_type": "normal",
                "checkflags": [
                  "8a4a686d-6c47-411f-a0b3-d79ff33e2922"
                ],
                "setflags": [
                  "MOO_Jailbreak_HasMet_ProdigySister",
                  "MOO_Jailbreak_Event_ProdigyIntro"
                ],
                "goto": "",
                "link": "113",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: disgust - assumes player is a traitor"
              },
              {
                "id": "ProdigySister_12",
                "speaker": "Lia",
                "text": "Why don't you and Zevlor take a long walk off a short cliff?",
                "node_type": "normal",
                "checkflags": [
                  "DEN_TieflingLeader_State_PermaDefeated = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "113",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: disgust - assumes player is a traitor"
              },
              {
                "id": "ProdigySister_23",
                "speaker": "Player",
                "text": "This isn't my problem.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_Jailbreak_HasMet_AngrySister"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Astarion 1",
                  "Gale -1",
                  "Lae'zel 1",
                  "Shadowheart 1",
                  "Wyll -1",
                  "Karlach 1",
                  "Minthara 1",
                  "Halsin -1"
                ],
                "context": ""
              },
              {
                "id": "ProdigySister_110",
                "speaker": "Lia",
                "text": "Why are you even here? Go run and play with Zev, yeah?",
                "node_type": "normal",
                "checkflags": [
                  "DEN_TieflingLeader_State_PermaDefeated = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: disgusted with player"
              }
            ],
            "AD_ProdigySister": [
              {
                "id": "AD_ProdigySister_3",
                "speaker": "Lia",
                "text": "Let's not push our luck any further - we should move.",
                "node_type": "normal",
                "checkflags": [
                  "0276d317-8b34-66e2-48e2-6b9d69d6830b_E",
                  "MOO_Jailbreak_Event_ADWaitingForBoat"
                ],
                "setflags": [
                  "0276d317-8b34-66e2-48e2-6b9d69d6830b_F",
                  "MOO_Jailbreak_Event_ADWaitingForBoat = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: tense  - waiting by the boat and safe for now, but that could change at a moment's notice"
              }
            ],
            "AD_WardenChase": [
              {
                "id": "AD_WardenChase_0",
                "speaker": "The Warden",
                "text": "The prisoners are escaping! All arms to me - NOW.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Roaring with authority and fury"
              }
            ],
            "Wulbren": [
              {
                "id": "Wulbren_213",
                "speaker": "Wulbren Bongle",
                "text": "What in the Nine Hells have you done? Moonrise has lost its damn mind - and we're next on the cutting block.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Jailbreak_HasMet_Wulbren",
                  "MOO_MoonriseTower_State_Outcast"
                ],
                "setflags": [
                  "MOO_Jailbreak_HasMet_WulbrenOutcast"
                ],
                "goto": "",
                "link": "125",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: furious with player"
              },
              {
                "id": "Wulbren_241",
                "speaker": "Player",
                "text": "In my defence, it was an accident.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "125",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Wulbren_8",
                "speaker": "Wulbren Bongle",
                "text": "Gaerdal help me.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Furious. \"Gaerdal\" = GAIR-dul. Gaerdal is a deity, so expressed like \"God help me.\""
              },
              {
                "id": "Wulbren_188",
                "speaker": "Wulbren Bongle",
                "text": "We need to get out of here or we're stone dead. Get us tools, anything that could crack the wall behind us.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_Jailbreak_Knows_ToolsNeeded"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: panicked - desperately trying to sway player"
              },
              {
                "id": "Wulbren_239",
                "speaker": "Wulbren Bongle",
                "text": "Or find a way to get this damn door open. Hurry!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: panicked - desperately trying to sway player"
              },
              {
                "id": "Wulbren_162",
                "speaker": "Player",
                "text": "Got it - I'll be back soon.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Gale 1",
                  "Lae'zel 1",
                  "Astarion 1",
                  "Shadowheart 1",
                  "Wyll 1",
                  "Karlach 1",
                  "Halsin 1",
                  "Minthara 1"
                ],
                "context": ""
              },
              {
                "id": "Wulbren_10",
                "speaker": "Wulbren Bongle",
                "text": "Hurry - or we're all dead.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: trying not to sound to frustrated that the job isn't done - wants player to hurry"
              }
            ],
            "AD_ProdigyBrother": [
              {
                "id": "AD_ProdigyBrother_1",
                "speaker": "Cal",
                "text": "I can't stand this place. What's the hold up?",
                "node_type": "normal",
                "checkflags": [
                  "HAV_ProdigyLament_Event_ToldDeadSiblings",
                  "8f847adf-7b8a-3551-cfc0-4ea0c66a999a_E",
                  "MOO_Jailbreak_Event_ADWaitingForBoat"
                ],
                "setflags": [
                  "8f847adf-7b8a-3551-cfc0-4ea0c66a999a_F",
                  "MOO_Jailbreak_Event_ADWaitingForBoat = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: quiet and tense  - waiting by the boat and safe for now, but that could change at a moment's notice"
              }
            ],
            "AD_Gnome01": [
              {
                "id": "AD_Gnome01_1",
                "speaker": "Nimble",
                "text": "Damn it all - let's go!",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Jailbreak_State_BoatReady",
                  "def4fa7c-dd6f-a208-63a9-8eadfca3fbc1_H",
                  "MOO_Jailbreak_Event_ADPrepareBoatCombat"
                ],
                "setflags": [
                  "MOO_Jailbreak_Event_ForceBoatLeave",
                  "def4fa7c-dd6f-a208-63a9-8eadfca3fbc1_H = False",
                  "def4fa7c-dd6f-a208-63a9-8eadfca3fbc1_A = False",
                  "MOO_Jailbreak_Event_ADPrepareBoatCombat = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: leaving the player behind to die as she hops on the boat and leaves"
              }
            ],
            "AD_WardenSpottedMissingPrisoners": [
              {
                "id": "AD_WardenSpottedMissingPrisoners_0",
                "speaker": "The Warden",
                "text": "What? Where are the prisoners?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: frantic, looking through the bars, panicked"
              },
              {
                "id": "AD_WardenSpottedMissingPrisoners_1",
                "speaker": "The Warden",
                "text": "I'll be flayed alive for this.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: the usually intimidating warden is terrified for herself - knows her fate for letting the prisoners escpae"
              }
            ],
            "AD_TieflingLover": [
              {
                "id": "AD_TieflingLover_0",
                "speaker": "Danis",
                "text": "We don't have time. Get to the boat, or we leave!",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Jailbreak_State_BoatReady",
                  "MOO_Jailbreak_Event_ADPrepareBoatCombat"
                ],
                "setflags": [
                  "4951b7ce-8495-b2c8-badc-beaff0e3d807_H",
                  "MOO_Jailbreak_Event_ADPrepareBoatCombat = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: calling out to the player, who is in combat. Wants to leave on the boat and now"
              }
            ],
            "AD_Gnome02": [
              {
                "id": "AD_Gnome02_3",
                "speaker": "Nickels",
                "text": "Flimsy wood. Is it safe? Can it hold us?",
                "node_type": "normal",
                "checkflags": [
                  "00a82e63-fae8-cc02-0b2b-314c9d21ce6c_E",
                  "MOO_Jailbreak_Event_ADWaitingForBoat"
                ],
                "setflags": [
                  "00a82e63-fae8-cc02-0b2b-314c9d21ce6c_F",
                  "MOO_Jailbreak_Event_ADWaitingForBoat = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: tense and nervous - waiting by the boat (it's briefly safe) to leave"
              }
            ],
            "AD_Wulbren": [
              {
                "id": "AD_Wulbren_0",
                "speaker": "Wulbren Bongle",
                "text": "Blasted chains - keep the bastards off me!",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Jailbreak_Event_ADPrepareBoatCombat"
                ],
                "setflags": [
                  "MOO_Jailbreak_Event_ADPrepareBoatCombat = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: gritted teeth, trying to break the chains that have tied up the boat. Trying not to panic"
              }
            ]
          },
          "session_synopses": {
            "PAD_ApproachingPrisoners": "Quick VB about the prisoners and the fate that awaits them. This is mainly used to draw attention to them as the players explore the prison area.",
            "AD_FlirtyTiefling": "Collection of solo ADs used by character during the Jailbreak escape in Moonrise Towers.",
            "AD_TieflingsFreed": "Wulbren has just bust down the back wall of a prison to very surprised tieflings, who he barks this out at.",
            "AD_TieflingInspection": "Warden has an exchange with the tieflings in Jail.",
            "AD_GnomesInJail": "The gnomes are in jail and discussing their predicament. Wulbren is taking charge and nickles and nimble are doing their best to help.",
            "ProdigyBrother": "Cal is the brother of Lia and Rolan. He was ambushed along with the other tieflings and taken to Moonrise. His brother Rolan is at Last light inn. He is afraid but trying to be strong for the other tieflings, and is determined to save his sister.",
            "AD_ProdigiesInJail": "AD between Cal and Lia in Moonris prison. They are exhausted and being held by murderous cultists of the Absolute.",
            "AD_WardenInspection": "Warden heard the gnomes are up to no good and goes verify by herself. The warden stands outside their cell and essentially taunts them - she thinks they are worthless and will die in the cell.",
            "AD_ToolRefused": "Wulbren has asked the player to get 'tools'. Player has to throw the tool to him in the cell. In this instance, player has thrown something to him he can't use.",
            "AD_WaitingForGnomes": "Tieflings will wait for the gnomes to rescue them if the gnome have tools and their back wall is broken down whilst the tieflings are still in their cells.Their out of combat behaviour has them huddle close to their own wall, hoping for rescue.If combat starts, they give in and start smacking the wall as well.",
            "Guard_004": "Nadi doesn't enjoy being a prison guard but considers it her duty. She tries to reassure the player.",
            "GnomePrisoner_002": "Nickles is a savant who has an incredible ability to read the earth and stone around him, but is nervous and quite fearful as a person. He is easily frightened. He is imprisoned in moonrise and in the following lines escapes by boat (which he hates)/fights his way out/ and has a general greeting.",
            "Boat": "After Wulbren instigates the escape any escaping prisoners try to make it to the boat and flee Moonrise. This dialogue covers the case in which the boat leaves without the player or joins them in the escape.",
            "ProdigySister": "This is lia's main dialogue in moonrise towers. She's been taken captive (along with her brother cal) - she doesn't know if her other brother rolan is alive or dead. Lia is brave and used to being in tough situations, but she's terrified for herself anf her brother (and trying to mask it with anger). Her main dialogue occurs with her in a cell and speaking to the player on the other side of the bars. There are additional branches for when she's in one cell and the player was arrested an in the cell next to her.",
            "AD_ProdigySister": "Collection of solo ADs used by character during the Jailbreak escape in Moonrise Towers. This is a high stress and tense situation as this character tries to flee murderous cultists.",
            "AD_WardenChase": "Warden runs out of her post to go after the prisoners.",
            "Wulbren": "Wulbren is the leader of the Ironhand Gnomes. He is currently imprisoned in moonrise towers. He has the lazy charm of arrogant and the determination and cunning of the leader of a revolution. In this dialogue he offers you the main quest - to free him and the tieflings from the prison. He can speak to you through the bars - either with the player in prison, OR with the player speaking to them from the outside. NOTE: Wulbren pushes hard to charm the player and make them think they're friends. He keeps the friendly and charming mask on tight (dropping it only when he insults the player). We can have the lightest touch of menace in this dialogue, a hint that he's holding something back or that there is more to this than it seems, but it should be a light touch. He is friendly and charming here (the mask will drop back at Haven when he is rescued).",
            "AD_ProdigyBrother": "Collection of solo ADs used by character during the Jailbreak escape in Moonrise Towers.",
            "AD_Gnome01": "Collection of solo ADs used by character during the Jailbreak escape in Moonrise Towers.",
            "AD_WardenSpottedMissingPrisoners": "Plays when she spots no prisoners in the cell.",
            "AD_TieflingLover": "Collection of solo ADs used by character during the Jailbreak escape in Moonrise Towers.",
            "AD_Gnome02": "Collection of solo ADs used by character during the Jailbreak escape in Moonrise Towers.",
            "AD_Wulbren": "Collection of solo ADs used by character during the Jailbreak escape in Moonrise Towers."
          }
        },
        "moo_outcast": {
          "scenario_name": "moo_outcast",
          "session_sequence": [
            "AD_KethericCombat"
          ],
          "paths": {
            "AD_KethericCombat": [
              "AD_KethericCombat_0"
            ]
          },
          "node_data": {
            "AD_KethericCombat": [
              {
                "id": "AD_KethericCombat_0",
                "speaker": "Ketheric Thorm",
                "text": "Take your penance - in Her name.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_KethericCombat": "Players triggered outcast state in MOO by attacking Ketheric in execution or going to the roof before time.Plays in the first combat Ketheric participates when the state is active."
          }
        },
        "moo_assault": {
          "scenario_name": "moo_assault",
          "session_sequence": [
            "AD_GuardJumper",
            "AD_AccessCultistCombat",
            "AD_JaheiraSolo",
            "HavenOutcasts_HarperQuartermaster",
            "HavenOutcasts_DockGuard_Ranger",
            "Jaheira_TopOfTowerBackup",
            "Executioner",
            "CrestfallenHound_SwA",
            "KethericLeaving",
            "AssaultHarper_001",
            "HavenOutcasts_DockGuard_Left_Ranger",
            "FirstKethericInterruption",
            "AssaultFlamingFist_001",
            "DarkUrgeButlerReminder",
            "AssaultFlamingFist_002",
            "AssaultHarper_003",
            "PAD_ReadyToMeetKetheric",
            "DaisyAD_FollowKetheric",
            "Jaheira_Following",
            "AssaultHarper_002",
            "JaheiraThroneRoomOrders",
            "AssaultFlamingFist_003",
            "PAD_AfterKethericCombat",
            "AD_PrisonWarden",
            "AD_ZrellCombat",
            "TentaclelessJump",
            "AssaultFlamingFist_004",
            "AD_ZrellTaunt",
            "AD_WardenWaiting",
            "AD_JaheiraMoveForward",
            "PAD_PrisonSkeletonWarning"
          ],
          "paths": {
            "AD_GuardJumper": [
              "AD_GuardJumper_0"
            ],
            "AD_AccessCultistCombat": [
              "AD_AccessCultistCombat_0"
            ],
            "AD_JaheiraSolo": [
              "AD_JaheiraSolo_0"
            ],
            "HavenOutcasts_HarperQuartermaster": [
              "HavenOutcasts_HarperQuartermaster_3",
              "HavenOutcasts_HarperQuartermaster_6",
              "HavenOutcasts_HarperQuartermaster_2",
              "HavenOutcasts_HarperQuartermaster_4",
              "HavenOutcasts_HarperQuartermaster_5"
            ],
            "HavenOutcasts_DockGuard_Ranger": [
              "HavenOutcasts_DockGuard_Ranger_0"
            ],
            "Jaheira_TopOfTowerBackup": [
              "Jaheira_TopOfTowerBackup_0"
            ],
            "Executioner": [
              "Executioner_38",
              "Executioner_32",
              "Executioner_25",
              "Executioner_43",
              "Executioner_42",
              "36",
              "NODE_NOT_FOUND"
            ],
            "CrestfallenHound_SwA": [
              "CrestfallenHound_SwA_1",
              "CrestfallenHound_SwA_2"
            ],
            "KethericLeaving": [
              "KethericLeaving_0"
            ],
            "AssaultHarper_001": [
              "AssaultHarper_001_0"
            ],
            "HavenOutcasts_DockGuard_Left_Ranger": [
              "HavenOutcasts_DockGuard_Left_Ranger_0"
            ],
            "FirstKethericInterruption": [
              "FirstKethericInterruption_2",
              "FirstKethericInterruption_13",
              "FirstKethericInterruption_7",
              "FirstKethericInterruption_4",
              "FirstKethericInterruption_6"
            ],
            "AssaultFlamingFist_001": [
              "AssaultFlamingFist_001_0"
            ],
            "DarkUrgeButlerReminder": [
              "DarkUrgeButlerReminder_2",
              "DarkUrgeButlerReminder_3"
            ],
            "AssaultFlamingFist_002": [
              "AssaultFlamingFist_002_0"
            ],
            "AssaultHarper_003": [
              "AssaultHarper_003_0"
            ],
            "PAD_ReadyToMeetKetheric": [
              "PAD_ReadyToMeetKetheric_0"
            ],
            "DaisyAD_FollowKetheric": [
              "DaisyAD_FollowKetheric_0"
            ],
            "Jaheira_Following": [
              "Jaheira_Following_5",
              "Jaheira_Following_7",
              "Jaheira_Following_6"
            ],
            "AssaultHarper_002": [
              "AssaultHarper_002_0"
            ],
            "JaheiraThroneRoomOrders": [
              "JaheiraThroneRoomOrders_0"
            ],
            "AssaultFlamingFist_003": [
              "AssaultFlamingFist_003_0"
            ],
            "PAD_AfterKethericCombat": [
              "PAD_AfterKethericCombat_0"
            ],
            "AD_PrisonWarden": [
              "AD_PrisonWarden_0"
            ],
            "AD_ZrellCombat": [
              "AD_ZrellCombat_0"
            ],
            "TentaclelessJump": [
              "TentaclelessJump_2",
              "TentaclelessJump_0",
              "TentaclelessJump_12",
              "TentaclelessJump_5",
              "TentaclelessJump_9"
            ],
            "AssaultFlamingFist_004": [
              "AssaultFlamingFist_004_0"
            ],
            "AD_ZrellTaunt": [
              "AD_ZrellTaunt_0"
            ],
            "AD_WardenWaiting": [
              "AD_WardenWaiting_0"
            ],
            "AD_JaheiraMoveForward": [
              "AD_JaheiraMoveForward_0"
            ],
            "PAD_PrisonSkeletonWarning": [
              "PAD_PrisonSkeletonWarning_0",
              "PAD_PrisonSkeletonWarning_1"
            ]
          },
          "node_data": {
            "AD_GuardJumper": [
              {
                "id": "AD_GuardJumper_0",
                "speaker": "Acolyte Marls",
                "text": "Can't believe you'd betray the Absolute. Idiot.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_AccessCultistCombat": [
              {
                "id": "AD_AccessCultistCombat_0",
                "speaker": "Radija",
                "text": "You'll die before you reach my lord. Perhaps then you will be obedient.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Grim, angry. Promising to kill us and resurrect us as a more obedient slave."
              }
            ],
            "AD_JaheiraSolo": [
              {
                "id": "AD_JaheiraSolo_0",
                "speaker": "Jaheira",
                "text": "Here we stand in the lion's den, but the lions are you and I.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Assault_State_MainFloorEnemiesDefeated",
                  "a63e4af2-6edc-188a-efdf-b9ffc5460fc5_LOCAL_A"
                ],
                "setflags": [
                  "a63e4af2-6edc-188a-efdf-b9ffc5460fc5_LOCAL_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Defiant"
              }
            ],
            "HavenOutcasts_HarperQuartermaster": [
              {
                "id": "HavenOutcasts_HarperQuartermaster_3",
                "speaker": "Quartermaster Talli",
                "text": "It's a grim task, picking provisions from the dead.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_Assault_HasMet_HarperQuartermaster"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HavenOutcasts_HarperQuartermaster_6",
                "speaker": "Quartermaster Talli",
                "text": "But the way I hear it, the fighting's not done yet. You need to resupply?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HavenOutcasts_HarperQuartermaster_2",
                "speaker": "Player",
                "text": "Trade.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HavenOutcasts_HarperQuartermaster_4",
                "speaker": "",
                "text": "",
                "node_type": "trade",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HavenOutcasts_HarperQuartermaster_5",
                "speaker": "Quartermaster Talli",
                "text": "Lady light your way.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Blessing - as absent as saying 'god bless', not overly pious"
              }
            ],
            "HavenOutcasts_DockGuard_Ranger": [
              {
                "id": "HavenOutcasts_DockGuard_Ranger_0",
                "speaker": "Harper Naysa",
                "text": "You fight as well as any Harper. Careful, or Jaheira might have to keep you.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Assault_HavenOutcasts_DockGuard_Ranger_ThroneRoomDefeated_HasMet",
                  "MOO_Assault_State_ThroneRoomDefeated"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Wry, a little breathless. Lull in battle."
              }
            ],
            "Jaheira_TopOfTowerBackup": [
              {
                "id": "Jaheira_TopOfTowerBackup_0",
                "speaker": "Jaheira",
                "text": "It's all up to you now. Ketheric awaits.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Executioner": [
              {
                "id": "Executioner_38",
                "speaker": "Disciple Z'rell",
                "text": "You dare show yourself here, after all you've done?",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Executioner_Knows_BalthazarIsMissing"
                ],
                "setflags": [],
                "goto": "",
                "link": "13",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: impressed to have seen a legendary hero (Jaheira) up close and personal - really wants to kill said hero"
              },
              {
                "id": "Executioner_32",
                "speaker": "Disciple Z'rell",
                "text": "ls::TranslatedStringRepository::s_HandleUnknown",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "13",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Executioner_25",
                "speaker": "Disciple Z'rell",
                "text": "You have betrayed me, you have betrayed General Thorm - you have betrayed our god!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "13",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: building fury, peaking on final phrase"
              },
              {
                "id": "Executioner_43",
                "speaker": "Disciple Z'rell",
                "text": "And for what? That little firefly buzzing around overhead? I'll crush you first, then her - and in death, you will all serve the Absolute.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Executioner_42",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "36",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "36",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ],
            "CrestfallenHound_SwA": [
              {
                "id": "CrestfallenHound_SwA_1",
                "speaker": "Squire",
                "text": "That scent - the Selûnite magic on your skin - it fills this place.",
                "node_type": "normal",
                "checkflags": [
                  "PETPAL"
                ],
                "setflags": [
                  "MOO_Assault_HasMet_KethericHound"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "CrestfallenHound_SwA_2",
                "speaker": "Squire",
                "text": "It fills my head with things I miss. I cannot remember them, but I do miss them.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Sadly - thinking of a past life, barely remembered"
              }
            ],
            "KethericLeaving": [
              {
                "id": "KethericLeaving_0",
                "speaker": "Narrator",
                "text": "|The tentacle \"picks up\" Ketheric.|",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: The tentacle \"picks up\" Nightsong and Ketheric. (TBD edge-case: Nightsong's body is not on the roof anymore or is in an inventory)"
              }
            ],
            "AssaultHarper_001": [
              {
                "id": "AssaultHarper_001_0",
                "speaker": "Harper Lanni",
                "text": "Onwards. Ketheric can't hide from us now!",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Assault_AssaultHarper_001_ThroneRoomDefeated_HasMet = False",
                  "MOO_Assault_State_ThroneRoomDefeated"
                ],
                "setflags": [
                  "MOO_Assault_AssaultHarper_001_ThroneRoomDefeated_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: A lull in battle - fervent, caught up in the moment"
              }
            ],
            "HavenOutcasts_DockGuard_Left_Ranger": [
              {
                "id": "HavenOutcasts_DockGuard_Left_Ranger_0",
                "speaker": "Harper Lymn",
                "text": "The false god creeps. The city must wake.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Assault_HavenOutcasts_DockGuard_Left_Ranger_SCE_HasMet",
                  "SCE_Epilogue_State_HasStarted"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Referencing the fact that we need to get to the city."
              }
            ],
            "FirstKethericInterruption": [
              {
                "id": "FirstKethericInterruption_2",
                "speaker": "Ketheric Thorm",
                "text": "Enough. My Lord beckons me.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "4",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Ketheric staggers, weakened. Nightsong spreads her wings and lifts off the ground, preparing for a final blow\rNodeContext: Ragged breathing, hunched over in terrible shape"
              },
              {
                "id": "FirstKethericInterruption_13",
                "speaker": "Ketheric Thorm",
                "text": "You must return to your prison. And my daughter must be reclaimed.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Isobel_State_AtMoonrise = False",
                  "HAV_Isobel_State_IsDead = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: At the sound of 'my daughter' Nigthsong is distracted and looks in concern - she doesn't know Isobel is alive.\rInternalNodeContext: to Nightsong"
              },
              {
                "id": "FirstKethericInterruption_7",
                "speaker": "Nightsong",
                "text": "Your daughter - Isobel?!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Nightsong is shocked; just then, Ketheric gestures with his arm, \rNodeContext: At first, trying to understand what ketheric means. Incredulous - only thing that could have stopped her mid-rampage was hearing the name of the lover she thought dead"
              },
              {
                "id": "FirstKethericInterruption_4",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: The tentacle BURSTS through a wall beside Ketheric"
              },
              {
                "id": "FirstKethericInterruption_6",
                "speaker": "Ketheric Thorm",
                "text": "You will fall as sure as she. This has only begun.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "CinematicNodeContext: The tentacle slaps Nightsong from the sky, then zaps Ketheric and Nightsong down into the colony, leaving a crevice through which the player can follow.\rInternalNodeContext: to player"
              }
            ],
            "AssaultFlamingFist_001": [
              {
                "id": "AssaultFlamingFist_001_0",
                "speaker": "Fist Nipawa",
                "text": "Watching gods. These poor bastards actually die believing.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Assault_AssaultFlamingFist_001_ThroneRoomDefeated_HasMet = False",
                  "MOO_Assault_State_ThroneRoomDefeated"
                ],
                "setflags": [
                  "MOO_Assault_AssaultFlamingFist_001_ThroneRoomDefeated_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Vague disbelief, regret - they're killing people who believe in a nonsense god."
              }
            ],
            "DarkUrgeButlerReminder": [
              {
                "id": "DarkUrgeButlerReminder_2",
                "speaker": "Sceleritas Fel",
                "text": "That was rather rude, wasn't it? To assume I am content to be killed by one of low breeding.",
                "node_type": "normal",
                "checkflags": [
                  "ORI_DarkUrge_State_ButlerKiller"
                ],
                "setflags": [
                  "ORI_DarkUrge_State_ButlerKiller = False",
                  "ORI_DarkUrge_Knows_ButlerDiedReaction"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "DarkUrgeButlerReminder_3",
                "speaker": "Sceleritas Fel",
                "text": "I want you to go away, and think about what you did.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AssaultFlamingFist_002": [
              {
                "id": "AssaultFlamingFist_002_0",
                "speaker": "Fist Helena",
                "text": "Come on. Plenty more to do yet.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Assault_AssaultFlamingFist_002_HasMet = False",
                  "MOO_Assault_State_ThroneRoomDefeated"
                ],
                "setflags": [
                  "MOO_Assault_AssaultFlamingFist_002_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Heat of battle, focused and not really interested in conversation."
              }
            ],
            "AssaultHarper_003": [
              {
                "id": "AssaultHarper_003_0",
                "speaker": "Harper Lilineth",
                "text": "This place... stinks of blood and fear. That is all the Absolute offers.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Assault_AssaultHarper_003_ThroneRoomDefeated_HasMet = False",
                  "MOO_Assault_State_ThroneRoomDefeated"
                ],
                "setflags": [
                  "MOO_Assault_AssaultHarper_003_ThroneRoomDefeated_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Disgust and scorn for the Absolute."
              }
            ],
            "PAD_ReadyToMeetKetheric": [
              {
                "id": "PAD_ReadyToMeetKetheric_0",
                "speaker": "Player",
                "text": "Ketheric Thorm is waiting for us. Are we ready?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "DaisyAD_FollowKetheric": [
              {
                "id": "DaisyAD_FollowKetheric_0",
                "speaker": "",
                "text": "That tentacle was colossal. The same creature we encountered before. We must follow where it went.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_WallTentacle_Daisy_Interacted"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: with awe and fear"
              }
            ],
            "Jaheira_Following": [
              {
                "id": "Jaheira_Following_5",
                "speaker": "Jaheira",
                "text": "Our host is at the top of the tower. Rude to keep him waiting, no?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Jaheira_Following_7",
                "speaker": "Player",
                "text": "What's our strategy?",
                "node_type": "normal",
                "checkflags": [
                  "200aa519-5963-3b2d-3396-d1dcbb013702_AskedStrategy = False"
                ],
                "setflags": [
                  "200aa519-5963-3b2d-3396-d1dcbb013702_AskedStrategy"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Jaheira_Following_6",
                "speaker": "Jaheira",
                "text": "It is I who follows you. But, if I must venture some advice... this is the simple part. Ketheric dies, or we do. And the Sword Coast with us.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ],
            "AssaultHarper_002": [
              {
                "id": "AssaultHarper_002_0",
                "speaker": "Harper Grenywald",
                "text": "This place is all dark corners. Stay sharp, eh?",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Assault_AssaultHarper_002_ThroneRoomDefeated_HasMet = False",
                  "MOO_Assault_State_ThroneRoomDefeated"
                ],
                "setflags": [
                  "MOO_Assault_AssaultHarper_002_ThroneRoomDefeated_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Tense, in the heart of the enemy's tower."
              }
            ],
            "JaheiraThroneRoomOrders": [
              {
                "id": "JaheiraThroneRoomOrders_0",
                "speaker": "Jaheira",
                "text": "Patrol this floor, Harpers. Watch the doors and watch the windows. Nothing enters or exits these rooms alive.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AssaultFlamingFist_003": [
              {
                "id": "AssaultFlamingFist_003_0",
                "speaker": "Fist Rhed",
                "text": "Upwards!",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Assault_AssaultFlamingFist_003_ThroneRoomDefeated_HasMet = False",
                  "MOO_Assault_State_ThroneRoomDefeated"
                ],
                "setflags": [
                  "MOO_Assault_AssaultFlamingFist_003_ThroneRoomDefeated_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Fiercely intent, mid-battle"
              }
            ],
            "PAD_AfterKethericCombat": [
              {
                "id": "PAD_AfterKethericCombat_0",
                "speaker": "Player",
                "text": "That thing came from below. We need to find out where it took Ketheric.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_PrisonWarden": [
              {
                "id": "AD_PrisonWarden_0",
                "speaker": "The Warden",
                "text": "I'll smear your entrails on these walls. In Her name!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_ZrellCombat": [
              {
                "id": "AD_ZrellCombat_0",
                "speaker": "Disciple Z'rell",
                "text": "I'll strip your bones clean.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "TentaclelessJump": [
              {
                "id": "TentaclelessJump_2",
                "speaker": "Narrator",
                "text": "",
                "node_type": "normal",
                "checkflags": [
                  "Debug_Teleport_MOO_Colony"
                ],
                "setflags": [
                  "Debug_Teleport_MOO_Colony = False"
                ],
                "goto": "",
                "link": "0",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "TentaclelessJump_0",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Black screen and noise of player sliding - then HEAVY THUD. Fade in to find party standing, dusting themselves off."
              },
              {
                "id": "TentaclelessJump_12",
                "speaker": "",
                "text": "This is an illithid colony.",
                "node_type": "normal",
                "checkflags": [
                  "COL_General_Knows_ColonyIsIllithid = False"
                ],
                "setflags": [
                  "COL_General_Knows_ColonyIsIllithid"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Shots of eerie organic architecture."
              },
              {
                "id": "TentaclelessJump_5",
                "speaker": "",
                "text": "This must be where they harvest the tadpoles. We're close to the source of the infections.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Shots of eerie organic architecture."
              },
              {
                "id": "TentaclelessJump_9",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "CinematicNodeContext: Player standing, facing down long dark tunnel ahead."
              }
            ],
            "AssaultFlamingFist_004": [
              {
                "id": "AssaultFlamingFist_004_0",
                "speaker": "Fist Hadenwell",
                "text": "We'll hold this point. Give Ketheric our regards, aye?",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Assault_AssaultFlamingFist_004_PostAssault_HasMet = False",
                  "MOO_Assault_Event_KethericTeleportedAway"
                ],
                "setflags": [
                  "MOO_Assault_AssaultFlamingFist_004_PostAssault_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Grim resolve - they've fought all the way up the tower, and now it's up to us"
              }
            ],
            "AD_ZrellTaunt": [
              {
                "id": "AD_ZrellTaunt_0",
                "speaker": "Disciple Z'rell",
                "text": "Make your move!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "7cd519b5-df41-47c0-1d53-6c315224e489_A"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_WardenWaiting": [
              {
                "id": "AD_WardenWaiting_0",
                "speaker": "The Warden",
                "text": "Z'rell best handle them quickly.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "ddb63ed1-6bbb-2251-c4d6-b1c59315e195_A"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_JaheiraMoveForward": [
              {
                "id": "AD_JaheiraMoveForward_0",
                "speaker": "Jaheira",
                "text": "Hold every exit - let none escape to warn the army of our assault.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Assault_State_FlamingFistSupport",
                  "MOO_Assault_State_AllActiveHarpersDefeated",
                  "MOO_Assault_State_AllActiveFlamingFistDefeated = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_PrisonSkeletonWarning": [
              {
                "id": "PAD_PrisonSkeletonWarning_0",
                "speaker": "Player",
                "text": "They just keep coming.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PAD_PrisonSkeletonWarning_1",
                "speaker": "Player",
                "text": "The battle won't be won down here.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_GuardJumper": "During the assault on Moonrise. If the player \"fixed\" the dock jumpers mind, his combat AD will be a bit garbled.",
            "AD_AccessCultistCombat": "She is the last line of defence to the roof of the tower during the assault on Moonrise. She yells this on her turn during combat.",
            "AD_JaheiraSolo": "Jaheira is outside Moonrise Towers, talking to herself contemplating her next steps to assault the tower (if Florrick is available, a different AD plays). Once the main floor has been cleared of enemies, she makes comments about the tower and the assault.(Triggers regardless of if Florrick is present).",
            "HavenOutcasts_HarperQuartermaster": "If Florrick is present during the assault, the Harper Quartermaster will be present as well to provide trade to the player. They are not invloved in the combat, but will move into the tower once things are cleared.",
            "HavenOutcasts_DockGuard_Ranger": "Naysa is one of the Harpers who fights beside you at Moonrise.",
            "Jaheira_TopOfTowerBackup": "Cover all for top-of-tower Jaheira",
            "Executioner": "Zrell 'greets' the player inside the Tower along with the rest of the Monnrise offencive force during the assault on Moonrise. Nightsong might be alive or dead.This is a stand-off - she's protecting the tower, and the players are attacking. Z'rell is confident that she'll put the players and their allies down here, and shows no fear.",
            "CrestfallenHound_SwA": "If Ketherics Hound smelled Isobel's blessing on the player, she will move into Isobels room and not participate in the combat ongoing throughout the tower, as she is lost in vague feelings and hazy memories of a life past.",
            "KethericLeaving": "During the boss fight on the rooftop, a tentacle teleports Ketheric away",
            "AssaultHarper_001": "A soldier fighting alongside us during Assault on Moonrise. Lines for before, during, and after the battle.",
            "HavenOutcasts_DockGuard_Left_Ranger": "Lymn is one of the Harpers who fights with us at Moonrise.She speaks in a unique cadence because Common is her Seventh language. She is focused on feelings and impressions.",
            "FirstKethericInterruption": "When Ketheric is at low health, this cinematic trigges. Ketheric transports himself into the colony, taking Nightsong with him if she's present.",
            "AssaultFlamingFist_001": "A soldier fighting alongside us during Assault on Moonrise. Lines for before, during, and after the battle.",
            "DarkUrgeButlerReminder": "The player has never spoken to Isobel before starting the assault on Moonrise. The Butler appears in front of the player on the bridge to Moonrise to remind the Dark Urge player that they must kill Isobel if they want to please Bhaal.",
            "AssaultFlamingFist_002": "A soldier fighting alongside us during Assault on Moonrise. Lines for before, during, and after the battle.",
            "AssaultHarper_003": "A soldier fighting alongside us during Assault on Moonrise. Lines for before, during, and after the battle.",
            "PAD_ReadyToMeetKetheric": "Players won the fight near the door that leads to the roof for the showdown with Ketheric. With this PAD we both confirm that and pre-warn player that the next fight is tough and better to restock",
            "DaisyAD_FollowKetheric": "Top of the tower, after fight with Ketheric and seeing the giant tentacle.",
            "Jaheira_Following": "Jaheira's follower dialogue for Moonrise when she's actively accompanying the player.",
            "AssaultHarper_002": "A soldier fighting alongside us during Assault on Moonrise. Lines for before, during, and after the battle.",
            "JaheiraThroneRoomOrders": "Jaheira has arrived inside the Moonrise Towers throne room after clearing the out all the enemies. If there are any Harpers alive, Jaheira will give them orders to patrol around the tower.",
            "AssaultFlamingFist_003": "A soldier fighting alongside us during Assault on Moonrise. Lines for before, during, and after the battle.",
            "PAD_AfterKethericCombat": "After attacking Ketheric on the Moonrise Rooftop, a tentacle tears through one of the towers and provides a hole that leads down into the mind flayer Colony. The party must follow Ketheric down there to continue the main quest, and this PAD should hint at that.",
            "AD_PrisonWarden": "Combat AD when the player is assaulting Moonrise tower. The prison warden has is defending the throne room.",
            "AD_ZrellCombat": "The player has entered combat with Z'rell during the assault on Moonrise (freed Nightsong).",
            "TentaclelessJump": "Roof teleport, Assault on Moonrise path",
            "AssaultFlamingFist_004": "A soldier fighting alongside us during Assault on Moonrise. Lines for before, during, and after the battle.",
            "AD_ZrellTaunt": "The Harpers and/or Flaming Fist have moved into the main entrance of Moonrise, but have not started battle yet. She yells to them, taunting them and waiting for them to initiate the combat (by the player).Will only play if either Jaheira or Florrick are there, otherwise this AD will not trigger",
            "AD_WardenWaiting": "The Warden is not pleased about the current situation and is not afraid to express it. She waits in the throne room as rienforcement if the battle with Z'rell's group starts to go sour.",
            "AD_JaheiraMoveForward": "Jaheira yells to her Harpers and Flaming Fist to hold the main floor of Moonrise after the player has cleared the enemies during the assault. This is the last push before confronting Ketheric on the roof.",
            "PAD_PrisonSkeletonWarning": "The player has entered the Moonrise prison during the assault (with some warning against in most cases). This is a final heads up to the player that the skeletons they are fighting will just keep respawning with no reward, so it is best to leave asap."
          }
        },
        "moo_balthazarssecrets": {
          "scenario_name": "moo_balthazarssecrets",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "moo_drider": {
          "scenario_name": "moo_drider",
          "session_sequence": [
            "AD_Combat"
          ],
          "paths": {
            "AD_Combat": [
              "AD_Combat_0"
            ]
          },
          "node_data": {
            "AD_Combat": [
              {
                "id": "AD_Combat_0",
                "speaker": "Kar'niss",
                "text": "You dare? YOU DARE?!",
                "node_type": "normal",
                "checkflags": [
                  "b156dddb-036d-8d82-5a7a-8fd110e48cb4_A"
                ],
                "setflags": [
                  "b156dddb-036d-8d82-5a7a-8fd110e48cb4_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Furious, mid-combat"
              }
            ]
          },
          "session_synopses": {
            "AD_Combat": "Combat ADs for the drider when he moves to the top of the tower."
          }
        },
        "moo_ketheric": {
          "scenario_name": "moo_ketheric",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "moo_kethericroom": {
          "scenario_name": "moo_kethericroom",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "moo_kethetic": {
          "scenario_name": "moo_kethetic",
          "session_sequence": [
            "DaisyAD_AttackImmortal",
            "DaisyAD_AttackImmortalRepeated"
          ],
          "paths": {
            "DaisyAD_AttackImmortal": [
              "DaisyAD_AttackImmortal_0"
            ],
            "DaisyAD_AttackImmortalRepeated": [
              "DaisyAD_AttackImmortalRepeated_0"
            ]
          },
          "node_data": {
            "DaisyAD_AttackImmortal": [
              {
                "id": "DaisyAD_AttackImmortal_0",
                "speaker": "",
                "text": "He cannot die - we must find what gives him his invulnerability before we strike!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "DaisyAD_AttackImmortalRepeated": [
              {
                "id": "DaisyAD_AttackImmortalRepeated_0",
                "speaker": "",
                "text": "It won't work - not until we find out what is keeping him from death!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "DaisyAD_AttackImmortal": "If player inflicts combat with immortal Ketheric Daisy urges to fallback and solve the problem of invulnerability first",
            "DaisyAD_AttackImmortalRepeated": "If player inflicts combat with immortal Ketheric Daisy urges to fallback and solve the problem of invulnerability first"
          }
        },
        "moo_kitchenfight": {
          "scenario_name": "moo_kitchenfight",
          "session_sequence": [
            "GnollMaster",
            "MasterGrieving",
            "GnollAttack"
          ],
          "paths": {
            "GnollMaster": [
              "GnollMaster_26",
              "GnollMaster_24",
              "GnollMaster_4",
              "GnollMaster_63",
              "GnollMaster_9"
            ],
            "MasterGrieving": [
              "MasterGrieving_0"
            ],
            "GnollAttack": [
              "GnollAttack_10",
              "GnollAttack_33",
              "0",
              "NODE_NOT_FOUND"
            ]
          },
          "node_data": {
            "GnollMaster": [
              {
                "id": "GnollMaster_26",
                "speaker": "Linsella",
                "text": "A moment, True Soul.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_KitchenFight_HasMet_GnollMaster"
                ],
                "goto": "",
                "link": "1",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Mid-conversation with a gnoll, holds up hand to us as we approach"
              },
              {
                "id": "GnollMaster_24",
                "speaker": "Linsella",
                "text": "You use a spoon to stir the soup, Barnabus. Forget the axe, my darling.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "1",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Kindly - speaking to a favourite child that is none too bright"
              },
              {
                "id": "GnollMaster_4",
                "speaker": "'Barnabus'",
                "text": "*Soft hoot.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "1",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Gnoll tilts its head and nods.\rNodeContext: Gnolls make hyena noises - this is a soft sound of acknowledgement/comprehension. Tilting its head and nodding."
              },
              {
                "id": "GnollMaster_63",
                "speaker": "Linsella",
                "text": "Now! How can I help you?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "1",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Turns back to us\rNodeContext: Chipper, friendly"
              },
              {
                "id": "GnollMaster_9",
                "speaker": "Player",
                "text": "Leave.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_KitchenFight_State_SeenPower = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "MasterGrieving": [
              {
                "id": "MasterGrieving_0",
                "speaker": "Linsella",
                "text": "Poor Barnabus. I'll have to find another favourite.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Genuinely sad. Her favourite 'pet' gnoll died."
              }
            ],
            "GnollAttack": [
              {
                "id": "GnollAttack_10",
                "speaker": "Narrator",
                "text": "*All trace of restraint is gone. 'Barnabus' has tasted blood, and wants more.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "45",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "GnollAttack_33",
                "speaker": "Narrator",
                "text": "*A strange symbol glows, marked on their flesh, and something within you stirs in response.*",
                "node_type": "normal",
                "checkflags": [
                  "GLO_TadpoleIntro_NPC = False"
                ],
                "setflags": [
                  "GLO_TadpoleIntro_NPC"
                ],
                "goto": "",
                "link": "0",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Symbol on NPC glows\rInternalNodeContext: Delete if you are talking to a companion."
              },
              {
                "id": "0",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ]
          },
          "session_synopses": {
            "GnollMaster": "A True Soul oversees some gnolls in the kitchen. They're uncharacteristically quiet, and she explains that the Absolute has given her the ability to 'bring out the good' in then. In truth she is simply dominating them - she'll demonstrate by forcing the gnoll to perform tricks, but we can subvert her power and let the gnoll kill her.",
            "MasterGrieving": "",
            "GnollAttack": "Upon killing the gnoll master through dialog or through gameplay, gnolls show threatening behavior and will flee as they are not under control anymore unless someone else is present in the room,"
          }
        },
        "hav_minthara": {
          "scenario_name": "hav_minthara",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "0",
              "1"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "0",
                "speaker": "Duke Ulder Ravengard",
                "text": "| I'm not welcome here, but it's safe for now. Thank you. |",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "HAV_Minthara_Hasmet"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "1",
                "speaker": "Duke Ulder Ravengard",
                "text": "| Once we leave this place, I'll make my way to your camp. |",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "": ""
          }
        },
        "moo_apostleentry": {
          "scenario_name": "moo_apostleentry",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "moo_monkamulet": {
          "scenario_name": "moo_monkamulet",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "moo_zrellbriefing": {
          "scenario_name": "moo_zrellbriefing",
          "session_sequence": [
            "AD_WithGuard000",
            "FlamingSpy",
            "AD_WithCultist"
          ],
          "paths": {
            "AD_WithGuard000": [
              "AD_WithGuard000_3",
              "AD_WithGuard000_6",
              "AD_WithGuard000_1"
            ],
            "FlamingSpy": [
              "FlamingSpy_0"
            ],
            "AD_WithCultist": [
              "AD_WithCultist_5",
              "AD_WithCultist_3",
              "AD_WithCultist_9",
              "AD_WithCultist_7"
            ]
          },
          "node_data": {
            "AD_WithGuard000": [
              {
                "id": "AD_WithGuard000_3",
                "speaker": "Disciple Z'rell",
                "text": "What now?",
                "node_type": "normal",
                "checkflags": [
                  "8817275c-224d-13c2-92e6-680e5910ff1e_B"
                ],
                "setflags": [
                  "8817275c-224d-13c2-92e6-680e5910ff1e_A = False",
                  "8817275c-224d-13c2-92e6-680e5910ff1e_B = False"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Snapping at an underling bothering her"
              },
              {
                "id": "AD_WithGuard000_6",
                "speaker": "Acolyte Daine",
                "text": "The shipments are progressing, Disciple. Though I do not trust the mercenaries. The infidels.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_WithGuard000_1",
                "speaker": "Disciple Z'rell",
                "text": "We do not need to trust them. The Absolute's Design requires many threats - not all of them of the finest fabric.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Dismissing underling's concerns."
              }
            ],
            "FlamingSpy": [
              {
                "id": "FlamingSpy_0",
                "speaker": "Fist Marcus",
                "text": "My unexpected ally! The General was very pleased with Isobel's return. Don't worry, I told him all about you.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_FlamingSpy_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: genuine in the first line, but in the second he sounds smug (he totally took all the credit)"
              }
            ],
            "AD_WithCultist": [
              {
                "id": "AD_WithCultist_5",
                "speaker": "Disciple Z'rell",
                "text": "In Her name.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "9378e194-3135-f75c-b557-457fa52db9f9_A"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: A terse religious greeting - a better to an underling, annoyed to be speaking to a lower rank"
              },
              {
                "id": "AD_WithCultist_3",
                "speaker": "Radija",
                "text": "By Her design. Can I assist you, Disciple?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Polite response to religious greeting"
              },
              {
                "id": "AD_WithCultist_9",
                "speaker": "Disciple Z'rell",
                "text": "The General has withdrawn to his chapel above. He is not to be disturbed.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_WithCultist_7",
                "speaker": "Radija",
                "text": "Of course, Disciple. As always.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Helpful, polite"
              }
            ]
          },
          "session_synopses": {
            "AD_WithGuard000": "A patrolling guard stops and reports to Z'rell.",
            "FlamingSpy": "Marcus is in Moonrise after either kidnapping isobel OR being thwarted by the player.",
            "AD_WithCultist": "Z'rell and Radija are talking about how nobody should be allowed on the rooftop."
          }
        }
      },
      "final_flags": [
        "HAV_Isobel_KidnappingQuestions_DarkUrge",
        "GOB_SpiderNest_State_SpidersHostile",
        "DEN_AttackOnDen_HasMet_Prodigy",
        "DEN_CapturedGoblin_GuardsHasMet",
        "HAV_HarperScouts_Harper_003_HasMet_Protected",
        "GOB_Checkpoint_Event_MoveToCamp",
        "UND_MyconidRevenge_Event_TakeHead",
        "8a9a14b0-87da-5c78-aa76-7a266de7a786_Phase1",
        "HAV_Umi_NightsongFreed_HasMet",
        "PLA_TavernInvestigation_Knows_AskedStelmane",
        "DEN_AttackOnDen_HasMet_Tiefling010Victory",
        "GLO_Moonrise_Knows_AbsoluteAtGrymforge",
        "CRA_DeadPrisoner_Dead_AskedQuestion",
        "UND_DuergarMutineerFollowUp_Event_Happened",
        "CHA_Outside_Event_DoorGuardConvinced",
        "e0b6dfeb-2923-e0ad-1dc5-2a5d1e055e16_local1",
        "DEN_AttackOnDen_HasMet_GrieflingFriend",
        "DEN_AttackOnDen_HasMet_Tiefling001",
        "GOB_QuartermasterFlimsy_HasMet",
        "HAV_SavingPrisoners_HasMet_Manip",
        "GEN_TransferNPCPayment_2",
        "DEN_AttackOnDen_Event_OpenGateAfterCombat",
        "5e9c4c72-4f56-2646-ce36-88207d2dc33c_KinSaved",
        "GOB_OwlbearCub_Event_InvitedToCamp",
        "MOO_Jailbreak_HasMet_Guard004",
        "PLA_Desire_Knows_RavengardTaken",
        "DEN_DruidServant005_Knows_TalkedAboutLockdown",
        "UND_SocietyOfBrilliance_MindFlayer_State_MindFlayerFeeding",
        "PLA_ConflictedFlind_Event_MindControlDamage_Minor",
        "DEN_AttackOnDen_HasMet_Servant005Victory",
        "PLA_Desire_State_WyllComTrack",
        "CHA_Chapel_Event_OpenedJergalsTomb",
        "UND_DarkLake_State_ClaimedGekhWasDead",
        "DEN_AttackOnDen_Pet004_HasMet",
        "HAV_Isobel_HasMetDefault",
        "GLO_Player_Knows_MoonlanternExists",
        "GOB_PainPriest_Event_Reward",
        "2da46374-abab-9219-f7ce-2a002cfd72a5_a",
        "DEN_AttackOnDen_Ranged_001_HasMet",
        "GLO_Volo_HasMet_Personally",
        "GOB_PainPriest_State_ReactedToPenance",
        "8916beac-0385-3df9-de07-8be3cc6752a7_A",
        "da38cd0f-efef-6809-231d-26f71308cd07_B",
        "HAV_ProdigyLament_Knows_RolanAlive",
        "DEN_RaidingParty_Event_SkipConfrontation",
        "ORI_INCLUSION_SHADOWHEART",
        "GLO_TadpoledCount6",
        "PLA_TavernInvestigation_Quest_WallCollapsed",
        "PLA_Refugee_002_TollhouseMentioned",
        "DEN_AttackOnDen_HasMet_RobberKid",
        "876dbe2e-5070-a2c1-0148-cc993aa62289_B",
        "FOR_PriestsConqueringGod_AlliedPlayer",
        "HAG_GurHunter_Dead_Knows_Hunter",
        "HAV_TieflingSurvivors_State_DidNotPromiseToSaveMol",
        "DEN_AttackOnDen_HasMet_PickpocketVictory",
        "DEN_GuardedEntrance_State_ParentsKnowDeath",
        "GLO_IronhandGnomes_Knows_WulbrenInMoonrise",
        "MOO_Background_Outlander_CatBusiness",
        "WLD_FOR_GnomeGoblinsAngry",
        "Den_Thieflings_InterferingGuard_PCGotLore",
        "26007d1c-bac9-a896-4f4d-19a9d2a1e66f_A",
        "MOO_KitchenFight_HasMet_GnollMaster",
        "HAV_LastLightOx000_HasMet_SpeakWithAnimals",
        "GOB_Checkpoint_Guard01_HasMet",
        "HAV_TieflingSurvivors_HasMet_Mattis",
        "WLD_UnfortunateGnome_PayPassage",
        "4c78f756-720d-a285-a3e6-8f69a6069abc_Step1",
        "cd4b312f-5a40-b8c1-1ecb-0862c829a479_A",
        "5ebae00c-47d8-736c-6738-4ee56cebbc49_B",
        "GLO_Prodigy_State_ToldSiblingsProdigyDead",
        "MOO_Jailbreak_Event_ProdigyIntro",
        "DEN_General_YoungLovers_HasMet",
        "GOB_PainPriest_Event_CheckHP",
        "GLO_Desire_HasMet",
        "b43d3bc7-f10d-73cc-232e-c1f93cba3ed5_Local2",
        "DEN_AttackOnDen_Pet002_HasMet",
        "FOR_UnfortunateGnome_State_NonCharlatanAccess",
        "UND_MyconidCircle_PlantDuergarHasMet",
        "aa1d4932-8689-5e30-2b17-9b0968663a7a_historysuccess",
        "MOO_Execution_Knows_Executioner",
        "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_WyllSpoke",
        "GOB_WolfPens_Worg_002_HasMet",
        "PLA_GithChokepoint_State_FailedReadingMap",
        "PLA_ZhentShipment_Agent_002_StartInclusion",
        "GLO_HAV_TakingIsobel_HasMet_BriefInRoom",
        "4951b7ce-8495-b2c8-badc-beaff0e3d807_H",
        "DEN_ShadowDruid_Event_SetFaithwarden",
        "CRA_DeadPrisoner_Dead_MentionedTadpole",
        "GLO_Absolute_Knows_MoonriseTowers",
        "DEN_Rat_Event_MoveToShack",
        "DEN_DruidAttack_HasMet_Protester3AfterAttack",
        "ORI_Inclusion_End_Karlach",
        "UND_WormWall_State_RecognisedCrawlers",
        "GLO_GithChokepoint_DragonAppear",
        "df3e1892-2ab5-7b69-e57b-a75504e1a8f2_B",
        "10297257-36dd-3799-f681-657656779d4a_TieflingsLaezelAD1",
        "ORI_Inclusion_End_Wyll",
        "HAV_Siege_Intro_JaheiraAggroToPlayer",
        "DEN_AttackOnDen_HasMet_BackupLeader",
        "GLO_HeadRemoval_Event_HeadToInventory",
        "CHA_Jergal_Event_AttemptedAttack",
        "9b4c05c6-0a79-ea8d-c351-43d6fbb04abc_Story1",
        "GOB_AbsoluteCultistStiff_HasMet",
        "GLO_Shadowcurse_Knows_FromGnome",
        "PLA_StuckHalfElf_Knows_ExplainedDowry",
        "FOR_BugBearLove_Event_MovePlayerInside",
        "ddb63ed1-6bbb-2251-c4d6-b1c59315e195_A",
        "DEN_Stargazing_Event_SawDragon",
        "ORI_INCLUSION_ASTARION",
        "FOR_UnfortunateGone_TiedUpHasmet",
        "HAG_Hagspawn_State_JakeBerserk",
        "6cf6ff37-64f7-3ccf-d702-ee2025510422_B",
        "UND_EbonLake_Event_MoveToLake",
        "FOR_SeluneStash_NoticeStashSeal_CommentedOnSeal",
        "GOB_Torturers_Rat_001_HasMet",
        "GOB_Scrying_NoddedOrShrugged",
        "DEN_BirdSender_HasMet_GobLeadersDead",
        "a759296c-5d41-f5b9-7d31-1c70d1e10dc7_Once",
        "8ab0520b-3a8d-822f-1934-336e2d24e0a0_B",
        "d3eb78cf-ff8c-1e7a-7df7-4b6a04226b17_B",
        "DEN_HarpyMeal_Event_OriginCharm3",
        "683cb55e-08b9-c865-78a6-4e047ee62a24_B",
        "GLO_Tadpoled_UsedToday1",
        "GLO_HAV_TakingIsobel_HeardOfIsobel",
        "DEN_Thieflings_Event_PartnerQuestionAsked",
        "HAG_SurrogateMother_HasMet",
        "3e7a6665-f36f-0ddb-3882-7d68260b2104_B",
        "b2a52f0b-5fa8-d275-f080-0fc8edbe1faf_B",
        "GOB_GoblingKing_Event_HealerPersuasion",
        "MOO_Jailbreak_Event_SpeakToGnomesWarning",
        "UND_DuergarCamp_State_DocksHostile",
        "PLA_ZhentShipment_Agent_001_StartInclusion",
        "57c003e7-0932-6f0c-e655-99025a4abe3a_B",
        "DEN_AttackOnDen_HasMet_TieflingLeader",
        "09983dce-d7d0-c108-506f-dcadc4044b0a_Derryth_SwD_Who",
        "PLA_TavernInvestigation_State_HasMet",
        "ORI_Inclusion_Karlach",
        "UND_BrokenMoonLantern_HasMet",
        "3483cea8-0c11-9432-2421-6b95b9140d95_B",
        "7611fa51-4b1b-3d2c-a8a5-74c04d9db7fa_AnimalHandlingSuccess",
        "UND_DuergarPatroller_03_HasMet",
        "DEN_DruidAttack_HasMet_HideoutLeaderAfterAttack",
        "DEN_TieflingScam_Event_InspectedBox",
        "GnomeAskedHelp",
        "3f665b97-a69e-81c5-68e6-5b931720721e_Part1",
        "CHA_LaezelRecruitment_MindMeld",
        "MOO_Bazaar_BazaarStander_006_JailbreakSuccess_HasMet",
        "GLO_ScryingEyes_State_FeltGaze",
        "DEN_GuardedEntrance_HasMet_Guard3",
        "DEN_RaidingParty_Event_KanonOpensGate",
        "DEN_AttackOnDen_HasMet_Wyll",
        "PLA_ConflictedFlind_Knows_Gnolls",
        "GLO_TalkedToVoloAboutAbsolute",
        "UND_MyconidCircle_DwarvenAlchemist_BaelenRestoredHasmet",
        "COL_Barracks_State_InterruptConvinced",
        "GOB_Festivities_Trader_HasMet",
        "DEN_AttackOnDen_HasMet_Tiefling004",
        "ZhentDungeon_AgreedBuy",
        "11d70a18-2aae-47a0-1a18-c486858b1eaf_B",
        "DEN_GruntingKid_Event_DisappearIntoWall",
        "GOB_BattleStations_HasMet_WarDrum",
        "GOB_GoblinJolly_HasMet",
        "UND_MyconidCircle_InjuredGnome_ReportedGrymforgeFate",
        "564fac12-29bd-3abe-d380-0a864e688883_Turn1",
        "COL_TadpolingCentre_MemoryImprint_FirstUse",
        "HAV_TieflingSurvivors_Mirkon_EndInclusion",
        "DEN_Apprentice_HasMet_ReactedToShadowDruids",
        "DEN_CampGeneral_HasMet_Gatekeeper",
        "UND_DeadInTheWater_CorpseDisposerCompanion_HasMet",
        "MOO_InfernalVendor_Knows_AskedAboutResearch",
        "UND_MyconidCircle_MyconidSuspicious_HasMet",
        "MOO_Jailbreak_Knows_ToolsNeeded",
        "DEN_Hideout_State_GivenWarning",
        "PLA_Refugee_002_HasMet",
        "UND_DuergarGuard_AtPier_01_HasMet",
        "DEN_DruidAttack_HasMet_PickpocketTraderAfterAttack",
        "SCE_Jergal_HasMet",
        "6d9043f1-e0c3-43de-a895-b87cae60e0c0_C",
        "DEN_RaidingParty_Event_OpenDenGate",
        "GOB_GoblinKingDead_Event_SaidFugitives",
        "HAV_SavingPrisoners_HasMet_Florrick",
        "HAV_EnteringHaven_State_RevealedArtifact",
        "UND_State_LeaderFreedGnomes",
        "41e56e7f-1722-7350-33dc-aefe523650fe_B",
        "d3d3855d-6721-b089-5c1e-d6d255a46fdc_A",
        "PLA_ZhentDungeon_State_SaidPassword",
        "c3207254-eafb-348b-d327-f690af0e213f_startedattackmove",
        "DEN_AttackOnDen_HasMet_TieflingBard",
        "UND_MyconidCircle_BroodingSovereign_State_InParty",
        "DEN_AttackOnDen_HasMet_Kid004Victory",
        "DEN_Hideout_Event_LeaveCountdown",
        "1493763b-776c-959c-259a-89f34f326e04_A",
        "UND_FurnaceSearch_Knows_Xargrim",
        "HAV_ProdigyLament_Knows_SiblingsInMoonrise",
        "DEN_AttackOnDen_ZenBear_HasMet",
        "SCE_TieflingFollowUp_Knows_MolMissingEyepatch",
        "DEN_DevilishOx_State_ArcanaCheckComplete_SwA",
        "fa6e2ce0-64f3-bfb8-fb47-10f50f02cadf_AbsoluteMentioned",
        "MOO_Bazaar_HasMet_Bystander01",
        "DEN_AttackOnDen_Event_PassedByEntrance",
        "DEN_Thieflings_TieflingGuard11_HasMet",
        "GOB_Trader_Knows_Goods",
        "DEN_AttackOnDen_HasMet_Tiefling005",
        "HAV_LiftingTheCurse_Portal_Knows_DontTouchPortal",
        "GOB_GoblinToast_Event_ToastSuccess",
        "COL_Barracks_Mistress_Knows_ThinksPlayerIsThrall",
        "DEN_ZenBear_Helped",
        "FOR_KnifeInMeat_State_KnifeBroken",
        "GOB_Festivities_Goblin001_HasMet",
        "FOR_GnomeGoblin1_HasMet",
        "DEN_TieflingRefugees_Quest_HuntRewardOffered",
        "DEN_RaidingParty_Event_GatekeeperToLever",
        "DEN_DruidAttack_HasMet_ServantGnome",
        "COL_NecroLab_GrandDesignSculpture_HasMet_LaezelInclusion",
        "FOR_GoblinAmbush_Event_StopSpotting",
        "DEN_AttackOnDen_HasMet_RitualDruid003",
        "ReportedToDerryth_BaelenIsAlive",
        "GOB_Owlbear_HasMet_NotChasing",
        "UND_SocietyOfBrilliance_MindFlayer_HasMet",
        "ba2b225d-e9d4-944d-5b4f-b27dd975c626_A",
        "DEN_AttackOnDenDruidLeader_State_HasMet",
        "6fa2b72d-fde1-4ee3-e1d1-f184232f693d_A",
        "DEN_DruidAttack_HasMet_ParentBAfterAttack",
        "DEN_General_Squirrel_LearnedTerritory",
        "HAG_Hagspawn_Knows_PromisedRaiseHusband",
        "MOO_Assault_HasMet_KethericHound",
        "PLA_ZhentShipment_Agent_001_Inclusion_Start",
        "GOB_RaiderStupid_HasMet",
        "83fdf5e9-88b8-19e7-ba8f-ff075d2222ce_PLA_ZhentShipment_Knows_Gnolls",
        "DEN_Apprentice_Event_RevealedTadpole",
        "DEN_Thieflings_Event_HideoutTrespassCrimeResolved",
        "469a1188-028b-0e6b-b595-fa464baa551e_b",
        "GOB_RaiderBold_HasMet",
        "FoundCounsellor",
        "UND_DuergarCamp_State_SidedNone",
        "99aa7b78-defd-57bc-eabf-a8aa43a030d9_B",
        "a0afae3d-53b0-192d-d822-c61da104f979_A",
        "8f847adf-7b8a-3551-cfc0-4ea0c66a999a_F",
        "DEN_Apprentice_State_ShadowDruidPath",
        "DEN_AttackOnDen_HasMet_LeaderKidVictory",
        "FOR_Monitor_Event_TakeFood",
        "GOB_GoblinToast_ThirdGoblinToasted",
        "FOR_Monitor_State_TransformToDevil",
        "DEN_Thieflings_HasMet_Guard2",
        "DEN_Thieflings_HasMet_Mol",
        "ORI_Karlach_HasMet",
        "MOO_Execution_State_PlayerWantedToAttack",
        "GOB_Festivities_HasMet_Ogre_00",
        "GOB_RatRacket_LocalRat_002_HasMet",
        "4466a73c-607a-4a7e-c1e5-94d549e8f23d_A",
        "ce2b9169-f3e7-e07f-9c58-0fd373d5df9a_PLA_ZhentDungeon_Zhent02_Dead_KnowsZarysisZhentarim",
        "HAV_Minthara_Hasmet",
        "HAV_ProdigyLament_Event_BookGivenAway",
        "DEN_AttackOnDen_Event_EnemiesAppear",
        "FOR_SchoolOgres_Event_AttemptedFirstSkillCheck",
        "GOB_Checkpoint_State_UsedAlarmOnce",
        "HAV_ProdigyLament_Event_Intro",
        "DEN_GoblinScouts_State_SavedDruid",
        "DEN_AttackOnDen_HasMet_Adventurer2",
        "d6df8edb-ac4b-e1d2-794b-6bfd00757cbf_A",
        "MOO_Assault_AssaultFlamingFist_003_ThroneRoomDefeated_HasMet",
        "HAV_ProdigyLament_HasMet_Ide",
        "GOB_GoblinToast_Event_IncludeFourthGoblin",
        "15b0a2b9-2b22-50ab-70c0-ab3042def597_GaleCommentTried",
        "DEN_HarpyMeal_InHideout_WasMean",
        "PreventTradeWithPlayer",
        "DEN_GoblinHunt_Event_GiveRewardBag",
        "1bddcc22-dadd-92c9-4186-4e10ebbfee68_CHA_Crypt_Jergal_DontFollow",
        "UND_AdamantineForge_Knows_Adamantine",
        "DEN_AdventurersQuest_Knows_AradinStory",
        "FOR_Bottomless_State_InteractedWithWell",
        "ORI_INCLUSION_MINTHARA",
        "DEN_AttackOnDen_HasMet_ChefAndSon",
        "ORI_Inclusion_Astarion",
        "UND_DarkJusticiarsCorpses_Recognized",
        "fd9ed69f-475f-def2-bae0-25065ccc4143_B",
        "GLO_Florrick_State_KnowsWyllDevil",
        "GLO_Desire_State_FreedInAct1",
        "MOO_MoonriseTower_State_Outcast",
        "DEN_DruidLair_Knows_DruidsAlliance",
        "1591cb60-9e65-980a-c49e-69f68b958a1d_B",
        "GOB_Checkpoint_State_GainedAccess",
        "FOR_UnfortunateGnome_Bargaining",
        "DEN_AttackOnDen_HasMet_ProdigyBrother",
        "UND_Elevator_Event_GotWarning",
        "UND_FearfulRothe_Event_MakeDuergarHostileInDialog",
        "GOB_GuardUpset_State_ConvincedTrueSoul",
        "HAV_LiftingTheCurse_Portal_HasMet",
        "DEN_CapturedGoblin_State_InTransit",
        "GLO_Thieflings_State_PCShookPickpocketSister",
        "GOB_GEB_TorturedAdventurer_Assault_HasMet",
        "DEN_GroveConflict_Event_StoleIdolAttempt",
        "00a82e63-fae8-cc02-0b2b-314c9d21ce6c_F",
        "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_NoFFPresent",
        "MOO_CatBusiness_HasMet_SwA",
        "29ddc96b-303b-373d-2b6f-37ae4e8d534b_A",
        "DEN_Thieflings_Event_CallGuard",
        "SCL_Drider_HasMet",
        "DEN_AdventurersQuest_RaidAdventurerAtCorps_HasMet",
        "UND_FearfulRothe_HasMet_Rothe_001_SpeakWithAnimals",
        "UND_FearfulRothe_State_BefriendedRothe",
        "0d6dbe21-1644-b9bf-8297-dd60d820bd99_B",
        "DEN_GuardedEntrance_HasMet_LiedAboutDeath",
        "FOR_ApothecaryGoblins_Goblin01_HasMet",
        "HAG_AnimalIllusion_Revealed_HasMet1",
        "DEN_TieflingScam_Event_TalkedAboutBox",
        "SCE_Alfira_Event_GaveShiningDawn",
        "0276d317-8b34-66e2-48e2-6b9d69d6830b_F",
        "UND_Automaton_Knows_AskedPlace",
        "HAV_Florrick_Event_RavengardInTowers",
        "CRA_DeadFisherman2_Dead_WhatDoing",
        "GOB_GoblinToast_Event_IncludeThirdGoblin",
        "DEN_AttackOnDen_HasMet_PickpocketTrader",
        "COL_TadpolingCentre_Knows_IdentifiedDarkUrgePod",
        "GOB_GoblinThroneCheckpoint_Pass",
        "HalsinLeft_KilledLeaders",
        "DEN_AttackOnDen_HasMet_Halsin",
        "c167cdf3-7201-e55c-222f-773c758e1000_IncludedHusband",
        "HAG_HagLair_Victim_001_HasMet",
        "512d5ba7-a884-f1f5-5d26-fad488c07e2c_C",
        "MOO_Audience_State_KethericToldToKneelAtAltar",
        "PLA_StuckDwarf_HasMet_FoundWife",
        "GOB_SpiderNest_State_SpidersChill",
        "PLA_Tavern_Knows_DukeInTavern",
        "ORI_INCLUSION_KARLACH",
        "PLA_ZhentDungeon_State_AgentFreed",
        "UND_FurnaceSearch_Event_DuergarMentionsForge",
        "GLO_Moonrise_Knows_GoblinsCapturedADuke",
        "DEN_DruidLair_Knows_FoundingGrove",
        "FOR_Monitor_HasMet_Dinner",
        "AskedCircle",
        "03b6aa2e-e805-3a51-6bdb-d92f0b0da84a_UND_MyconidCircle_ServantHookHorror_01_RecognisedMonster",
        "DEN_GuardedEntrance_HasMet_Protester1",
        "MOO_Assault_AssaultHarper_002_ThroneRoomDefeated_HasMet",
        "ToldAboutTadpole",
        "DEN_DruidAttack_HasMet_Tiefling010AfterAttack",
        "f3f236b2-37a1-a0a2-5855-184ead7b1286_C",
        "GOB_DrowCommander_State_Hostile",
        "UND_ArguingGnomes_Event_LearnedAboutPhilomeen",
        "HAV_DevilishOx_LastLight_HasMet_SwA",
        "MOO_Assault_AssaultFlamingFist_004_PostAssault_HasMet",
        "UND_PetrifiedDrow_Knows_WizardIsDhourn",
        "ORI_Inclusion_End_ShadowHeart",
        "MOO_Assault_HasMet_HarperQuartermaster",
        "ORI_Shadowheart_Knows_SeenTempleVista",
        "FOR_BugBearLove_Event_CoupleHostile",
        "HAG_AnimalIllusion_Narrator",
        "DEN_Thieflings_State_DoneChase",
        "UND_ElevatorGuard002_HasMet",
        "ThankedFreed_BeldronThulla",
        "ORI_INCLUSION_MINSC",
        "DEN_Thieflings_Knows_PlayerRobbed",
        "DEN_ShadowDruid_HasMet_Opposed",
        "GLO_TadpoledCount1",
        "HAV_ProdigyLament_Brother_RolanDead_HasMet",
        "DEN_DruidAttack_HasMet_ExcitedBoar",
        "3b2ae6b6-ca7e-d905-0430-128078b3119f_B",
        "720e85fb-cc00-b81a-efff-343a04ca221e_A",
        "DEN_DevilishOx_MeetAtDruidsGrove_HasMet_SwA",
        "UND_ClericPetGrave_HasMet",
        "UND_MyconidCircle_DirectToSovereign_HasMet",
        "UND_GnomeWorkerLumpy_HasmetRescued",
        "DEN_GroveConflict_Quest_Learnt3LeadersTwoNames",
        "SCE_GnomeFollowUp_Wulbren_UneasyAboutPlayer",
        "HAV_SavingPrisoners_Knows_CapturedTieflings",
        "d97f72ff-8fb1-8a4c-f169-89751bd6e125_b",
        "ORI_INCLUSION_RANDOM",
        "HAG_Well_Event_DrinkWell",
        "a7407f82-add0-9f6d-e4e6-78b9c39195a6_C",
        "ORI_INCLUSION_WYLL",
        "4118b185-9468-2295-93f3-9d6eafd8fb8a_Second_Disabled",
        "FOR_GoblinAmbush_State_DrowAutoPass",
        "DEN_TieflingLeader_Quest_GobHuntResponded",
        "GLO_Halsin_Event_TalkedWithDruidLeader",
        "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionRefused",
        "HAV_ProdigyLament_State_ToldStory",
        "ORI_Inclusion_Gale",
        "DEN_RitualDruid_HasMet_Left5",
        "PLA_Desire_Quest_TriedForceDoor",
        "DEN_Thieflings_Pickpocket1_PCIsNotAChump",
        "MOO_InfernalVendor_State_AskedAboutDeals",
        "DEN_AttackOnDen_HasMet_Refugee002",
        "fb0e13b6-cc68-d496-51c2-4594f4f5bf40_TauntHer",
        "182bb613-b70c-5e7c-b3ea-ea14e02d1fab_C",
        "GOB_PainPriest_Event_PickScourge",
        "9378e194-3135-f75c-b557-457fa52db9f9_A",
        "DEN_GroveConflict_Knows_HeardAboutRitual",
        "d0423454-cc51-ae8e-5096-cffd1aac9f75_A",
        "FOR_BugBearLove_Knows_Lovemaking",
        "MOO_Assault_AssaultHarper_001_ThroneRoomDefeated_HasMet",
        "ORI_INCLUSION_LAEZEL",
        "DEN_DruidAttack_HasMet_SonOfChefAfterAttack",
        "MOO_Docks_Knows_TadpoleVats",
        "HAG_HagLair_TalkingDoor_HasMet",
        "ORI_Inclusion_ShadowHeart",
        "HAV_TieflingSurvivors_Mirkon_StartInclusion",
        "1ea9e483-36a9-82b1-852f-b901ec25552a_a",
        "DEN_Prodigy_HasMet",
        "PLA_ZhentShipment_State_TalkedAfterKilledGnolls",
        "551618bc-83c9-52cc-0ca7-37c224446cf7_Local1",
        "GOB_Bravado_State_Goblin3Hasmet",
        "SCE_GnomeFollowUp_HasMet_WulbrenAlive",
        "SCE_TieflingFollowUp_Ide_HasMet",
        "FOR_BottomlessWell_InteractWithWell_Knows_LookedDown",
        "ORI_INCLUSION_GALE",
        "DEN_GuardedEntrance_HasMet_Parents",
        "GOB_GoblinToast_Event_IncludeSecondGoblin",
        "ca797aab-5a73-7ec5-edb7-022122573b39_B",
        "HAV_ProdigyLament_Sister_RolanDead_HasMet",
        "DEN_AttackOnDen_Event_HeftyTieflingQuip",
        "HAV_ProdigyLament_HasMet_Rolan",
        "MOO_InfernalVendor_Event_SellingBlood",
        "MOO_WallTentacle_HasMet_Mig",
        "GOB_WolfPens_Event_HalsinLeftParty",
        "MOO_UpperFloor_HasMet_Guard01",
        "FactionHostileToPlayerGroupAfterDialog",
        "MOO_Jailbreak_HasMet_ProdigySister",
        "ORI_Laezel_Quest_FoundZorru",
        "GOB_GoblinPriest_Event_FreedFromChains",
        "PLA_StuckHalfElf_Knows_MentionedDowry",
        "21e0890e-7019-66a3-1956-125405f96d7c_A",
        "a63e4af2-6edc-188a-efdf-b9ffc5460fc5_LOCAL_B",
        "DEN_DruidAttack_HasMet_DruidOpposedAfterAttack",
        "FOR_PriestOfTheConqueringGod_Cultists_Knows_Mission",
        "DEN_Apprentice_Event_RemoveBirdExhaustion",
        "DEN_CampGeneral_PCGotLore",
        "SpokeToBrothers",
        "5f09c70a-153e-77e8-731c-5c532e635809_B",
        "DEN_DruidAttack_HasMet_GatekeeperAfterAttack",
        "b951f0e6-65af-843d-a666-f5284343cc67_MentionedTrueSoul",
        "LearnedGroveSituation",
        "DEN_RaidingParty_Event_UnsheatheForFight",
        "ReachedWife",
        "GOB_Festivities_BugbearSleeper_00_HasMet",
        "MOO_Jailbreak_State_WulbrenAlerted",
        "GLO_TadpoleIntro_NPC",
        "DEN_Thieflings_Knows_KidsThieves",
        "MOO_Execution_Guard_002_Hasmet",
        "30d43adb-dcaf-c0f3-d432-af96a1c2e1ea_spoketowulbren",
        "DEN_ShadowDruidLeaderPostGoblins_State_HasMet",
        "DEN_GroveConflict_Knows_LeaderNameKing",
        "TemporaryHostilityAfterDialog",
        "0884581d-9f92-0a34-9440-6a54c0813bbe_ProceedToSecondStage",
        "DEN_Prodigy_HasMet_Brother",
        "GLO_Absolute_Knows_TrueSoul",
        "UND_GnomeForeman_UnfortunateGnome_InclusionStart",
        "HAV_WrootRequest_State_ReunionDone",
        "DEN_WeepingTree_HasMet_Bear",
        "PLA_ZhentDungeon_Dog_03_HasMet",
        "a6f2350b-ecc4-bf6c-0c73-dcb37f9e9690_B",
        "GOB_DrowCommander_Knows_DrowLeader",
        "ORI_Shadowheart_State_IdolHint",
        "ea88dfe9-ff39-9b98-ae03-48d7fdf2708e_A",
        "DEN_AttackOnDen_HasMet_Refugee004Victory",
        "ORI_Inclusion_End_Astarion",
        "OrderedKillDruids",
        "DEN_DevilishOx_MeetAtDruidsGrove_State_Peaceful",
        "DEN_AttackOnDen_HasMet_RitualDruid002",
        "PLA_StuckHalfElf_StartInclusion",
        "DEN_Thieflings_Pickpocket2_HasMet",
        "375a6f59-375f-f5eb-5f42-60de2dc6aa6b_B",
        "GOB_Checkpoint_Event_WarnedAtCliff",
        "PLA_ZhentShipment_State_Talked",
        "RefusedHelpBrothers1",
        "GOB_PainPriest_Event_ReactToMocking",
        "MOO_Jailbreak_Event_SpeakToTieflingsWarning",
        "DEN_DruidLair_Knows_RuneAppearance",
        "GLO_Hag_KnowsAboutSurrogate",
        "MOO_Jailbreak_Event_ForceBoatLeave",
        "MOO_Assault_AssaultFlamingFist_002_HasMet",
        "81f2a55d-d317-761f-f6a0-fe97ad6d5288_C",
        "UND_DuergarCamp_Knows_NereIsTrapped",
        "DEN_SenderBird_Event_TakeOff",
        "FOR_GnomeGoblinsPacified",
        "DEN_DruidAttack_HasMet_ChefAfterAttack",
        "ParentLied",
        "f8e3175b-5587-d6cd-2174-e5a3e9ca4890_A",
        "7256657b-1386-989f-0262-c6530e03a9fb_AskedWhy",
        "DEN_General_Inclusion_End_Pickpocket",
        "DEN_WeepingTree_Bear_Upset",
        "UND_TheDrowNere_Mutiny_InclusionStart_GnomeSilly",
        "bde7a4f1-933f-f6ce-4a3e-4b1f29f83704_B",
        "UND_TheDrowNere_Event_HadMindMeld",
        "b156dddb-036d-8d82-5a7a-8fd110e48cb4_B",
        "57c003e7-0932-6f0c-e655-99025a4abe3a_A",
        "DEN_YoungLovers_State_MetPlayer",
        "5310a408-76a3-3498-cc26-ae866871188b_Third_Disabled",
        "HAV_General_HarperScout_001_HasMet",
        "7ffcf0de-e30b-ef58-fcc5-8d3a1482fa59_b",
        "GLO_Absolute_Knows_GoblinsWorship",
        "DEN_Weaponsmith_Knows_Elturel",
        "DEN_ShadowDruid_Event_ReactionDone",
        "CHA_Crypt_Event_JergalAppears",
        "PLA_ZhentDungeon_Zhent05_HasMet",
        "DEN_TieflingLeader_HasMet_ReactToDruidAttack",
        "ORI_Laezel_State_StartedTieflingsSceneAtCage",
        "HAV_Siege_State_RefusedJaheira",
        "DEN_BirdSender_HasMet",
        "UND_MyconidCircle_DeepRothe_BaelenAteShroom_Hasmet",
        "GOB_BattleStations_Event_ToStation",
        "DEN_AttackOnDen_HasMet_Trainer",
        "GOB_GoblinHeretic_FreeToGo",
        "GOB_GoblinThroneCheckpoint_State_NonCharlatanAccess",
        "1c74b01f-5dcf-8107-b384-204d341ed9d5_OnlyOnce",
        "DEN_Thieflings_State_MessedWithMolsKids",
        "PLA_Refugee_001_HasMet",
        "UND_MyconidCircle_State_GainedAccess",
        "DEN_DruidAttack_HasMet_ParentAAfterAttack",
        "GOB_Checkpoint_State_GoblinsToldLeaders",
        "UND_DuergarCamp_Mutineers_HasMet",
        "LearnedDukeMissingCounsellor",
        "SCE_JergalDebrief_Event_WhyHere",
        "94cd662c-844b-4dcc-ffdc-0b9a8da32bcc_BarcusSpokeUp",
        "DEN_AttackOnDen_HasMet_LairDoor",
        "RikkaAskedQuest",
        "DEN_General_Event_TriedNudgingBear",
        "DEN_HasMet_SoloParentB",
        "DEN_RitualDruid_HasMet_Left2",
        "GOB_Torturers_HasMet_Goblet",
        "16f542b8-5ef8-49a4-33e7-495ec95944b2_B",
        "FOR_BugbearLove_State_InterruptedCouple",
        "DEN_AttackOnDen_Servant005_Answered",
        "UND_BroodingSovereign_State_RefusedCircle",
        "HAV_Siege_Intro_DoSetup",
        "MOO_Docks_HasMet_OberverTadpolePowers",
        "DEN_Thieflings_HasMet_Trainee1",
        "23867c04-54b8-6ee9-a6bf-55a1a4c8b75d_B",
        "UND_DeadInTheWater_CorpseDisposerLeader_HasMet",
        "MOO_Assault_AssaultHarper_003_ThroneRoomDefeated_HasMet",
        "DEN_Tiefling011_State_Met",
        "DEN_Thieflings_PersuadedPickpocket",
        "GOB_GoblinToast_Event_NoMoreRefills",
        "ORI_Inclusion_Random",
        "MOO_Bazaar_HasMet_Guard00",
        "PLA_KarlachRecruitment_State_PersuasionSucceeded",
        "DEN_Thieflings_State_WitnessedArgument",
        "200aa519-5963-3b2d-3396-d1dcbb013702_AskedStrategy",
        "3b911555-52e5-7791-d2ac-44fe62465fa1_Loop3",
        "MOO_Assault_AssaultFlamingFist_001_ThroneRoomDefeated_HasMet",
        "GOB_RaiderCunning_HasMet",
        "GOB_Eye_HasMet",
        "DEN_AttackOnDen_HasMet_Refugee003",
        "DEN_Weaponsmith_HasMet",
        "34910f06-fac0-085f-b41a-337d0dfad85a_A",
        "ORI_Inclusion_Laezel",
        "GOB_GoblinToast_SecondGoblinToasted",
        "9e2ef14b-1a2f-4edc-3f78-7e3a27967e5c_C",
        "DEN_AttackOnDen_HasMet_ScoutCaptive",
        "PLA_KarlachRecruitmentTollhouse_State_HostilitiesBegan",
        "UND_PetrifiedDrow_Knows_MemoryCrystal",
        "MOO_WallTentacle_Daisy_Interacted",
        "UND_FairyRings_Dead_AskedDrowIdentity",
        "ZevlorRewarded",
        "COL_TadpolingCentre_Knows_ImpliedDarkUrgePod",
        "GOB_PainPriest_Penanced",
        "b618166c-99f4-1c7a-02b7-32f0f0fbe420_LocalA",
        "SCE_TieflingFollowUp_Event_GiveShiningDawn",
        "DEN_AttackOnDen_HasMet_Servant004Victory",
        "DEN_AttackOnDen_HasMet_Mule1",
        "DEN_TieflingScam_HasMet",
        "MOO_Docks_State_PersuasionSuccess",
        "DEN_AttackOnDen_HasMet_Kid003",
        "UND_FearfulRothe_Event_ConvincedRotheToAttackDuergar",
        "MOO_BugBearVendor_State_FoundMotive",
        "PLA_FlamingFist7_InnBurntDown_HasMet",
        "1fb21305-2e50-068c-0243-64536fe2bd6c_A",
        "DEN_AttackOnDen_HasMet_Tiefling003Victory",
        "SCE_AncientFist_ToldStory",
        "0d9d0064-babd-6e83-6ea6-5b78afb0413c_B",
        "DEN_GoblinScouts_HasMet_Captive",
        "GLO_Absolute_Knows_Symbol",
        "PLA_ConflictedFlind_Event_MindControl_KillHerself",
        "HAV_BackupLeader_HasMet",
        "GLO_SpeakWithDead_Event_QuestionAsked",
        "HAG_Hah_MaskedVictim2_HasMet",
        "DEN_DruidAttack_HasMet_ZenBear",
        "MOO_Audience_HasMet_WaitingKetheric",
        "GOB_PainPriest_Event_BadReaction",
        "MOO_GuardRoom_HasMet_Guard01",
        "UND_BrokenLantern_State_TriedArcane",
        "461152ff-16c3-2617-f8af-7ddb5681820b_b",
        "MOO_FlamingSpy_HasMet",
        "ed70fdfc-3d7b-7753-1171-957f7316fe55_B",
        "MOO_EntranceCheckpoint_Guard2_HasMet_AllowedIn",
        "SidedTieflings",
        "DEN_GroveConflict_Knows_KaghaRequestedPlayers",
        "PLA_StuckHalfElf_State_PlayerAngered",
        "UND_BroodingSovereign_State_AskedCircle",
        "DEN_AttackOnDen_HasMet_Trainee001Victory",
        "UND_MyconidCircle_State_FirstGreetingDone",
        "6bde1237-aa43-36d3-9e53-ec1092198541_C",
        "2bc86ee2-13ec-992e-993a-8b2fb705bd0a_B",
        "UND_DarkLake_State_HostileResolution",
        "c3d825d1-49b8-9ae2-4554-4fc1f55d2eee_LocalA",
        "COL_TadpolingCentre_Event_PurgePods",
        "DEN_ZhentAgent_02_Inclusion_Start",
        "DEN_AttackOnDen_HasMet_ProdigySister",
        "HAV_HarperScouts_Event_SawYonasFuneral",
        "ORI_Shadowheart_Event_DarkJusticiarHint",
        "873bc4e0-3d3c-1eac-903b-e94920fd6306_sawgithyanki",
        "DEN_CampGeneral_RufusHasMet",
        "DEN_Apprentice_HasMet",
        "DEN_General_Mule2_HasMet",
        "DEN_AttackOnDen_HasMet_ApprenticeVictory",
        "MOO_Bazaar_State_TalkedAboutPilgrims",
        "98423a2d-7b47-e379-6526-c435773e3cff_B",
        "DEN_Thieflings_Event_PlayerNotInvolved",
        "HAG_HagLair_Knows_DoorWasAlive",
        "ThankedFreed_Beldron",
        "DEN_AttackOnDen_HasMet_Griefling",
        "4d9f1cb5-200f-c998-657a-8d04f5c93c74_B",
        "DEN_AttackOnDen_HasMet_RitualDruid005",
        "4b4d2992-abb5-bd1b-9593-feb68eddf682_B",
        "GLO_Ketheric_State_AngryAtPlayer",
        "ORI_Karlach_Knows_DammonWorkedInHell",
        "ORI_Inclusion_End_Random",
        "DEN_Squirrel_HasMet",
        "ORI_INCLUSION_HALSIN",
        "DEN_ShadowDruid_State_HadSelfReflection",
        "DEN_Thieflings_Pickpocket1_HasMet",
        "PLA_FlamingFist7_Knows_AskedWhatHappened",
        "DEN_DruidAttack_HasMet_BardAfterAttack",
        "GOB_PainPriest_State_NeedMoreHP",
        "FOR_BugBearLove_Event_OpenDoor",
        "DEN_Thieflings_State_PCSawKidThievesGettingCaught",
        "260f61d5-60df-da35-608b-a9856291b143_PlayerKnowsOrinKilledZevlor",
        "916a75f0-23d8-f05b-449d-d926d69fe782_FailedCheck",
        "MOO_Jailbreak_HasMet_AngrySister",
        "SCE_GnomeFollowUp_Wulbren_HasMet",
        "DEN_druidservant_005_HasMet",
        "CHA_Jergal_HasMet",
        "ORI_Inclusion_End_Gale",
        "PLA_ConflictedFlind_Hyena_001_HasMet",
        "StartedAlt",
        "MOO_Audience_HasMet_AccessCultist",
        "DEN_RaidingParty_Adventurer2_HasMet",
        "GLO_Thieflings_State_PickpocketKidGotHit",
        "GOB_WolfPens_Event_HalsinLeavesGoblinCamp",
        "e6738c9d-060d-c901-b945-4d49ca303d5b_SuccessfullyReadTracks",
        "DEN_GruntingKid_HasMet",
        "16193247-ccea-1974-45ec-e8229a7de4ef_B",
        "DEN_TieflingLeader_Quest_GobHuntDeclined",
        "DEN_RaidingParty_Event_GoblinsAppear",
        "DEN_GuardedEntrance_HasMet_Guard1",
        "GOB_PainPriest_Event_FirstHitDone",
        "ORI_Inclusion_End_Laezel",
        "DEN_General_Event_ElevatorBearMoves",
        "DEN_CapturedGoblin_OfferedRevenge",
        "DEN_General_Inclusion_Pickpocket",
        "DEN_RitualDruid_HasMet_Left4",
        "GOB_DrowCommander_HasMet",
        "GLO_Jergal_State_OutOfTomb",
        "HAV_ProdigyLament_Knows_AboutBook",
        "DEN_TieflingLeader_State_KaghaResolved",
        "f3afb428-73fc-2e5c-057b-2e0e5a1b2f1c_B",
        "ORI_DarkUrge_Knows_MetIsobel",
        "DEN_AttackOnDen_HasMet_Stargazer",
        "DEN_Thieflings_Event_ShookThief",
        "DEN_AttackOnDen_HasMet_Refugee001",
        "b70d5139-9980-efc6-3ba3-fe2eb56ab2e0_B",
        "HAV_LoneLover_HasMet_DanisUpset",
        "DEN_DruidAttack_HasMet_PetWolf",
        "26071d89-33af-8eac-3c05-ee8dca91338d_who",
        "DEN_Apprentice_UserShortcut",
        "ReflectedKagha",
        "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionAsked",
        "FOR_GoblinAmbush_GoblinsPacified",
        "MOO_Bazaar_BazaarStander_007_AudienceReady_HasMet",
        "MOO_BugBearVendor_HasMet_BazBugBear",
        "932401b1-7763-7fd7-bee1-8731fe62084f_DeadThree",
        "HAV_WrootRequest_Event_TalkedToWulbrenInHaven",
        "DEN_DruidAttack_HasMet_GrieflingAfterAttack",
        "DEN_GuardedEntrance_State_ClearToPass",
        "GOB_Checkpoint_State_GuidedByCapturedGoblin",
        "DEN_RaidingParty_Event_GoblinRaidFight",
        "ORI_Inclusion_Wyll",
        "RefusedCircle",
        "DEN_TieflingScam_Knows_Scam",
        "3174fc37-851b-0494-321e-b606f7e43901_B",
        "DEN_BirdSender_Knows_AskedAboutBird",
        "DEN_DevilishOx_MeetAtDruidsGrove_Incapable",
        "DEN_Thieflings_CaveGuard_002_HasMet",
        "GOB_PainPriest_Knows_PenanceIsPain",
        "6bba3537-3756-eb27-a08a-a8596d765f2e_C",
        "28259eb0-5f20-5094-45f1-3292253ae1ed_C",
        "CHA_LaezelRecruitment_Event_LaezelHostile",
        "DEN_GoblinScouts_SavedDruid",
        "ArrivedAtGrove",
        "DEN_GruntingKid_Event_AskedCanTalk",
        "DEN_Apprentice_Event_GiveReward",
        "acc081f3-204a-2f29-a3bb-6d33ff784c39_C",
        "DEN_AttackOnDen_GrieflingFriend_Knows_Kelemvor",
        "GOB_PainPriest_Event_Mercy",
        "c68c5474-226f-4b47-b327-a22274e360a0_B",
        "a2fa1f0f-b9b5-f8bf-bf27-b11194b8502f_B",
        "ORI_DarkUrge_Knows_ButlerDiedReaction",
        "HAV_LoneLover_Event_ReunionDone",
        "55452e03-17c6-9a9d-072b-80043381c98b_A",
        "UND_LoneDuergar_Event_WaitingForMainDialog",
        "OrderedBreachInn",
        "MOO_Jailbreak_HasMet_WulbrenOutcast",
        "DEN_RitualDruid_HasMet_Pacified3",
        "DEN_ShadowDruidRats_Event_RememberedLetter",
        "DEN_DruidAttack_State_PrepAfterDeathOfDruids",
        "PLA_Desire_Event_HasMet",
        "4103e544-e1db-525f-81ec-b5dfa71907d7_WantNereOut",
        "PLA_StuckHalfElf_Event_ToldQuestion",
        "UND_BroodingSovereign_Event_Enlarged",
        "f108995b-14f4-7823-d218-790177a93da8_B",
        "6a98f294-9f4f-d0b0-1cba-706f1cb15009_Local1",
        "c76693dc-e4a4-5631-a9b5-8abc6b4ab36e_DarkUrgeThreatened",
        "GOB_WolfPens_Worg_001_HasMet",
        "MOO_Audience_Skeletons_SpokeTwice",
        "DEN_DruidAttack_HasMet_WeaponsmithAfterAttack",
        "MOO_Jailbreak_Event_BoatLeavesWithoutPlayers",
        "GLO_Volo_HasMet",
        "OpenedSarcophagus",
        "Counsellor_RefusedHelp",
        "02455563-e119-58e5-1fe7-eb46fe381d30_A",
        "GOB_GuardUpset_HasMet",
        "GOB_RatRacket_LocalRat_001_HasMet",
        "c5f62c4b-fb04-1505-c35b-63119d96b127_First_Disabled",
        "698f5a3b-6d88-3d9e-ee4f-26d9c1fc5b6b_B",
        "UND_TheDrowNere_State_KilledGnomeSerene",
        "COL_General_Knows_ColonyIsIllithid",
        "GLO_VoloBallad_MetGuardPrison",
        "PLA_ZhentDungeon_Zhent01_HasMet",
        "7cd519b5-df41-47c0-1d53-6c315224e489_A",
        "90a73000-b6ed-ad55-7eae-f9a6f8f00f55_A",
        "ORI_Karlach_HasMet_DammonUnavailable",
        "GOB_CheckpointBackup003_HasMet",
        "DEN_TieflingScam_Event_FoundOutLies",
        "UND_ArguingGnomes_Quest_Accepted",
        "DEN_Thieflings_HasMet_Chef"
      ]
    },
    "Shadowland": {
      "chapter_id": "Act2_Shadowland",
      "scenario_sequence": [
        "scl_prodigy",
        "scl_shadowcurse",
        "scl_deadcursedanimal",
        "scl_monkamulet",
        "scl_dridercaravan",
        "scl_misc",
        "scl_plunderedcaravan",
        "scl_pixiebell",
        "moo_balthazarlab",
        "scl_pixie",
        "scl_halsin",
        "scl_deaddruid",
        "scl_siegeremains",
        "scl_entrypoint",
        "scl_crossroads",
        "scl_general",
        "scl_shadowheart",
        "scl_skepticalrobber",
        "scl_pickedupseluneidol",
        "scl_hyena",
        "scl_harperscouts",
        "scl_drider",
        "scl_shadowbirds",
        "scl_ruinedbattlefield",
        "scl_entrypointgoblin",
        "scl_signpost",
        "scl_harperscout",
        "scl_mastiffpoachers",
        "scl_ad",
        "scl_karlach",
        "scl_minthara",
        "scl_olivershadow",
        "scl_oliversdiary",
        "scl_githcreche",
        "scl_graveyard",
        "scl_harpersduty",
        "scl_servantoftheraven"
      ],
      "scenario_results": {
        "scl_prodigy": {
          "scenario_name": "scl_prodigy",
          "session_sequence": [
            "AD_AgainstShadows"
          ],
          "paths": {
            "AD_AgainstShadows": [
              "AD_AgainstShadows_0"
            ]
          },
          "node_data": {
            "AD_AgainstShadows": [
              {
                "id": "AD_AgainstShadows_0",
                "speaker": "Rolan",
                "text": "I am Rolan, apprentice to Lorroakan himself - do not try me!",
                "node_type": "normal",
                "checkflags": [
                  "4ca79daf-c389-2693-bd63-4e758972e2da_A"
                ],
                "setflags": [
                  "4ca79daf-c389-2693-bd63-4e758972e2da_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: exhausted and scared, but trying not to sound it"
              }
            ]
          },
          "session_synopses": {
            "AD_AgainstShadows": "Rolan is found near MOO and is found trying to fight off a group of shadows that appeared and are stalking him. He is exhausted and clearly scared but trying to put on a show and scare them off."
          }
        },
        "scl_shadowcurse": {
          "scenario_name": "scl_shadowcurse",
          "session_sequence": [
            "PAD_ShadowheartBlessed",
            "PAD_WantsOintment",
            "PAD_ShadowheartBlight"
          ],
          "paths": {
            "PAD_ShadowheartBlessed": [
              "PAD_ShadowheartBlessed_0"
            ],
            "PAD_WantsOintment": [
              "PAD_WantsOintment_2",
              "PAD_WantsOintment_8",
              "6",
              "NODE_NOT_FOUND"
            ],
            "PAD_ShadowheartBlight": [
              "PAD_ShadowheartBlight_0"
            ]
          },
          "node_data": {
            "PAD_ShadowheartBlessed": [
              {
                "id": "PAD_ShadowheartBlessed_0",
                "speaker": "Shadowheart",
                "text": "The Dark Lady shields me - I can feel her.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Commenting on having divine protection from a shadow curse that affects all others"
              }
            ],
            "PAD_WantsOintment": [
              {
                "id": "PAD_WantsOintment_2",
                "speaker": "Player",
                "text": "Here we go - if there's any of that ointment left, I could use it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "4",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PAD_WantsOintment_8",
                "speaker": "Player",
                "text": "Same here. I don't want to face whatever's out there unprotected.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "6",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "6",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ],
            "PAD_ShadowheartBlight": [
              {
                "id": "PAD_ShadowheartBlight_0",
                "speaker": "Shadowheart",
                "text": "Even Lady Shar's blessings cannot protect me here.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Commenting on losing Shar's protection against a shadow curse (venturing into where its strongest)"
              }
            ]
          },
          "session_synopses": {
            "PAD_ShadowheartBlessed": "Shadowheart comments on feeling Shar's protection against the curse return.",
            "PAD_WantsOintment": "PAD where a character who doesn't have the ointment applied steps into the shadowcurse and considers applying some. Only triggers if someone has spare ointment in their inventory. (At least one application)Plays only if 2 or more characters present: first to speak doesn't have the ointment applied on them. SH speaks first if she can.WRITER, don't forget to update the voicebark file SCL_ShadowCurse_VB_WantsOintment if you change the structure here!",
            "PAD_ShadowheartBlight": "Shadowheart comments on feeling Shar's protection fade."
          }
        },
        "scl_deadcursedanimal": {
          "scenario_name": "scl_deadcursedanimal",
          "session_sequence": [
            "PAD_FindAnimal"
          ],
          "paths": {
            "PAD_FindAnimal": [
              "PAD_FindAnimal_0"
            ]
          },
          "node_data": {
            "PAD_FindAnimal": [
              {
                "id": "PAD_FindAnimal_0",
                "speaker": "Player",
                "text": "The animal never had a chance. The curse consumes everything it touches.<br>",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_FindAnimal": "The party encounters a dead Shadow Cursed animal and comment on how the Shadow Curse consumes everything"
          }
        },
        "scl_monkamulet": {
          "scenario_name": "scl_monkamulet",
          "session_sequence": [
            "AD_ShadowlandsComment"
          ],
          "paths": {
            "AD_ShadowlandsComment": [
              "AD_ShadowlandsComment_0"
            ]
          },
          "node_data": {
            "AD_ShadowlandsComment": [
              {
                "id": "AD_ShadowlandsComment_0",
                "speaker": "Sentient Amulet",
                "text": "Darkness. Desolation. The Dark Lady's hand at work, mayhaps? HahaHA-HEE!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Said with the laughing madness so common to the character."
              }
            ]
          },
          "session_synopses": {
            "AD_ShadowlandsComment": "The spirit of the amulet comments on the state of the Shadowcurse and how it's effecting the land"
          }
        },
        "scl_dridercaravan": {
          "scenario_name": "scl_dridercaravan",
          "session_sequence": [
            "GoblinMelee_000_AD_DriderDies",
            "HalfOrcCaster_Checkpoint"
          ],
          "paths": {
            "GoblinMelee_000_AD_DriderDies": [
              "GoblinMelee_000_AD_DriderDies_0"
            ],
            "HalfOrcCaster_Checkpoint": [
              "HalfOrcCaster_Checkpoint_1",
              "HalfOrcCaster_Checkpoint_9",
              "HalfOrcCaster_Checkpoint_3",
              "HalfOrcCaster_Checkpoint_12"
            ]
          },
          "node_data": {
            "GoblinMelee_000_AD_DriderDies": [
              {
                "id": "GoblinMelee_000_AD_DriderDies_0",
                "speaker": "Brawler Vez",
                "text": "The boss is down! Don't let 'em get away with the light!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: 'the boss'= the drider (male). 'em = the Harpers (mixed genders)"
              }
            ],
            "HalfOrcCaster_Checkpoint": [
              {
                "id": "HalfOrcCaster_Checkpoint_1",
                "speaker": "Kansif",
                "text": "Hold there! One step closer and -",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "10",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HalfOrcCaster_Checkpoint_9",
                "speaker": "Kansif",
                "text": "True Soul - forgive me, I did not see you in the dark.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "10",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HalfOrcCaster_Checkpoint_3",
                "speaker": "Player",
                "text": "Attack.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "FactionHostileToPlayerGroupAfterDialog"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HalfOrcCaster_Checkpoint_12",
                "speaker": "Kansif",
                "text": "What - you'll die for this, traitor!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Half orc Realising the person they thought was an ally is about to attack"
              }
            ]
          },
          "session_synopses": {
            "GoblinMelee_000_AD_DriderDies": "Cultist reacts to drider dying.",
            "HalfOrcCaster_Checkpoint": ""
          }
        },
        "scl_misc": {
          "scenario_name": "scl_misc",
          "session_sequence": [
            "PAD_Graveyard",
            "PAD_DeadDruids",
            "PAD_ShadowlandDevastation"
          ],
          "paths": {
            "PAD_Graveyard": [
              "PAD_Graveyard_0"
            ],
            "PAD_DeadDruids": [
              "PAD_DeadDruids_0"
            ],
            "PAD_ShadowlandDevastation": [
              "PAD_ShadowlandDevastation_0"
            ]
          },
          "node_data": {
            "PAD_Graveyard": [
              {
                "id": "PAD_Graveyard_0",
                "speaker": "Player",
                "text": "Victims of the shadow curse. At least they were afforded a burial.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_DeadDruids": [
              {
                "id": "PAD_DeadDruids_0",
                "speaker": "Player",
                "text": "There was a battle here once - a large one.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_ShadowlandDevastation": [
              {
                "id": "PAD_ShadowlandDevastation_0",
                "speaker": "Player",
                "text": "Hells. The curse has torn open the ground itself...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Hushed shock/awe"
              }
            ]
          },
          "session_synopses": {
            "PAD_Graveyard": "VB on entering the graveyard outside of Haven. Favors a Dark Urge line.",
            "PAD_DeadDruids": "Party comments on the remains of the battle with Ketheric from 100 years ago.Halsin in particular comments on how the forces from the Emerald Grove were here.",
            "PAD_ShadowlandDevastation": "Party comments on just how destroyed the landscape is in parts of the Shadowcurse.Gale inparticular notes how the tectonic plates have even shifted."
          }
        },
        "scl_plunderedcaravan": {
          "scenario_name": "scl_plunderedcaravan",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "scl_pixiebell": {
          "scenario_name": "scl_pixiebell",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "6",
              "8",
              "5",
              "3"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "6",
                "speaker": "",
                "text": "RING RING, UNTER-SCUNTER.",
                "node_type": "normal",
                "checkflags": [
                  "GLO_PixieBell_HasMet = False"
                ],
                "setflags": [
                  "GLO_PixieBell_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: pronounced 'oonter scoonter'"
              },
              {
                "id": "8",
                "speaker": "",
                "text": "You look like you want to say the magic words. Like they're right on the tip of your lips...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "5",
                "speaker": "Player",
                "text": "Snurl.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Karlach 1"
                ],
                "context": ""
              },
              {
                "id": "3",
                "speaker": "",
                "text": "Don't you snurl at me, you nasty cow!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "GLO_PixieBell_Event_TransformsIntoDeepRothe"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "": "When you ring the pixie's bell, she poofs into existence and asks you aobut some 'magic words'. Depending on how you respond, she'll give a curse or a blessing"
          }
        },
        "moo_balthazarlab": {
          "scenario_name": "moo_balthazarlab",
          "session_sequence": [
            "Circle_PAD"
          ],
          "paths": {
            "Circle_PAD": [
              "Circle_PAD_0"
            ]
          },
          "node_data": {
            "Circle_PAD": [
              {
                "id": "Circle_PAD_0",
                "speaker": "Player",
                "text": "A ritual circle. Looks like it was used in the crafting of Moonlanterns.",
                "node_type": "normal",
                "checkflags": [
                  "ORI_Gale_Knows_BalthazarCircle = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "Circle_PAD": "Players have clicked on a hidden ritual circle on a desk in SCL.The second option triggers if Gale already knows how to use it."
          }
        },
        "scl_pixie": {
          "scenario_name": "scl_pixie",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "scl_halsin": {
          "scenario_name": "scl_halsin",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "scl_deaddruid": {
          "scenario_name": "scl_deaddruid",
          "session_sequence": [
            "PAD_ReadResearch"
          ],
          "paths": {
            "PAD_ReadResearch": [
              "PAD_ReadResearch_0"
            ]
          },
          "node_data": {
            "PAD_ReadResearch": [
              {
                "id": "PAD_ReadResearch_0",
                "speaker": "Player",
                "text": "Research on the nature of the shadow curse. Good to know.<br>",
                "node_type": "normal",
                "checkflags": [
                  "SCL_DeadDruid_State_PassedNatureCheck"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_ReadResearch": "The player reads the journal of a dead druid in SCL. The druid was researching the Shadowcurse to see if it was spreading. After reading the journal the player rolls a Nature check to parse the notes"
          }
        },
        "scl_siegeremains": {
          "scenario_name": "scl_siegeremains",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "scl_entrypoint": {
          "scenario_name": "scl_entrypoint",
          "session_sequence": [
            "PAD_Curse_2Characters",
            "PAD_AfterCutscene",
            "DaisyAD_ReachTowers"
          ],
          "paths": {
            "PAD_Curse_2Characters": [
              "PAD_Curse_2Characters_4",
              "PAD_Curse_2Characters_21"
            ],
            "PAD_AfterCutscene": [
              "PAD_AfterCutscene_0",
              "PAD_AfterCutscene_1"
            ],
            "DaisyAD_ReachTowers": [
              "DaisyAD_ReachTowers_0",
              "DaisyAD_ReachTowers_1"
            ]
          },
          "node_data": {
            "PAD_Curse_2Characters": [
              {
                "id": "PAD_Curse_2Characters_4",
                "speaker": "Player",
                "text": "These shadows can pull the life from someone - but not me.",
                "node_type": "normal",
                "checkflags": [
                  "REALLY_SHADOWHEART"
                ],
                "setflags": [
                  "ORI_Shadowheart_Knows_CurseResistant",
                  "4ca7d7ab-9b51-31d8-22be-0e26b2a7f3ed_A"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PAD_Curse_2Characters_21",
                "speaker": "Player",
                "text": "I feel it, though. My very being, draining out of me.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Affected by the shadow curse, which is draining their strength"
              }
            ],
            "PAD_AfterCutscene": [
              {
                "id": "PAD_AfterCutscene_0",
                "speaker": "Player",
                "text": "I've never seen darkness like this before. It's unsettling.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PAD_AfterCutscene_1",
                "speaker": "Player",
                "text": "But if this is the way to Moonrise Towers, then this is the only path I've got.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "DaisyAD_ReachTowers": [
              {
                "id": "DaisyAD_ReachTowers_0",
                "speaker": "",
                "text": "We are approaching the Absolute. A telepathic storm is surging all around us.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "DaisyAD_ReachTowers_1",
                "speaker": "",
                "text": "And the eye of the storm lies above that tower.<br>",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_Curse_2Characters": "Players are affected by the shadow curse. They start to lose health, and can feel the darkness starting to suck their life away - and 2 party members are available to AD about this.",
            "PAD_AfterCutscene": "PAD for party banter when players enter SCL, after the cutscene (either SCL_EntryPoint_Mountain.lsj or SCL_EntryPoint_Underdark.lsj, depending on which entrance is used). Lines are generic enough about the shadow curse/look of the land that they work for both entrances to SCL. Two lines from one companion if only one companion present.",
            "DaisyAD_ReachTowers": "DaisyAD that plays on entering SCL from either entry point."
          }
        },
        "scl_crossroads": {
          "scenario_name": "scl_crossroads",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "scl_general": {
          "scenario_name": "scl_general",
          "session_sequence": [
            "AD_Signpost"
          ],
          "paths": {
            "AD_Signpost": [
              "AD_Signpost_0"
            ]
          },
          "node_data": {
            "AD_Signpost": [
              {
                "id": "AD_Signpost_0",
                "speaker": "Narrator",
                "text": "*Last Light Inn, west. Moonrise Towers, southwest.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_Signpost": "AD on signpost in the shadow cursed lands. The road is twisted and broken, the sign is leaning at an odd angle, but you can still read that there's an inn to the north and Moonrise towers to the west."
          }
        },
        "scl_shadowheart": {
          "scenario_name": "scl_shadowheart",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "scl_skepticalrobber": {
          "scenario_name": "scl_skepticalrobber",
          "session_sequence": [
            "PAD_FoundFootprints"
          ],
          "paths": {
            "PAD_FoundFootprints": [
              "PAD_FoundFootprints_0"
            ]
          },
          "node_data": {
            "PAD_FoundFootprints": [
              {
                "id": "PAD_FoundFootprints_0",
                "speaker": "Player",
                "text": "Paw prints? Where do they lead?<br>",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_FoundFootprints": "This PAD occurs when the player approaches a set of tracks near a ledge. If the player jumps down, they will find a burrow with a ring inside."
          }
        },
        "scl_pickedupseluneidol": {
          "scenario_name": "scl_pickedupseluneidol",
          "session_sequence": [
            "PAD"
          ],
          "paths": {
            "PAD": [
              "PAD_0"
            ]
          },
          "node_data": {
            "PAD": [
              {
                "id": "PAD_0",
                "speaker": "Player",
                "text": "Good craftsmanship wasted on Selûne. Maybe it can be repurposed somehow.",
                "node_type": "normal",
                "checkflags": [
                  "ShadowHeart_InParty_Knows_SharWorshipper",
                  "SCL_State_PickedUpSeluneIdol"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: SH picks up a Selûne idol. SH is known to be a Shar worshipper\rNodeContext: Unimpressed"
              }
            ]
          },
          "session_synopses": {
            "PAD": "ShadowHeart reacting on picking up \"Selune Idol\"Location: SCL -> ShadowlandsShe reacts both when she picks up the idol or when another character does that."
          }
        },
        "scl_hyena": {
          "scenario_name": "scl_hyena",
          "session_sequence": [
            "AD_CaravanLeaves"
          ],
          "paths": {
            "AD_CaravanLeaves": [
              "AD_CaravanLeaves_1",
              "AD_CaravanLeaves_0"
            ]
          },
          "node_data": {
            "AD_CaravanLeaves": [
              {
                "id": "AD_CaravanLeaves_1",
                "speaker": "Hyena",
                "text": "*Whimper.*",
                "node_type": "normal",
                "checkflags": [
                  "SCL_EntryPoint_State_HyenaStaysAtCheckpoint"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_CaravanLeaves_0",
                "speaker": "Warrior Gronag",
                "text": "Shut your hole!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: angry - yelling at a hyena to be quiet"
              }
            ]
          },
          "session_synopses": {
            "AD_CaravanLeaves": "Hyena runs away and goblin reacts to it."
          }
        },
        "scl_harperscouts": {
          "scenario_name": "scl_harperscouts",
          "session_sequence": [
            "AD_HarperScout_003_Combat",
            "Dead_HarperScout_000",
            "ShadowCreatures",
            "BridgePoint_003",
            "AD_HarperScout_001_Combat",
            "AD_HarperScout_003_WrongWarning"
          ],
          "paths": {
            "AD_HarperScout_003_Combat": [
              "AD_HarperScout_003_Combat_0"
            ],
            "Dead_HarperScout_000": [
              "Dead_HarperScout_000_16",
              "Dead_HarperScout_000_17",
              "Dead_HarperScout_000_13",
              "Dead_HarperScout_000_6"
            ],
            "ShadowCreatures": [
              "ShadowCreatures_21",
              "ShadowCreatures_40",
              "ShadowCreatures_78",
              "ShadowCreatures_70",
              "ShadowCreatures_17",
              "32",
              "NODE_NOT_FOUND"
            ],
            "BridgePoint_003": [
              "BridgePoint_003_0"
            ],
            "AD_HarperScout_001_Combat": [
              "AD_HarperScout_001_Combat_0"
            ],
            "AD_HarperScout_003_WrongWarning": [
              "AD_HarperScout_003_WrongWarning_0"
            ]
          },
          "node_data": {
            "AD_HarperScout_003_Combat": [
              {
                "id": "AD_HarperScout_003_Combat_0",
                "speaker": "Harper Karrow",
                "text": "Yonas, no! What are you doing?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Dead_HarperScout_000": [
              {
                "id": "Dead_HarperScout_000_16",
                "speaker": "Narrator",
                "text": "*The corpse regards you lifelessly.*",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Dead_HarperScout_000_17",
                "speaker": "Player",
                "text": "What's your name?",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [
                  "GLO_SpeakWithDead_Event_QuestionAsked"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Dead_HarperScout_000_13",
                "speaker": "Harper Lassandra",
                "text": "Lassandra...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Dead_HarperScout_000_6",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowCreatures": [
              {
                "id": "ShadowCreatures_21",
                "speaker": "Harper Lassandra",
                "text": "Stay together! Keep to the light!",
                "node_type": "normal",
                "checkflags": [
                  "SCL_HarperScouts_State_EnteredAbove = False"
                ],
                "setflags": [
                  "SCL_HarperScouts_ShadowCreatures_HasMet"
                ],
                "goto": "",
                "link": "8",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: From off-screen, as the player picks their way carefully through the dark, twisted terrain."
              },
              {
                "id": "ShadowCreatures_40",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "8",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: In the darkness nearby, burning torches grow near, silhouetting a small knot of armed figures moving in a tight huddle. The player moves closer. A dead branch snaps underfoot, startling one of the figures - Lassandra, a wide-eyed young woman wearing half-plate under a blue cloak. She brandishes a torch and sword."
              },
              {
                "id": "ShadowCreatures_78",
                "speaker": "Harper Lassandra",
                "text": "Stop - who's there?!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "8",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Yonas (Harper 3) is moving wide of the group, an arrow notched to his bow, eyes fixed on the player. He's straying further from the Harpers' torches, walking along a sharp incline where road falls away, toeing the line between shadow and light."
              },
              {
                "id": "ShadowCreatures_70",
                "speaker": "Player",
                "text": "Back away from them, palms up.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "32",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ShadowCreatures_17",
                "speaker": "Harper Lassandra",
                "text": "Wrong direction. Come into the light, hands high.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "32",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: *Lassandra keeps her weapon raised. The male harper (Harper 3) inches around, arrow notched, to get a better angle on the player.*"
              },
              {
                "id": "32",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ],
            "BridgePoint_003": [
              {
                "id": "BridgePoint_003_0",
                "speaker": "Harper Karrow",
                "text": "Made it. Go speak to the boss.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_HarperScouts_BridgePoint_003_Hasmet = False"
                ],
                "setflags": [
                  "SCL_HarperScouts_BridgePoint_003_Hasmet"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_HarperScout_001_Combat": [
              {
                "id": "AD_HarperScout_001_Combat_0",
                "speaker": "Harper Meygan",
                "text": "Shit - the shadows took Yonas. Make every strike count!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_HarperScout_003_WrongWarning": [
              {
                "id": "AD_HarperScout_003_WrongWarning_0",
                "speaker": "Harper Karrow",
                "text": "You turned around? Last Light's this way.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_HarperScout_003_Combat": "Combat AD for Harper Karrow in SCL",
            "Dead_HarperScout_000": "Speak with dead dialogue with Lassandra, a harper scout. The player can ask her corpse, who she is, what she was doing etc, possibly learning of Last Light, a nearby refuge against shadow curse.",
            "ShadowCreatures": "The player encounters a group of Harper scouts shortly after entering the Shadow-cursed lands. After being challenged by the scouts, they're forced to join sides as they're attacked by shadow creatures.",
            "BridgePoint_003": "",
            "AD_HarperScout_001_Combat": "Combat AD for Harper Meygan",
            "AD_HarperScout_003_WrongWarning": "After saving them from shadow creatures, the Harper Scouts are guiding the player through SCL to Last Light.This AD plays if the player goes in the wrong direction."
          }
        },
        "scl_drider": {
          "scenario_name": "scl_drider",
          "session_sequence": [
            "Harper_Melee_000_AD_DriderDies",
            "Harper_Ranger_000_AD_LassandraDies",
            "Caravan_AD_HalfOrcCaster",
            "ThanksAfterAmbush",
            "HarperRanger_001_AfterAmbush",
            "AD_HarpersAfterAmbush",
            "AD_HarpersReachAmbushHouse",
            "Harper_Melee_000_AD_LassandraDies",
            "PlayersAmbush",
            "Caravan_AD_Hyena",
            "HarperCaster_000",
            "CaravanStart",
            "HarperScout_PreparingForAmbush",
            "AD_AllHarpersWaitingAtAmbush",
            "CINE_CaravanIntro",
            "HarperMelee_000_AfterAmbush",
            "WaitingDuringEscort",
            "Harper_Melee_000_AD_TakesMoonlantern",
            "AtTower",
            "AD_Harper_Melee_000",
            "HarperRanger_000_AfterAmbush",
            "Caravan_AD_HalfOrcAndGoblinAtCheckpoint",
            "Caravan_HalfOrcMelee_AtTower",
            "Caravan_HalfOrcMelee",
            "HarpersAndPlayersAmbush",
            "AD_DroppedLantern",
            "AD_CombatStarts",
            "PAD_BacktrackedToCaravanCheckpoint",
            "AD_Harper_Caster_000",
            "Caravan_GoblinRanger_AtTower",
            "HarpersAtInn",
            "AD_EscortInterrupted",
            "Caravan_GoblinMelee_000_AtTower",
            "AD_HarpersPreparingBeforeAmbush",
            "Caravan_AD_MeleeAndRangerGoblinsAtCheckpoint",
            "Dead",
            "Caravan_GoblinMelee_001_AtTower",
            "AD_KillsSomeone",
            "Caravan_HalfOrcCaster_AtTower",
            "AD_Harper_Ranger_000",
            "AD_Warning",
            "Caravan_HalfOrcCaster",
            "AD_HarpersReachTree",
            "AD_AfterAmbush",
            "AD_PlayerTakesMoonlantern",
            "AD_ArriveToTollHouse",
            "HarperMelee_000",
            "AD_CaravanConflict",
            "Caravan_GoblinRanger",
            "AD_AfterTollhouse",
            "Caravan_GoblinMelee_000",
            "AD_HarpersMoveTowardsAmbush",
            "HarperNarrator_AfterAmbush",
            "HarperCaster_000_AfterAmbush",
            "AD_TollhouseFight",
            "AD_Harpers_AtInn_AfterAmbush",
            "AD_BeforeAmbush",
            "Harper_Melee_000_AD_CombatStarts"
          ],
          "paths": {
            "Harper_Melee_000_AD_DriderDies": [
              "Harper_Melee_000_AD_DriderDies_0"
            ],
            "Harper_Ranger_000_AD_LassandraDies": [
              "Harper_Ranger_000_AD_LassandraDies_0"
            ],
            "Caravan_AD_HalfOrcCaster": [
              "Caravan_AD_HalfOrcCaster_0"
            ],
            "ThanksAfterAmbush": [
              "ThanksAfterAmbush_42",
              "ThanksAfterAmbush_13",
              "ThanksAfterAmbush_12",
              "ThanksAfterAmbush_39",
              "ThanksAfterAmbush_45",
              "ThanksAfterAmbush_17",
              "ThanksAfterAmbush_54",
              "ThanksAfterAmbush_20",
              "ThanksAfterAmbush_68"
            ],
            "HarperRanger_001_AfterAmbush": [
              "HarperRanger_001_AfterAmbush_48",
              "HarperRanger_001_AfterAmbush_74",
              "HarperRanger_001_AfterAmbush_88",
              "HarperRanger_001_AfterAmbush_12",
              "HarperRanger_001_AfterAmbush_83",
              "HarperRanger_001_AfterAmbush_11",
              "HarperRanger_001_AfterAmbush_23",
              "HarperRanger_001_AfterAmbush_1",
              "HarperRanger_001_AfterAmbush_61",
              "HarperRanger_001_AfterAmbush_35",
              "HarperRanger_001_AfterAmbush_60",
              "HarperRanger_001_AfterAmbush_3",
              "HarperRanger_001_AfterAmbush_90"
            ],
            "AD_HarpersAfterAmbush": [
              "AD_HarpersAfterAmbush_10",
              "AD_HarpersAfterAmbush_4",
              "AD_HarpersAfterAmbush_11",
              "AD_HarpersAfterAmbush_5"
            ],
            "AD_HarpersReachAmbushHouse": [
              "AD_HarpersReachAmbushHouse_0"
            ],
            "Harper_Melee_000_AD_LassandraDies": [
              "Harper_Melee_000_AD_LassandraDies_0"
            ],
            "PlayersAmbush": [
              "PlayersAmbush_60",
              "PlayersAmbush_68",
              "PlayersAmbush_71",
              "PlayersAmbush_70",
              "PlayersAmbush_99",
              "PlayersAmbush_62",
              "PlayersAmbush_90",
              "PlayersAmbush_65",
              "PlayersAmbush_12",
              "PlayersAmbush_80",
              "PlayersAmbush_43",
              "PlayersAmbush_39",
              "PlayersAmbush_83",
              "PlayersAmbush_87",
              "PlayersAmbush_64",
              "PlayersAmbush_35"
            ],
            "Caravan_AD_Hyena": [
              "Caravan_AD_Hyena_2",
              "Caravan_AD_Hyena_0"
            ],
            "HarperCaster_000": [
              "HarperCaster_000_24",
              "HarperCaster_000_18",
              "HarperCaster_000_19",
              "HarperCaster_000_14",
              "HarperCaster_000_25",
              "HarperCaster_000_23",
              "HarperCaster_000_2",
              "HarperCaster_000_8"
            ],
            "CaravanStart": [
              "CaravanStart_153",
              "CaravanStart_56",
              "CaravanStart_100",
              "CaravanStart_116",
              "CaravanStart_91",
              "CaravanStart_17",
              "CaravanStart_48",
              "CaravanStart_53",
              "CaravanStart_34",
              "CaravanStart_114",
              "CaravanStart_9",
              "CaravanStart_102"
            ],
            "HarperScout_PreparingForAmbush": [
              "HarperScout_PreparingForAmbush_1",
              "HarperScout_PreparingForAmbush_19",
              "HarperScout_PreparingForAmbush_4",
              "HarperScout_PreparingForAmbush_8",
              "HarperScout_PreparingForAmbush_11",
              "HarperScout_PreparingForAmbush_21"
            ],
            "AD_AllHarpersWaitingAtAmbush": [
              "AD_AllHarpersWaitingAtAmbush_1",
              "AD_AllHarpersWaitingAtAmbush_2",
              "AD_AllHarpersWaitingAtAmbush_0"
            ],
            "CINE_CaravanIntro": [
              "CINE_CaravanIntro_0",
              "CINE_CaravanIntro_1"
            ],
            "HarperMelee_000_AfterAmbush": [
              "HarperMelee_000_AfterAmbush_20",
              "HarperMelee_000_AfterAmbush_80",
              "HarperMelee_000_AfterAmbush_30",
              "HarperMelee_000_AfterAmbush_3",
              "HarperMelee_000_AfterAmbush_2",
              "HarperMelee_000_AfterAmbush_57",
              "HarperMelee_000_AfterAmbush_25",
              "HarperMelee_000_AfterAmbush_48",
              "HarperMelee_000_AfterAmbush_47",
              "HarperMelee_000_AfterAmbush_6",
              "HarperMelee_000_AfterAmbush_44",
              "HarperMelee_000_AfterAmbush_23",
              "HarperMelee_000_AfterAmbush_86",
              "HarperMelee_000_AfterAmbush_5",
              "HarperMelee_000_AfterAmbush_81",
              "HarperMelee_000_AfterAmbush_15",
              "HarperMelee_000_AfterAmbush_85"
            ],
            "WaitingDuringEscort": [
              "WaitingDuringEscort_4",
              "WaitingDuringEscort_1",
              "WaitingDuringEscort_2"
            ],
            "Harper_Melee_000_AD_TakesMoonlantern": [
              "Harper_Melee_000_AD_TakesMoonlantern_0"
            ],
            "AtTower": [
              "AtTower_4",
              "AtTower_0"
            ],
            "AD_Harper_Melee_000": [
              "AD_Harper_Melee_000_0"
            ],
            "HarperRanger_000_AfterAmbush": [
              "HarperRanger_000_AfterAmbush_4",
              "HarperRanger_000_AfterAmbush_1"
            ],
            "Caravan_AD_HalfOrcAndGoblinAtCheckpoint": [
              "Caravan_AD_HalfOrcAndGoblinAtCheckpoint_8",
              "Caravan_AD_HalfOrcAndGoblinAtCheckpoint_0",
              "Caravan_AD_HalfOrcAndGoblinAtCheckpoint_3"
            ],
            "Caravan_HalfOrcMelee_AtTower": [
              "Caravan_HalfOrcMelee_AtTower_0"
            ],
            "Caravan_HalfOrcMelee": [
              "Caravan_HalfOrcMelee_0"
            ],
            "HarpersAndPlayersAmbush": [
              "HarpersAndPlayersAmbush_69",
              "HarpersAndPlayersAmbush_16",
              "40",
              "NODE_NOT_FOUND"
            ],
            "AD_DroppedLantern": [
              "AD_DroppedLantern_0"
            ],
            "AD_CombatStarts": [
              "AD_CombatStarts_0"
            ],
            "PAD_BacktrackedToCaravanCheckpoint": [
              "PAD_BacktrackedToCaravanCheckpoint_0",
              "PAD_BacktrackedToCaravanCheckpoint_2"
            ],
            "AD_Harper_Caster_000": [
              "AD_Harper_Caster_000_0"
            ],
            "Caravan_GoblinRanger_AtTower": [
              "Caravan_GoblinRanger_AtTower_0"
            ],
            "HarpersAtInn": [
              "HarpersAtInn_57",
              "HarpersAtInn_34",
              "HarpersAtInn_32",
              "HarpersAtInn_64",
              "HarpersAtInn_14",
              "16",
              "NODE_NOT_FOUND"
            ],
            "AD_EscortInterrupted": [
              "AD_EscortInterrupted_0"
            ],
            "Caravan_GoblinMelee_000_AtTower": [
              "Caravan_GoblinMelee_000_AtTower_0"
            ],
            "AD_HarpersPreparingBeforeAmbush": [
              "AD_HarpersPreparingBeforeAmbush_0",
              "AD_HarpersPreparingBeforeAmbush_11",
              "AD_HarpersPreparingBeforeAmbush_10",
              "AD_HarpersPreparingBeforeAmbush_8"
            ],
            "Caravan_AD_MeleeAndRangerGoblinsAtCheckpoint": [
              "Caravan_AD_MeleeAndRangerGoblinsAtCheckpoint_6",
              "Caravan_AD_MeleeAndRangerGoblinsAtCheckpoint_4",
              "Caravan_AD_MeleeAndRangerGoblinsAtCheckpoint_5"
            ],
            "Dead": [
              "Dead_22",
              "Dead_23",
              "Dead_19",
              "Dead_8"
            ],
            "Caravan_GoblinMelee_001_AtTower": [
              "Caravan_GoblinMelee_001_AtTower_0"
            ],
            "AD_KillsSomeone": [
              "AD_KillsSomeone_0"
            ],
            "Caravan_HalfOrcCaster_AtTower": [
              "Caravan_HalfOrcCaster_AtTower_0"
            ],
            "AD_Harper_Ranger_000": [
              "AD_Harper_Ranger_000_0"
            ],
            "AD_Warning": [
              "AD_Warning_0",
              "AD_Warning_4"
            ],
            "Caravan_HalfOrcCaster": [
              "Caravan_HalfOrcCaster_35",
              "Caravan_HalfOrcCaster_14",
              "Caravan_HalfOrcCaster_96",
              "Caravan_HalfOrcCaster_9",
              "Caravan_HalfOrcCaster_102",
              "Caravan_HalfOrcCaster_52",
              "20",
              "NODE_NOT_FOUND"
            ],
            "AD_HarpersReachTree": [
              "AD_HarpersReachTree_0"
            ],
            "AD_AfterAmbush": [
              "AD_AfterAmbush_0"
            ],
            "AD_PlayerTakesMoonlantern": [
              "AD_PlayerTakesMoonlantern_0"
            ],
            "AD_ArriveToTollHouse": [
              "AD_ArriveToTollHouse_1",
              "AD_ArriveToTollHouse_0"
            ],
            "HarperMelee_000": [
              "HarperMelee_000_9",
              "HarperMelee_000_5"
            ],
            "AD_CaravanConflict": [
              "AD_CaravanConflict_0",
              "AD_CaravanConflict_1"
            ],
            "Caravan_GoblinRanger": [
              "Caravan_GoblinRanger_0"
            ],
            "AD_AfterTollhouse": [
              "AD_AfterTollhouse_1",
              "AD_AfterTollhouse_0",
              "AD_AfterTollhouse_2"
            ],
            "Caravan_GoblinMelee_000": [
              "Caravan_GoblinMelee_000_0"
            ],
            "AD_HarpersMoveTowardsAmbush": [
              "AD_HarpersMoveTowardsAmbush_0"
            ],
            "HarperNarrator_AfterAmbush": [
              "HarperNarrator_AfterAmbush_35",
              "HarperNarrator_AfterAmbush_18",
              "HarperNarrator_AfterAmbush_19",
              "HarperNarrator_AfterAmbush_6",
              "HarperNarrator_AfterAmbush_23",
              "HarperNarrator_AfterAmbush_11"
            ],
            "HarperCaster_000_AfterAmbush": [
              "HarperCaster_000_AfterAmbush_0",
              "HarperCaster_000_AfterAmbush_1"
            ],
            "AD_TollhouseFight": [
              "AD_TollhouseFight_0"
            ],
            "AD_Harpers_AtInn_AfterAmbush": [
              "AD_Harpers_AtInn_AfterAmbush_7",
              "AD_Harpers_AtInn_AfterAmbush_5",
              "AD_Harpers_AtInn_AfterAmbush_18",
              "AD_Harpers_AtInn_AfterAmbush_0"
            ],
            "AD_BeforeAmbush": [
              "AD_BeforeAmbush_2",
              "AD_BeforeAmbush_0",
              "AD_BeforeAmbush_1"
            ],
            "Harper_Melee_000_AD_CombatStarts": [
              "Harper_Melee_000_AD_CombatStarts_0"
            ]
          },
          "node_data": {
            "Harper_Melee_000_AD_DriderDies": [
              {
                "id": "Harper_Melee_000_AD_DriderDies_0",
                "speaker": "Harper Branthos",
                "text": "Big and ugly's down - grab the lantern!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Harper_Ranger_000_AD_LassandraDies": [
              {
                "id": "Harper_Ranger_000_AD_LassandraDies_0",
                "speaker": "Harper Manus",
                "text": "No! Lassandra!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Caravan_AD_HalfOrcCaster": [
              {
                "id": "Caravan_AD_HalfOrcCaster_0",
                "speaker": "Kansif",
                "text": "You will die here - the Absolute wills it so!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ThanksAfterAmbush": [
              {
                "id": "ThanksAfterAmbush_42",
                "speaker": "Kar'niss",
                "text": "And what of the strange little turncoat, Majesty? Should we spare them?",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_State_AfterAmbushSituationDefused = False",
                  "SCL_Drider_State_StartedAmbushQuestWithHarpers"
                ],
                "setflags": [],
                "goto": "",
                "link": "50",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ThanksAfterAmbush_13",
                "speaker": "Narrator",
                "text": "*Your minds connect and you hear a whispered voice. The Absolute? Or just the echoes of his fractured mind, reverberating in the dark?*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Mind meld VFX"
              },
              {
                "id": "ThanksAfterAmbush_12",
                "speaker": "Kar'niss",
                "text": "A True Soul. Why would one of our queen's blessed walk with Harpers?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ThanksAfterAmbush_39",
                "speaker": "Player",
                "text": "I infiltrated their ranks - gathering information for our cause.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ThanksAfterAmbush_45",
                "speaker": "",
                "text": "True",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ThanksAfterAmbush_17",
                "speaker": "Kar'niss",
                "text": "Very well. We welcome all who follow our holy queen.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCL_Drider_State_AfterAmbushSituationDefused"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Astarion 1",
                  "Shadowheart 1",
                  "Minthara 1"
                ],
                "context": ""
              },
              {
                "id": "ThanksAfterAmbush_54",
                "speaker": "Kar'niss",
                "text": "Are they ready to depart? We do not want to linger in the shadows, Majesty.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ThanksAfterAmbush_20",
                "speaker": "Player",
                "text": "Give me a moment, I'm not ready to go yet.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ThanksAfterAmbush_68",
                "speaker": "Kar'niss",
                "text": "We will wait, but not for long.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "HarperRanger_001_AfterAmbush": [
              {
                "id": "HarperRanger_001_AfterAmbush_48",
                "speaker": "Harper Skywin",
                "text": "",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_Event_StartCaravanEscort",
                  "SCL_Drider_State_HasDriderMoonlantern"
                ],
                "setflags": [],
                "goto": "",
                "link": "75",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperRanger_001_AfterAmbush_74",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "75",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Player lifts lantern and illuminates their face."
              },
              {
                "id": "HarperRanger_001_AfterAmbush_88",
                "speaker": "",
                "text": "",
                "node_type": "visualstate",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "75",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperRanger_001_AfterAmbush_12",
                "speaker": "Harper Skywin",
                "text": "Incredible. A light that chases away even the deepest shadows.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "75",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Musing, not really said to player."
              },
              {
                "id": "HarperRanger_001_AfterAmbush_83",
                "speaker": "Narrator",
                "text": "*The lantern flickers ever so briefly, and you hear a slight twitter - or perhaps it's simply your imagination.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "75",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Camera shows lantern in player's hand. The light flickers just a little, and you hear a little titter come from it. Player stows the lantern."
              },
              {
                "id": "HarperRanger_001_AfterAmbush_11",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "75",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperRanger_001_AfterAmbush_23",
                "speaker": "",
                "text": "",
                "node_type": "visualstate",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "75",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperRanger_001_AfterAmbush_1",
                "speaker": "Harper Skywin",
                "text": "A face I once trusted, now allied with the shadows' most favoured.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "17",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext:  Addressed to player. Harper raises bow and points at the player.\rNodeContext: Very suspicious"
              },
              {
                "id": "HarperRanger_001_AfterAmbush_61",
                "speaker": "",
                "text": "",
                "node_type": "alias",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "17",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperRanger_001_AfterAmbush_35",
                "speaker": "Harper Skywin",
                "text": "Explain.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "25",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperRanger_001_AfterAmbush_60",
                "speaker": "Player",
                "text": "I meant to infiltrate the cult. You've ruined the mission.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "25",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperRanger_001_AfterAmbush_3",
                "speaker": "",
                "text": "False",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperRanger_001_AfterAmbush_90",
                "speaker": "Harper Skywin",
                "text": "A lie, clear as the Chionthar's waters. And for that, you will bleed.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCL_Drider_Event_PlayersAttackHarpers"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_HarpersAfterAmbush": [
              {
                "id": "AD_HarpersAfterAmbush_10",
                "speaker": "Harper Branthos",
                "text": "One less blight in the darkness. A thousand more to conquer.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "153f4e14-c830-5653-1638-7495b0b9fc12_A"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_HarpersAfterAmbush_4",
                "speaker": "Harper Manus",
                "text": "At very least. For every beast we slay, the shadows spawn two more.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_HarpersAfterAmbush_11",
                "speaker": "Harper Elindale",
                "text": "Gods - why so glum? We hit the cult where it hurts.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_HarpersAfterAmbush_5",
                "speaker": "Harper Skywin",
                "text": "A victory is a victory. Our heads are intact - and that's worth celebrating.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_HarpersReachAmbushHouse": [
              {
                "id": "AD_HarpersReachAmbushHouse_0",
                "speaker": "",
                "text": "Perfect spot for an ambush. Get into position.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Harper_Melee_000_AD_LassandraDies": [
              {
                "id": "Harper_Melee_000_AD_LassandraDies_0",
                "speaker": "Harper Branthos",
                "text": "Lass! No!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Just watched your friend Lassandra die in combat"
              }
            ],
            "PlayersAmbush": [
              {
                "id": "PlayersAmbush_60",
                "speaker": "Kar'niss",
                "text": "",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PlayersAmbush_68",
                "speaker": "",
                "text": "",
                "node_type": "visualstate",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PlayersAmbush_71",
                "speaker": "Kar'niss",
                "text": "Someone in the dark, mistress.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PlayersAmbush_70",
                "speaker": "Kar'niss",
                "text": "Step into the light! Let us see you.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PlayersAmbush_99",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Player moves into the light. Player's positioning should match N218 so it merges into the rest of the dialog flow"
              },
              {
                "id": "PlayersAmbush_62",
                "speaker": "",
                "text": "",
                "node_type": "visualstate",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PlayersAmbush_90",
                "speaker": "Narrator",
                "text": "*Your minds connect and you hear a voice whispering to you. The Absolute? Or just the echoes of his fractured mind, reverberating in the darkness?*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Mind meld SFX"
              },
              {
                "id": "PlayersAmbush_65",
                "speaker": "",
                "text": "",
                "node_type": "visualstate",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PlayersAmbush_12",
                "speaker": "Kar'niss",
                "text": "One of your True Souls, my Queen! How have they survived?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Scuttles forward, holding the lantern to illuminate the player's face"
              },
              {
                "id": "PlayersAmbush_80",
                "speaker": "Player",
                "text": "The Absolute protected me.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PlayersAmbush_43",
                "speaker": "Kar'niss",
                "text": "You blessed them too, my Queen? Where is their lantern?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PlayersAmbush_39",
                "speaker": "Player",
                "text": "Lantern? Is that what protects you out here?",
                "node_type": "normal",
                "checkflags": [
                  "GLO_Player_Knows_MoonlanternExists = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "110",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PlayersAmbush_83",
                "speaker": "Kar'niss",
                "text": "Our goddess protects us. We carry her sacred light to drive back the shadows.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "110",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: 'Sacred light' referring to the Moonlantern"
              },
              {
                "id": "PlayersAmbush_87",
                "speaker": "Kar'niss",
                "text": "Yes, majesty, your light can shield another of your faithful. They will join us on the road.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "110",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PlayersAmbush_64",
                "speaker": "Player",
                "text": "Or I could kill you and take that light.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "41",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PlayersAmbush_35",
                "speaker": "",
                "text": "",
                "node_type": "alias",
                "checkflags": [],
                "setflags": [
                  "SCL_Drider_Event_CaravanGoesHostile"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Caravan_AD_Hyena": [
              {
                "id": "Caravan_AD_Hyena_2",
                "speaker": "Hyena",
                "text": "*Whimper.*",
                "node_type": "normal",
                "checkflags": [
                  "13d9f9ef-d1da-1d1d-287f-7a1763d72c38_A"
                ],
                "setflags": [
                  "13d9f9ef-d1da-1d1d-287f-7a1763d72c38_B"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Worg pup - sounds like a growl, but actually haltingly articulating a word (they can speak)"
              },
              {
                "id": "Caravan_AD_Hyena_0",
                "speaker": "Warrior Gronag",
                "text": "Don't make eyes at me, you breech-blossom.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Colourful goblin equivalent of 'shit-stain'. Said indignantly."
              }
            ],
            "HarperCaster_000": [
              {
                "id": "HarperCaster_000_24",
                "speaker": "Harper Elindale",
                "text": "Heard you're planning to infiltrate Moonrise, and take the fight to Ketheric. That'd be a tale for the ages.<br>",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_HasMet_HarperCaster000 = False",
                  "SCL_Drider_State_HarpersWaitingAtBridge"
                ],
                "setflags": [
                  "SCL_Drider_HasMet_HarperCaster000"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperCaster_000_18",
                "speaker": "Harper Elindale",
                "text": "But the curse is at its strongest between here and there. You won't even reach the tower unless you can survive the darkest shadows.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperCaster_000_19",
                "speaker": "Harper Elindale",
                "text": "That's where we come in.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperCaster_000_14",
                "speaker": "Harper Elindale",
                "text": "There's a cultist convoy that brings supplies and personnel to the tower - by some strange magic, they move through the curse unharmed.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperCaster_000_25",
                "speaker": "Harper Elindale",
                "text": "With your help, we'll ambush them, and seize their secret. When we do, it's yours, and the path to Moonrise will be open.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperCaster_000_23",
                "speaker": "Player",
                "text": "Let's do it. You lead, I follow.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_Event_PlayersWillFindCaravanAtAmbush = False"
                ],
                "setflags": [
                  "SCL_Drider_State_StartedAmbushQuestWithHarpers",
                  "SCL_Drider_Event_StartHarpersAmbush"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperCaster_000_2",
                "speaker": "Harper Elindale",
                "text": "You got it, chum. I'll mark your map, in case you get lost.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperCaster_000_8",
                "speaker": "Harper Elindale",
                "text": "But - try not to get lost. Frightful weather out there.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: A little cheeky. The cursed shadows could kill you!"
              }
            ],
            "CaravanStart": [
              {
                "id": "CaravanStart_153",
                "speaker": "Kar'niss",
                "text": "Your worshippers, Majesty. What happened here?",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_State_DeadCultistSituationDefused = False",
                  "SCL_Drider_State_CaravanCultistsDefeated_NoDrider"
                ],
                "setflags": [
                  "SCL_Drider_HasMet"
                ],
                "goto": "",
                "link": "34",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Drider arrives to find the camp deserted apart from you and some dead goblins.\rInternalNodeContext: Drider arrives to find the camp has been slaughtered\rNodeContext: Looking around at dead goblins - his allies have been slaughtered"
              },
              {
                "id": "CaravanStart_56",
                "speaker": "Kar'niss",
                "text": "What did they do?!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "34",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Turns and looks at the player with malevolence\rNodeContext: Turns and looks at the player with malevolence"
              },
              {
                "id": "CaravanStart_100",
                "speaker": "Player",
                "text": "I just found them like this.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "34",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "CaravanStart_116",
                "speaker": "",
                "text": "True",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "34",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "CaravanStart_91",
                "speaker": "Kar'niss",
                "text": "At least these have survived. At least we return with some faithful.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCL_Drider_State_DeadCultistSituationDefused"
                ],
                "goto": "",
                "link": "34",
                "is_end": false,
                "approval": [
                  "Astarion 1",
                  "Gale 1",
                  "Shadowheart 1",
                  "Karlach 1",
                  "Minthara 1"
                ],
                "context": "NodeContext: Stress on 'some'"
              },
              {
                "id": "CaravanStart_17",
                "speaker": "Kar'niss",
                "text": "But we should depart. Are they ready to leave?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "34",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Looks out to the dark, then back to players"
              },
              {
                "id": "CaravanStart_48",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_Laezel"
                ],
                "goto": "",
                "link": "34",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "CaravanStart_53",
                "speaker": "Lae'zel",
                "text": "Every step into the darkness leads us away from the crèche. Cleansing awaits - do not lose sight of our prize.",
                "node_type": "normal",
                "checkflags": [
                  "ORI_Laezel_Knows_FoundCreche = False",
                  "ORI_Laezel_State_CanProceedToAct3 = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "34",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "CaravanStart_34",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_End_Laezel"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "CaravanStart_114",
                "speaker": "Player",
                "text": "First tell me how you can move safely through the darkness.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "CaravanStart_9",
                "speaker": "Kar'niss",
                "text": "We walk in the Absolute's light. Her blessed power keeps the shadows back.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Drider stares at the moon lantern while delivering line."
              },
              {
                "id": "CaravanStart_102",
                "speaker": "Kar'niss",
                "text": "But the shadows are cunning. Wily. If you stray from the light even for a moment, they'll have you.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ],
            "HarperScout_PreparingForAmbush": [
              {
                "id": "HarperScout_PreparingForAmbush_1",
                "speaker": "Harper Lassandra",
                "text": "Listen - if you want to reach Moonrise, you're going to need help. And I know where you'll find it.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_General_HarperScout_000_HasMet = False",
                  "SCL_Drider_State_HarpersWaitingAtBridge"
                ],
                "setflags": [
                  "HAV_General_HarperScout_000_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperScout_PreparingForAmbush_19",
                "speaker": "Harper Lassandra",
                "text": "There's a cultist convoy that passes each day. It carries a lantern that burns the curse away.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperScout_PreparingForAmbush_4",
                "speaker": "Harper Lassandra",
                "text": "You're going to seize that lantern - and I'm going to help you. Just say the word.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperScout_PreparingForAmbush_8",
                "speaker": "Player",
                "text": "Let's take on that convoy. You lead, I follow.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_Event_PlayersWillFindCaravanAtAmbush = False"
                ],
                "setflags": [
                  "SCL_Drider_State_StartedAmbushQuestWithHarpers",
                  "SCL_Drider_Event_StartHarpersAmbush"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperScout_PreparingForAmbush_11",
                "speaker": "Harper Lassandra",
                "text": "Wonderful. I will mark your map, so you can find us, should you lose the way.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperScout_PreparingForAmbush_21",
                "speaker": "Harper Lassandra",
                "text": "Now let's move.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_AllHarpersWaitingAtAmbush": [
              {
                "id": "AD_AllHarpersWaitingAtAmbush_1",
                "speaker": "Harper Elindale",
                "text": "I see something - they're coming!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_AllHarpersWaitingAtAmbush_2",
                "speaker": "Harper Branthos",
                "text": "All right. You ready for this?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_AllHarpersWaitingAtAmbush_0",
                "speaker": "Harper Lassandra",
                "text": "More than ready.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "CINE_CaravanIntro": [
              {
                "id": "CINE_CaravanIntro_0",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: The player pauses as they hear nearby footfalls. They crouch down and observe."
              },
              {
                "id": "CINE_CaravanIntro_1",
                "speaker": "Kar'niss",
                "text": "Onwards! The tower awaits us.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "CinematicNodeContext: Player observes as the drider caravan moves into frame (wide shot).\rNodeContext: Urging the caravan along."
              }
            ],
            "HarperMelee_000_AfterAmbush": [
              {
                "id": "HarperMelee_000_AfterAmbush_20",
                "speaker": "Harper Branthos",
                "text": "",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_Event_StartCaravanEscort",
                  "SCL_Drider_State_HasDriderMoonlantern"
                ],
                "setflags": [],
                "goto": "",
                "link": "56",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperMelee_000_AfterAmbush_80",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "56",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Player lifts lantern and illuminates their face."
              },
              {
                "id": "HarperMelee_000_AfterAmbush_30",
                "speaker": "",
                "text": "",
                "node_type": "visualstate",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "56",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperMelee_000_AfterAmbush_3",
                "speaker": "Harper Branthos",
                "text": "Incredible. A light so radiant, not even the curse can dim it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "56",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Musing, not really said to player."
              },
              {
                "id": "HarperMelee_000_AfterAmbush_2",
                "speaker": "Narrator",
                "text": "*The lantern flickers ever so briefly, and you hear a slight twitter - or perhaps it's simply your imagination.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "56",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Camera shows lantern in player's hand. The light flickers just a little, and you hear a little titter come from it. Player stows the lantern."
              },
              {
                "id": "HarperMelee_000_AfterAmbush_57",
                "speaker": "",
                "text": "",
                "node_type": "visualstate",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "56",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperMelee_000_AfterAmbush_25",
                "speaker": "Harper Branthos",
                "text": "You. Don't move a godsdamned muscle.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_EnteringHaven_State_GainedAccess = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "56",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Addressed to player. Harper raises his blade and points at the player."
              },
              {
                "id": "HarperMelee_000_AfterAmbush_48",
                "speaker": "",
                "text": "",
                "node_type": "visualstate",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "56",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperMelee_000_AfterAmbush_47",
                "speaker": "Harper Branthos",
                "text": "Talk. Why in the hells would a cultist turn on their kind?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "56",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperMelee_000_AfterAmbush_6",
                "speaker": "Player",
                "text": "",
                "node_type": "normal",
                "checkflags": [
                  "GLO_Factions_Knows_Harpers = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "56",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperMelee_000_AfterAmbush_44",
                "speaker": "",
                "text": "True",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "56",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperMelee_000_AfterAmbush_23",
                "speaker": "Narrator",
                "text": "*The pin the man wears is familiar to you. He belongs to the Harpers, a covert organisation dedicated to freedom and balance.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "GLO_Factions_Knows_Harpers"
                ],
                "goto": "",
                "link": "56",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Camera shows the Harper's garb. We see a Harper pin on their chest."
              },
              {
                "id": "HarperMelee_000_AfterAmbush_86",
                "speaker": "Player",
                "text": "I'm not one of them. They took me prisoner.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "56",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperMelee_000_AfterAmbush_5",
                "speaker": "Harper Branthos",
                "text": "A prisoner? Then I must be a welcome sight indeed.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "56",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Harper lowers blade while speaking."
              },
              {
                "id": "HarperMelee_000_AfterAmbush_81",
                "speaker": "",
                "text": "",
                "node_type": "visualstate",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "56",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperMelee_000_AfterAmbush_15",
                "speaker": "Harper Branthos",
                "text": "Follow me. I know a refuge from the darkness. You can rest there.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "56",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperMelee_000_AfterAmbush_85",
                "speaker": "Player",
                "text": "Lead on, then.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_State_HasDriderMoonlantern = False"
                ],
                "setflags": [
                  "SCL_Harpers_Event_ShowHavenLocation"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "WaitingDuringEscort": [
              {
                "id": "WaitingDuringEscort_4",
                "speaker": "Kar'niss",
                "text": "Do not stray from the light, little one. The shadows are hungry.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_HasMet"
                ],
                "setflags": [],
                "goto": "",
                "link": "1",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: panicking a little, twitchy. Stopped momentarily in a dangerous region"
              },
              {
                "id": "WaitingDuringEscort_1",
                "speaker": "Player",
                "text": "Lead the way.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "WaitingDuringEscort_2",
                "speaker": "Kar'niss",
                "text": "I do not lead. I follow Her voice - it calls us to Moonrise. Come!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCL_Drider_Event_ResumeEscort"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Religious certainty - the 'Her' is his god"
              }
            ],
            "Harper_Melee_000_AD_TakesMoonlantern": [
              {
                "id": "Harper_Melee_000_AD_TakesMoonlantern_0",
                "speaker": "Harper Branthos",
                "text": "I have the lantern! Let's finish this up and go home.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AtTower": [
              {
                "id": "AtTower_4",
                "speaker": "Kar'niss",
                "text": "An interloper receives the Majesty's blessing before us?",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_HasMet = False"
                ],
                "setflags": [
                  "SCL_Drider_AtTower_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Looking at us with barely-reined in disgust - he is more deserving thatn we are, surely"
              },
              {
                "id": "AtTower_0",
                "speaker": "Kar'niss",
                "text": "Be worthy of Her.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Leaning forward with glint of madness - could be take as encouragement or threat"
              }
            ],
            "AD_Harper_Melee_000": [
              {
                "id": "AD_Harper_Melee_000_0",
                "speaker": "Harper Branthos",
                "text": "I fear neither shadow nor death.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: during combat, like a prayer, reassuring self"
              }
            ],
            "HarperRanger_000_AfterAmbush": [
              {
                "id": "HarperRanger_000_AfterAmbush_4",
                "speaker": "Harper Manus",
                "text": "Splendid show - newsworthy, even! Where's Volo Geddarm when you need him?",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_HarperRanger_000_AtAmbush_HasMet = False",
                  "SCL_Drider_Event_AcquiredMoonlanternWithoutFight = False"
                ],
                "setflags": [
                  "SCL_Drider_HarperRanger_000_AtAmbush_HasMet"
                ],
                "goto": "",
                "link": "HarperRanger_000_AfterAmbush_0",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperRanger_000_AfterAmbush_1",
                "speaker": "Harper Manus",
                "text": "Go on, check the drider. The lantern's yours for the taking.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Caravan_AD_HalfOrcAndGoblinAtCheckpoint": [
              {
                "id": "Caravan_AD_HalfOrcAndGoblinAtCheckpoint_8",
                "speaker": "Sharp-Eye Lora",
                "text": "What was that?",
                "node_type": "normal",
                "checkflags": [
                  "f2fd8947-51ee-4636-035d-0ed1841d3f5d_C"
                ],
                "setflags": [
                  "f2fd8947-51ee-4636-035d-0ed1841d3f5d_A = False",
                  "f2fd8947-51ee-4636-035d-0ed1841d3f5d_B = False",
                  "f2fd8947-51ee-4636-035d-0ed1841d3f5d_C = False"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Caravan_AD_HalfOrcAndGoblinAtCheckpoint_0",
                "speaker": "Kansif",
                "text": "What was what?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Caravan_AD_HalfOrcAndGoblinAtCheckpoint_3",
                "speaker": "Sharp-Eye Lora",
                "text": "...Nothing. Just the dark.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Caravan_HalfOrcMelee_AtTower": [
              {
                "id": "Caravan_HalfOrcMelee_AtTower_0",
                "speaker": "Bedi",
                "text": "Her cathedral will stand in the city, True Soul. On the bones of all Baldurians.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_HasMet_CaravanHalfOrcMelee"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: grave, taking himself too seriously"
              }
            ],
            "Caravan_HalfOrcMelee": [
              {
                "id": "Caravan_HalfOrcMelee_0",
                "speaker": "Bedi",
                "text": "Stay sharp. These shadows can sneak up on you.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCL_Drider_HasMet_CaravanHalfOrcMelee"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "HarpersAndPlayersAmbush": [
              {
                "id": "HarpersAndPlayersAmbush_69",
                "speaker": "Kar'niss",
                "text": "",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCL_DriderHarper_Caster_000_StartInclusion",
                  "SCL_DriderHarper_Ranger_000_StartInclusion",
                  "SCL_DriderHarper_Ranger_001_StartInclusion",
                  "SCL_DriderHarper_Melee_000_StartInclusion"
                ],
                "goto": "",
                "link": "40",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarpersAndPlayersAmbush_16",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "40",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "40",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ],
            "AD_DroppedLantern": [
              {
                "id": "AD_DroppedLantern_0",
                "speaker": "Kar'niss",
                "text": "No! The lantern!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_CombatStarts": [
              {
                "id": "AD_CombatStarts_0",
                "speaker": "Kar'niss",
                "text": "Drive them into the dark! Do not let them take our light!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_BacktrackedToCaravanCheckpoint": [
              {
                "id": "PAD_BacktrackedToCaravanCheckpoint_0",
                "speaker": "Player",
                "text": "Looks like the drider's caravan came from here.",
                "node_type": "normal",
                "checkflags": [
                  "25c1ac70-f65f-4869-8a74-eff5827d9cde"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PAD_BacktrackedToCaravanCheckpoint_2",
                "speaker": "Player",
                "text": "Cages, shackles... all prepared to march captives off to their fate.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_State_PlayersDefeatedCaravan = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Harper_Caster_000": [
              {
                "id": "AD_Harper_Caster_000_0",
                "speaker": "Harper Elindale",
                "text": "Guard against the darkness.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: wary but energetic, in combat"
              }
            ],
            "Caravan_GoblinRanger_AtTower": [
              {
                "id": "Caravan_GoblinRanger_AtTower_0",
                "speaker": "Sharp-Eye Lora",
                "text": "No food waiting for us? 'S barbaric. They got plenty of prisoners for the roasting.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_HasMet_CaravanGoblinRanger"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: whining - end of a long shift and they haven't been fed"
              }
            ],
            "HarpersAtInn": [
              {
                "id": "HarpersAtInn_57",
                "speaker": "Harper Branthos",
                "text": "You mean to reach Moonrise. And I've orders to help you.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCL_Drider_HarpersAtInn_OneLinerHasMet"
                ],
                "goto": "",
                "link": "9",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarpersAtInn_34",
                "speaker": "Harper Branthos",
                "text": "The path to the Towers is drenched in blackness so deep, even a torch cannot quell it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "9",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarpersAtInn_32",
                "speaker": "Harper Branthos",
                "text": "Yet the cultists have found a way to move freely. Whatever this method, you must claim it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "9",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarpersAtInn_64",
                "speaker": "Harper Branthos",
                "text": "A cultist convoy crosses the land as we speak. I've readied an ambush. Say the word, and we fly.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "9",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarpersAtInn_14",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "16",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "16",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ],
            "AD_EscortInterrupted": [
              {
                "id": "AD_EscortInterrupted_0",
                "speaker": "Kar'niss",
                "text": "Return to the light! Do not stray!",
                "node_type": "normal",
                "checkflags": [
                  "c7cbc714-5e48-c78a-0867-2ce81a42d681_A"
                ],
                "setflags": [
                  "c7cbc714-5e48-c78a-0867-2ce81a42d681_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Drider notices the player has left the safety of the caravan and wandered off into dangerous ground"
              }
            ],
            "Caravan_GoblinMelee_000_AtTower": [
              {
                "id": "Caravan_GoblinMelee_000_AtTower_0",
                "speaker": "Brawler Vez",
                "text": "Wish we was assigned to the war camp. Beer's surely better down there.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_HasMet_CaravanGoblinMelee_000"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_HarpersPreparingBeforeAmbush": [
              {
                "id": "AD_HarpersPreparingBeforeAmbush_0",
                "speaker": "Harper Manus",
                "text": "Haven't we waited long enough, Bran?",
                "node_type": "normal",
                "checkflags": [
                  "7c651195-e50f-fd75-7a35-f6f9a8d80e8d_A"
                ],
                "setflags": [
                  "7c651195-e50f-fd75-7a35-f6f9a8d80e8d_B"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_HarpersPreparingBeforeAmbush_11",
                "speaker": "Harper Branthos",
                "text": "We'll wait as long as it takes.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_HarpersPreparingBeforeAmbush_10",
                "speaker": "Harper Manus",
                "text": "As long as it takes for what?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_HarpersPreparingBeforeAmbush_8",
                "speaker": "Harper Branthos",
                "text": "For the winds to blow in our favour.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Caravan_AD_MeleeAndRangerGoblinsAtCheckpoint": [
              {
                "id": "Caravan_AD_MeleeAndRangerGoblinsAtCheckpoint_6",
                "speaker": "Sharp-Eye Lora",
                "text": "Ain't you worried about the shadows?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "2fb08ca0-df67-8450-3f01-c1e1c2a78b59_A"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Caravan_AD_MeleeAndRangerGoblinsAtCheckpoint_4",
                "speaker": "Brawler Vez",
                "text": "Nope. 'Cause I ain't a little coward.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Caravan_AD_MeleeAndRangerGoblinsAtCheckpoint_5",
                "speaker": "Sharp-Eye Lora",
                "text": "Yeah... no, me neither.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Dead": [
              {
                "id": "Dead_22",
                "speaker": "Narrator",
                "text": "*The corpse regards you lifelessly.*",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Dead_23",
                "speaker": "Player",
                "text": "Who are you?",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [
                  "GLO_SpeakWithDead_Event_QuestionAsked"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Dead_19",
                "speaker": "Kar'niss",
                "text": "Erased... forgotten... we are... drider...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Dead_8",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ],
            "Caravan_GoblinMelee_001_AtTower": [
              {
                "id": "Caravan_GoblinMelee_001_AtTower_0",
                "speaker": "Warrior Gronag",
                "text": "Absolute's blessing on ya. Maybe Her design will throw us together again sometime.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_HasMet_CaravanGoblinMelee_001"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: idle, wishing us luck"
              }
            ],
            "AD_KillsSomeone": [
              {
                "id": "AD_KillsSomeone_0",
                "speaker": "Kar'niss",
                "text": "For the Absolute! For my queen!",
                "node_type": "normal",
                "checkflags": [
                  "1fbc1449-b85a-90a5-3f67-a8898acbd1d0_A"
                ],
                "setflags": [
                  "1fbc1449-b85a-90a5-3f67-a8898acbd1d0_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Caravan_HalfOrcCaster_AtTower": [
              {
                "id": "Caravan_HalfOrcCaster_AtTower_0",
                "speaker": "Kansif",
                "text": "It was an honour to walk the shadows at your side. A little more inviting here though, eh?",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_HasMet_CaravanHalfOrcCaster"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: formal, making a slight joke at the end"
              }
            ],
            "AD_Harper_Ranger_000": [
              {
                "id": "AD_Harper_Ranger_000_0",
                "speaker": "Harper Manus",
                "text": "No god can protect you.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: in combat, menacing your enemies"
              }
            ],
            "AD_Warning": [
              {
                "id": "AD_Warning_0",
                "speaker": "Kar'niss",
                "text": "If they wander, we will not be responsible.",
                "node_type": "normal",
                "checkflags": [
                  "7b1fff12-3497-bd2c-4003-1905563c535e_A",
                  "7b1fff12-3497-bd2c-4003-1905563c535e_B"
                ],
                "setflags": [
                  "7b1fff12-3497-bd2c-4003-1905563c535e_A = False",
                  "7b1fff12-3497-bd2c-4003-1905563c535e_B = False"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_Warning_4",
                "speaker": "Kar'niss",
                "text": "If they die, it is their own fault.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Caravan_HalfOrcCaster": [
              {
                "id": "Caravan_HalfOrcCaster_35",
                "speaker": "Kansif",
                "text": "True Soul. An honour.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_HasMet_CaravanFirstTime = False"
                ],
                "setflags": [
                  "SCL_Drider_HasMet_CaravanFirstTime",
                  "SCL_Drider_HasMet_CaravanHalfOrcCaster"
                ],
                "goto": "",
                "link": "25",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Bows their head slightly. This is their first time meeting a revered true soul"
              },
              {
                "id": "Caravan_HalfOrcCaster_14",
                "speaker": "",
                "text": "",
                "node_type": "alias",
                "checkflags": [
                  "CAMP_GoblinHuntCelebration_Knows_CreaturePath = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "123",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Caravan_HalfOrcCaster_96",
                "speaker": "Player",
                "text": "Why do you need a lyre, exactly?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "93",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Caravan_HalfOrcCaster_9",
                "speaker": "",
                "text": "",
                "node_type": "alias",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "93",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Caravan_HalfOrcCaster_102",
                "speaker": "Kansif",
                "text": "I admit, I'm surprised a True Soul does not know this. Where are you headed, exactly?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Caravan_HalfOrcCaster_52",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "20",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "20",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ],
            "AD_HarpersReachTree": [
              {
                "id": "AD_HarpersReachTree_0",
                "speaker": "",
                "text": "Keep steady. We're closing in.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_AfterAmbush": [
              {
                "id": "AD_AfterAmbush_0",
                "speaker": "Kar'niss",
                "text": "Shadows and heretics, Majesty. But they won't stop us. They can't stop us.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Outburst - a little crazed as a whispering he's been hearing picks up again"
              }
            ],
            "AD_PlayerTakesMoonlantern": [
              {
                "id": "AD_PlayerTakesMoonlantern_0",
                "speaker": "Kar'niss",
                "text": "Return the lantern! You are not worthy to hold her light!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_ArriveToTollHouse": [
              {
                "id": "AD_ArriveToTollHouse_1",
                "speaker": "Kar'niss",
                "text": "Stay close. The shadows are darkest here - hungriest here.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Warning the others in your caravan - you're entering a very dangerous area."
              },
              {
                "id": "AD_ArriveToTollHouse_0",
                "speaker": "Kar'niss",
                "text": "Do not stray from the light, no matter what they promise you.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Warning the others in your caravan - you're entering a very dangerous area."
              }
            ],
            "HarperMelee_000": [
              {
                "id": "HarperMelee_000_9",
                "speaker": "Harper Branthos",
                "text": "We expect great things of you.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_HasMet_HarperMelee000 = False",
                  "SCL_Drider_State_HarpersBackAtInn"
                ],
                "setflags": [
                  "SCL_Drider_HasMet_HarperMelee000"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperMelee_000_5",
                "speaker": "Harper Branthos",
                "text": "So go. Be great.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_CaravanConflict": [
              {
                "id": "AD_CaravanConflict_0",
                "speaker": "Brawler Vez",
                "text": "You look twitchy, stone-skin. Afraid of the dark?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_CaravanConflict_1",
                "speaker": "Kansif",
                "text": "In this place? Only a fool wouldn't be.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Caravan_GoblinRanger": [
              {
                "id": "Caravan_GoblinRanger_0",
                "speaker": "Sharp-Eye Lora",
                "text": "I miss the camp. It's too quiet out here.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCL_Drider_HasMet_CaravanGoblinRanger"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_AfterTollhouse": [
              {
                "id": "AD_AfterTollhouse_1",
                "speaker": "Brawler Vez",
                "text": "There's the tower now, big lad. Your breeches still clean?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: talking to a half-orc fellow-cultist, not to player"
              },
              {
                "id": "AD_AfterTollhouse_0",
                "speaker": "Kansif",
                "text": "My blade is. But that can change - just keep talking.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: talking to a goblin who disrespected you, but it's a mostly-friendly rivalry"
              },
              {
                "id": "AD_AfterTollhouse_2",
                "speaker": "Kar'niss",
                "text": "They will be silent! They approach your sanctuary, Majesty.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: 'they' are cultists he's leading, slightly crazed, talking to his 'god'"
              }
            ],
            "Caravan_GoblinMelee_000": [
              {
                "id": "Caravan_GoblinMelee_000_0",
                "speaker": "Brawler Vez",
                "text": "Can we get movin'? Nabbed these boots from a gnome, and they don't bloody fit.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_HasMet_CaravanGoblinMelee_000 = False"
                ],
                "setflags": [
                  "SCL_Drider_HasMet_CaravanGoblinMelee_000"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_HarpersMoveTowardsAmbush": [
              {
                "id": "AD_HarpersMoveTowardsAmbush_0",
                "speaker": "Harper Branthos",
                "text": "Eyes open, wits sharp.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Very tense, but not shouting. Close to a loud whisper."
              }
            ],
            "HarperNarrator_AfterAmbush": [
              {
                "id": "HarperNarrator_AfterAmbush_35",
                "speaker": "Narrator",
                "text": "*The hunter holds the lantern aloft. Its glow warms you through, chasing away the shadows in and around you.*",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_State_HasDriderMoonlantern"
                ],
                "setflags": [],
                "goto": "",
                "link": "17",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperNarrator_AfterAmbush_18",
                "speaker": "Narrator",
                "text": "*The lantern flickers ever so briefly, and you hear a slight twitter - or perhaps it's simply your imagination.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "17",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Camera shows lantern in Harper's hand. The light flickers just a little, and you hear a little titter come from it. Harper stows the lantern."
              },
              {
                "id": "HarperNarrator_AfterAmbush_19",
                "speaker": "Narrator",
                "text": "*The Harper demands an explanation. Why did you travel with cultists?*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Addressed to player. Harper raises his blade and points at the player.\rNodeContext: Very suspicious"
              },
              {
                "id": "HarperNarrator_AfterAmbush_6",
                "speaker": "Player",
                "text": "I meant to infiltrate the cult. You've ruined the mission.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperNarrator_AfterAmbush_23",
                "speaker": "",
                "text": "True",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperNarrator_AfterAmbush_11",
                "speaker": "Narrator",
                "text": "*The Harper acknowledges your explanation, grateful to see you in one piece.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Harper lowers blade while speaking."
              }
            ],
            "HarperCaster_000_AfterAmbush": [
              {
                "id": "HarperCaster_000_AfterAmbush_0",
                "speaker": "Harper Elindale",
                "text": "Not the cleanest of victories. But a victory, just the same.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_HarperCaster_000_AtAmbush_HasMet = False",
                  "SCL_Drider_Event_AcquiredMoonlanternWithoutFight = False"
                ],
                "setflags": [
                  "SCL_Drider_HarperCaster_000_AtAmbush_HasMet"
                ],
                "goto": "",
                "link": "HarperCaster_000_AfterAmbush_5",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperCaster_000_AfterAmbush_1",
                "speaker": "Harper Elindale",
                "text": "Hold your nose and check that corpse. The lantern should still be on it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_TollhouseFight": [
              {
                "id": "AD_TollhouseFight_0",
                "speaker": "Kar'niss",
                "text": "Pay no heed - onwards, to Moonrise!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Commanding"
              }
            ],
            "AD_Harpers_AtInn_AfterAmbush": [
              {
                "id": "AD_Harpers_AtInn_AfterAmbush_7",
                "speaker": "Harper Elindale",
                "text": "There must be something more we can do, Bran.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_State_RendezvousAfterAmbush = False",
                  "SCL_Drider_State_HarpersBackAtInn"
                ],
                "setflags": [
                  "0cca6d90-e7d5-b1d6-8d9e-f6b5b8f65006_A"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_Harpers_AtInn_AfterAmbush_5",
                "speaker": "Harper Branthos",
                "text": "Do you trust Jaheira?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_Harpers_AtInn_AfterAmbush_18",
                "speaker": "Harper Elindale",
                "text": "With my life.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_Harpers_AtInn_AfterAmbush_0",
                "speaker": "Harper Branthos",
                "text": "Then give it time. We will see victory yet.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_BeforeAmbush": [
              {
                "id": "AD_BeforeAmbush_2",
                "speaker": "Kar'niss",
                "text": "They must keep up. The shadows are hungry.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Called over the shoulder"
              },
              {
                "id": "AD_BeforeAmbush_0",
                "speaker": "Sharp-Eye Lora",
                "text": "Ain't all got ten legs!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: A shouted complaint"
              },
              {
                "id": "AD_BeforeAmbush_1",
                "speaker": "Kar'niss",
                "text": "...Patience, Majesty. You bless us with patience.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Taking a breath to stop from lashing out"
              }
            ],
            "Harper_Melee_000_AD_CombatStarts": [
              {
                "id": "Harper_Melee_000_AD_CombatStarts_0",
                "speaker": "Harper Branthos",
                "text": "Take out the drider - we need that lantern!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "Harper_Melee_000_AD_DriderDies": "Drider dies.",
            "Harper_Ranger_000_AD_LassandraDies": "Lassandra dies.",
            "Caravan_AD_HalfOrcCaster": "Combat AD for Kanslf, Half Orc caster in the driders caravan",
            "ThanksAfterAmbush": "While following the caravan, together with the players are ambushed by a group of players. If they side with the drider after the combat resolves it will thank them.",
            "HarperRanger_001_AfterAmbush": "Femme Harper Ranger after the fight with the Drider. To ppath: You started the fight with the drider, but switched sides. If you don't give the Harpers the moonlantern they came for, you will need to fight them for it.",
            "AD_HarpersAfterAmbush": "Harpers are at the rendezvous point after the ambush reflecting about it.",
            "AD_HarpersReachAmbushHouse": "AD that triggers as harpers reach the house from which they will ambush the caravan.",
            "Harper_Melee_000_AD_LassandraDies": "Lassandra dies in combat with the drider. Branthos (also in combat with the drider) reacts.",
            "PlayersAmbush": "The players have agreed to help the Harpers ambush a caravan of Absolute cultists and prisoners. You've just arrived at the ambush site - the mood is tense, words are spoken in harsh whispers. When the Caravan arrives there's a monsterous drider at its head, muttering to itself, talking to an imaginary queen/majesty that represents the voice of his God, The Absolute. The player can try to trick the drider into handing over its magic lantern (the Moonlantern - a glowing lantern hanging from the end of a staff), although that could leave the drider exposed to the worst effects of the curse. Will likely end in combat, either because you signaled the Harpers to spring their ambush or because the drider got suspicious and attacked.",
            "Caravan_AD_Hyena": "A playful, tame hyena is hanging around a goblin guard named Grim. Grim's having none of it.",
            "HarperCaster_000": "A Harper, getting ready for a mission that will see them trying to kill a drider - a big, dangerous monster. Main path only available when group dialogue is unavailable. This Harper is boisterous and eager.",
            "CaravanStart": "Dialog featuring a goblin and half-orc. Triggers the start of the caravan escort with the Drider appearing.The Drider is male, half-drow elf and half spider (bottom half). He carries a magical lantern to ward off the shadows",
            "HarperScout_PreparingForAmbush": "A Harper scout, getting ready to go back out into the cursed land that recently killed her friend. She's preparing to ambush a drider - a big, dangerous target. Her mood is somewhat grim.",
            "AD_AllHarpersWaitingAtAmbush": "Harper is waiting for the caravan at the ambush spot. After it the ambush starts and the caravan appears.Whispered and urgent - you're about to ambush someone.",
            "CINE_CaravanIntro": "The player spots the drider caravan approaching while exploring SCL (no harpers are present)",
            "HarperMelee_000_AfterAmbush": "Harper leader after the fight with the Drider. You started the fight on drider's side, but switched and sided with the Harpers. They take the lantern and if you want it, you need to attack them or convince them to give it to you.",
            "WaitingDuringEscort": "Players were following the Drider accross the shadowlands but moved too far away from the caravan. The Drider will wait for the player to speak with it again before resuming the movement towards the tower.",
            "Harper_Melee_000_AD_TakesMoonlantern": "Harper takes the moolantern from the drider.",
            "AtTower": "The Drider stands at the top of Moonrise tower - present just before we get our reward.",
            "AD_Harper_Melee_000": "Combat AD for Harper Branthos",
            "HarperRanger_000_AfterAmbush": "Harper Ranger after the fight with the Drider. You may or may not have started the fight on his side. After the ambush has ended, a prisoner threatens you, telling you to hand over the lantern.",
            "Caravan_AD_HalfOrcAndGoblinAtCheckpoint": "AD between the goblin and the half-orc when the entire caravan is at the checkpoint.",
            "Caravan_HalfOrcMelee_AtTower": "This guard was part of the caravan that brought us to Moonrise. Looking around the tower ruins, unimpressed.",
            "Caravan_HalfOrcMelee": "Half-Orc at the edge of the shadow curse. Stoic and focused on the job.",
            "HarpersAndPlayersAmbush": "The players have agreed to help the Harpers ambush a caravan of Absolute cultists and prisoners. You've just arrived at the ambush site - the mood is tense, words are spoken in harsh whispers. When the Caravan arrives there's a monsterous drider at its head, muttering to itself, talking to an imaginary queen/majesty that represents the voice of his God, The Absolute. The player can try to trick the drider into handing over its magic lantern (the Moonlantern - a glowing lantern hanging from the end of a staff), although that could leave the drider exposed to the worst effects of the curse. Will likely end in combat, either because you signaled the Harpers to spring their ambush or because the drider got suspicious and attacked.",
            "AD_DroppedLantern": "Drider dropped the lantern.",
            "AD_CombatStarts": "Drider screams after being attacked during the ambush.",
            "PAD_BacktrackedToCaravanCheckpoint": "Players met the caravan alone or with the harpers and backtracked towards where the caravan was waiting the Drider.",
            "AD_Harper_Caster_000": "Combat AD for Harper Elindale",
            "Caravan_GoblinRanger_AtTower": "A goblin guard who reached Moonrise Towers with us. Currently idle as they await their new orders.",
            "HarpersAtInn": "The players encounter a squad of Harpers at the Last Light Inn who're preparing to set out on a dangerous mission to ambush a drider and some cultists in the shadow-cursed lands. Lassandra, a Harper scout that the player may have helped previously, might be there.",
            "AD_EscortInterrupted": "Drider pauses the escort because someone was left behind. Drider's tone is a little sharp - it's his responsibility to make sure the caravan he's escorting gets to its destination safely.",
            "Caravan_GoblinMelee_000_AtTower": "",
            "AD_HarpersPreparingBeforeAmbush": "A group of Harpers are standing outside an inn They had been preparing a dangerous ambush, but now the leader has another idea. The other Harpers are growing impatient.",
            "Caravan_AD_MeleeAndRangerGoblinsAtCheckpoint": "Two of the three goblins discussing at the checkpoint. The tracker is nervous, looking to chat to distract himself. Vez is absolutely uninterested.",
            "Dead": "The drider's SWD dialogue.",
            "Caravan_GoblinMelee_001_AtTower": "The caravan has come to a stop at Moonrise Towers. Gronag is one of the guards idling outside until they're sent back out into the dark.",
            "AD_KillsSomeone": "Drider kills someone during the ambush encounter.",
            "Caravan_HalfOrcCaster_AtTower": "Kansif is now safe inside Moonrise Towers after delivering us there.",
            "AD_Harper_Ranger_000": "Combat AD for Harper Manus",
            "AD_Warning": "Drider warns players and caravan not to move too far away from the light - otherwise the Moonlantern won't protect them.",
            "Caravan_HalfOrcCaster": "Player approaches Kansif (a stoic, honourable male half-orc) and Brawler Vez (a mouthy female goblin) after clearing a checkpoint and entering their camp in the Shadowcurse. They two Absolute cultists assume you're a True Soul sent by Minthara (which may or may not be true) and will ask if you brought the lyre needed to summon their guide through the darkness. If you have, you can play it and the drider will emerge. If you haven't, they can tell you where to find it.",
            "AD_HarpersReachTree": "AD that triggers near a tree at the shadowlands.",
            "AD_AfterAmbush": "Kicks off conflict between two or more caravan members if they are all alive at the bridge next to the town, after the harpers' ambush.",
            "AD_PlayerTakesMoonlantern": "Player takes the moonlantern and wasn't on the drider's side.",
            "AD_ArriveToTollHouse": "Drider arrives to the toll house and tells everyone to stay close to him.",
            "HarperMelee_000": "Harper one-line, with faith that the player will guide them to victory against the big bad Ketheric Thorm.",
            "AD_CaravanConflict": "Kicks off conflict between two or more caravan members if they are all alive at the bridge next to the town, after the harpers' ambush.",
            "Caravan_GoblinRanger": "Goblin at the edge of the shadow curse. Misses the party back at the camp - this place is unsettling.",
            "AD_AfterTollhouse": "Kicks off conflict between two or more caravan members if they are all alive at the bridge next to the town, after the harpers' ambush.",
            "Caravan_GoblinMelee_000": "If the player has been allowed entry to the camp, they can talk to this goblin to learn that they are waiting for a harp from Minthara with which to summon a guide that will protect them from the shadow curse on the path to Moonrise and if they haven't got it, they need to get it from Minthara. If the player has killed Minthara and hasn't already told the checkpoint goblin, they can mention it here.",
            "AD_HarpersMoveTowardsAmbush": "AD as a group of Harpers move through the shadow curse. They're moving at a quick pace, trying to speak quietly. The mood is tense.",
            "HarperNarrator_AfterAmbush": "Narrator nodes for the after ambush. Dialgo shared between Elindale, Manus and Lassandra.",
            "HarperCaster_000_AfterAmbush": "Harper Caster after the fight with the Drider. You probably started the fight and switched sides to harpers. If so, you need to let them have the moonlantern or fight to keep it.",
            "AD_TollhouseFight": "Drider sees any of the tollhouse collector booster NPCs in combat while traversing the tollhouse in TWN.",
            "AD_Harpers_AtInn_AfterAmbush": "| 1st case scenario : Harpers came back victorious from the drider ambush and they are chatting about it back at the inn. || 2nd case scenario : Player went at the ambush without the harpers and they are now left with no lantern and nothing to do, |",
            "AD_BeforeAmbush": "Second caravan AD between the bridge and the ambush.",
            "Harper_Melee_000_AD_CombatStarts": "Start ambush combat"
          }
        },
        "scl_shadowbirds": {
          "scenario_name": "scl_shadowbirds",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "scl_ruinedbattlefield": {
          "scenario_name": "scl_ruinedbattlefield",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "scl_entrypointgoblin": {
          "scenario_name": "scl_entrypointgoblin",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "scl_signpost": {
          "scenario_name": "scl_signpost",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "scl_harperscout": {
          "scenario_name": "scl_harperscout",
          "session_sequence": [
            "000_AD_CombatStarts"
          ],
          "paths": {
            "000_AD_CombatStarts": [
              "000_AD_CombatStarts_0"
            ]
          },
          "node_data": {
            "000_AD_CombatStarts": [
              {
                "id": "000_AD_CombatStarts_0",
                "speaker": "Harper Lassandra",
                "text": "That's them! Kill the drider - take the Moonlantern!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "000_AD_CombatStarts": "Start ambush combat with Harper Lassandra present"
          }
        },
        "scl_mastiffpoachers": {
          "scenario_name": "scl_mastiffpoachers",
          "session_sequence": [
            "PAD_TouchedTorches_WithGale"
          ],
          "paths": {
            "PAD_TouchedTorches_WithGale": [
              "PAD_TouchedTorches_WithGale_4",
              "PAD_TouchedTorches_WithGale_7",
              "PAD_TouchedTorches_WithGale_3",
              "PAD_TouchedTorches_WithGale_1",
              "PAD_TouchedTorches_WithGale_0"
            ]
          },
          "node_data": {
            "PAD_TouchedTorches_WithGale": [
              {
                "id": "PAD_TouchedTorches_WithGale_4",
                "speaker": "Player",
                "text": "That's odd. The flame won't go out.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PAD_TouchedTorches_WithGale_7",
                "speaker": "Player",
                "text": "",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PAD_TouchedTorches_WithGale_3",
                "speaker": "",
                "text": "False",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PAD_TouchedTorches_WithGale_1",
                "speaker": "Player",
                "text": "A spell - but not one I'm familiar with.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PAD_TouchedTorches_WithGale_0",
                "speaker": "Gale",
                "text": "Must have been a wizard at work. I know a Continual Flame spell when I see one.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCL_MastiffPoachers_Knows_ContinualFlame"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_TouchedTorches_WithGale": "Party remarks on torches they cannot extinguish."
          }
        },
        "scl_ad": {
          "scenario_name": "scl_ad",
          "session_sequence": [
            "ShadowMemory4",
            "ShadowMemory20",
            "ShadowMemory8",
            "ShadowMemory16",
            "Entrance_Plaque3",
            "ShadowMemory17",
            "ShadowMemory9",
            "ShadowMemory21",
            "ShadowMemory5",
            "ShadowMemory10",
            "ShadowMemory2",
            "ShadowMemory26",
            "ShadowMemory30",
            "ShadowMemory31",
            "ShadowMemory27",
            "ShadowMemory3",
            "ShadowMemory11",
            "ShadowMemory28",
            "ShadowMemory12",
            "ShadowMemory32",
            "ShadowMemory24",
            "ShadowMemory1",
            "ShadowMemory25",
            "ShadowMemory33",
            "ShadowMemory29",
            "ShadowMemory22",
            "ShadowMemory6",
            "ShadowMemory23"
          ],
          "paths": {
            "ShadowMemory4": [
              "ShadowMemory4_0"
            ],
            "ShadowMemory20": [
              "ShadowMemory20_0"
            ],
            "ShadowMemory8": [
              "ShadowMemory8_0"
            ],
            "ShadowMemory16": [
              "ShadowMemory16_0"
            ],
            "Entrance_Plaque3": [
              "Entrance_Plaque3_0"
            ],
            "ShadowMemory17": [
              "ShadowMemory17_0"
            ],
            "ShadowMemory9": [
              "ShadowMemory9_0"
            ],
            "ShadowMemory21": [
              "ShadowMemory21_0"
            ],
            "ShadowMemory5": [
              "ShadowMemory5_0"
            ],
            "ShadowMemory10": [
              "ShadowMemory10_0"
            ],
            "ShadowMemory2": [
              "ShadowMemory2_0"
            ],
            "ShadowMemory26": [
              "ShadowMemory26_0"
            ],
            "ShadowMemory30": [
              "ShadowMemory30_0"
            ],
            "ShadowMemory31": [
              "ShadowMemory31_0"
            ],
            "ShadowMemory27": [
              "ShadowMemory27_0"
            ],
            "ShadowMemory3": [
              "ShadowMemory3_0"
            ],
            "ShadowMemory11": [
              "ShadowMemory11_0"
            ],
            "ShadowMemory28": [
              "ShadowMemory28_0"
            ],
            "ShadowMemory12": [
              "ShadowMemory12_0"
            ],
            "ShadowMemory32": [
              "ShadowMemory32_0"
            ],
            "ShadowMemory24": [
              "ShadowMemory24_0"
            ],
            "ShadowMemory1": [
              "ShadowMemory1_0"
            ],
            "ShadowMemory25": [
              "ShadowMemory25_0"
            ],
            "ShadowMemory33": [
              "ShadowMemory33_0"
            ],
            "ShadowMemory29": [
              "ShadowMemory29_0"
            ],
            "ShadowMemory22": [
              "ShadowMemory22_0"
            ],
            "ShadowMemory6": [
              "ShadowMemory6_0"
            ],
            "ShadowMemory23": [
              "ShadowMemory23_0"
            ]
          },
          "node_data": {
            "ShadowMemory4": [
              {
                "id": "ShadowMemory4_0",
                "speaker": "Narrator",
                "text": "*You sense a fading echo of the person who once was. A dockhand. He did not ask for this.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory20": [
              {
                "id": "ShadowMemory20_0",
                "speaker": "Narrator",
                "text": "*A distant memory of a man stretching his back with a groan. Another day of hauling masonry blocks done...*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory8": [
              {
                "id": "ShadowMemory8_0",
                "speaker": "Narrator",
                "text": "*She was a healer, trying to aid the wounded in the battle against the Sharrans. But there were so many...*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory16": [
              {
                "id": "ShadowMemory16_0",
                "speaker": "Narrator",
                "text": "*You sense a matriarch's flush of pride - she will soon be a grandmother, and the child will bear her name. Muldred.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Mull-dread"
              }
            ],
            "Entrance_Plaque3": [
              {
                "id": "Entrance_Plaque3_0",
                "speaker": "Narrator",
                "text": "*We offer ourselves to the darkness, that blessed Shar may give us her mercy.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory17": [
              {
                "id": "ShadowMemory17_0",
                "speaker": "Narrator",
                "text": "*Callused hands work a hammer and chisel around a massive slab of rock. Months from now, a face will take shape.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory9": [
              {
                "id": "ShadowMemory9_0",
                "speaker": "Narrator",
                "text": "*You see a man stalking slowly through the woods, bow half-drawn. If he bags a deer, the whole family will be kept fed all winter...*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory21": [
              {
                "id": "ShadowMemory21_0",
                "speaker": "Narrator",
                "text": "*You can almost taste the sour ale that once clung to this soul's breath. He was insensible when the shadows came for him.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory5": [
              {
                "id": "ShadowMemory5_0",
                "speaker": "Narrator",
                "text": "*You glimpse a young Harper on the eve of battle against Thorm, long ago. He and his comrades toast each other in Last Light...*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory10": [
              {
                "id": "ShadowMemory10_0",
                "speaker": "Narrator",
                "text": "*In her former life, this girl played in the nearby woods. She was always the best at climbing trees.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory2": [
              {
                "id": "ShadowMemory2_0",
                "speaker": "Narrator",
                "text": "*You can almost feel the heat from the forge. This one was once a blacksmith.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory26": [
              {
                "id": "ShadowMemory26_0",
                "speaker": "Narrator",
                "text": "*You sense a faded memory of marching in an army against Ketheric Thorm. Victory seemed possible then.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory30": [
              {
                "id": "ShadowMemory30_0",
                "speaker": "Narrator",
                "text": "*An echo of the past shows a man hunched over a ledger, quill in hand. Tolls collected on the Risen Road, destined for Moonrise.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory31": [
              {
                "id": "ShadowMemory31_0",
                "speaker": "Narrator",
                "text": "*You see a man drain his tankard in an inn as he listens to a Flaming Fist play the lute. He's better than his uniform might suggest.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory27": [
              {
                "id": "ShadowMemory27_0",
                "speaker": "Narrator",
                "text": "*You can almost smell the hops and barley for yourself. This man's family always complained that his clothing reeked after work at the brewery.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory3": [
              {
                "id": "ShadowMemory3_0",
                "speaker": "Narrator",
                "text": "*Desperate prayers to Selûne, echoing from the past. They did not save him.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory11": [
              {
                "id": "ShadowMemory11_0",
                "speaker": "Narrator",
                "text": "*You see an older woman, on her knees, scrubbing the floor of an inn. The patrons made a mess of things again the night before.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory28": [
              {
                "id": "ShadowMemory28_0",
                "speaker": "Narrator",
                "text": "*You hear the heavy thud of a butcher's cleaver on his block, as he divides his meagre fare for those waiting. Never enough to go around.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory12": [
              {
                "id": "ShadowMemory12_0",
                "speaker": "Narrator",
                "text": "*He had dreams of boarding a ship in Baldur's Gate, and seeing the world. But then the darkness came.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory32": [
              {
                "id": "ShadowMemory32_0",
                "speaker": "Narrator",
                "text": "*An older man turns his head away in shame. His neighbours would not renounce Selûne - now they hang in the town square.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory24": [
              {
                "id": "ShadowMemory24_0",
                "speaker": "Narrator",
                "text": "*A strange feeling of resentment comes to you. A travelling merchant, sick of this route. Sick of the tolls eating away his profits.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory1": [
              {
                "id": "ShadowMemory1_0",
                "speaker": "Narrator",
                "text": "*A faded memory of a boy and girl sharing their first kiss. Your own heart almost flutters in tune with theirs.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory25": [
              {
                "id": "ShadowMemory25_0",
                "speaker": "Narrator",
                "text": "*You see an old boot, balanced upside down on a cobbler's knee, as he taps the final nail into the new sole. Good as new.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory33": [
              {
                "id": "ShadowMemory33_0",
                "speaker": "Narrator",
                "text": "*You feel a rush of outrage. This woman worshipped Shar to the end - so why does the Nightsinger's curse not spare her...?*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory29": [
              {
                "id": "ShadowMemory29_0",
                "speaker": "Narrator",
                "text": "*You see a mother sitting by her child's bedside, listening to his sickly breathing as he sleeps.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory22": [
              {
                "id": "ShadowMemory22_0",
                "speaker": "Narrator",
                "text": "*A happy, faded memory comes to you. A woman walking along a beach, holding hands with her husband-to-be.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory6": [
              {
                "id": "ShadowMemory6_0",
                "speaker": "Narrator",
                "text": "*Thoughts of baby names. She did not wish for her first born to be named after her mother-in-law. Muldred. Ugh.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Mull-dread"
              }
            ],
            "ShadowMemory23": [
              {
                "id": "ShadowMemory23_0",
                "speaker": "Narrator",
                "text": "*As the pile of sawdust on the floor grows larger, the cabinet gradually takes shape. The carpenter's pride washes over you...*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "ShadowMemory4": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory20": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory8": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory16": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "Entrance_Plaque3": "Vertical clickable scripture/plaque in the exit/enrance to the Underdark near the Elevator",
            "ShadowMemory17": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory9": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory21": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory5": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory10": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory2": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory26": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory30": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory31": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory27": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory3": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory11": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory28": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory12": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory32": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory24": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory1": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory25": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory33": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory29": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory22": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory6": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory23": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were."
          }
        },
        "scl_karlach": {
          "scenario_name": "scl_karlach",
          "session_sequence": [
            "PAD_ComplainsAboutCurse"
          ],
          "paths": {
            "PAD_ComplainsAboutCurse": [
              "PAD_ComplainsAboutCurse_0"
            ]
          },
          "node_data": {
            "PAD_ComplainsAboutCurse": [
              {
                "id": "PAD_ComplainsAboutCurse_0",
                "speaker": "Karlach",
                "text": "Phew. This place is... heavy.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_ComplainsAboutCurse": "Karlach complains about the curse."
          }
        },
        "scl_minthara": {
          "scenario_name": "scl_minthara",
          "session_sequence": [
            "StayInSCL"
          ],
          "paths": {
            "StayInSCL": [
              "StayInSCL_1",
              "StayInSCL_5",
              "StayInSCL_0"
            ]
          },
          "node_data": {
            "StayInSCL": [
              {
                "id": "StayInSCL_1",
                "speaker": "Nightwarden Minthara",
                "text": "If you intend to stray from Moonrise while Ketheric still lives, I shall remain at camp, strategising his downfall.",
                "node_type": "normal",
                "checkflags": [
                  "GLO_Ketheric_State_Dead = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "StayInSCL_5",
                "speaker": "Player",
                "text": "I have unfinished business to attend to before dealing with Ketheric.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "StayInSCL_0",
                "speaker": "Nightwarden Minthara",
                "text": "I do not. All that I did before you rescued me was as a puppet of the Absolute - it is behind me. Until Ketheric falls, only vengeance remains.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "StayInSCL": "Minthara tells the player her business is in SCL now and she will not leave."
          }
        },
        "scl_olivershadow": {
          "scenario_name": "scl_olivershadow",
          "session_sequence": [
            "AD_AfterHideAndSeek",
            "AD_StartOfFight",
            "AD_Dome75PercentHP",
            "AD_SummoningPlush"
          ],
          "paths": {
            "AD_AfterHideAndSeek": [
              "AD_AfterHideAndSeek_0"
            ],
            "AD_StartOfFight": [
              "AD_StartOfFight_1",
              "AD_StartOfFight_0"
            ],
            "AD_Dome75PercentHP": [
              "AD_Dome75PercentHP_0"
            ],
            "AD_SummoningPlush": [
              "AD_SummoningPlush_0"
            ]
          },
          "node_data": {
            "AD_AfterHideAndSeek": [
              {
                "id": "AD_AfterHideAndSeek_0",
                "speaker": "Oliver",
                "text": "You were good. But just you wait - I'll get better.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_OliversDiary_State_FoundAgain",
                  "8baf8087-81b0-de5d-3efa-f74769a625f4_A"
                ],
                "setflags": [
                  "8baf8087-81b0-de5d-3efa-f74769a625f4_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: A little miffed at losing/considering ways to improve his hide & seek game"
              }
            ],
            "AD_StartOfFight": [
              {
                "id": "AD_StartOfFight_1",
                "speaker": "Oliver",
                "text": "You should have just left me alone!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Angry shout"
              },
              {
                "id": "AD_StartOfFight_0",
                "speaker": "Oliver",
                "text": "Spoil my fun? I'll teach you a lesson - just you watch.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Angry shout"
              }
            ],
            "AD_Dome75PercentHP": [
              {
                "id": "AD_Dome75PercentHP_0",
                "speaker": "Oliver",
                "text": "Stop that! You're supposed to be playing, not breaking things!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Angry (player is trying to break through a protective magic dome guarding Oliver)"
              }
            ],
            "AD_SummoningPlush": [
              {
                "id": "AD_SummoningPlush_0",
                "speaker": "Oliver",
                "text": "We're not done playing yet.",
                "node_type": "normal",
                "checkflags": [
                  "8f819d41-e936-8042-1935-56de252d6c7f_A"
                ],
                "setflags": [
                  "8f819d41-e936-8042-1935-56de252d6c7f_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: he's summoning toys to fight the players - malicious, but playful"
              }
            ]
          },
          "session_synopses": {
            "AD_AfterHideAndSeek": "After playing with Oliver hide and seek for two times he will stay at his house. Depending on how the player did, he'll be left thinking about new ideas on how to improve his hide and seek abilities or happy because they didn't find him without alerting/killing the shadows.",
            "AD_StartOfFight": "AD from Oliver if players chase him to the TWN Center for the climax of Lifting the Curse",
            "AD_Dome75PercentHP": "This AD happens when you damage nightdome and bring it below 75%.",
            "AD_SummoningPlush": "AD that Oliver plays when he summons his Plush during the fight at the plaza in Shadow Cursed Town"
          }
        },
        "scl_oliversdiary": {
          "scenario_name": "scl_oliversdiary",
          "session_sequence": [
            "PAD_HideAndSeek",
            "OliverShadow",
            "AD_OliverDeathScream"
          ],
          "paths": {
            "PAD_HideAndSeek": [
              "PAD_HideAndSeek_0"
            ],
            "OliverShadow": [
              "OliverShadow_74",
              "OliverShadow_100",
              "OliverShadow_69",
              "OliverShadow_12",
              "OliverShadow_142",
              "OliverShadow_76"
            ],
            "AD_OliverDeathScream": [
              "AD_OliverDeathScream_0"
            ]
          },
          "node_data": {
            "PAD_HideAndSeek": [
              {
                "id": "PAD_HideAndSeek_0",
                "speaker": "Player",
                "text": "Where'd that child go? Or... whatever it is.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Stumped, looking for Oliver Found Oliver (a little shadow/phantom boy they're playing hide and seek with)"
              }
            ],
            "OliverShadow": [
              {
                "id": "OliverShadow_74",
                "speaker": "Oliver",
                "text": "You weren't supposed to find me. You weren't supposed to win.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_OliversDiary_State_StartedHideAndSeek",
                  "SCL_OliversDiary_State_FoundOliver"
                ],
                "setflags": [],
                "goto": "",
                "link": "12",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: More confused than angry, like the impossible has happened."
              },
              {
                "id": "OliverShadow_100",
                "speaker": "Player",
                "text": "Don't be a sore loser.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "12",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "OliverShadow_69",
                "speaker": "Oliver",
                "text": "You're not my mummy or my daddy - don't tell me what to do.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "OliverShadow_12",
                "speaker": "Oliver",
                "text": "Let's play another game - I deserve a chance to even the score.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "OliverShadow_142",
                "speaker": "Player",
                "text": "Let's play.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "OliverShadow_76",
                "speaker": "Oliver",
                "text": "Try to find me again - but my family will be looking for you at the same time, so don't get caught!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCL_OliversDiary_State_SecondRound"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [
                  "Gale 1",
                  "Shadowheart 1",
                  "Wyll 1",
                  "Karlach 1",
                  "Halsin -1"
                ],
                "context": "NodeContext: Excited"
              }
            ],
            "AD_OliverDeathScream": [
              {
                "id": "AD_OliverDeathScream_0",
                "speaker": "Oliver",
                "text": "Mummy! Daddy! Betsy! No - don't leave me!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Distraught cry"
              }
            ]
          },
          "session_synopses": {
            "PAD_HideAndSeek": "AD played when the player finds or fails to find Oliver during hide & seek.",
            "OliverShadow": "Dialog with Oliver, the shadow-child in the Shadowcursed Lands. Oliver wishes for the player to be his playmate, and engages in a game of hide and seek. Oliver seems to be a soul trapped by the curse for a 100 years, but the player will gradually realise over the course of the act that he is in fact a shadow version of Thaniel, the spirit of the land. Oliver possesses Thaniel's heart, and the curse cannot be lifted until it is returned. Oliver does not want to do this - he's made his own little 'family' using cursed beings in the area. If the player challenges him about Thaniel, Oliver will flee towards the town square, where a final confrontation will take place.",
            "AD_OliverDeathScream": "Death-scream of Oliver in the Oliver's Diary booster."
          }
        },
        "scl_githcreche": {
          "scenario_name": "scl_githcreche",
          "session_sequence": [
            "GithExplorer_Dead"
          ],
          "paths": {
            "GithExplorer_Dead": [
              "GithExplorer_Dead_19",
              "GithExplorer_Dead_11",
              "GithExplorer_Dead_23",
              "GithExplorer_Dead_9",
              "GithExplorer_Dead_14"
            ]
          },
          "node_data": {
            "GithExplorer_Dead": [
              {
                "id": "GithExplorer_Dead_19",
                "speaker": "Narrator",
                "text": "*The corpse regards you lifelessly.*",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "16",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "GithExplorer_Dead_11",
                "speaker": "Player",
                "text": "How did you die?",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [
                  "GLO_SpeakWithDead_Event_QuestionAsked"
                ],
                "goto": "",
                "link": "16",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "GithExplorer_Dead_23",
                "speaker": "Dead Githyanki Warrior",
                "text": "Foolish games... shadow... ambushed...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: This is a brave warrior who died from a silly child's game"
              },
              {
                "id": "GithExplorer_Dead_9",
                "speaker": "Dead Githyanki Warrior",
                "text": "Shameful death... dishonour to Vlaakith...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "GithExplorer_Dead_14",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "GithExplorer_Dead": "This githyanki is already dead when the player finds them. They came from the nearby crèche and died at the hands of Oliver's shadow-infested father, whose axe is embedded in her still."
          }
        },
        "scl_graveyard": {
          "scenario_name": "scl_graveyard",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "scl_harpersduty": {
          "scenario_name": "scl_harpersduty",
          "session_sequence": [
            "DeadHarper"
          ],
          "paths": {
            "DeadHarper": [
              "DeadHarper_18",
              "DeadHarper_19",
              "DeadHarper_16",
              "DeadHarper_6"
            ]
          },
          "node_data": {
            "DeadHarper": [
              {
                "id": "DeadHarper_18",
                "speaker": "Narrator",
                "text": "*The corpse regards you lifelessly.*",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "DeadHarper_19",
                "speaker": "Player",
                "text": "Who were you in life?",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [
                  "GLO_SpeakWithDead_Event_QuestionAsked"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "DeadHarper_16",
                "speaker": "Harper Lightspark",
                "text": "Dal Lightspark... scout...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "DeadHarper_6",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "DeadHarper": "The player uses Speak with Dead to talk to a dead Harper in the Shadowcursed Lands. The Harper was sent by Jaheira to find weaknesses in Ketheric's Defense. The Harper player should be able to earn some redundant information that can be learned elsewhere as well as some unique information to help them navigate Act 2"
          }
        },
        "scl_servantoftheraven": {
          "scenario_name": "scl_servantoftheraven",
          "session_sequence": [
            "Raven_AD_GoBack",
            "AD_TakingTurn_001_Combat",
            "ShadarKai",
            "AD_TakingTurn_002_Combat",
            "Raven_AD_Bye"
          ],
          "paths": {
            "Raven_AD_GoBack": [
              "Raven_AD_GoBack_0"
            ],
            "AD_TakingTurn_001_Combat": [
              "AD_TakingTurn_001_Combat_0"
            ],
            "ShadarKai": [
              "ShadarKai_81",
              "ShadarKai_65",
              "ShadarKai_0",
              "ShadarKai_25",
              "38",
              "NODE_NOT_FOUND"
            ],
            "AD_TakingTurn_002_Combat": [
              "AD_TakingTurn_002_Combat_0"
            ],
            "Raven_AD_Bye": [
              "Raven_AD_Bye_0"
            ]
          },
          "node_data": {
            "Raven_AD_GoBack": [
              {
                "id": "Raven_AD_GoBack_0",
                "speaker": "Raven",
                "text": "You found the ledger? Guess you're not so useless. Get back to master, on the double!",
                "node_type": "normal",
                "checkflags": [
                  "PETPAL"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: condescending and arrogant"
              }
            ],
            "AD_TakingTurn_001_Combat": [
              {
                "id": "AD_TakingTurn_001_Combat_0",
                "speaker": "He Who Was",
                "text": "Death is inevitable.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: combat"
              }
            ],
            "ShadarKai": [
              {
                "id": "ShadarKai_81",
                "speaker": "He Who Was",
                "text": "Where lies your guilt?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCL_ServantOfTheRAven_Servant_HasMet"
                ],
                "goto": "",
                "link": "38",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Using SWD on the corpse of a dwarf. \rNodeContext: Shadar-Kai speaks in a cold, calculated tone."
              },
              {
                "id": "ShadarKai_65",
                "speaker": "Madeline",
                "text": "The... Waning Moon...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "38",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Corpse Collapses\rNodeContext: Speak with dead style"
              },
              {
                "id": "ShadarKai_0",
                "speaker": "Player",
                "text": "Not many people out here in the darkness.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "38",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ShadarKai_25",
                "speaker": "He Who Was",
                "text": "I am not 'people'. Though many would question how wise it is to approach a stranger in the dark. Be on your way.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "38",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Addressed to player"
              },
              {
                "id": "38",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ],
            "AD_TakingTurn_002_Combat": [
              {
                "id": "AD_TakingTurn_002_Combat_0",
                "speaker": "He Who Was",
                "text": "Embrace the darkness.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Raven_AD_Bye": [
              {
                "id": "Raven_AD_Bye_0",
                "speaker": "Raven",
                "text": "I'd say bye, but you'll be dead soon! Hah!",
                "node_type": "normal",
                "checkflags": [
                  "PETPAL"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: cruel and vicious, big laugh at the end"
              }
            ]
          },
          "session_synopses": {
            "Raven_AD_GoBack": "A brief AD ment to remind the player to go back to shadar kai.",
            "AD_TakingTurn_001_Combat": "Combat ADs for the Shadar Kai. Says one line at the start orf each of his turns.",
            "ShadarKai": "You talk to a shadar-kai from the shadowfell. He tasks you with collecting memories from the dead.",
            "AD_TakingTurn_002_Combat": "Combat ADs for the Shadar Kai. Says one line at the start orf each of his turns.",
            "Raven_AD_Bye": "A concluding AD by the Raven when players completed the quest, before Raven disappears."
          }
        }
      },
      "final_flags": [
        "SCL_Drider_HasMet_HarperCaster000",
        "HAV_Isobel_KidnappingQuestions_DarkUrge",
        "GOB_SpiderNest_State_SpidersHostile",
        "DEN_AttackOnDen_HasMet_Prodigy",
        "DEN_CapturedGoblin_GuardsHasMet",
        "HAV_HarperScouts_Harper_003_HasMet_Protected",
        "GOB_Checkpoint_Event_MoveToCamp",
        "UND_MyconidRevenge_Event_TakeHead",
        "8a9a14b0-87da-5c78-aa76-7a266de7a786_Phase1",
        "HAV_Umi_NightsongFreed_HasMet",
        "PLA_TavernInvestigation_Knows_AskedStelmane",
        "DEN_AttackOnDen_HasMet_Tiefling010Victory",
        "GLO_Moonrise_Knows_AbsoluteAtGrymforge",
        "CRA_DeadPrisoner_Dead_AskedQuestion",
        "UND_DuergarMutineerFollowUp_Event_Happened",
        "CHA_Outside_Event_DoorGuardConvinced",
        "e0b6dfeb-2923-e0ad-1dc5-2a5d1e055e16_local1",
        "DEN_AttackOnDen_HasMet_GrieflingFriend",
        "DEN_AttackOnDen_HasMet_Tiefling001",
        "GOB_QuartermasterFlimsy_HasMet",
        "HAV_SavingPrisoners_HasMet_Manip",
        "GEN_TransferNPCPayment_2",
        "DEN_AttackOnDen_Event_OpenGateAfterCombat",
        "5e9c4c72-4f56-2646-ce36-88207d2dc33c_KinSaved",
        "GOB_OwlbearCub_Event_InvitedToCamp",
        "MOO_Jailbreak_HasMet_Guard004",
        "PLA_Desire_Knows_RavengardTaken",
        "DEN_DruidServant005_Knows_TalkedAboutLockdown",
        "UND_SocietyOfBrilliance_MindFlayer_State_MindFlayerFeeding",
        "PLA_ConflictedFlind_Event_MindControlDamage_Minor",
        "DEN_AttackOnDen_HasMet_Servant005Victory",
        "PLA_Desire_State_WyllComTrack",
        "CHA_Chapel_Event_OpenedJergalsTomb",
        "UND_DarkLake_State_ClaimedGekhWasDead",
        "DEN_AttackOnDen_Pet004_HasMet",
        "HAV_Isobel_HasMetDefault",
        "GLO_Player_Knows_MoonlanternExists",
        "GOB_PainPriest_Event_Reward",
        "2da46374-abab-9219-f7ce-2a002cfd72a5_a",
        "DEN_AttackOnDen_Ranged_001_HasMet",
        "GLO_Volo_HasMet_Personally",
        "GOB_PainPriest_State_ReactedToPenance",
        "8916beac-0385-3df9-de07-8be3cc6752a7_A",
        "da38cd0f-efef-6809-231d-26f71308cd07_B",
        "HAV_ProdigyLament_Knows_RolanAlive",
        "DEN_RaidingParty_Event_SkipConfrontation",
        "ORI_INCLUSION_SHADOWHEART",
        "GLO_TadpoledCount6",
        "PLA_TavernInvestigation_Quest_WallCollapsed",
        "PLA_Refugee_002_TollhouseMentioned",
        "DEN_AttackOnDen_HasMet_RobberKid",
        "876dbe2e-5070-a2c1-0148-cc993aa62289_B",
        "FOR_PriestsConqueringGod_AlliedPlayer",
        "HAG_GurHunter_Dead_Knows_Hunter",
        "HAV_TieflingSurvivors_State_DidNotPromiseToSaveMol",
        "DEN_AttackOnDen_HasMet_PickpocketVictory",
        "DEN_GuardedEntrance_State_ParentsKnowDeath",
        "GLO_IronhandGnomes_Knows_WulbrenInMoonrise",
        "MOO_Background_Outlander_CatBusiness",
        "Den_Thieflings_InterferingGuard_PCGotLore",
        "WLD_FOR_GnomeGoblinsAngry",
        "26007d1c-bac9-a896-4f4d-19a9d2a1e66f_A",
        "MOO_KitchenFight_HasMet_GnollMaster",
        "HAV_LastLightOx000_HasMet_SpeakWithAnimals",
        "GOB_Checkpoint_Guard01_HasMet",
        "c7cbc714-5e48-c78a-0867-2ce81a42d681_B",
        "HAV_TieflingSurvivors_HasMet_Mattis",
        "WLD_UnfortunateGnome_PayPassage",
        "4c78f756-720d-a285-a3e6-8f69a6069abc_Step1",
        "cd4b312f-5a40-b8c1-1ecb-0862c829a479_A",
        "5ebae00c-47d8-736c-6738-4ee56cebbc49_B",
        "GLO_Prodigy_State_ToldSiblingsProdigyDead",
        "MOO_Jailbreak_Event_ProdigyIntro",
        "DEN_General_YoungLovers_HasMet",
        "GOB_PainPriest_Event_CheckHP",
        "GLO_Desire_HasMet",
        "b43d3bc7-f10d-73cc-232e-c1f93cba3ed5_Local2",
        "DEN_AttackOnDen_Pet002_HasMet",
        "FOR_UnfortunateGnome_State_NonCharlatanAccess",
        "UND_MyconidCircle_PlantDuergarHasMet",
        "aa1d4932-8689-5e30-2b17-9b0968663a7a_historysuccess",
        "MOO_Execution_Knows_Executioner",
        "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_WyllSpoke",
        "GOB_WolfPens_Worg_002_HasMet",
        "PLA_GithChokepoint_State_FailedReadingMap",
        "PLA_ZhentShipment_Agent_002_StartInclusion",
        "GLO_HAV_TakingIsobel_HasMet_BriefInRoom",
        "SCL_Drider_HarpersAtInn_OneLinerHasMet",
        "4951b7ce-8495-b2c8-badc-beaff0e3d807_H",
        "DEN_ShadowDruid_Event_SetFaithwarden",
        "CRA_DeadPrisoner_Dead_MentionedTadpole",
        "GLO_Absolute_Knows_MoonriseTowers",
        "DEN_Rat_Event_MoveToShack",
        "DEN_DruidAttack_HasMet_Protester3AfterAttack",
        "ORI_Inclusion_End_Karlach",
        "UND_WormWall_State_RecognisedCrawlers",
        "GLO_GithChokepoint_DragonAppear",
        "df3e1892-2ab5-7b69-e57b-a75504e1a8f2_B",
        "10297257-36dd-3799-f681-657656779d4a_TieflingsLaezelAD1",
        "ORI_Inclusion_End_Wyll",
        "HAV_Siege_Intro_JaheiraAggroToPlayer",
        "DEN_AttackOnDen_HasMet_BackupLeader",
        "GLO_HeadRemoval_Event_HeadToInventory",
        "CHA_Jergal_Event_AttemptedAttack",
        "9b4c05c6-0a79-ea8d-c351-43d6fbb04abc_Story1",
        "GOB_AbsoluteCultistStiff_HasMet",
        "GLO_Shadowcurse_Knows_FromGnome",
        "PLA_StuckHalfElf_Knows_ExplainedDowry",
        "FOR_BugBearLove_Event_MovePlayerInside",
        "ddb63ed1-6bbb-2251-c4d6-b1c59315e195_A",
        "DEN_Stargazing_Event_SawDragon",
        "SCL_Drider_HarperRanger_000_AtAmbush_HasMet",
        "ORI_INCLUSION_ASTARION",
        "FOR_UnfortunateGone_TiedUpHasmet",
        "HAG_Hagspawn_State_JakeBerserk",
        "6cf6ff37-64f7-3ccf-d702-ee2025510422_B",
        "UND_EbonLake_Event_MoveToLake",
        "FOR_SeluneStash_NoticeStashSeal_CommentedOnSeal",
        "GOB_Torturers_Rat_001_HasMet",
        "GOB_Scrying_NoddedOrShrugged",
        "DEN_BirdSender_HasMet_GobLeadersDead",
        "a759296c-5d41-f5b9-7d31-1c70d1e10dc7_Once",
        "8ab0520b-3a8d-822f-1934-336e2d24e0a0_B",
        "d3eb78cf-ff8c-1e7a-7df7-4b6a04226b17_B",
        "DEN_HarpyMeal_Event_OriginCharm3",
        "683cb55e-08b9-c865-78a6-4e047ee62a24_B",
        "GLO_Tadpoled_UsedToday1",
        "GLO_HAV_TakingIsobel_HeardOfIsobel",
        "DEN_Thieflings_Event_PartnerQuestionAsked",
        "HAG_SurrogateMother_HasMet",
        "3e7a6665-f36f-0ddb-3882-7d68260b2104_B",
        "b2a52f0b-5fa8-d275-f080-0fc8edbe1faf_B",
        "GOB_GoblingKing_Event_HealerPersuasion",
        "MOO_Jailbreak_Event_SpeakToGnomesWarning",
        "UND_DuergarCamp_State_DocksHostile",
        "PLA_ZhentShipment_Agent_001_StartInclusion",
        "57c003e7-0932-6f0c-e655-99025a4abe3a_B",
        "DEN_AttackOnDen_HasMet_TieflingLeader",
        "09983dce-d7d0-c108-506f-dcadc4044b0a_Derryth_SwD_Who",
        "PLA_TavernInvestigation_State_HasMet",
        "ORI_Inclusion_Karlach",
        "UND_BrokenMoonLantern_HasMet",
        "3483cea8-0c11-9432-2421-6b95b9140d95_B",
        "7611fa51-4b1b-3d2c-a8a5-74c04d9db7fa_AnimalHandlingSuccess",
        "UND_DuergarPatroller_03_HasMet",
        "DEN_DruidAttack_HasMet_HideoutLeaderAfterAttack",
        "DEN_TieflingScam_Event_InspectedBox",
        "GnomeAskedHelp",
        "3f665b97-a69e-81c5-68e6-5b931720721e_Part1",
        "CHA_LaezelRecruitment_MindMeld",
        "MOO_Bazaar_BazaarStander_006_JailbreakSuccess_HasMet",
        "SCL_MastiffPoachers_Knows_ContinualFlame",
        "GLO_ScryingEyes_State_FeltGaze",
        "DEN_GuardedEntrance_HasMet_Guard3",
        "DEN_RaidingParty_Event_KanonOpensGate",
        "DEN_AttackOnDen_HasMet_Wyll",
        "PLA_ConflictedFlind_Knows_Gnolls",
        "GLO_TalkedToVoloAboutAbsolute",
        "UND_MyconidCircle_DwarvenAlchemist_BaelenRestoredHasmet",
        "COL_Barracks_State_InterruptConvinced",
        "GOB_Festivities_Trader_HasMet",
        "DEN_AttackOnDen_HasMet_Tiefling004",
        "ZhentDungeon_AgreedBuy",
        "11d70a18-2aae-47a0-1a18-c486858b1eaf_B",
        "DEN_GruntingKid_Event_DisappearIntoWall",
        "GOB_BattleStations_HasMet_WarDrum",
        "GOB_GoblinJolly_HasMet",
        "UND_MyconidCircle_InjuredGnome_ReportedGrymforgeFate",
        "564fac12-29bd-3abe-d380-0a864e688883_Turn1",
        "COL_TadpolingCentre_MemoryImprint_FirstUse",
        "HAV_TieflingSurvivors_Mirkon_EndInclusion",
        "DEN_Apprentice_HasMet_ReactedToShadowDruids",
        "DEN_CampGeneral_HasMet_Gatekeeper",
        "SCL_Drider_HasMet_CaravanHalfOrcCaster",
        "UND_DeadInTheWater_CorpseDisposerCompanion_HasMet",
        "MOO_InfernalVendor_Knows_AskedAboutResearch",
        "UND_MyconidCircle_MyconidSuspicious_HasMet",
        "MOO_Jailbreak_Knows_ToolsNeeded",
        "DEN_Hideout_State_GivenWarning",
        "PLA_Refugee_002_HasMet",
        "UND_DuergarGuard_AtPier_01_HasMet",
        "DEN_DruidAttack_HasMet_PickpocketTraderAfterAttack",
        "SCE_Jergal_HasMet",
        "6d9043f1-e0c3-43de-a895-b87cae60e0c0_C",
        "DEN_RaidingParty_Event_OpenDenGate",
        "GOB_GoblinKingDead_Event_SaidFugitives",
        "HAV_SavingPrisoners_HasMet_Florrick",
        "HAV_EnteringHaven_State_RevealedArtifact",
        "UND_State_LeaderFreedGnomes",
        "41e56e7f-1722-7350-33dc-aefe523650fe_B",
        "d3d3855d-6721-b089-5c1e-d6d255a46fdc_A",
        "PLA_ZhentDungeon_State_SaidPassword",
        "c3207254-eafb-348b-d327-f690af0e213f_startedattackmove",
        "DEN_AttackOnDen_HasMet_TieflingBard",
        "UND_MyconidCircle_BroodingSovereign_State_InParty",
        "DEN_AttackOnDen_HasMet_Kid004Victory",
        "DEN_Hideout_Event_LeaveCountdown",
        "1493763b-776c-959c-259a-89f34f326e04_A",
        "DEN_AttackOnDen_ZenBear_HasMet",
        "SCE_TieflingFollowUp_Knows_MolMissingEyepatch",
        "UND_FurnaceSearch_Knows_Xargrim",
        "HAV_ProdigyLament_Knows_SiblingsInMoonrise",
        "DEN_DevilishOx_State_ArcanaCheckComplete_SwA",
        "fa6e2ce0-64f3-bfb8-fb47-10f50f02cadf_AbsoluteMentioned",
        "MOO_Bazaar_HasMet_Bystander01",
        "DEN_AttackOnDen_Event_PassedByEntrance",
        "DEN_Thieflings_TieflingGuard11_HasMet",
        "GOB_Trader_Knows_Goods",
        "DEN_AttackOnDen_HasMet_Tiefling005",
        "HAV_LiftingTheCurse_Portal_Knows_DontTouchPortal",
        "GOB_GoblinToast_Event_ToastSuccess",
        "COL_Barracks_Mistress_Knows_ThinksPlayerIsThrall",
        "DEN_ZenBear_Helped",
        "FOR_KnifeInMeat_State_KnifeBroken",
        "GOB_Festivities_Goblin001_HasMet",
        "2fb08ca0-df67-8450-3f01-c1e1c2a78b59_A",
        "FOR_GnomeGoblin1_HasMet",
        "DEN_TieflingRefugees_Quest_HuntRewardOffered",
        "DEN_RaidingParty_Event_GatekeeperToLever",
        "DEN_DruidAttack_HasMet_ServantGnome",
        "COL_NecroLab_GrandDesignSculpture_HasMet_LaezelInclusion",
        "FOR_GoblinAmbush_Event_StopSpotting",
        "DEN_AttackOnDen_HasMet_RitualDruid003",
        "ReportedToDerryth_BaelenIsAlive",
        "GOB_Owlbear_HasMet_NotChasing",
        "UND_SocietyOfBrilliance_MindFlayer_HasMet",
        "ba2b225d-e9d4-944d-5b4f-b27dd975c626_A",
        "DEN_AttackOnDenDruidLeader_State_HasMet",
        "6fa2b72d-fde1-4ee3-e1d1-f184232f693d_A",
        "DEN_DruidAttack_HasMet_ParentBAfterAttack",
        "DEN_General_Squirrel_LearnedTerritory",
        "MOO_Assault_HasMet_KethericHound",
        "HAG_Hagspawn_Knows_PromisedRaiseHusband",
        "ORI_Shadowheart_Knows_CurseResistant",
        "PLA_ZhentShipment_Agent_001_Inclusion_Start",
        "GOB_RaiderStupid_HasMet",
        "SCL_HarperScouts_BridgePoint_003_Hasmet",
        "83fdf5e9-88b8-19e7-ba8f-ff075d2222ce_PLA_ZhentShipment_Knows_Gnolls",
        "DEN_Apprentice_Event_RevealedTadpole",
        "DEN_Thieflings_Event_HideoutTrespassCrimeResolved",
        "469a1188-028b-0e6b-b595-fa464baa551e_b",
        "GOB_RaiderBold_HasMet",
        "8f847adf-7b8a-3551-cfc0-4ea0c66a999a_F",
        "FoundCounsellor",
        "UND_DuergarCamp_State_SidedNone",
        "99aa7b78-defd-57bc-eabf-a8aa43a030d9_B",
        "a0afae3d-53b0-192d-d822-c61da104f979_A",
        "SCL_DriderHarper_Melee_000_StartInclusion",
        "DEN_Apprentice_State_ShadowDruidPath",
        "DEN_AttackOnDen_HasMet_LeaderKidVictory",
        "FOR_Monitor_Event_TakeFood",
        "GOB_GoblinToast_ThirdGoblinToasted",
        "FOR_Monitor_State_TransformToDevil",
        "DEN_Thieflings_HasMet_Guard2",
        "DEN_Thieflings_HasMet_Mol",
        "ORI_Karlach_HasMet",
        "MOO_Execution_State_PlayerWantedToAttack",
        "GOB_Festivities_HasMet_Ogre_00",
        "GOB_RatRacket_LocalRat_002_HasMet",
        "4466a73c-607a-4a7e-c1e5-94d549e8f23d_A",
        "ce2b9169-f3e7-e07f-9c58-0fd373d5df9a_PLA_ZhentDungeon_Zhent02_Dead_KnowsZarysisZhentarim",
        "HAV_Minthara_Hasmet",
        "HAV_ProdigyLament_Event_BookGivenAway",
        "DEN_AttackOnDen_Event_EnemiesAppear",
        "FOR_SchoolOgres_Event_AttemptedFirstSkillCheck",
        "GOB_Checkpoint_State_UsedAlarmOnce",
        "HAV_ProdigyLament_Event_Intro",
        "DEN_GoblinScouts_State_SavedDruid",
        "DEN_AttackOnDen_HasMet_Adventurer2",
        "d6df8edb-ac4b-e1d2-794b-6bfd00757cbf_A",
        "MOO_Assault_AssaultFlamingFist_003_ThroneRoomDefeated_HasMet",
        "HAV_ProdigyLament_HasMet_Ide",
        "GOB_GoblinToast_Event_IncludeFourthGoblin",
        "15b0a2b9-2b22-50ab-70c0-ab3042def597_GaleCommentTried",
        "DEN_HarpyMeal_InHideout_WasMean",
        "PreventTradeWithPlayer",
        "DEN_GoblinHunt_Event_GiveRewardBag",
        "1bddcc22-dadd-92c9-4186-4e10ebbfee68_CHA_Crypt_Jergal_DontFollow",
        "UND_AdamantineForge_Knows_Adamantine",
        "DEN_AdventurersQuest_Knows_AradinStory",
        "FOR_Bottomless_State_InteractedWithWell",
        "8baf8087-81b0-de5d-3efa-f74769a625f4_B",
        "ORI_INCLUSION_MINTHARA",
        "DEN_AttackOnDen_HasMet_ChefAndSon",
        "ORI_Inclusion_Astarion",
        "UND_DarkJusticiarsCorpses_Recognized",
        "fd9ed69f-475f-def2-bae0-25065ccc4143_B",
        "GLO_Florrick_State_KnowsWyllDevil",
        "GLO_Desire_State_FreedInAct1",
        "MOO_MoonriseTower_State_Outcast",
        "DEN_DruidLair_Knows_DruidsAlliance",
        "1591cb60-9e65-980a-c49e-69f68b958a1d_B",
        "GOB_Checkpoint_State_GainedAccess",
        "FOR_UnfortunateGnome_Bargaining",
        "DEN_AttackOnDen_HasMet_ProdigyBrother",
        "UND_Elevator_Event_GotWarning",
        "UND_FearfulRothe_Event_MakeDuergarHostileInDialog",
        "GOB_GuardUpset_State_ConvincedTrueSoul",
        "HAV_LiftingTheCurse_Portal_HasMet",
        "DEN_CapturedGoblin_State_InTransit",
        "GLO_Thieflings_State_PCShookPickpocketSister",
        "GOB_GEB_TorturedAdventurer_Assault_HasMet",
        "DEN_GroveConflict_Event_StoleIdolAttempt",
        "00a82e63-fae8-cc02-0b2b-314c9d21ce6c_F",
        "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_NoFFPresent",
        "MOO_CatBusiness_HasMet_SwA",
        "29ddc96b-303b-373d-2b6f-37ae4e8d534b_A",
        "DEN_Thieflings_Event_CallGuard",
        "SCL_Drider_HasMet",
        "DEN_AdventurersQuest_RaidAdventurerAtCorps_HasMet",
        "UND_FearfulRothe_HasMet_Rothe_001_SpeakWithAnimals",
        "UND_FearfulRothe_State_BefriendedRothe",
        "0d6dbe21-1644-b9bf-8297-dd60d820bd99_B",
        "DEN_GuardedEntrance_HasMet_LiedAboutDeath",
        "FOR_ApothecaryGoblins_Goblin01_HasMet",
        "HAG_AnimalIllusion_Revealed_HasMet1",
        "DEN_TieflingScam_Event_TalkedAboutBox",
        "SCE_Alfira_Event_GaveShiningDawn",
        "0276d317-8b34-66e2-48e2-6b9d69d6830b_F",
        "UND_Automaton_Knows_AskedPlace",
        "HAV_Florrick_Event_RavengardInTowers",
        "CRA_DeadFisherman2_Dead_WhatDoing",
        "GOB_GoblinToast_Event_IncludeThirdGoblin",
        "DEN_AttackOnDen_HasMet_PickpocketTrader",
        "COL_TadpolingCentre_Knows_IdentifiedDarkUrgePod",
        "GOB_GoblinThroneCheckpoint_Pass",
        "HalsinLeft_KilledLeaders",
        "DEN_AttackOnDen_HasMet_Halsin",
        "c167cdf3-7201-e55c-222f-773c758e1000_IncludedHusband",
        "HAG_HagLair_Victim_001_HasMet",
        "512d5ba7-a884-f1f5-5d26-fad488c07e2c_C",
        "MOO_Audience_State_KethericToldToKneelAtAltar",
        "PLA_StuckDwarf_HasMet_FoundWife",
        "GOB_SpiderNest_State_SpidersChill",
        "PLA_Tavern_Knows_DukeInTavern",
        "ORI_INCLUSION_KARLACH",
        "PLA_ZhentDungeon_State_AgentFreed",
        "UND_FurnaceSearch_Event_DuergarMentionsForge",
        "GLO_Moonrise_Knows_GoblinsCapturedADuke",
        "DEN_DruidLair_Knows_FoundingGrove",
        "FOR_Monitor_HasMet_Dinner",
        "AskedCircle",
        "SCL_Drider_HasMet_CaravanFirstTime",
        "03b6aa2e-e805-3a51-6bdb-d92f0b0da84a_UND_MyconidCircle_ServantHookHorror_01_RecognisedMonster",
        "DEN_GuardedEntrance_HasMet_Protester1",
        "MOO_Assault_AssaultHarper_002_ThroneRoomDefeated_HasMet",
        "ToldAboutTadpole",
        "DEN_DruidAttack_HasMet_Tiefling010AfterAttack",
        "f3f236b2-37a1-a0a2-5855-184ead7b1286_C",
        "GOB_DrowCommander_State_Hostile",
        "UND_ArguingGnomes_Event_LearnedAboutPhilomeen",
        "HAV_DevilishOx_LastLight_HasMet_SwA",
        "MOO_Assault_AssaultFlamingFist_004_PostAssault_HasMet",
        "UND_PetrifiedDrow_Knows_WizardIsDhourn",
        "ORI_Inclusion_End_ShadowHeart",
        "MOO_Assault_HasMet_HarperQuartermaster",
        "ORI_Shadowheart_Knows_SeenTempleVista",
        "FOR_BugBearLove_Event_CoupleHostile",
        "HAG_AnimalIllusion_Narrator",
        "SCL_DriderHarper_Ranger_001_StartInclusion",
        "DEN_Thieflings_State_DoneChase",
        "UND_ElevatorGuard002_HasMet",
        "ThankedFreed_BeldronThulla",
        "ORI_INCLUSION_MINSC",
        "DEN_Thieflings_Knows_PlayerRobbed",
        "DEN_ShadowDruid_HasMet_Opposed",
        "GLO_TadpoledCount1",
        "HAV_ProdigyLament_Brother_RolanDead_HasMet",
        "DEN_DruidAttack_HasMet_ExcitedBoar",
        "3b2ae6b6-ca7e-d905-0430-128078b3119f_B",
        "720e85fb-cc00-b81a-efff-343a04ca221e_A",
        "DEN_DevilishOx_MeetAtDruidsGrove_HasMet_SwA",
        "UND_ClericPetGrave_HasMet",
        "UND_MyconidCircle_DirectToSovereign_HasMet",
        "UND_GnomeWorkerLumpy_HasmetRescued",
        "DEN_GroveConflict_Quest_Learnt3LeadersTwoNames",
        "SCE_GnomeFollowUp_Wulbren_UneasyAboutPlayer",
        "HAV_SavingPrisoners_Knows_CapturedTieflings",
        "d97f72ff-8fb1-8a4c-f169-89751bd6e125_b",
        "ORI_INCLUSION_RANDOM",
        "HAG_Well_Event_DrinkWell",
        "a7407f82-add0-9f6d-e4e6-78b9c39195a6_C",
        "ORI_INCLUSION_WYLL",
        "4118b185-9468-2295-93f3-9d6eafd8fb8a_Second_Disabled",
        "FOR_GoblinAmbush_State_DrowAutoPass",
        "DEN_TieflingLeader_Quest_GobHuntResponded",
        "GLO_Halsin_Event_TalkedWithDruidLeader",
        "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionRefused",
        "HAV_ProdigyLament_State_ToldStory",
        "ORI_Inclusion_Gale",
        "DEN_RitualDruid_HasMet_Left5",
        "PLA_Desire_Quest_TriedForceDoor",
        "DEN_Thieflings_Pickpocket1_PCIsNotAChump",
        "MOO_InfernalVendor_State_AskedAboutDeals",
        "DEN_AttackOnDen_HasMet_Refugee002",
        "fb0e13b6-cc68-d496-51c2-4594f4f5bf40_TauntHer",
        "182bb613-b70c-5e7c-b3ea-ea14e02d1fab_C",
        "GOB_PainPriest_Event_PickScourge",
        "9378e194-3135-f75c-b557-457fa52db9f9_A",
        "DEN_GroveConflict_Knows_HeardAboutRitual",
        "d0423454-cc51-ae8e-5096-cffd1aac9f75_A",
        "FOR_BugBearLove_Knows_Lovemaking",
        "MOO_Assault_AssaultHarper_001_ThroneRoomDefeated_HasMet",
        "ORI_INCLUSION_LAEZEL",
        "DEN_DruidAttack_HasMet_SonOfChefAfterAttack",
        "MOO_Docks_Knows_TadpoleVats",
        "HAG_HagLair_TalkingDoor_HasMet",
        "ORI_Inclusion_ShadowHeart",
        "HAV_TieflingSurvivors_Mirkon_StartInclusion",
        "1ea9e483-36a9-82b1-852f-b901ec25552a_a",
        "DEN_Prodigy_HasMet",
        "PLA_ZhentShipment_State_TalkedAfterKilledGnolls",
        "551618bc-83c9-52cc-0ca7-37c224446cf7_Local1",
        "GOB_Bravado_State_Goblin3Hasmet",
        "SCE_GnomeFollowUp_HasMet_WulbrenAlive",
        "SCE_TieflingFollowUp_Ide_HasMet",
        "SCL_Drider_Event_PlayersAttackHarpers",
        "FOR_BottomlessWell_InteractWithWell_Knows_LookedDown",
        "ORI_INCLUSION_GALE",
        "DEN_GuardedEntrance_HasMet_Parents",
        "0cca6d90-e7d5-b1d6-8d9e-f6b5b8f65006_A",
        "GOB_GoblinToast_Event_IncludeSecondGoblin",
        "ca797aab-5a73-7ec5-edb7-022122573b39_B",
        "HAV_ProdigyLament_Sister_RolanDead_HasMet",
        "SCL_DriderHarper_Caster_000_StartInclusion",
        "DEN_AttackOnDen_Event_HeftyTieflingQuip",
        "HAV_ProdigyLament_HasMet_Rolan",
        "MOO_InfernalVendor_Event_SellingBlood",
        "MOO_WallTentacle_HasMet_Mig",
        "GOB_WolfPens_Event_HalsinLeftParty",
        "GLO_Factions_Knows_Harpers",
        "SCL_Drider_HasMet_HarperMelee000",
        "MOO_UpperFloor_HasMet_Guard01",
        "FactionHostileToPlayerGroupAfterDialog",
        "MOO_Jailbreak_HasMet_ProdigySister",
        "ORI_Laezel_Quest_FoundZorru",
        "GOB_GoblinPriest_Event_FreedFromChains",
        "PLA_StuckHalfElf_Knows_MentionedDowry",
        "SCL_Drider_AtTower_HasMet",
        "21e0890e-7019-66a3-1956-125405f96d7c_A",
        "a63e4af2-6edc-188a-efdf-b9ffc5460fc5_LOCAL_B",
        "SCL_Drider_Event_ResumeEscort",
        "DEN_DruidAttack_HasMet_DruidOpposedAfterAttack",
        "FOR_PriestOfTheConqueringGod_Cultists_Knows_Mission",
        "DEN_Apprentice_Event_RemoveBirdExhaustion",
        "DEN_CampGeneral_PCGotLore",
        "SpokeToBrothers",
        "5f09c70a-153e-77e8-731c-5c532e635809_B",
        "DEN_DruidAttack_HasMet_GatekeeperAfterAttack",
        "b951f0e6-65af-843d-a666-f5284343cc67_MentionedTrueSoul",
        "SCL_Drider_HarperCaster_000_AtAmbush_HasMet",
        "LearnedGroveSituation",
        "DEN_RaidingParty_Event_UnsheatheForFight",
        "ReachedWife",
        "GOB_Festivities_BugbearSleeper_00_HasMet",
        "MOO_Jailbreak_State_WulbrenAlerted",
        "4ca79daf-c389-2693-bd63-4e758972e2da_B",
        "GLO_TadpoleIntro_NPC",
        "DEN_Thieflings_Knows_KidsThieves",
        "MOO_Execution_Guard_002_Hasmet",
        "30d43adb-dcaf-c0f3-d432-af96a1c2e1ea_spoketowulbren",
        "DEN_ShadowDruidLeaderPostGoblins_State_HasMet",
        "DEN_GroveConflict_Knows_LeaderNameKing",
        "153f4e14-c830-5653-1638-7495b0b9fc12_A",
        "TemporaryHostilityAfterDialog",
        "0884581d-9f92-0a34-9440-6a54c0813bbe_ProceedToSecondStage",
        "DEN_Prodigy_HasMet_Brother",
        "GLO_Absolute_Knows_TrueSoul",
        "UND_GnomeForeman_UnfortunateGnome_InclusionStart",
        "HAV_WrootRequest_State_ReunionDone",
        "DEN_WeepingTree_HasMet_Bear",
        "PLA_ZhentDungeon_Dog_03_HasMet",
        "a6f2350b-ecc4-bf6c-0c73-dcb37f9e9690_B",
        "GOB_DrowCommander_Knows_DrowLeader",
        "13d9f9ef-d1da-1d1d-287f-7a1763d72c38_B",
        "ORI_Shadowheart_State_IdolHint",
        "ea88dfe9-ff39-9b98-ae03-48d7fdf2708e_A",
        "DEN_AttackOnDen_HasMet_Refugee004Victory",
        "ORI_Inclusion_End_Astarion",
        "OrderedKillDruids",
        "DEN_DevilishOx_MeetAtDruidsGrove_State_Peaceful",
        "GLO_PixieBell_HasMet",
        "DEN_AttackOnDen_HasMet_RitualDruid002",
        "PLA_StuckHalfElf_StartInclusion",
        "DEN_Thieflings_Pickpocket2_HasMet",
        "375a6f59-375f-f5eb-5f42-60de2dc6aa6b_B",
        "GOB_Checkpoint_Event_WarnedAtCliff",
        "PLA_ZhentShipment_State_Talked",
        "RefusedHelpBrothers1",
        "GOB_PainPriest_Event_ReactToMocking",
        "MOO_Jailbreak_Event_SpeakToTieflingsWarning",
        "DEN_DruidLair_Knows_RuneAppearance",
        "SCL_HarperScouts_ShadowCreatures_HasMet",
        "GLO_Hag_KnowsAboutSurrogate",
        "MOO_Jailbreak_Event_ForceBoatLeave",
        "MOO_Assault_AssaultFlamingFist_002_HasMet",
        "81f2a55d-d317-761f-f6a0-fe97ad6d5288_C",
        "UND_DuergarCamp_Knows_NereIsTrapped",
        "DEN_SenderBird_Event_TakeOff",
        "FOR_GnomeGoblinsPacified",
        "DEN_DruidAttack_HasMet_ChefAfterAttack",
        "ParentLied",
        "f8e3175b-5587-d6cd-2174-e5a3e9ca4890_A",
        "SCL_Drider_HasMet_CaravanHalfOrcMelee",
        "7256657b-1386-989f-0262-c6530e03a9fb_AskedWhy",
        "DEN_General_Inclusion_End_Pickpocket",
        "DEN_WeepingTree_Bear_Upset",
        "UND_TheDrowNere_Mutiny_InclusionStart_GnomeSilly",
        "bde7a4f1-933f-f6ce-4a3e-4b1f29f83704_B",
        "UND_TheDrowNere_Event_HadMindMeld",
        "b156dddb-036d-8d82-5a7a-8fd110e48cb4_B",
        "7c651195-e50f-fd75-7a35-f6f9a8d80e8d_B",
        "57c003e7-0932-6f0c-e655-99025a4abe3a_A",
        "DEN_YoungLovers_State_MetPlayer",
        "5310a408-76a3-3498-cc26-ae866871188b_Third_Disabled",
        "HAV_General_HarperScout_001_HasMet",
        "7ffcf0de-e30b-ef58-fcc5-8d3a1482fa59_b",
        "GLO_Absolute_Knows_GoblinsWorship",
        "DEN_Weaponsmith_Knows_Elturel",
        "SCL_DriderHarper_Ranger_000_StartInclusion",
        "DEN_ShadowDruid_Event_ReactionDone",
        "CHA_Crypt_Event_JergalAppears",
        "PLA_ZhentDungeon_Zhent05_HasMet",
        "DEN_TieflingLeader_HasMet_ReactToDruidAttack",
        "ORI_Laezel_State_StartedTieflingsSceneAtCage",
        "HAV_Siege_State_RefusedJaheira",
        "DEN_BirdSender_HasMet",
        "UND_MyconidCircle_DeepRothe_BaelenAteShroom_Hasmet",
        "GOB_BattleStations_Event_ToStation",
        "1fbc1449-b85a-90a5-3f67-a8898acbd1d0_B",
        "DEN_AttackOnDen_HasMet_Trainer",
        "GOB_GoblinHeretic_FreeToGo",
        "GOB_GoblinThroneCheckpoint_State_NonCharlatanAccess",
        "1c74b01f-5dcf-8107-b384-204d341ed9d5_OnlyOnce",
        "DEN_Thieflings_State_MessedWithMolsKids",
        "PLA_Refugee_001_HasMet",
        "UND_MyconidCircle_State_GainedAccess",
        "DEN_DruidAttack_HasMet_ParentAAfterAttack",
        "GOB_Checkpoint_State_GoblinsToldLeaders",
        "UND_DuergarCamp_Mutineers_HasMet",
        "LearnedDukeMissingCounsellor",
        "SCL_Drider_State_DeadCultistSituationDefused",
        "SCE_JergalDebrief_Event_WhyHere",
        "94cd662c-844b-4dcc-ffdc-0b9a8da32bcc_BarcusSpokeUp",
        "DEN_AttackOnDen_HasMet_LairDoor",
        "RikkaAskedQuest",
        "DEN_General_Event_TriedNudgingBear",
        "DEN_HasMet_SoloParentB",
        "DEN_RitualDruid_HasMet_Left2",
        "GOB_Torturers_HasMet_Goblet",
        "16f542b8-5ef8-49a4-33e7-495ec95944b2_B",
        "FOR_BugbearLove_State_InterruptedCouple",
        "DEN_AttackOnDen_Servant005_Answered",
        "UND_BroodingSovereign_State_RefusedCircle",
        "HAV_Siege_Intro_DoSetup",
        "MOO_Docks_HasMet_OberverTadpolePowers",
        "DEN_Thieflings_HasMet_Trainee1",
        "23867c04-54b8-6ee9-a6bf-55a1a4c8b75d_B",
        "UND_DeadInTheWater_CorpseDisposerLeader_HasMet",
        "MOO_Assault_AssaultHarper_003_ThroneRoomDefeated_HasMet",
        "DEN_Tiefling011_State_Met",
        "DEN_Thieflings_PersuadedPickpocket",
        "GOB_GoblinToast_Event_NoMoreRefills",
        "ORI_Inclusion_Random",
        "MOO_Bazaar_HasMet_Guard00",
        "PLA_KarlachRecruitment_State_PersuasionSucceeded",
        "DEN_Thieflings_State_WitnessedArgument",
        "200aa519-5963-3b2d-3396-d1dcbb013702_AskedStrategy",
        "3b911555-52e5-7791-d2ac-44fe62465fa1_Loop3",
        "MOO_Assault_AssaultFlamingFist_001_ThroneRoomDefeated_HasMet",
        "GOB_RaiderCunning_HasMet",
        "GOB_Eye_HasMet",
        "DEN_AttackOnDen_HasMet_Refugee003",
        "DEN_Weaponsmith_HasMet",
        "34910f06-fac0-085f-b41a-337d0dfad85a_A",
        "ORI_Inclusion_Laezel",
        "GOB_GoblinToast_SecondGoblinToasted",
        "9e2ef14b-1a2f-4edc-3f78-7e3a27967e5c_C",
        "DEN_AttackOnDen_HasMet_ScoutCaptive",
        "PLA_KarlachRecruitmentTollhouse_State_HostilitiesBegan",
        "UND_PetrifiedDrow_Knows_MemoryCrystal",
        "MOO_WallTentacle_Daisy_Interacted",
        "UND_FairyRings_Dead_AskedDrowIdentity",
        "ZevlorRewarded",
        "COL_TadpolingCentre_Knows_ImpliedDarkUrgePod",
        "SCL_Drider_HasMet_CaravanGoblinRanger",
        "8f819d41-e936-8042-1935-56de252d6c7f_B",
        "GOB_PainPriest_Penanced",
        "b618166c-99f4-1c7a-02b7-32f0f0fbe420_LocalA",
        "SCE_TieflingFollowUp_Event_GiveShiningDawn",
        "DEN_AttackOnDen_HasMet_Servant004Victory",
        "DEN_AttackOnDen_HasMet_Mule1",
        "DEN_TieflingScam_HasMet",
        "MOO_Docks_State_PersuasionSuccess",
        "DEN_AttackOnDen_HasMet_Kid003",
        "UND_FearfulRothe_Event_ConvincedRotheToAttackDuergar",
        "MOO_BugBearVendor_State_FoundMotive",
        "PLA_FlamingFist7_InnBurntDown_HasMet",
        "1fb21305-2e50-068c-0243-64536fe2bd6c_A",
        "DEN_AttackOnDen_HasMet_Tiefling003Victory",
        "SCE_AncientFist_ToldStory",
        "0d9d0064-babd-6e83-6ea6-5b78afb0413c_B",
        "DEN_GoblinScouts_HasMet_Captive",
        "GLO_Absolute_Knows_Symbol",
        "PLA_ConflictedFlind_Event_MindControl_KillHerself",
        "HAV_BackupLeader_HasMet",
        "GLO_SpeakWithDead_Event_QuestionAsked",
        "HAG_Hah_MaskedVictim2_HasMet",
        "DEN_DruidAttack_HasMet_ZenBear",
        "SCL_Drider_Event_CaravanGoesHostile",
        "MOO_Audience_HasMet_WaitingKetheric",
        "SCL_Drider_State_AfterAmbushSituationDefused",
        "GOB_PainPriest_Event_BadReaction",
        "MOO_GuardRoom_HasMet_Guard01",
        "SCL_ServantOfTheRAven_Servant_HasMet",
        "UND_BrokenLantern_State_TriedArcane",
        "461152ff-16c3-2617-f8af-7ddb5681820b_b",
        "MOO_FlamingSpy_HasMet",
        "ed70fdfc-3d7b-7753-1171-957f7316fe55_B",
        "MOO_EntranceCheckpoint_Guard2_HasMet_AllowedIn",
        "SidedTieflings",
        "DEN_GroveConflict_Knows_KaghaRequestedPlayers",
        "PLA_StuckHalfElf_State_PlayerAngered",
        "SCL_Drider_Event_StartHarpersAmbush",
        "UND_BroodingSovereign_State_AskedCircle",
        "DEN_AttackOnDen_HasMet_Trainee001Victory",
        "UND_MyconidCircle_State_FirstGreetingDone",
        "6bde1237-aa43-36d3-9e53-ec1092198541_C",
        "2bc86ee2-13ec-992e-993a-8b2fb705bd0a_B",
        "UND_DarkLake_State_HostileResolution",
        "c3d825d1-49b8-9ae2-4554-4fc1f55d2eee_LocalA",
        "COL_TadpolingCentre_Event_PurgePods",
        "DEN_ZhentAgent_02_Inclusion_Start",
        "DEN_AttackOnDen_HasMet_ProdigySister",
        "HAV_HarperScouts_Event_SawYonasFuneral",
        "ORI_Shadowheart_Event_DarkJusticiarHint",
        "HAV_General_HarperScout_000_HasMet",
        "873bc4e0-3d3c-1eac-903b-e94920fd6306_sawgithyanki",
        "DEN_CampGeneral_RufusHasMet",
        "DEN_Apprentice_HasMet",
        "DEN_General_Mule2_HasMet",
        "DEN_AttackOnDen_HasMet_ApprenticeVictory",
        "MOO_Bazaar_State_TalkedAboutPilgrims",
        "GLO_PixieBell_Event_TransformsIntoDeepRothe",
        "98423a2d-7b47-e379-6526-c435773e3cff_B",
        "DEN_Thieflings_Event_PlayerNotInvolved",
        "HAG_HagLair_Knows_DoorWasAlive",
        "ThankedFreed_Beldron",
        "DEN_AttackOnDen_HasMet_Griefling",
        "4d9f1cb5-200f-c998-657a-8d04f5c93c74_B",
        "DEN_AttackOnDen_HasMet_RitualDruid005",
        "4b4d2992-abb5-bd1b-9593-feb68eddf682_B",
        "GLO_Ketheric_State_AngryAtPlayer",
        "ORI_Karlach_Knows_DammonWorkedInHell",
        "ORI_Inclusion_End_Random",
        "DEN_Squirrel_HasMet",
        "ORI_INCLUSION_HALSIN",
        "SCL_OliversDiary_State_SecondRound",
        "DEN_ShadowDruid_State_HadSelfReflection",
        "DEN_Thieflings_Pickpocket1_HasMet",
        "PLA_FlamingFist7_Knows_AskedWhatHappened",
        "DEN_DruidAttack_HasMet_BardAfterAttack",
        "GOB_PainPriest_State_NeedMoreHP",
        "FOR_BugBearLove_Event_OpenDoor",
        "DEN_Thieflings_State_PCSawKidThievesGettingCaught",
        "260f61d5-60df-da35-608b-a9856291b143_PlayerKnowsOrinKilledZevlor",
        "916a75f0-23d8-f05b-449d-d926d69fe782_FailedCheck",
        "MOO_Jailbreak_HasMet_AngrySister",
        "SCE_GnomeFollowUp_Wulbren_HasMet",
        "DEN_druidservant_005_HasMet",
        "CHA_Jergal_HasMet",
        "ORI_Inclusion_End_Gale",
        "PLA_ConflictedFlind_Hyena_001_HasMet",
        "StartedAlt",
        "MOO_Audience_HasMet_AccessCultist",
        "DEN_RaidingParty_Adventurer2_HasMet",
        "GLO_Thieflings_State_PickpocketKidGotHit",
        "GOB_WolfPens_Event_HalsinLeavesGoblinCamp",
        "e6738c9d-060d-c901-b945-4d49ca303d5b_SuccessfullyReadTracks",
        "DEN_GruntingKid_HasMet",
        "16193247-ccea-1974-45ec-e8229a7de4ef_B",
        "DEN_TieflingLeader_Quest_GobHuntDeclined",
        "DEN_RaidingParty_Event_GoblinsAppear",
        "DEN_GuardedEntrance_HasMet_Guard1",
        "GOB_PainPriest_Event_FirstHitDone",
        "ORI_Inclusion_End_Laezel",
        "SCL_Drider_HasMet_CaravanGoblinMelee_000",
        "DEN_General_Event_ElevatorBearMoves",
        "DEN_CapturedGoblin_OfferedRevenge",
        "DEN_General_Inclusion_Pickpocket",
        "DEN_RitualDruid_HasMet_Left4",
        "GOB_DrowCommander_HasMet",
        "GLO_Jergal_State_OutOfTomb",
        "HAV_ProdigyLament_Knows_AboutBook",
        "DEN_TieflingLeader_State_KaghaResolved",
        "f3afb428-73fc-2e5c-057b-2e0e5a1b2f1c_B",
        "ORI_DarkUrge_Knows_MetIsobel",
        "DEN_AttackOnDen_HasMet_Stargazer",
        "DEN_Thieflings_Event_ShookThief",
        "DEN_AttackOnDen_HasMet_Refugee001",
        "b70d5139-9980-efc6-3ba3-fe2eb56ab2e0_B",
        "HAV_LoneLover_HasMet_DanisUpset",
        "DEN_DruidAttack_HasMet_PetWolf",
        "26071d89-33af-8eac-3c05-ee8dca91338d_who",
        "DEN_Apprentice_UserShortcut",
        "ReflectedKagha",
        "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionAsked",
        "FOR_GoblinAmbush_GoblinsPacified",
        "MOO_Bazaar_BazaarStander_007_AudienceReady_HasMet",
        "MOO_BugBearVendor_HasMet_BazBugBear",
        "932401b1-7763-7fd7-bee1-8731fe62084f_DeadThree",
        "HAV_WrootRequest_Event_TalkedToWulbrenInHaven",
        "DEN_DruidAttack_HasMet_GrieflingAfterAttack",
        "DEN_GuardedEntrance_State_ClearToPass",
        "GOB_Checkpoint_State_GuidedByCapturedGoblin",
        "DEN_RaidingParty_Event_GoblinRaidFight",
        "ORI_Inclusion_Wyll",
        "RefusedCircle",
        "DEN_TieflingScam_Knows_Scam",
        "3174fc37-851b-0494-321e-b606f7e43901_B",
        "DEN_BirdSender_Knows_AskedAboutBird",
        "DEN_DevilishOx_MeetAtDruidsGrove_Incapable",
        "DEN_Thieflings_CaveGuard_002_HasMet",
        "GOB_PainPriest_Knows_PenanceIsPain",
        "6bba3537-3756-eb27-a08a-a8596d765f2e_C",
        "28259eb0-5f20-5094-45f1-3292253ae1ed_C",
        "CHA_LaezelRecruitment_Event_LaezelHostile",
        "DEN_GoblinScouts_SavedDruid",
        "ArrivedAtGrove",
        "DEN_GruntingKid_Event_AskedCanTalk",
        "DEN_Apprentice_Event_GiveReward",
        "acc081f3-204a-2f29-a3bb-6d33ff784c39_C",
        "DEN_AttackOnDen_GrieflingFriend_Knows_Kelemvor",
        "GOB_PainPriest_Event_Mercy",
        "c68c5474-226f-4b47-b327-a22274e360a0_B",
        "a2fa1f0f-b9b5-f8bf-bf27-b11194b8502f_B",
        "ORI_DarkUrge_Knows_ButlerDiedReaction",
        "HAV_LoneLover_Event_ReunionDone",
        "55452e03-17c6-9a9d-072b-80043381c98b_A",
        "UND_LoneDuergar_Event_WaitingForMainDialog",
        "OrderedBreachInn",
        "MOO_Jailbreak_HasMet_WulbrenOutcast",
        "DEN_RitualDruid_HasMet_Pacified3",
        "DEN_ShadowDruidRats_Event_RememberedLetter",
        "DEN_DruidAttack_State_PrepAfterDeathOfDruids",
        "PLA_Desire_Event_HasMet",
        "4103e544-e1db-525f-81ec-b5dfa71907d7_WantNereOut",
        "PLA_StuckHalfElf_Event_ToldQuestion",
        "UND_BroodingSovereign_Event_Enlarged",
        "f108995b-14f4-7823-d218-790177a93da8_B",
        "6a98f294-9f4f-d0b0-1cba-706f1cb15009_Local1",
        "c76693dc-e4a4-5631-a9b5-8abc6b4ab36e_DarkUrgeThreatened",
        "GOB_WolfPens_Worg_001_HasMet",
        "MOO_Audience_Skeletons_SpokeTwice",
        "DEN_DruidAttack_HasMet_WeaponsmithAfterAttack",
        "MOO_Jailbreak_Event_BoatLeavesWithoutPlayers",
        "SCL_Drider_State_StartedAmbushQuestWithHarpers",
        "GLO_Volo_HasMet",
        "OpenedSarcophagus",
        "Counsellor_RefusedHelp",
        "02455563-e119-58e5-1fe7-eb46fe381d30_A",
        "GOB_GuardUpset_HasMet",
        "GOB_RatRacket_LocalRat_001_HasMet",
        "c5f62c4b-fb04-1505-c35b-63119d96b127_First_Disabled",
        "698f5a3b-6d88-3d9e-ee4f-26d9c1fc5b6b_B",
        "UND_TheDrowNere_State_KilledGnomeSerene",
        "COL_General_Knows_ColonyIsIllithid",
        "SCL_Harpers_Event_ShowHavenLocation",
        "GLO_VoloBallad_MetGuardPrison",
        "PLA_ZhentDungeon_Zhent01_HasMet",
        "7cd519b5-df41-47c0-1d53-6c315224e489_A",
        "90a73000-b6ed-ad55-7eae-f9a6f8f00f55_A",
        "ORI_Karlach_HasMet_DammonUnavailable",
        "GOB_CheckpointBackup003_HasMet",
        "DEN_TieflingScam_Event_FoundOutLies",
        "4ca7d7ab-9b51-31d8-22be-0e26b2a7f3ed_A",
        "UND_ArguingGnomes_Quest_Accepted",
        "DEN_Thieflings_HasMet_Chef"
      ]
    },
    "Shar": {
      "chapter_id": "Act2_Shar",
      "scenario_sequence": [
        "sha_academyaltar",
        "sha_familiarface",
        "sha_raphael",
        "sha_monkamulet",
        "sha_sharwrath",
        "sha_mausoleum",
        "sha_displacer",
        "sha_orthonlair",
        "sha_gauntlet",
        "sha_disc",
        "sha_pad",
        "sha_necromancer",
        "sha_merregon",
        "sha_corpsepit",
        "sha_cloaker",
        "sha_orthonbed",
        "sha_trapjunction",
        "sha_objectofdarknesstrial",
        "sha_crypt",
        "sha_doublesencountertrial",
        "sha_nightsongprison",
        "sha_fleshgolem",
        "sha_lastjusticiar",
        "sha_orthonslair",
        "sha_voiceofshar",
        "sha_ngb",
        "sha_orthon",
        "sha_monitor",
        "sha_pathofdarknesstrial",
        "sha_spidermeathunk",
        "sha_ad",
        "sha_trials",
        "sha_entrance",
        "twn_shadowheart",
        "sha_silentlibrary",
        "twn_templeentrance",
        "sha_barracks",
        "sha_tadpoledskeletons",
        "sha_hq",
        "sha_nightsong"
      ],
      "scenario_results": {
        "sha_academyaltar": {
          "scenario_name": "sha_academyaltar",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "12"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "12",
                "speaker": "Narrator",
                "text": "*A small prickle of dread finds your heart as you look upon the altar.*",
                "node_type": "normal",
                "checkflags": [
                  "SHA_AcademyAltar_State_HasDebuff"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "CinematicNodeContext: The player stands before an altar of Shar."
              }
            ]
          },
          "session_synopses": {
            "": "The player discovers an altar in the temple of Shar. They can choose to pray at it, with the chance to receive a buff or debuff depending on the outcome of a religion check. Shar and Selune tags automatically get buff and debuff respectively. Avatar Shadowheart gets a unique and ambigous outcome, casting some doubt on her standing with her goddess."
          }
        },
        "sha_familiarface": {
          "scenario_name": "sha_familiarface",
          "session_sequence": [
            "AD_MonitorLeaves"
          ],
          "paths": {
            "AD_MonitorLeaves": [
              "AD_MonitorLeaves_0"
            ]
          },
          "node_data": {
            "AD_MonitorLeaves": [
              {
                "id": "AD_MonitorLeaves_0",
                "speaker": "Raphael",
                "text": "You cannot harm me, but you can irritate me. Goodbye.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: mildly irritated, said right before he teleports away"
              }
            ]
          },
          "session_synopses": {
            "AD_MonitorLeaves": "Raphael leaves while at the front of Shar Temple, in case he is attacked."
          }
        },
        "sha_raphael": {
          "scenario_name": "sha_raphael",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "73",
              "155",
              "110",
              "11",
              "41",
              "147",
              "87",
              "91",
              "103",
              "85",
              "148",
              "125",
              "28",
              "157",
              "61",
              "8",
              "44",
              "30",
              "83",
              "138",
              "161",
              "154",
              "59"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "73",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "155",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: (Cine) We see Raphael casually leaning against a large tomb very near to the Thorm family catacombs entrance. When he sees us , he stands normally, smiles and greets us theatrically with a limerick."
              },
              {
                "id": "155",
                "speaker": "Raphael",
                "text": "Our hero thought but of treasure ahead,<br>Did not consider the peace of the dead...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_Astarion"
                ],
                "goto": "",
                "link": "28",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "110",
                "speaker": "Raphael",
                "text": "Through the dark they went creeping,<br>And awoke what was sleeping...<br>",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "28",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "11",
                "speaker": "Raphael",
                "text": "A new grave they dug, which they themselves fed.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "28",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "41",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_Karlach"
                ],
                "goto": "",
                "link": "28",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "147",
                "speaker": "Karlach",
                "text": "Ooh, spooky.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "28",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Sarcasm (talking to Raphael)"
              },
              {
                "id": "87",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_End_Karlach"
                ],
                "goto": "",
                "link": "28",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "91",
                "speaker": "Player",
                "text": "A warning, no less. Don't tell me you're worried about me.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "85",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "103",
                "speaker": "Raphael",
                "text": "Merely protecting my assets.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "85",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "85",
                "speaker": "Raphael",
                "text": "I've grown quite fond of you, you know - in my way. I thought it only fair to warn you about the dangers ahead.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "28",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: (Cine) When he says ‘the dangers ahead’ he gestures generally behind him, towards the entrance of the Thorm family catacombs."
              },
              {
                "id": "148",
                "speaker": "Player",
                "text": "So you expect me to turn and walk away?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "28",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "125",
                "speaker": "Raphael",
                "text": "Don't be absurd.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "28",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "28",
                "speaker": "Raphael",
                "text": "It would be pointless of me to try to bar you from entering, but I can... set the scene as it were. Prepare you for your role.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "4",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "157",
                "speaker": "Player",
                "text": "Fine, paint me a picture.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "94726285-a32b-9d8e-579f-5aa051e986b7_Picture"
                ],
                "goto": "",
                "link": "4",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "61",
                "speaker": "Raphael",
                "text": "There is a stage down in the dark upon which a great drama has suspended itself in time.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "4",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "8",
                "speaker": "Raphael",
                "text": "Its actors dwell there still, mired in the languor of their long-tired scenes.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "4",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "44",
                "speaker": "Raphael",
                "text": "If you, however, through the dark go creeping and awake what is sleeping...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "4",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "30",
                "speaker": "Raphael",
                "text": "Chances are many more graves than yours alone will soon be fed.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "4",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "83",
                "speaker": "Player",
                "text": "Enough of your jibber-jabber. Begone.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "138",
                "speaker": "Raphael",
                "text": "As you wish.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "161",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "154",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "154",
                "speaker": "Raphael",
                "text": "I'll be pleased to follow up on your little escapades in your camp one of these nights. Should you live to tell your tale, that is.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SHA_Orthon_Knows_RaphaelWillMeetAtCamp"
                ],
                "goto": "",
                "link": "109",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "59",
                "speaker": "Raphael",
                "text": "Until then - adieu.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "": "Raphael is encountered at the beginning of the Shar Temple. He briefs the player about the Orthon - the devil he mentions - either telling them that he personally wants it dead, or that it is between the player and their objective. He then saves them from a trap and warns them about the dangers of the temple, before vanishing.!!! Don't remove REALLY_ASTARION tag check from the OOM branch!!!"
          }
        },
        "sha_monkamulet": {
          "scenario_name": "sha_monkamulet",
          "session_sequence": [
            "AD_DiscComment"
          ],
          "paths": {
            "AD_DiscComment": [
              "AD_DiscComment_0"
            ]
          },
          "node_data": {
            "AD_DiscComment": [
              {
                "id": "AD_DiscComment_0",
                "speaker": "",
                "text": "Well if it isn't our Mistress of Pain. HahaHAHA, what anguish she has visited upon me!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_DiscComment": "The spirit of the amulet comments on the Shar statue within the Shar Temple, near the moving disc. The Monk remenisces back to when he was tortured by Sharrans."
          }
        },
        "sha_sharwrath": {
          "scenario_name": "sha_sharwrath",
          "session_sequence": [
            "PAD_ShadowheartReturns"
          ],
          "paths": {
            "PAD_ShadowheartReturns": [
              "PAD_ShadowheartReturns_1",
              "PAD_ShadowheartReturns_2"
            ]
          },
          "node_data": {
            "PAD_ShadowheartReturns": [
              {
                "id": "PAD_ShadowheartReturns_1",
                "speaker": "Shadowheart",
                "text": "Please, my lady... forgive me...",
                "node_type": "normal",
                "checkflags": [
                  "25c1ac70-f65f-4869-8a74-eff5827d9cde"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Pained/dazed/contrite. Has just been made an outcast by her goddess and forcibly ejected from her realm."
              },
              {
                "id": "PAD_ShadowheartReturns_2",
                "speaker": "Player",
                "text": "Shadowheart? What happened? You were missing for a moment.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Alarmed. The companion vanished on teleporting out of a place, only to reappear in a confused, distress state."
              }
            ]
          },
          "session_synopses": {
            "PAD_ShadowheartReturns": "The party reacts to Shadowheart's delayed return from the Shadowfell - Shar held her back to punish her for not killing Nightsong."
          }
        },
        "sha_mausoleum": {
          "scenario_name": "sha_mausoleum",
          "session_sequence": [
            "PAD_MyrkulSymbol",
            "PAD_MakeshiftVessel",
            "PAD_Mural_002",
            "PAD_KethericsMap",
            "PAD_FoundIsobelsPlaque",
            "CINE_DescendingIntoTemple",
            "PAD_FoundDisc_2Players",
            "PAD_DisarmedPressurePlate",
            "PAD_KethericsWifePlaque"
          ],
          "paths": {
            "PAD_MyrkulSymbol": [
              "PAD_MyrkulSymbol_0"
            ],
            "PAD_MakeshiftVessel": [
              "PAD_MakeshiftVessel_0"
            ],
            "PAD_Mural_002": [
              "PAD_Mural_002_0"
            ],
            "PAD_KethericsMap": [
              "PAD_KethericsMap_0"
            ],
            "PAD_FoundIsobelsPlaque": [
              "PAD_FoundIsobelsPlaque_2",
              "PAD_FoundIsobelsPlaque_1"
            ],
            "CINE_DescendingIntoTemple": [
              "CINE_DescendingIntoTemple_0"
            ],
            "PAD_FoundDisc_2Players": [
              "PAD_FoundDisc_2Players_0",
              "PAD_FoundDisc_2Players_1"
            ],
            "PAD_DisarmedPressurePlate": [
              "PAD_DisarmedPressurePlate_0"
            ],
            "PAD_KethericsWifePlaque": [
              "PAD_KethericsWifePlaque_0"
            ]
          },
          "node_data": {
            "PAD_MyrkulSymbol": [
              {
                "id": "PAD_MyrkulSymbol_0",
                "speaker": "Player",
                "text": "What is that symbol supposed to mean?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_MakeshiftVessel": [
              {
                "id": "PAD_MakeshiftVessel_0",
                "speaker": "Player",
                "text": "What is that? Almost looks like someone was trying to grow a person.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_Mural_002": [
              {
                "id": "PAD_Mural_002_0",
                "speaker": "Player",
                "text": "Ketheric Thorm, leading Shar's forces. Quite the about-face for a warrior of Selûne.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Ketheric_Knows_HasSeen"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: [Astarion - not impressed]"
              }
            ],
            "PAD_KethericsMap": [
              {
                "id": "PAD_KethericsMap_0",
                "speaker": "Player",
                "text": "Looks like there's a temple under this place - and something deadly sealed inside it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_FoundIsobelsPlaque": [
              {
                "id": "PAD_FoundIsobelsPlaque_2",
                "speaker": "Player",
                "text": "Isobel. That's the name of the cleric at Last Light Inn, right?",
                "node_type": "normal",
                "checkflags": [
                  "HAV_TakingIsobel_HasMet_Isobel"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PAD_FoundIsobelsPlaque_1",
                "speaker": "Player",
                "text": "Can she possibly be Ketheric's daughter?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "CINE_DescendingIntoTemple": [
              {
                "id": "CINE_DescendingIntoTemple_0",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "CinematicNodeContext: After interacting with the teleportation stone the player reacts as the large elevator disc sets into motion and starts a long desent into darkness.\n\nNOTE: on subsequent uses of the elevator, a fade to black will be done via script.\rInternalNodeContext: Occurs the first time the player uses the elevator/disc linking the Thorm mausoleum in SCL to the Shar Temple.\nNOTE: on subsequent uses of the elevator, a fade to black will be done via script."
              }
            ],
            "PAD_FoundDisc_2Players": [
              {
                "id": "PAD_FoundDisc_2Players_0",
                "speaker": "Player",
                "text": "That disc looks like it can move - a way forward?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PAD_FoundDisc_2Players_1",
                "speaker": "Player",
                "text": "Where will it bring us, though?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_DisarmedPressurePlate": [
              {
                "id": "PAD_DisarmedPressurePlate_0",
                "speaker": "Player",
                "text": "Nothing - it must have been disarmed.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Stepped on a trap, but nothing happened"
              }
            ],
            "PAD_KethericsWifePlaque": [
              {
                "id": "PAD_KethericsWifePlaque_0",
                "speaker": "Narrator",
                "text": "*Here lies Melodia Thorm, beloved wife and mother. Ai armiel telere maenen hir.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Ah-less-ia /  Ay Army-el Teller-eh Man-en here"
              }
            ]
          },
          "session_synopses": {
            "PAD_MyrkulSymbol": "Players enter the room where the symbol of Myrkul lies on the floor. Hard religion DC before the PAD plays.",
            "PAD_MakeshiftVessel": "Players find a vessel with a half-formed humanoid shape gestating inside and reacts accordingly. The being is just inert flesh and cannot speak.",
            "PAD_Mural_002": "Player interacts with the third mural of the Mausoleum puzzle and get the final piece of the story. This mural depicts Ketheric Thorm, along with a Sharran army, standing before the corrupted version of Moonrise Towers. Player response varies, depending on if they've seen Ketheric or not. (note: do NOT refer to Moonrise towers by name in these responses, as awareness is not guaranteed)",
            "PAD_KethericsMap": "Players find the map Ketheric had inside the mausoleum. It shows  the entrance to the Shar Temple (behind Isobel's tomb) and has notes on an attack.",
            "PAD_FoundIsobelsPlaque": "PAD for characters reacting to finding Isobels plaque in the Ketheric Mausoleum. Has 3 reaction states:- Already know Ketheric is Isobel's Father- Don't know aboutfamily relationship but have met Isobel- Don't know about family relationship and haven't met Isobel",
            "CINE_DescendingIntoTemple": "Cinematic of players descending into the temple after jumping for the first time on the disc towards the temple.",
            "PAD_FoundDisc_2Players": "Players find the disc at the mausoleum that leads to the Shar temple.",
            "PAD_DisarmedPressurePlate": "Player steps with a pressure plate that should trigger the trap in the mausoleum but nothing happens.",
            "PAD_KethericsWifePlaque": "Reaction from player/narrator who interacts with the tomb of Isobel's mother (and Ketheric's wife)."
          }
        },
        "sha_displacer": {
          "scenario_name": "sha_displacer",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sha_orthonlair": {
          "scenario_name": "sha_orthonlair",
          "session_sequence": [
            "PAD_EnteredLair",
            "AD_MerregonAndOrthon"
          ],
          "paths": {
            "PAD_EnteredLair": [
              "PAD_EnteredLair_0"
            ],
            "AD_MerregonAndOrthon": [
              "AD_MerregonAndOrthon_0",
              "AD_MerregonAndOrthon_6",
              "AD_MerregonAndOrthon_9"
            ]
          },
          "node_data": {
            "PAD_EnteredLair": [
              {
                "id": "PAD_EnteredLair_0",
                "speaker": "Player",
                "text": "So much blood... what the hells has been happening here?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Taken aback. Gith line: Pronounced 'Chk'. Guttural sounding, a gith version of \"tsk\"."
              }
            ],
            "AD_MerregonAndOrthon": [
              {
                "id": "AD_MerregonAndOrthon_0",
                "speaker": "Yurgir",
                "text": "Keep your weapons sharp - our prey could reveal itself any time.",
                "node_type": "normal",
                "checkflags": [
                  "11580029-0578-1ea8-3575-6a0f6020d1b2_A"
                ],
                "setflags": [
                  "11580029-0578-1ea8-3575-6a0f6020d1b2_B"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_MerregonAndOrthon_6",
                "speaker": "Merregon",
                "text": "*Grunt.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_MerregonAndOrthon_9",
                "speaker": "Yurgir",
                "text": "Be ready, or I'll kill you myself.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_EnteredLair": "Players arrive for the first time to the Orthon's lair where he lives. They're are gems on the orthon's bed that the player needs to exit the temple.",
            "AD_MerregonAndOrthon": "The orthon occasionally speaks to one of his merregon footsoldiers after the trespass scene has ended. The orthon is fed up, irritable, The merregon is incapable of speech and provides only grunts, gasps and involuntary sounds."
          }
        },
        "sha_gauntlet": {
          "scenario_name": "sha_gauntlet",
          "session_sequence": [
            "PAD_Shadowheart"
          ],
          "paths": {
            "PAD_Shadowheart": [
              "PAD_Shadowheart_0"
            ]
          },
          "node_data": {
            "PAD_Shadowheart": [
              {
                "id": "PAD_Shadowheart_0",
                "speaker": "Shadowheart",
                "text": "Through there... there's something about it. Need to look.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_Shadowheart": "Shadowheart has sudden, mysterious hunch and is compelled to investigate a side area in the Temple of Shar. (this is an unconscious prompt from somewhere in her memory - entering the side area will trigger a flashback scene from her past)."
          }
        },
        "sha_disc": {
          "scenario_name": "sha_disc",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sha_pad": {
          "scenario_name": "sha_pad",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sha_necromancer": {
          "scenario_name": "sha_necromancer",
          "session_sequence": [
            "PAD_MintharaReaction",
            "AD_EnemyVulnerable",
            "AD_OrderingGhouls",
            "AD_StartTurn",
            "AD_GolemDead",
            "GolemInvitation",
            "AD_Justiciar_TakingTurn_2",
            "Barricade",
            "AD_BarricadeLeader",
            "AD_Justiciar_CombatStarts",
            "FleshGolem",
            "AD_DominateGolem",
            "Skeletons"
          ],
          "paths": {
            "PAD_MintharaReaction": [
              "PAD_MintharaReaction_0"
            ],
            "AD_EnemyVulnerable": [
              "AD_EnemyVulnerable_0"
            ],
            "AD_OrderingGhouls": [
              "AD_OrderingGhouls_0",
              "AD_OrderingGhouls_1"
            ],
            "AD_StartTurn": [
              "AD_StartTurn_0"
            ],
            "AD_GolemDead": [
              "AD_GolemDead_0"
            ],
            "GolemInvitation": [
              "GolemInvitation_0"
            ],
            "AD_Justiciar_TakingTurn_2": [
              "AD_Justiciar_TakingTurn_2_0"
            ],
            "Barricade": [
              "Barricade_38",
              "Barricade_13",
              "Barricade_24",
              "Barricade_0"
            ],
            "AD_BarricadeLeader": [
              "AD_BarricadeLeader_0"
            ],
            "AD_Justiciar_CombatStarts": [
              "AD_Justiciar_CombatStarts_0"
            ],
            "FleshGolem": [
              "FleshGolem_0"
            ],
            "AD_DominateGolem": [
              "AD_DominateGolem_0"
            ],
            "Skeletons": [
              "Skeletons_0"
            ]
          },
          "node_data": {
            "PAD_MintharaReaction": [
              {
                "id": "PAD_MintharaReaction_0",
                "speaker": "Nightwarden Minthara",
                "text": "I wish I could kill that bloated sack of offal, but he may yet help us reach Ketheric.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_EnemyVulnerable": [
              {
                "id": "AD_EnemyVulnerable_0",
                "speaker": "Balthazar",
                "text": "We have the upper hand - do your work, Flesh!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_OrderingGhouls": [
              {
                "id": "AD_OrderingGhouls_0",
                "speaker": "Balthazar",
                "text": "Embalming fluid, and a pipette. Now.",
                "node_type": "normal",
                "checkflags": [
                  "003e1f20-0cac-171b-aa7c-df901e42aa6c_A"
                ],
                "setflags": [
                  "003e1f20-0cac-171b-aa7c-df901e42aa6c_B"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Ordering his ghould minions about"
              },
              {
                "id": "AD_OrderingGhouls_1",
                "speaker": "",
                "text": "At ooonce.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Raspy undead drawl"
              }
            ],
            "AD_StartTurn": [
              {
                "id": "AD_StartTurn_0",
                "speaker": "Balthazar",
                "text": "It will be a kindness to put an end to your follies.",
                "node_type": "normal",
                "checkflags": [
                  "6bc7114f-5279-4374-385e-b396157d5189_A"
                ],
                "setflags": [
                  "6bc7114f-5279-4374-385e-b396157d5189_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_GolemDead": [
              {
                "id": "AD_GolemDead_0",
                "speaker": "Balthazar",
                "text": "Wretch. You broke my brother!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "GolemInvitation": [
              {
                "id": "GolemInvitation_0",
                "speaker": "Flesh",
                "text": "*Gurgle.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "CinematicNodeContext: The door to Balthazar's private chambers open, revealing a flesh golem. It utters a gurgle and beckons the player to enter.\rInternalNodeContext: Note - if the flesh golem is somehow unavailable, an alternate invitation will trigger with the necormancer instead."
              }
            ],
            "AD_Justiciar_TakingTurn_2": [
              {
                "id": "AD_Justiciar_TakingTurn_2_0",
                "speaker": "Justiciar Avenger",
                "text": "Darkness shall consume you, corpse-thief!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Rasped, wraithlike battle taunt, directed at a trespassing necromancer"
              }
            ],
            "Barricade": [
              {
                "id": "Barricade_38",
                "speaker": "Reconstituted Duellist",
                "text": "My creations are my pride and joy. I shall kill you for attacking them.",
                "node_type": "normal",
                "checkflags": [
                  "SHA_Necromancer_State_PlayerAttacked"
                ],
                "setflags": [],
                "goto": "",
                "link": "29",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Barricade_13",
                "speaker": "Reconstituted Duellist",
                "text": "Afraid I'd ruin these things' looks? Make good on your threat, or else stand aside.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "33",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Barricade_24",
                "speaker": "",
                "text": "False",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Barricade_0",
                "speaker": "Reconstituted Duellist",
                "text": "These are masterworks. Perhaps you'll join their ranks, once I repurpose your corpse.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "FactionHostileToPlayerGroupAfterDialog"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_BarricadeLeader": [
              {
                "id": "AD_BarricadeLeader_0",
                "speaker": "Reconstituted Duellist",
                "text": "You dawdle. Come closer - now.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Urgent"
              }
            ],
            "AD_Justiciar_CombatStarts": [
              {
                "id": "AD_Justiciar_CombatStarts_0",
                "speaker": "Justiciar Avenger",
                "text": "Trespasser. Myrkul's fat lapdog!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Rasped, wraithlike battle taunt. MER-kul"
              }
            ],
            "FleshGolem": [
              {
                "id": "FleshGolem_0",
                "speaker": "Flesh",
                "text": "*Moan.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: SFX only/subtitles suppressed."
              }
            ],
            "AD_DominateGolem": [
              {
                "id": "AD_DominateGolem_0",
                "speaker": "Balthazar",
                "text": "Flesh! Enough of this foolishness!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Skeletons": [
              {
                "id": "Skeletons_0",
                "speaker": "",
                "text": "Enough - my creations have nothing to say to you.",
                "node_type": "normal",
                "checkflags": [
                  "SHA_Necromancer_Skeletons_State_PostFight_Met",
                  "SHA_Necromancer_HasMet_AtTemple"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: This hasmet after the player has met the necromancer in his chambers\rNodeContext: Hint of annoyance"
              }
            ]
          },
          "session_synopses": {
            "PAD_MintharaReaction": "When dialogue with Balthazar ends (or his projection that delivers the narrative bit) this PAD is played by Minthara in party.",
            "AD_EnemyVulnerable": "Balthazar orders his flesh golem to attack his enemy while they're vulnerable",
            "AD_OrderingGhouls": "Balthazar gives some orders to his ghouls while in the Shar temple. He tells them to fetch things related to his necromancy (he's busy repairing some of his undead troops)",
            "AD_StartTurn": "Balthazar gloats at and taunts the player before acting during his turn",
            "AD_GolemDead": "Balthazar is angry at his flesh golem being killed",
            "GolemInvitation": "Balthazar's private chambers are unlocked and his flesh golem invites the players inside to talk",
            "AD_Justiciar_TakingTurn_2": "Justiciar that attacks Balthazar in his lair in Shar temple. Need to have same or similar voice to other Dark Justiciars",
            "Barricade": "The player is challenged by some skeleton warriors at a barricade outside the Necromancer's lair. The necromancer speaks through the dead warriors - his words in their dessicated voices.(this mayor may not follow on from an earlier scene with more skeletons controlled by the necromancer). A mindmeld convinces the necromancer to command his skeletons to grant entry. The scene ends with combat with the skeletons, or a shadowquake triggering a fight between player (+ skeletons) against sharran wraiths. Afterwards, the player is invited into Balthazar's inner sanctum.",
            "AD_BarricadeLeader": "The lead skeleton defending Balthazar's room will attempt to grab the players' attention",
            "AD_Justiciar_CombatStarts": "Justiciar that attacks Balthazar in his lair in Shar temple. Need to have same or similar voice to other Dark Justiciars",
            "FleshGolem": "Short dialog where the player can interact with Balthazar's flesh golem. Incapable of speech, it utters a moaning sound.",
            "AD_DominateGolem": "Balthazar scolds his flesh golem as he calms it down",
            "Skeletons": "A one-liner for the Necromancer's skeletons. Used after shadowquake fight has concluded. If the player hasn't yet spoken to the necromancer in person, they're directed to see him. Otherwise, they're told to not bother the skeletons. The necromancer is in fact controlling the skeletons and speaking through them here."
          }
        },
        "sha_merregon": {
          "scenario_name": "sha_merregon",
          "session_sequence": [
            "000",
            "003"
          ],
          "paths": {
            "000": [
              "000_0",
              "000_8",
              "000_18",
              "000_9",
              "000_21",
              "000_4",
              "000_3"
            ],
            "003": [
              "003_0"
            ]
          },
          "node_data": {
            "000": [
              {
                "id": "000_0",
                "speaker": "Narrator",
                "text": "*This merregon seems faintly more alive than the others - beckoning you to look at its wares.*",
                "node_type": "normal",
                "checkflags": [
                  "SHA_Merregon_000_HasMet = False",
                  "SHA_Merregon_Event_DetectThoughtsSuccess"
                ],
                "setflags": [
                  "SHA_Merregon_000_HasMet"
                ],
                "goto": "",
                "link": "15",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: The merregon beckons the player towards its wares\rInternalNodeContext: This greeting if you're speaking to the trader merregon for the first time after having read the mind of another merregon previously."
              },
              {
                "id": "000_8",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "000_18",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "000_18",
                "speaker": "Hoarding Merregon",
                "text": "*Chitter.*",
                "node_type": "normal",
                "checkflags": [
                  "SHA_Merregon_000_HasMet = False"
                ],
                "setflags": [
                  "SHA_Merregon_000_HasMet"
                ],
                "goto": "",
                "link": "15",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: The merregon beckons the player towards its wares\rNodeContext: NB - the text between asterisks does not have to be vocalised/pronounced exactly as written, but rather treated as a guideline. Involuntary idle sound from the merregon. Raspy breath, chittering, sighes and moans etc."
              },
              {
                "id": "000_9",
                "speaker": "Player",
                "text": "*Probe the merregon's mind.*",
                "node_type": "normal",
                "checkflags": [
                  "989f8f48-9328-2eca-3aa2-15007aabd48b_MindHasBeenRead = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "000_21",
                "speaker": "",
                "text": "True",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "000_4",
                "speaker": "Hoarding Merregon",
                "text": "Fill master's coffers. Tend to his beast. Feed it potions. Keep it charmed.",
                "node_type": "normal",
                "checkflags": [
                  "SHA_Merregon_Event_GavePotions = False"
                ],
                "setflags": [
                  "989f8f48-9328-2eca-3aa2-15007aabd48b_MindHasBeenRead"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "InternalNodeContext: This node if the merregon wasn't told it was no longer in charge of the displacer\rNodeContext: A droning, almost mindless refrain"
              },
              {
                "id": "000_3",
                "speaker": "Narrator",
                "text": "*It seems this merregon is using potions to charm a beast on behalf of its master.*",
                "node_type": "normal",
                "checkflags": [
                  "SHA_Displacer_HasMet = False",
                  "SHA_OrthonLair_Knows_MeatPoisoned = False"
                ],
                "setflags": [
                  "SHA_OrthonLair_Knows_MeatPoisoned"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ],
            "003": [
              {
                "id": "003_0",
                "speaker": "Merregon",
                "text": "*Hiss.*",
                "node_type": "normal",
                "checkflags": [
                  "SHA_Merregon_003_HasMet = False"
                ],
                "setflags": [
                  "SHA_Merregon_003_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "CinematicNodeContext: Merregon stares, tilting its head slightly at the player.\rNodeContext: NB - the text between asterisks does not have to be vocalised/pronounced exactly as written, but rather treated as a guideline. Involuntary idle sound from the merregon. Raspy breath, chittering, sighes and moans etc."
              }
            ]
          },
          "session_synopses": {
            "000": "One of the merregon henchmen accompanying the orthon in his lair in the Shar Temple. This one acts as a trader and beastmaster for the Orthon's displacer beast. The player can trade, learn about the merregon's connection to the displacer via detect thoughts, and convince it to hand over the potions used to control the beast.",
            "003": "A merregon - a footsoldier from hell assigned to assist the Orthon ( a huge infernal bounty hunter). Outside of combat, the merregon is unspeaking and unreactive, uttering only slight groans and rattling sighes. Upon attempting to read the thoughts of one of its comrades, you realise it's little more than an empty vessel, without personality or thought."
          }
        },
        "sha_corpsepit": {
          "scenario_name": "sha_corpsepit",
          "session_sequence": [
            "PAD_TriggeredShadows"
          ],
          "paths": {
            "PAD_TriggeredShadows": [
              "PAD_TriggeredShadows_0"
            ]
          },
          "node_data": {
            "PAD_TriggeredShadows": [
              {
                "id": "PAD_TriggeredShadows_0",
                "speaker": "Player",
                "text": "So cold... there's something coming. I can feel it in the shadows...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: Triggers after the player is teleported into the corpse pit in the Shar Temple.\rNodeContext: Dread and unease."
              }
            ]
          },
          "session_synopses": {
            "PAD_TriggeredShadows": "After being teleported into a pit filled with bones, the player notices shadows gathering around them as the air gets colder. The player should feel a sense of dread"
          }
        },
        "sha_cloaker": {
          "scenario_name": "sha_cloaker",
          "session_sequence": [
            "PAD_Ambush"
          ],
          "paths": {
            "PAD_Ambush": [
              "PAD_Ambush_0"
            ]
          },
          "node_data": {
            "PAD_Ambush": [
              {
                "id": "PAD_Ambush_0",
                "speaker": "Player",
                "text": "Look out - cloaker!<br>",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Urgent/just been ambushed by a cloaker (a big bat/manta ray-looking creature)"
              }
            ]
          },
          "session_synopses": {
            "PAD_Ambush": "The party reacts to being ambushed by a Cloaker in the Gauntlet of Shar"
          }
        },
        "sha_orthonbed": {
          "scenario_name": "sha_orthonbed",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sha_trapjunction": {
          "scenario_name": "sha_trapjunction",
          "session_sequence": [
            "AD_AlarmStatues"
          ],
          "paths": {
            "AD_AlarmStatues": [
              "AD_AlarmStatues_0"
            ]
          },
          "node_data": {
            "AD_AlarmStatues": [
              {
                "id": "AD_AlarmStatues_0",
                "speaker": "",
                "text": "Shar's warriors must not be caught, must not be tricked. Only loss awaits the unworthy.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "85c99cdc-a2b2-a0c3-4ca3-6ec206fb4766_A"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_AlarmStatues": "The player has been spotted by one of the statues that control the traps at the Shar Temple's main junction. The player is trapped in a room and has an item taken from them as 'punishment'. Note that this trap is more of a training challenge for Shar recruits than it is a security system."
          }
        },
        "sha_objectofdarknesstrial": {
          "scenario_name": "sha_objectofdarknesstrial",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sha_crypt": {
          "scenario_name": "sha_crypt",
          "session_sequence": [
            "PAD_PuzzlePlaque",
            "PAD_StatueTalksReaction",
            "AD_Mirrors"
          ],
          "paths": {
            "PAD_PuzzlePlaque": [
              "PAD_PuzzlePlaque_0"
            ],
            "PAD_StatueTalksReaction": [
              "PAD_StatueTalksReaction_0"
            ],
            "AD_Mirrors": [
              "AD_Mirrors_0"
            ]
          },
          "node_data": {
            "PAD_PuzzlePlaque": [
              {
                "id": "PAD_PuzzlePlaque_0",
                "speaker": "Narrator",
                "text": "*The answer lies in darkness.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_StatueTalksReaction": [
              {
                "id": "PAD_StatueTalksReaction_0",
                "speaker": "Player",
                "text": "Is that Shar's voice? Not present in person, surely...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Surprise at hearing the voice of a goddess (from a statue)"
              }
            ],
            "AD_Mirrors": [
              {
                "id": "AD_Mirrors_0",
                "speaker": "Narrator",
                "text": "*The mirrors here seem to not reflect light, but devour it.*<br>",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_PuzzlePlaque": "PAD used for when players interact with the plaque at the entrance of the crypt. Read by the narrator as an object AD.",
            "PAD_StatueTalksReaction": "",
            "AD_Mirrors": "Narrator AD on smaller mirrors in SHA temple. Player can mention there is something magical about them, instead of just reflection of surrounding world. There are couple of them in the temple"
          }
        },
        "sha_doublesencountertrial": {
          "scenario_name": "sha_doublesencountertrial",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "26",
              "4",
              "15",
              "1",
              "13",
              "16",
              "5"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "26",
                "speaker": "Narrator",
                "text": "*The bowl contains an ancient, rust-coloured bloodstain. It forms a neat disc, as if spilled calmly and willingly.*",
                "node_type": "normal",
                "checkflags": [
                  "SHA_Trials_State_StatueUsed = False"
                ],
                "setflags": [
                  "SHA_Trials_State_StatueUsed",
                  "SHA_Trials_State_FirstStatueUsed"
                ],
                "goto": "",
                "link": "4",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: The player looks at a large bowl being held by a Shar statue. Close-up of a dried blood stain in the base of the bowl."
              },
              {
                "id": "4",
                "speaker": "Narrator",
                "text": "*You recognise this as a trial, where initiates would prove themselves to Lady Shar. This one would challenge their combat prowess.*",
                "node_type": "normal",
                "checkflags": [
                  "REALLY_SHADOWHEART"
                ],
                "setflags": [
                  "SHA_Trials_Knows_LearnedAboutTrials"
                ],
                "goto": "",
                "link": "0",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Shadowheart-only narration. Visuals should favour her here.\rInternalNodeContext: SH-only narration"
              },
              {
                "id": "15",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [
                  "SHA_Trials_State_TrialInProgress = False",
                  "SHA_Trials_Event_TrialPassed = False"
                ],
                "setflags": [
                  "ORI_Inclusion_ShadowHeart"
                ],
                "goto": "",
                "link": "0",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "1",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "13",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "13",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "16",
                "speaker": "Player",
                "text": "Look upon the statue.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "5",
                "speaker": "",
                "text": "Vanquish your old life to receive my wisdom.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Player looks at the Shar statue before them and hear's Shar's disembodied voice\rNodeContext: Haunting, disembodied voice offering guidance"
              }
            ]
          },
          "session_synopses": {
            "": "For when a player interacts with the statue to begin the double combat trial in the Shar temple."
          }
        },
        "sha_nightsongprison": {
          "scenario_name": "sha_nightsongprison",
          "session_sequence": [
            "PAD_Prayer",
            "AD_Plaque2",
            "AD_MartialPlaque",
            "AD_NecroUnavailable",
            "AD_EntrancePlaque",
            "ArriveAtShadowfell",
            "AD_Plaque3",
            "PAD_EnteredShadowfell",
            "NecroAndNightsong",
            "PAD_ShadowfellEntrance",
            "PAD_NightsongsFateReaction",
            "PAD_ShadowheartBaptism",
            "AD_NecroAtPrisonEntrance",
            "GatherYourParty",
            "PAD_FalseNightSpear",
            "AD_NecroAndNightsong",
            "AD_StealthPlaque",
            "AD_VanishingJusticiarChanting"
          ],
          "paths": {
            "PAD_Prayer": [
              "PAD_Prayer_0"
            ],
            "AD_Plaque2": [
              "AD_Plaque2_0"
            ],
            "AD_MartialPlaque": [
              "AD_MartialPlaque_0"
            ],
            "AD_NecroUnavailable": [
              "AD_NecroUnavailable_0"
            ],
            "AD_EntrancePlaque": [
              "AD_EntrancePlaque_0"
            ],
            "ArriveAtShadowfell": [
              "ArriveAtShadowfell_55",
              "ArriveAtShadowfell_47",
              "ArriveAtShadowfell_53",
              "ArriveAtShadowfell_23",
              "ArriveAtShadowfell_61",
              "ArriveAtShadowfell_59",
              "ArriveAtShadowfell_52",
              "ArriveAtShadowfell_48",
              "ArriveAtShadowfell_54",
              "40",
              "NODE_NOT_FOUND"
            ],
            "AD_Plaque3": [
              "AD_Plaque3_0"
            ],
            "PAD_EnteredShadowfell": [
              "PAD_EnteredShadowfell_0"
            ],
            "NecroAndNightsong": [
              "NecroAndNightsong_65",
              "NecroAndNightsong_38",
              "NecroAndNightsong_32",
              "NecroAndNightsong_51",
              "NecroAndNightsong_56",
              "NecroAndNightsong_48",
              "NecroAndNightsong_61",
              "NecroAndNightsong_50",
              "NecroAndNightsong_62"
            ],
            "PAD_ShadowfellEntrance": [
              "PAD_ShadowfellEntrance_0"
            ],
            "PAD_NightsongsFateReaction": [
              "PAD_NightsongsFateReaction_1",
              "PAD_NightsongsFateReaction_5"
            ],
            "PAD_ShadowheartBaptism": [
              "PAD_ShadowheartBaptism_0"
            ],
            "AD_NecroAtPrisonEntrance": [
              "AD_NecroAtPrisonEntrance_0",
              "AD_NecroAtPrisonEntrance_1"
            ],
            "GatherYourParty": [
              "GatherYourParty_0"
            ],
            "PAD_FalseNightSpear": [
              "PAD_FalseNightSpear_0"
            ],
            "AD_NecroAndNightsong": [
              "AD_NecroAndNightsong_5",
              "AD_NecroAndNightsong_14",
              "AD_NecroAndNightsong_7",
              "AD_NecroAndNightsong_1"
            ],
            "AD_StealthPlaque": [
              "AD_StealthPlaque_0"
            ],
            "AD_VanishingJusticiarChanting": [
              "AD_VanishingJusticiarChanting_0"
            ]
          },
          "node_data": {
            "PAD_Prayer": [
              {
                "id": "PAD_Prayer_0",
                "speaker": "Shadowheart",
                "text": "Just a little bit farther. See my actions, Lady Shar. Hear my words of faith.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "199a746e-309f-52f0-1a47-0375711725cb_A"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Urging herself on. Final descent"
              }
            ],
            "AD_Plaque2": [
              {
                "id": "AD_Plaque2_0",
                "speaker": "Narrator",
                "text": "*Ascend in her silver blood.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_MartialPlaque": [
              {
                "id": "AD_MartialPlaque_0",
                "speaker": "Narrator",
                "text": "*Deliver the Night Mother's mercy upon her enemies.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_NecroUnavailable": [
              {
                "id": "AD_NecroUnavailable_0",
                "speaker": "Nightsong",
                "text": "I smell the stink of Balthazar. Bring him to me.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: She can do an ostentatiouse 'sniff' sound like a pro wrestler insulting an enemy"
              }
            ],
            "AD_EntrancePlaque": [
              {
                "id": "AD_EntrancePlaque_0",
                "speaker": "Narrator",
                "text": "*Spill the blood of Selûne and rise a warrior of Shar.*",
                "node_type": "normal",
                "checkflags": [
                  "MOO_BalthazarsSecrets_Knows_NightsongSecret = False"
                ],
                "setflags": [
                  "SHA_NightsongPrison_Knows_NightsongIsPerson"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: This node if the player didn't already know Nightsong was a living being\rNodeContext: The text of a plaque, instructing initiates in a sharran rite."
              }
            ],
            "ArriveAtShadowfell": [
              {
                "id": "ArriveAtShadowfell_55",
                "speaker": "",
                "text": "",
                "node_type": "alias",
                "checkflags": [
                  "c6b28a2d-4095-40fc-bed0-de222e6af105"
                ],
                "setflags": [],
                "goto": "",
                "link": "ArriveAtShadowfell_64",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ArriveAtShadowfell_47",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_ShadowHeart"
                ],
                "goto": "",
                "link": "36",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ArriveAtShadowfell_53",
                "speaker": "Shadowheart",
                "text": "Lady Shar... I can feel her all around. This is her domain. This is the Shadowfell.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "36",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Awestruck"
              },
              {
                "id": "ArriveAtShadowfell_23",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_End_ShadowHeart"
                ],
                "goto": "",
                "link": "36",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ArriveAtShadowfell_61",
                "speaker": "",
                "text": "",
                "node_type": "visualstate",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "36",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ArriveAtShadowfell_59",
                "speaker": "Balthazar",
                "text": "You cleared the way for me, True Soul. What promising flesh you are. As a reward, I shall let you bear witness to my masterpiece.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "8",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Please restrict hip and leg movement for this line. He will be floating as he speaks.\n\nBalthazar appears behind the player through the entrance from Shar Temple to Nightsong's prison. He's levitating and reaches their side before they can react, \rInternalNodeContext: Fallback - haven't met balthazar in person or agreed to help\rNodeContext: High-handed, pleased with himself"
              },
              {
                "id": "ArriveAtShadowfell_52",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [
                  "MUTED = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "8",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ArriveAtShadowfell_48",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_ShadowHeart"
                ],
                "goto": "",
                "link": "8",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ArriveAtShadowfell_54",
                "speaker": "Shadowheart",
                "text": "This is the Dark Lady's domain - he does not belong here.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "40",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Addressed to player re: Balthazar. Disdain."
              },
              {
                "id": "40",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ],
            "AD_Plaque3": [
              {
                "id": "AD_Plaque3_0",
                "speaker": "Narrator",
                "text": "*In her blood be anointed: Dark Justiciar.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_EnteredShadowfell": [
              {
                "id": "PAD_EnteredShadowfell_0",
                "speaker": "Player",
                "text": "I feel lighter, unburdened, as if the softest push could send me drifting away.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "NecroAndNightsong": [
              {
                "id": "NecroAndNightsong_65",
                "speaker": "Nightsong",
                "text": "Balthazar. Come to add more bars to my cage.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "GLO_Ketheric_Knows_ImmortalitySource",
                  "SHA_Nightsong_HasMet",
                  "GLO_Ketheric_Knows_AboutImmortality"
                ],
                "goto": "",
                "link": "45",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: She paces the narrow cage where she's kept, like a tiger. She looks down as she paces, not yet deigning to make eye contact."
              },
              {
                "id": "NecroAndNightsong_38",
                "speaker": "Nightsong",
                "text": "Or perhaps to lead this would-be Justiciar's blade directly to my heart?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "45",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext:  On \"this Justiciar\",\" abruptly turns to the player and points an accusing finger. As she moves forward out of position, magical hands grab around her wrists arms and shoulers, holding her back. She looks down at them and grimaces in rage, then steps back into place. This is how she's bound: If she moves too far, she'll be pulled back by the magi-hands."
              },
              {
                "id": "NecroAndNightsong_32",
                "speaker": "Nightsong",
                "text": "I invite you: heap more sins upon your head. My retribution will be all the sweeter for them.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "45",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Stock still. Cold. Staring Balthazar dead in the eyes.\rNodeContext: With a deep, seething foreboding"
              },
              {
                "id": "NecroAndNightsong_51",
                "speaker": "Balthazar",
                "text": "All this time, and you still fail to appreciate the gifts I bestowed on you, Aylin. Sad, to see a thing of beauty not recognise its own worth.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "45",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Displeased pout\rNodeContext: A little displeased and admonishing"
              },
              {
                "id": "NecroAndNightsong_56",
                "speaker": "Balthazar",
                "text": "But General Thorm - he appreciates you. And he wants you close at hand, so I am here to whisk you back to him.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "45",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Brightening up\rNodeContext: Tone brightening up a little"
              },
              {
                "id": "NecroAndNightsong_48",
                "speaker": "Nightsong",
                "text": "Ketheric. I welcome the sight of him, after these hundred years. He whose immortality I supply with my very soul.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "GLO_Ketheric_Knows_ImmortalitySource"
                ],
                "goto": "",
                "link": "45",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: She spits on the floor of her cage after 'Ketheric'"
              },
              {
                "id": "NecroAndNightsong_61",
                "speaker": "Balthazar",
                "text": "General. Thorm. I'm sure you'll be on your best behaviour for him. But just in case, I've taken some precautions.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_MoonriseTower_State_Outcast = False"
                ],
                "setflags": [
                  "ORI_Inclusion_ShadowHeart"
                ],
                "goto": "",
                "link": "45",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Chastising."
              },
              {
                "id": "NecroAndNightsong_50",
                "speaker": "Balthazar",
                "text": "Keep back. It will take quite some concentration to secure Aylin for her little journey.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "45",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "NecroAndNightsong_62",
                "speaker": "Shadowheart",
                "text": "The Nightsong is Shar's sacrifice - she's my destiny. He cannot have her!",
                "node_type": "normal",
                "checkflags": [
                  "AVATAR = False"
                ],
                "setflags": [
                  "SHA_NightsongPrison_State_ShadowheartGaveOpinion"
                ],
                "goto": "",
                "link": "45",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Urgent. Her sacred mission is in jeopardy"
              }
            ],
            "PAD_ShadowfellEntrance": [
              {
                "id": "PAD_ShadowfellEntrance_0",
                "speaker": "Shadowheart",
                "text": "This must be where initiates undertook their final preparations. The end is near.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Focus/mounting anticipation. Arc: SH is loyal to Shar"
              }
            ],
            "PAD_NightsongsFateReaction": [
              {
                "id": "PAD_NightsongsFateReaction_1",
                "speaker": "Player",
                "text": "It's done, Shadowheart.",
                "node_type": "normal",
                "checkflags": [
                  "SHA_NightsongPrison_State_ShadowheartKilledNightsong",
                  "SHA_NightsongPrison_Event_ShadowheartThereForFate"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Karlach: High derision. She doesn't support what just happened.\nHalsin - bitter"
              },
              {
                "id": "PAD_NightsongsFateReaction_5",
                "speaker": "Player",
                "text": "I hope your goddess is pleased.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Halsin - bitter"
              }
            ],
            "PAD_ShadowheartBaptism": [
              {
                "id": "PAD_ShadowheartBaptism_0",
                "speaker": "Shadowheart",
                "text": "Almost there. I will not fail you, my lady.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Quiet determination. Nearing the end of Shar's trials"
              }
            ],
            "AD_NecroAtPrisonEntrance": [
              {
                "id": "AD_NecroAtPrisonEntrance_0",
                "speaker": "Balthazar",
                "text": "Beyond lies Nightsong's sanctum. Soon, you will be privileged to see a true masterwork.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Touch of pride."
              },
              {
                "id": "AD_NecroAtPrisonEntrance_1",
                "speaker": "Balthazar",
                "text": "Come now, do not tarry. Enter the waters.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Urging the player on."
              }
            ],
            "GatherYourParty": [
              {
                "id": "GatherYourParty_0",
                "speaker": "Narrator",
                "text": "*You must gather your party before venturing forth.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_FalseNightSpear": [
              {
                "id": "PAD_FalseNightSpear_0",
                "speaker": "Shadowheart",
                "text": "Used by initiates for the final step to becoming Dark Justiciar... not all were worthy of the Spear of Night, it seems.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Considering a ceremonial spear. Uncanny insight. Arc: SH is loyal to Shar."
              }
            ],
            "AD_NecroAndNightsong": [
              {
                "id": "AD_NecroAndNightsong_5",
                "speaker": "Nightsong",
                "text": "Hatred makes you so hideous, Balthazar.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "7cd27f5f-4eee-558e-eee6-ee37600f04ef_A"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_NecroAndNightsong_14",
                "speaker": "Balthazar",
                "text": "Unkind, Aylin. Unkind and incorrect - I could never hate my masterwork.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Gently chiding"
              },
              {
                "id": "AD_NecroAndNightsong_7",
                "speaker": "Nightsong",
                "text": "Perhaps you're right - perhaps you're incapable of feeling at all.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_NecroAndNightsong_1",
                "speaker": "Balthazar",
                "text": "Please, Aylin - spare me. Your insults grew tired and shopworn years ago.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Unfazed"
              }
            ],
            "AD_StealthPlaque": [
              {
                "id": "AD_StealthPlaque_0",
                "speaker": "Narrator",
                "text": "*Trust your secrets to the night.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_VanishingJusticiarChanting": [
              {
                "id": "AD_VanishingJusticiarChanting_0",
                "speaker": "",
                "text": "Look upon her.",
                "node_type": "normal",
                "checkflags": [
                  "2f161555-aab8-00cd-063a-8a03f5954c3e_A"
                ],
                "setflags": [
                  "2f161555-aab8-00cd-063a-8a03f5954c3e_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: whispered prayer/recitation, delivered by a spectral figure"
              }
            ]
          },
          "session_synopses": {
            "PAD_Prayer": "Shadowheart recites verses of a prayer to Shar as she draws closer to Nightsong.This is a prayer that SH may have recited previously, now repeated as SH gets past the final hurdles to fulfill Shar's bidding. Urging herself on for the 'final lap'.",
            "AD_Plaque2": "This is a plaque with narrator AD near the soul cage - before the final trial of killing the Selunite to finish Dark Justiciar training. There are total 3 of them so information needs to be divided nicely.",
            "AD_MartialPlaque": "Narrator AD to read what is out on the plaque.",
            "AD_NecroUnavailable": "Nightsong indicates to the player that she cannot talk while Balthazar is unavailable",
            "AD_EntrancePlaque": "The player reads the plaque outside Nightsong's chamber. It instructs them to kill Nightsong in order to become a Dark Justiciar",
            "ArriveAtShadowfell": "After the player arrives at Nightsong's prison in the Shadowfell we see Balthazar show up, hot on the player's heels. Balthazar makes his way down towards Nightsong. Variant lines for:1. Met Balthazar in person, agreed to help2. Met Balthazar in person, didn't agree to help 3. Fallback (likely skipped meeting Balthazar)If Balthazar is dead then the player is just shown a cinematic shot of the Shadowfell",
            "AD_Plaque3": "This is a plaque with narrator AD near the soul cage - before the final trial of killing the Selunite to finish Dark Justiciar training. There are total 3 of them so information needs to be divided nicely.",
            "PAD_EnteredShadowfell": "PAD that plays after the end the cinematic upon entering the shadowfell in Nightsong's prison. Calls out to the player that they can jump down to the platforms below safely.",
            "NecroAndNightsong": "If Balthazar is alive when the player reaches Nightsong, they will encounter a dialogue where Balthazar and Nightsong square off. The player has one last chance to betray Balthazar and prevent him from taking Nightsong to Moonrise.",
            "PAD_ShadowfellEntrance": "Entered the final hall before entering the shadowfell in the shar temple. The area used to be used for Dark Justiciars to wash themselves, conduct last prayers and arming themselves before entering the waters into the shadowfell.",
            "PAD_NightsongsFateReaction": "PAD that plays after the players have finished the Nightsong Rtual situation in the Shadowfell.",
            "PAD_ShadowheartBaptism": "Shadowheart's response to SHA_VoiceOfShar_AD_Baptism if she is nearby. Reaffirming her dedication to become a Dark Justiciar",
            "AD_NecroAtPrisonEntrance": "Balthazar tells the player to enter the water to reach Nightsong's prison. He insists that the player goes first.",
            "GatherYourParty": "When a player attempts to enter the Shadowfell they will be reminded that they need to have all their party members present.If all their party are present a Ready Check will be started",
            "PAD_FalseNightSpear": "Looted fake spear of the night. Used by old justiciars to symbolically kill Nightsong.",
            "AD_NecroAndNightsong": "Nightsong and Balthazar banter before the player arrives into the Shadowfell.",
            "AD_StealthPlaque": "Narrator AD to read what is out on the plaque.",
            "AD_VanishingJusticiarChanting": "The Dark Justiciars in Nightsong's Prison can be found nonverbally chanting"
          }
        },
        "sha_fleshgolem": {
          "scenario_name": "sha_fleshgolem",
          "session_sequence": [
            "AD_TurnsAgainstPlayerResponse"
          ],
          "paths": {
            "AD_TurnsAgainstPlayerResponse": [
              "AD_TurnsAgainstPlayerResponse_0"
            ]
          },
          "node_data": {
            "AD_TurnsAgainstPlayerResponse": [
              {
                "id": "AD_TurnsAgainstPlayerResponse_0",
                "speaker": "Player",
                "text": "Not keen on fighting its allies. Should've figured.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_TurnsAgainstPlayerResponse": "Player summons flesh golem but the player's enemies are the golem's allies. Player character comments on this to clarify this to the actual player"
          }
        },
        "sha_lastjusticiar": {
          "scenario_name": "sha_lastjusticiar",
          "session_sequence": [
            "PAD_KillRats",
            "PAD_RitualBook",
            "JusticiarAppears",
            "RatsNegotiate"
          ],
          "paths": {
            "PAD_KillRats": [
              "PAD_KillRats_0"
            ],
            "PAD_RitualBook": [
              "PAD_RitualBook_0"
            ],
            "JusticiarAppears": [
              "JusticiarAppears_17",
              "JusticiarAppears_10",
              "JusticiarAppears_1",
              "JusticiarAppears_14",
              "JusticiarAppears_6",
              "JusticiarAppears_2",
              "JusticiarAppears_23",
              "JusticiarAppears_25"
            ],
            "RatsNegotiate": [
              "RatsNegotiate_55",
              "RatsNegotiate_48",
              "RatsNegotiate_38",
              "RatsNegotiate_12"
            ]
          },
          "node_data": {
            "PAD_KillRats": [
              {
                "id": "PAD_KillRats_0",
                "speaker": "Player",
                "text": "These rats can't keep it up forever - just have to outlast them.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_RitualBook": [
              {
                "id": "PAD_RitualBook_0",
                "speaker": "Player",
                "text": "This speaks of magic that can divide someone into many... but many what?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "JusticiarAppears": [
              {
                "id": "JusticiarAppears_17",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [
                  "SHA_LastJusticiar_Event_JusticiarTransforms"
                ],
                "goto": "",
                "link": "10",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: A rat transforms into an elf. Its hisses and squeaks morph into the elf's cry of pain as he returns to his true form.\n\nKeep the camera on the player while they react to the transformation"
              },
              {
                "id": "JusticiarAppears_10",
                "speaker": "Lyrthindor",
                "text": "These hands... too big. Where are the others? Where's the rest of me?!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Looking at his own hands in confusion\rNodeContext: Groan of pain followed by anger and confusion as he looks down at his own hands in disbelief"
              },
              {
                "id": "JusticiarAppears_1",
                "speaker": "Lyrthindor",
                "text": "You - why did you have to keep prying? Why couldn't you just leave?!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Looks up from his hands to the player, angry\rNodeContext: Angry, irrational outburst. Looks up at the player on 'you'."
              },
              {
                "id": "JusticiarAppears_14",
                "speaker": "Player",
                "text": "Hold on - who are you?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "JusticiarAppears_6",
                "speaker": "Lyrthindor",
                "text": "Lyrthindor - last Dark Justiciar. I kept watch over Lady Shar's temple. Kept the faith alive, after all the others were killed.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: lir-thin-door. Furious."
              },
              {
                "id": "JusticiarAppears_2",
                "speaker": "Lyrthindor",
                "text": "But you ruined it. Trespassed. Spoiled our - my - secret. Now you'll rot in the dark.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "FactionHostileToPlayerGroupAfterDialog"
                ],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Furious. Still mixed up, referring to himself in plural then correcting. Turns hostile immediately afterwards"
              },
              {
                "id": "JusticiarAppears_23",
                "speaker": "Player",
                "text": "I'm sorry. What more can be said?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Lae'zel -1",
                  "Shadowheart 1"
                ],
                "context": ""
              },
              {
                "id": "JusticiarAppears_25",
                "speaker": "Lyrthindor",
                "text": "Nothing. You had your chance to talk - now you die.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "FactionHostileToPlayerGroupAfterDialog"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Furious. Turns hostile immediately afterwards"
              }
            ],
            "RatsNegotiate": [
              {
                "id": "RatsNegotiate_55",
                "speaker": "Narrator",
                "text": "*The rat stares at you. It almost seems like it wants your attention.*",
                "node_type": "normal",
                "checkflags": [
                  "PETPAL = False"
                ],
                "setflags": [
                  "SHA_LastJusticiar_RatsNegotiation_Event_Hasmet"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "RatsNegotiate_48",
                "speaker": "Player",
                "text": "Study the rat. Try to figure out what it wants.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "RatsNegotiate_38",
                "speaker": "",
                "text": "True",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "RatsNegotiate_12",
                "speaker": "Narrator",
                "text": "*It wants you to stop killing its fellow rats. Understandable enough.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SHA_LastJusticiar_State_StudiedDiplorat"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_KillRats": "Voicebark meant to inform players that they should just focus on killing rats.",
            "PAD_RitualBook": "Player comments on the book on how to divide yourself into many.",
            "JusticiarAppears": "After killing the final rat during the Ultimatum stage, one of the final rats returns to its humanoid form as Lyrthindor,  the Last Justiciar. He's furious that the player has blown his cover, and quickly turns hostile.",
            "RatsNegotiate": "The player continues to kill the rats. The rats begin to group up and attempt to bargain with the player. Their memories are starting to converge into a single consciousness of the last dark justiciar. Some players who accepted a quest from the Orthon may realise there is a Dark Justiciar in hiding, amongst these rats. If the player repeatedly talks to the rats at this point without accepting a truce, they'll turn hostile."
          }
        },
        "sha_orthonslair": {
          "scenario_name": "sha_orthonslair",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sha_voiceofshar": {
          "scenario_name": "sha_voiceofshar",
          "session_sequence": [
            "PAD_VoiceReaction",
            "AD_Welcome"
          ],
          "paths": {
            "PAD_VoiceReaction": [
              "PAD_VoiceReaction_0"
            ],
            "AD_Welcome": [
              "AD_Welcome_0"
            ]
          },
          "node_data": {
            "PAD_VoiceReaction": [
              {
                "id": "PAD_VoiceReaction_0",
                "speaker": "Player",
                "text": "A voice... is that Shar herself, who speaks...?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "ORI_Shadowheart_State_HeardSharVoice"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: SH: awestruck"
              }
            ],
            "AD_Welcome": [
              {
                "id": "AD_Welcome_0",
                "speaker": "",
                "text": "Welcome, child. Follow my voice, and prove your worth.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_VoiceReaction": "Party reacts to Shar's voice in the temple and acknowledging it is Shar's voice.",
            "AD_Welcome": "The player is welcomed to the Shar Temple by a disembodied voice"
          }
        },
        "sha_ngb": {
          "scenario_name": "sha_ngb",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sha_orthon": {
          "scenario_name": "sha_orthon",
          "session_sequence": [
            "AD",
            "AD_MonitorLeaves",
            "AD_FormLines",
            "AD_TransitionsToSecondPhase",
            "AD_BetrayedByDisplacer",
            "AD_MineClusterAbility",
            "AD_VictimStand"
          ],
          "paths": {
            "AD": [
              "AD_0"
            ],
            "AD_MonitorLeaves": [
              "AD_MonitorLeaves_0"
            ],
            "AD_FormLines": [
              "AD_FormLines_0"
            ],
            "AD_TransitionsToSecondPhase": [
              "AD_TransitionsToSecondPhase_0"
            ],
            "AD_BetrayedByDisplacer": [
              "AD_BetrayedByDisplacer_0"
            ],
            "AD_MineClusterAbility": [
              "AD_MineClusterAbility_0"
            ],
            "AD_VictimStand": [
              "AD_VictimStand_0"
            ]
          },
          "node_data": {
            "AD": [
              {
                "id": "AD_0",
                "speaker": "Yurgir",
                "text": "Silence all prayers; smother each rite... blasted song!",
                "node_type": "normal",
                "checkflags": [
                  "3c55f670-825a-6a8d-9e7e-8a5b7aa2f852_A"
                ],
                "setflags": [
                  "3c55f670-825a-6a8d-9e7e-8a5b7aa2f852_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Singing to himself, with an exasperated outburst at the end"
              }
            ],
            "AD_MonitorLeaves": [
              {
                "id": "AD_MonitorLeaves_0",
                "speaker": "Raphael",
                "text": "You're not worth the trouble.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: annoyed, players just attacked him. He's unharmed, but teleports away, abandoning them"
              }
            ],
            "AD_FormLines": [
              {
                "id": "AD_FormLines_0",
                "speaker": "Yurgir",
                "text": "Form up ranks! Don't let anything get past you!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: During combat. Bellowing orders to his merregon soldiers to change formation"
              }
            ],
            "AD_TransitionsToSecondPhase": [
              {
                "id": "AD_TransitionsToSecondPhase_0",
                "speaker": "Yurgir",
                "text": "Bravo - that almost stung. Perhaps I'll make a merregon of you, once you're dead.",
                "node_type": "normal",
                "checkflags": [
                  "SHA_OrthonLair_Event_ReachedHPThreshold"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Pronuncation: mer-eh-gone. Taunting, during combat. The player has injured the Orthon, who responds by changing up his tactics after this utterance."
              }
            ],
            "AD_BetrayedByDisplacer": [
              {
                "id": "AD_BetrayedByDisplacer_0",
                "speaker": "Yurgir",
                "text": "Nessa...? No! I'm your master!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Surprised/somewhat distraught as his displacer beast companion turns on him mid-combat"
              }
            ],
            "AD_MineClusterAbility": [
              {
                "id": "AD_MineClusterAbility_0",
                "speaker": "Yurgir",
                "text": "Let's see how many pieces can be blasted off you before you die.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Viscious taunt mid-combat (throwing explosives)"
              }
            ],
            "AD_VictimStand": [
              {
                "id": "AD_VictimStand_0",
                "speaker": "Narrator",
                "text": "*A foul totem of agony, mounted with sadistic relish.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD": "The Orthon mumble-sings to himself while idle in his lair in the Shar Temple. Occasionally he interrupts the lyrics with frustrated outbursts.This occurs after the ambush scene, where we learn that the song is his contract, and will remain stuck in his head until he fulfills the terms.",
            "AD_MonitorLeaves": "Raphael leaves while at the Orthon, in case he is attacked.",
            "AD_FormLines": "Orthon tells the merregons to get close to him during combat.",
            "AD_TransitionsToSecondPhase": "During combat, the orthon escalates to phase two (intensifying his attacks and changing up his tactics). This is prompted by:- killing a certain number of minions- lowering his HP a certain amount- surviving for a certain number of combat rounds",
            "AD_BetrayedByDisplacer": "Orthon and Displacer fight between each other.",
            "AD_MineClusterAbility": "Spoken as the orthon throws timed explosives at the player during combat.",
            "AD_VictimStand": "Narrator AD that pops up when clicking on Orthons's victims on display in Shar temple. They are pretty different so text needs to be universally fitting."
          }
        },
        "sha_monitor": {
          "scenario_name": "sha_monitor",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sha_pathofdarknesstrial": {
          "scenario_name": "sha_pathofdarknesstrial",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sha_spidermeathunk": {
          "scenario_name": "sha_spidermeathunk",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "10",
              "39",
              "20",
              "22",
              "32",
              "26",
              "59",
              "38",
              "29",
              "44",
              "1"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "10",
                "speaker": "",
                "text": "",
                "node_type": "alias",
                "checkflags": [
                  "SHA_SpiderMeatHunk_HasMet = False",
                  "WIZARD"
                ],
                "setflags": [
                  "SHA_SpiderMeatHunk_HasMet"
                ],
                "goto": "",
                "link": "26",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "39",
                "speaker": "Player",
                "text": "",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "20",
                "speaker": "",
                "text": "True",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "22",
                "speaker": "Narrator",
                "text": "*A cavalcade of nasty smells rises from the corpse - but one of them is familiar. The prickling, metallic whiff of magic.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "32",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "26",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "26",
                "speaker": "Narrator",
                "text": "*A well-chewed spider carcass oozes on the ground.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SHA_SpiderMeatHunk_HasMet"
                ],
                "goto": "",
                "link": "12",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Player is standing in front of the meat."
              },
              {
                "id": "59",
                "speaker": "Player",
                "text": "Give it a lick.",
                "node_type": "normal",
                "checkflags": [
                  "SHA_SpiderMeatHunk_HasLicked = False"
                ],
                "setflags": [
                  "SHA_SpiderMeatHunk_HasLicked"
                ],
                "goto": "",
                "link": "12",
                "is_end": false,
                "approval": [
                  "Shadowheart -1",
                  "Lae'zel -1",
                  "Karlach 1",
                  "Wyll -1",
                  "Minthara -1",
                  "Gale -1",
                  "Halsin -1"
                ],
                "context": ""
              },
              {
                "id": "38",
                "speaker": "Player",
                "text": "",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "12",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "29",
                "speaker": "",
                "text": "True",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "12",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "44",
                "speaker": "Narrator",
                "text": "*The meat tastes of rot and sour milk. Your stomach lurches, but your loins tingle. Was that arousal...?*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "12",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: The player tears a chunk of spider meat out and brings it up to their face to lick. We see the player react first with disgust/nausea then confusion."
              },
              {
                "id": "1",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_Random"
                ],
                "goto": "",
                "link": "12",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "": "Player finds a hunk of spider meat in the Orthon's Lair in the process of being eaten by the Displacer Beast. The player can discover it's been charmed with succubus spittle, or potentially be poisoned if they taste it."
          }
        },
        "sha_ad": {
          "scenario_name": "sha_ad",
          "session_sequence": [
            "OathPlaque2",
            "HQ_Plaque1",
            "TrialsPlaque1"
          ],
          "paths": {
            "OathPlaque2": [
              "OathPlaque2_0"
            ],
            "HQ_Plaque1": [
              "HQ_Plaque1_0"
            ],
            "TrialsPlaque1": [
              "TrialsPlaque1_0"
            ]
          },
          "node_data": {
            "OathPlaque2": [
              {
                "id": "OathPlaque2_0",
                "speaker": "Narrator",
                "text": "*Offer your pain to Shar's embrace. Hear the Nightsong.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: The text of a plaque in a temple dedicated to Shar."
              }
            ],
            "HQ_Plaque1": [
              {
                "id": "HQ_Plaque1_0",
                "speaker": "Narrator",
                "text": "*Chamber of Command.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "TrialsPlaque1": [
              {
                "id": "TrialsPlaque1_0",
                "speaker": "Narrator",
                "text": "*Brave the Gauntlet of Lady Shar. Test body, mind, and spirit with Her trials. Glory awaits the few who succeed.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "OathPlaque2": "A plaque detailing the first part of the Oath of Eternal Shadow.",
            "HQ_Plaque1": "This is the narrator AD played on a plaque in HQ center in Shar temple - a slightly secluded area that the player needs to spot and jump into. It is a big hall with control maps, and books, dedicated to HQ gatherings, linking to other Sharran temples and societies",
            "TrialsPlaque1": "This is a narrator AD on a long vertical plaque that contains a longer scripture. It is placed before the section of the temple that is dedicated to trials areas, so it can be a motivational guideline to what expects ahead."
          }
        },
        "sha_trials": {
          "scenario_name": "sha_trials",
          "session_sequence": [
            "PAD_DarkJusticiar",
            "PAD_ObjectOfDarknessPlaque",
            "PAD_PathOfDarknessHint",
            "PAD_TortureRoomPlaque",
            "AD_LightTrialShadow",
            "PAD_TeleportedByShadow",
            "PAD_DontHaveGem"
          ],
          "paths": {
            "PAD_DarkJusticiar": [
              "PAD_DarkJusticiar_0",
              "PAD_DarkJusticiar_1"
            ],
            "PAD_ObjectOfDarknessPlaque": [
              "PAD_ObjectOfDarknessPlaque_0"
            ],
            "PAD_PathOfDarknessHint": [
              "PAD_PathOfDarknessHint_0"
            ],
            "PAD_TortureRoomPlaque": [
              "PAD_TortureRoomPlaque_0"
            ],
            "AD_LightTrialShadow": [
              "AD_LightTrialShadow_0"
            ],
            "PAD_TeleportedByShadow": [
              "PAD_TeleportedByShadow_0"
            ],
            "PAD_DontHaveGem": [
              "PAD_DontHaveGem_0"
            ]
          },
          "node_data": {
            "PAD_DarkJusticiar": [
              {
                "id": "PAD_DarkJusticiar_0",
                "speaker": "Shadowheart",
                "text": "Countless initiates walked these halls once, seeking to become Dark Justiciars.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PAD_DarkJusticiar_1",
                "speaker": "Shadowheart",
                "text": "I will follow in their path. I will succeed.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_ObjectOfDarknessPlaque": [
              {
                "id": "PAD_ObjectOfDarknessPlaque_0",
                "speaker": "Narrator",
                "text": "*Her Most Vaunted Treasure*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_PathOfDarknessHint": [
              {
                "id": "PAD_PathOfDarknessHint_0",
                "speaker": "Player",
                "text": "This must be what that book meant. I need to get across - and that means remembering where these platforms are.",
                "node_type": "normal",
                "checkflags": [
                  "SHA_Trials_Knows_PathOfDarknessHint"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_TortureRoomPlaque": [
              {
                "id": "PAD_TortureRoomPlaque_0",
                "speaker": "Narrator",
                "text": "*Her Most Hallowed Mercy*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_LightTrialShadow": [
              {
                "id": "AD_LightTrialShadow_0",
                "speaker": "Shadow, Shadow",
                "text": "A true child of the Nightsinger embraces the shadows and passes unseen.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Wraithlike whispered advice"
              }
            ],
            "PAD_TeleportedByShadow": [
              {
                "id": "PAD_TeleportedByShadow_0",
                "speaker": "Player",
                "text": "Damn. That shade knocked me right back to the start.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_DontHaveGem": [
              {
                "id": "PAD_DontHaveGem_0",
                "speaker": "Player",
                "text": "Don't have anything to put here.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_DarkJusticiar": "Shadowheart is walking along the corridors of the trials and is clearly excited about the prospect of finally proving herself worthy.",
            "PAD_ObjectOfDarknessPlaque": "The player discovers the name of the Shar trial.",
            "PAD_PathOfDarknessHint": "The player comments after possibly figuring out a clue to successfully completing one of the trials in the Temple of Shar. They must safely cross the room while remembering where the platforms along the way are.",
            "PAD_TortureRoomPlaque": "The player discovers the name of the Shar trial.",
            "AD_LightTrialShadow": "",
            "PAD_TeleportedByShadow": "A player was seen by a ghost while attempting the sneaking trial in the Shar Temple and teleported back to the beginning of the trial.",
            "PAD_DontHaveGem": "The player attempts to place a Sharran gem in the temple puzzle, but they do not have one."
          }
        },
        "sha_entrance": {
          "scenario_name": "sha_entrance",
          "session_sequence": [
            "PAD_RecognisedSharTemple"
          ],
          "paths": {
            "PAD_RecognisedSharTemple": [
              "PAD_RecognisedSharTemple_0"
            ]
          },
          "node_data": {
            "PAD_RecognisedSharTemple": [
              {
                "id": "PAD_RecognisedSharTemple_0",
                "speaker": "Player",
                "text": "Some sort of temple? Looks abandoned.",
                "node_type": "normal",
                "checkflags": [
                  "SHA_Entrance_State_ReligionSuccess = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_RecognisedSharTemple": "When the player first enters the Shar Temple they roll History to recognise it as the Gauntlet of Shar - an infamous training ground. If the player is Shadowheart, a Sharran, or a Selunite they automatically succeed"
          }
        },
        "twn_shadowheart": {
          "scenario_name": "twn_shadowheart",
          "session_sequence": [
            "PAD_StatueSight"
          ],
          "paths": {
            "PAD_StatueSight": [
              "PAD_StatueSight_0"
            ]
          },
          "node_data": {
            "PAD_StatueSight": [
              {
                "id": "PAD_StatueSight_0",
                "speaker": "Shadowheart",
                "text": "Ketheric Thorm, shown in Selûnite armour. Is there any god that turncoat hasn't bowed to?",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SCL_Ketheric_State_PlayerKnowsKethericHistory"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Derisive."
              }
            ]
          },
          "session_synopses": {
            "PAD_StatueSight": "Shadowheart spots Ketheric's statue."
          }
        },
        "sha_silentlibrary": {
          "scenario_name": "sha_silentlibrary",
          "session_sequence": [
            "PAD_OpenedScrollDoor"
          ],
          "paths": {
            "PAD_OpenedScrollDoor": [
              "PAD_OpenedScrollDoor_0"
            ]
          },
          "node_data": {
            "PAD_OpenedScrollDoor": [
              {
                "id": "PAD_OpenedScrollDoor_0",
                "speaker": "Player",
                "text": "Seemed to work.<br>",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_OpenedScrollDoor": "Party expresses affirmation that the button opened the door."
          }
        },
        "twn_templeentrance": {
          "scenario_name": "twn_templeentrance",
          "session_sequence": [
            "PAD_TempleApproach"
          ],
          "paths": {
            "PAD_TempleApproach": [
              "PAD_TempleApproach_0"
            ]
          },
          "node_data": {
            "PAD_TempleApproach": [
              {
                "id": "PAD_TempleApproach_0",
                "speaker": "Player",
                "text": "Piles of bodies - very old, by the looks of them.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "ORI_Shadowheart_State_TempleApproachHint",
                  "ORI_Shadowheart_Event_DarkJusticiarHint"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_TempleApproach": "Party approaches the Shar Temple and notices the Dark Justiciar corpses."
          }
        },
        "sha_barracks": {
          "scenario_name": "sha_barracks",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sha_tadpoledskeletons": {
          "scenario_name": "sha_tadpoledskeletons",
          "session_sequence": [
            "PAD_OnTurn"
          ],
          "paths": {
            "PAD_OnTurn": [
              "PAD_OnTurn_0"
            ]
          },
          "node_data": {
            "PAD_OnTurn": [
              {
                "id": "PAD_OnTurn_0",
                "speaker": "Shadowheart",
                "text": "Why do Lady Shar's dead attack? Am I being tested...?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Conflicted. Spectres allied to Shar are attacking her in a Shar temple."
              }
            ]
          },
          "session_synopses": {
            "PAD_OnTurn": "Shadowheart expresses some conflicting feelings about fighting against the temple's defenders."
          }
        },
        "sha_hq": {
          "scenario_name": "sha_hq",
          "session_sequence": [
            "PAD_BrokenMirrorOfLoss"
          ],
          "paths": {
            "PAD_BrokenMirrorOfLoss": [
              "PAD_BrokenMirrorOfLoss_0"
            ]
          },
          "node_data": {
            "PAD_BrokenMirrorOfLoss": [
              {
                "id": "PAD_BrokenMirrorOfLoss_0",
                "speaker": "Player",
                "text": "There was magic within this mirror once... consuming magic. But it's shattered, now.",
                "node_type": "normal",
                "checkflags": [
                  "SHA_HQ_MirrorOfLoss_Success"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: Played when Medicine check succeeds.\rNodeContext: Shadowheart: deja vu/slightly unnerved (looking at a broken magical mirror, similar to one that took her memories previously)"
              }
            ]
          },
          "session_synopses": {
            "PAD_BrokenMirrorOfLoss": "In Shar temple HQ player approaches shuttered Mirror of Loss and rolls arcana check"
          }
        },
        "sha_nightsong": {
          "scenario_name": "sha_nightsong",
          "session_sequence": [
            "CINE_NightsongsFlight",
            "AD_TauntPlayer"
          ],
          "paths": {
            "CINE_NightsongsFlight": [
              "CINE_NightsongsFlight_2",
              "CINE_NightsongsFlight_0"
            ],
            "AD_TauntPlayer": [
              "AD_TauntPlayer_0"
            ]
          },
          "node_data": {
            "CINE_NightsongsFlight": [
              {
                "id": "CINE_NightsongsFlight_2",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Wide shot of a figure arcing up into sky high above the temple, trailing pure white light. Close-up as Nightsong surveys the shadow-lands, the light intensifying around her as her rage builds. She swoops down, light spreading in her wake as she gathers speed. CU on an overgrown ruin in SCL. Where Nightsong passes, colour and contrast leak back in as the shadows part."
              },
              {
                "id": "CINE_NightsongsFlight_0",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [
                  "8a4a686d-6c47-411f-a0b3-d79ff33e2922 = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "CinematicNodeContext: Isobel at a window in Last Light, a glow touching her face as she looks up in wonder.\nShot from her POV: Nightsong like a shooting star, opening up a path of light as she streaks towards Moonrise."
              }
            ],
            "AD_TauntPlayer": [
              {
                "id": "AD_TauntPlayer_0",
                "speaker": "Nightsong",
                "text": "What are you afraid of? Your own wicked heart?",
                "node_type": "normal",
                "checkflags": [
                  "7cf6069c-f0dc-482c-bf10-eea39f59d778_A"
                ],
                "setflags": [
                  "7cf6069c-f0dc-482c-bf10-eea39f59d778_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Taunting, defiant."
              }
            ]
          },
          "session_synopses": {
            "CINE_NightsongsFlight": "After the player frees Nightsong we see her fly towards Moonrise to confront Ketheric. She passes over Last Light, where Isobel or Jaheira observe her flight from a window.",
            "AD_TauntPlayer": "Nightsong tries to goad the player into killing her"
          }
        }
      },
      "final_flags": [
        "SCL_Drider_HasMet_HarperCaster000",
        "HAV_Isobel_KidnappingQuestions_DarkUrge",
        "GOB_SpiderNest_State_SpidersHostile",
        "DEN_AttackOnDen_HasMet_Prodigy",
        "DEN_CapturedGoblin_GuardsHasMet",
        "HAV_HarperScouts_Harper_003_HasMet_Protected",
        "GOB_Checkpoint_Event_MoveToCamp",
        "UND_MyconidRevenge_Event_TakeHead",
        "8a9a14b0-87da-5c78-aa76-7a266de7a786_Phase1",
        "HAV_Umi_NightsongFreed_HasMet",
        "PLA_TavernInvestigation_Knows_AskedStelmane",
        "DEN_AttackOnDen_HasMet_Tiefling010Victory",
        "GLO_Moonrise_Knows_AbsoluteAtGrymforge",
        "CRA_DeadPrisoner_Dead_AskedQuestion",
        "UND_DuergarMutineerFollowUp_Event_Happened",
        "CHA_Outside_Event_DoorGuardConvinced",
        "e0b6dfeb-2923-e0ad-1dc5-2a5d1e055e16_local1",
        "DEN_AttackOnDen_HasMet_GrieflingFriend",
        "DEN_AttackOnDen_HasMet_Tiefling001",
        "GOB_QuartermasterFlimsy_HasMet",
        "HAV_SavingPrisoners_HasMet_Manip",
        "GEN_TransferNPCPayment_2",
        "DEN_AttackOnDen_Event_OpenGateAfterCombat",
        "5e9c4c72-4f56-2646-ce36-88207d2dc33c_KinSaved",
        "GOB_OwlbearCub_Event_InvitedToCamp",
        "MOO_Jailbreak_HasMet_Guard004",
        "PLA_Desire_Knows_RavengardTaken",
        "DEN_DruidServant005_Knows_TalkedAboutLockdown",
        "UND_SocietyOfBrilliance_MindFlayer_State_MindFlayerFeeding",
        "PLA_ConflictedFlind_Event_MindControlDamage_Minor",
        "11580029-0578-1ea8-3575-6a0f6020d1b2_B",
        "DEN_AttackOnDen_HasMet_Servant005Victory",
        "PLA_Desire_State_WyllComTrack",
        "CHA_Chapel_Event_OpenedJergalsTomb",
        "UND_DarkLake_State_ClaimedGekhWasDead",
        "DEN_AttackOnDen_Pet004_HasMet",
        "HAV_Isobel_HasMetDefault",
        "GLO_Player_Knows_MoonlanternExists",
        "GOB_PainPriest_Event_Reward",
        "2da46374-abab-9219-f7ce-2a002cfd72a5_a",
        "DEN_AttackOnDen_Ranged_001_HasMet",
        "GLO_Volo_HasMet_Personally",
        "GOB_PainPriest_State_ReactedToPenance",
        "8916beac-0385-3df9-de07-8be3cc6752a7_A",
        "da38cd0f-efef-6809-231d-26f71308cd07_B",
        "HAV_ProdigyLament_Knows_RolanAlive",
        "DEN_RaidingParty_Event_SkipConfrontation",
        "ORI_INCLUSION_SHADOWHEART",
        "GLO_TadpoledCount6",
        "PLA_TavernInvestigation_Quest_WallCollapsed",
        "PLA_Refugee_002_TollhouseMentioned",
        "DEN_AttackOnDen_HasMet_RobberKid",
        "876dbe2e-5070-a2c1-0148-cc993aa62289_B",
        "FOR_PriestsConqueringGod_AlliedPlayer",
        "HAG_GurHunter_Dead_Knows_Hunter",
        "HAV_TieflingSurvivors_State_DidNotPromiseToSaveMol",
        "DEN_AttackOnDen_HasMet_PickpocketVictory",
        "DEN_GuardedEntrance_State_ParentsKnowDeath",
        "GLO_IronhandGnomes_Knows_WulbrenInMoonrise",
        "MOO_Background_Outlander_CatBusiness",
        "WLD_FOR_GnomeGoblinsAngry",
        "Den_Thieflings_InterferingGuard_PCGotLore",
        "26007d1c-bac9-a896-4f4d-19a9d2a1e66f_A",
        "MOO_KitchenFight_HasMet_GnollMaster",
        "HAV_LastLightOx000_HasMet_SpeakWithAnimals",
        "GOB_Checkpoint_Guard01_HasMet",
        "c7cbc714-5e48-c78a-0867-2ce81a42d681_B",
        "HAV_TieflingSurvivors_HasMet_Mattis",
        "WLD_UnfortunateGnome_PayPassage",
        "4c78f756-720d-a285-a3e6-8f69a6069abc_Step1",
        "cd4b312f-5a40-b8c1-1ecb-0862c829a479_A",
        "5ebae00c-47d8-736c-6738-4ee56cebbc49_B",
        "GLO_Prodigy_State_ToldSiblingsProdigyDead",
        "MOO_Jailbreak_Event_ProdigyIntro",
        "DEN_General_YoungLovers_HasMet",
        "GOB_PainPriest_Event_CheckHP",
        "GLO_Desire_HasMet",
        "b43d3bc7-f10d-73cc-232e-c1f93cba3ed5_Local2",
        "DEN_AttackOnDen_Pet002_HasMet",
        "FOR_UnfortunateGnome_State_NonCharlatanAccess",
        "UND_MyconidCircle_PlantDuergarHasMet",
        "aa1d4932-8689-5e30-2b17-9b0968663a7a_historysuccess",
        "MOO_Execution_Knows_Executioner",
        "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_WyllSpoke",
        "GOB_WolfPens_Worg_002_HasMet",
        "PLA_GithChokepoint_State_FailedReadingMap",
        "PLA_ZhentShipment_Agent_002_StartInclusion",
        "GLO_HAV_TakingIsobel_HasMet_BriefInRoom",
        "SCL_Drider_HarpersAtInn_OneLinerHasMet",
        "4951b7ce-8495-b2c8-badc-beaff0e3d807_H",
        "DEN_ShadowDruid_Event_SetFaithwarden",
        "CRA_DeadPrisoner_Dead_MentionedTadpole",
        "GLO_Absolute_Knows_MoonriseTowers",
        "DEN_Rat_Event_MoveToShack",
        "DEN_DruidAttack_HasMet_Protester3AfterAttack",
        "ORI_Inclusion_End_Karlach",
        "UND_WormWall_State_RecognisedCrawlers",
        "GLO_GithChokepoint_DragonAppear",
        "SHA_Merregon_000_HasMet",
        "df3e1892-2ab5-7b69-e57b-a75504e1a8f2_B",
        "94726285-a32b-9d8e-579f-5aa051e986b7_Picture",
        "10297257-36dd-3799-f681-657656779d4a_TieflingsLaezelAD1",
        "ORI_Inclusion_End_Wyll",
        "HAV_Siege_Intro_JaheiraAggroToPlayer",
        "DEN_AttackOnDen_HasMet_BackupLeader",
        "SHA_LastJusticiar_RatsNegotiation_Event_Hasmet",
        "SHA_LastJusticiar_State_StudiedDiplorat",
        "GLO_HeadRemoval_Event_HeadToInventory",
        "CHA_Jergal_Event_AttemptedAttack",
        "9b4c05c6-0a79-ea8d-c351-43d6fbb04abc_Story1",
        "GOB_AbsoluteCultistStiff_HasMet",
        "GLO_Shadowcurse_Knows_FromGnome",
        "PLA_StuckHalfElf_Knows_ExplainedDowry",
        "FOR_BugBearLove_Event_MovePlayerInside",
        "ddb63ed1-6bbb-2251-c4d6-b1c59315e195_A",
        "DEN_Stargazing_Event_SawDragon",
        "SCL_Drider_HarperRanger_000_AtAmbush_HasMet",
        "SHA_LastJusticiar_Event_JusticiarTransforms",
        "ORI_INCLUSION_ASTARION",
        "FOR_UnfortunateGone_TiedUpHasmet",
        "HAG_Hagspawn_State_JakeBerserk",
        "6cf6ff37-64f7-3ccf-d702-ee2025510422_B",
        "UND_EbonLake_Event_MoveToLake",
        "FOR_SeluneStash_NoticeStashSeal_CommentedOnSeal",
        "GOB_Torturers_Rat_001_HasMet",
        "GOB_Scrying_NoddedOrShrugged",
        "DEN_BirdSender_HasMet_GobLeadersDead",
        "a759296c-5d41-f5b9-7d31-1c70d1e10dc7_Once",
        "8ab0520b-3a8d-822f-1934-336e2d24e0a0_B",
        "989f8f48-9328-2eca-3aa2-15007aabd48b_MindHasBeenRead",
        "d3eb78cf-ff8c-1e7a-7df7-4b6a04226b17_B",
        "DEN_HarpyMeal_Event_OriginCharm3",
        "683cb55e-08b9-c865-78a6-4e047ee62a24_B",
        "GLO_Tadpoled_UsedToday1",
        "GLO_HAV_TakingIsobel_HeardOfIsobel",
        "DEN_Thieflings_Event_PartnerQuestionAsked",
        "HAG_SurrogateMother_HasMet",
        "3e7a6665-f36f-0ddb-3882-7d68260b2104_B",
        "b2a52f0b-5fa8-d275-f080-0fc8edbe1faf_B",
        "GOB_GoblingKing_Event_HealerPersuasion",
        "MOO_Jailbreak_Event_SpeakToGnomesWarning",
        "UND_DuergarCamp_State_DocksHostile",
        "PLA_ZhentShipment_Agent_001_StartInclusion",
        "57c003e7-0932-6f0c-e655-99025a4abe3a_B",
        "DEN_AttackOnDen_HasMet_TieflingLeader",
        "09983dce-d7d0-c108-506f-dcadc4044b0a_Derryth_SwD_Who",
        "PLA_TavernInvestigation_State_HasMet",
        "ORI_Inclusion_Karlach",
        "UND_BrokenMoonLantern_HasMet",
        "3483cea8-0c11-9432-2421-6b95b9140d95_B",
        "7611fa51-4b1b-3d2c-a8a5-74c04d9db7fa_AnimalHandlingSuccess",
        "UND_DuergarPatroller_03_HasMet",
        "DEN_DruidAttack_HasMet_HideoutLeaderAfterAttack",
        "DEN_TieflingScam_Event_InspectedBox",
        "GnomeAskedHelp",
        "3f665b97-a69e-81c5-68e6-5b931720721e_Part1",
        "CHA_LaezelRecruitment_MindMeld",
        "MOO_Bazaar_BazaarStander_006_JailbreakSuccess_HasMet",
        "SCL_MastiffPoachers_Knows_ContinualFlame",
        "GLO_ScryingEyes_State_FeltGaze",
        "DEN_GuardedEntrance_HasMet_Guard3",
        "DEN_RaidingParty_Event_KanonOpensGate",
        "SHA_SpiderMeatHunk_HasMet",
        "DEN_AttackOnDen_HasMet_Wyll",
        "PLA_ConflictedFlind_Knows_Gnolls",
        "GLO_TalkedToVoloAboutAbsolute",
        "UND_MyconidCircle_DwarvenAlchemist_BaelenRestoredHasmet",
        "6bc7114f-5279-4374-385e-b396157d5189_B",
        "COL_Barracks_State_InterruptConvinced",
        "GOB_Festivities_Trader_HasMet",
        "DEN_AttackOnDen_HasMet_Tiefling004",
        "ZhentDungeon_AgreedBuy",
        "11d70a18-2aae-47a0-1a18-c486858b1eaf_B",
        "DEN_GruntingKid_Event_DisappearIntoWall",
        "GOB_BattleStations_HasMet_WarDrum",
        "GOB_GoblinJolly_HasMet",
        "UND_MyconidCircle_InjuredGnome_ReportedGrymforgeFate",
        "564fac12-29bd-3abe-d380-0a864e688883_Turn1",
        "COL_TadpolingCentre_MemoryImprint_FirstUse",
        "HAV_TieflingSurvivors_Mirkon_EndInclusion",
        "DEN_Apprentice_HasMet_ReactedToShadowDruids",
        "DEN_CampGeneral_HasMet_Gatekeeper",
        "SCL_Drider_HasMet_CaravanHalfOrcCaster",
        "UND_DeadInTheWater_CorpseDisposerCompanion_HasMet",
        "MOO_InfernalVendor_Knows_AskedAboutResearch",
        "UND_MyconidCircle_MyconidSuspicious_HasMet",
        "MOO_Jailbreak_Knows_ToolsNeeded",
        "DEN_Hideout_State_GivenWarning",
        "PLA_Refugee_002_HasMet",
        "UND_DuergarGuard_AtPier_01_HasMet",
        "DEN_DruidAttack_HasMet_PickpocketTraderAfterAttack",
        "SCE_Jergal_HasMet",
        "6d9043f1-e0c3-43de-a895-b87cae60e0c0_C",
        "DEN_RaidingParty_Event_OpenDenGate",
        "GOB_GoblinKingDead_Event_SaidFugitives",
        "HAV_SavingPrisoners_HasMet_Florrick",
        "HAV_EnteringHaven_State_RevealedArtifact",
        "UND_State_LeaderFreedGnomes",
        "41e56e7f-1722-7350-33dc-aefe523650fe_B",
        "d3d3855d-6721-b089-5c1e-d6d255a46fdc_A",
        "PLA_ZhentDungeon_State_SaidPassword",
        "c3207254-eafb-348b-d327-f690af0e213f_startedattackmove",
        "DEN_AttackOnDen_HasMet_TieflingBard",
        "UND_MyconidCircle_BroodingSovereign_State_InParty",
        "DEN_AttackOnDen_HasMet_Kid004Victory",
        "DEN_Hideout_Event_LeaveCountdown",
        "1493763b-776c-959c-259a-89f34f326e04_A",
        "UND_FurnaceSearch_Knows_Xargrim",
        "HAV_ProdigyLament_Knows_SiblingsInMoonrise",
        "DEN_AttackOnDen_ZenBear_HasMet",
        "SCE_TieflingFollowUp_Knows_MolMissingEyepatch",
        "DEN_DevilishOx_State_ArcanaCheckComplete_SwA",
        "fa6e2ce0-64f3-bfb8-fb47-10f50f02cadf_AbsoluteMentioned",
        "MOO_Bazaar_HasMet_Bystander01",
        "DEN_AttackOnDen_Event_PassedByEntrance",
        "DEN_Thieflings_TieflingGuard11_HasMet",
        "GOB_Trader_Knows_Goods",
        "DEN_AttackOnDen_HasMet_Tiefling005",
        "HAV_LiftingTheCurse_Portal_Knows_DontTouchPortal",
        "GOB_GoblinToast_Event_ToastSuccess",
        "COL_Barracks_Mistress_Knows_ThinksPlayerIsThrall",
        "DEN_ZenBear_Helped",
        "FOR_KnifeInMeat_State_KnifeBroken",
        "GOB_Festivities_Goblin001_HasMet",
        "2fb08ca0-df67-8450-3f01-c1e1c2a78b59_A",
        "FOR_GnomeGoblin1_HasMet",
        "DEN_TieflingRefugees_Quest_HuntRewardOffered",
        "DEN_RaidingParty_Event_GatekeeperToLever",
        "DEN_DruidAttack_HasMet_ServantGnome",
        "COL_NecroLab_GrandDesignSculpture_HasMet_LaezelInclusion",
        "FOR_GoblinAmbush_Event_StopSpotting",
        "DEN_AttackOnDen_HasMet_RitualDruid003",
        "ReportedToDerryth_BaelenIsAlive",
        "GOB_Owlbear_HasMet_NotChasing",
        "UND_SocietyOfBrilliance_MindFlayer_HasMet",
        "ba2b225d-e9d4-944d-5b4f-b27dd975c626_A",
        "DEN_AttackOnDenDruidLeader_State_HasMet",
        "6fa2b72d-fde1-4ee3-e1d1-f184232f693d_A",
        "DEN_DruidAttack_HasMet_ParentBAfterAttack",
        "DEN_General_Squirrel_LearnedTerritory",
        "MOO_Assault_HasMet_KethericHound",
        "HAG_Hagspawn_Knows_PromisedRaiseHusband",
        "ORI_Shadowheart_Knows_CurseResistant",
        "PLA_ZhentShipment_Agent_001_Inclusion_Start",
        "GOB_RaiderStupid_HasMet",
        "SCL_HarperScouts_BridgePoint_003_Hasmet",
        "83fdf5e9-88b8-19e7-ba8f-ff075d2222ce_PLA_ZhentShipment_Knows_Gnolls",
        "DEN_Apprentice_Event_RevealedTadpole",
        "DEN_Thieflings_Event_HideoutTrespassCrimeResolved",
        "SHA_OrthonLair_Knows_MeatPoisoned",
        "469a1188-028b-0e6b-b595-fa464baa551e_b",
        "GOB_RaiderBold_HasMet",
        "8f847adf-7b8a-3551-cfc0-4ea0c66a999a_F",
        "FoundCounsellor",
        "UND_DuergarCamp_State_SidedNone",
        "99aa7b78-defd-57bc-eabf-a8aa43a030d9_B",
        "a0afae3d-53b0-192d-d822-c61da104f979_A",
        "SCL_DriderHarper_Melee_000_StartInclusion",
        "DEN_Apprentice_State_ShadowDruidPath",
        "DEN_AttackOnDen_HasMet_LeaderKidVictory",
        "FOR_Monitor_Event_TakeFood",
        "GOB_GoblinToast_ThirdGoblinToasted",
        "FOR_Monitor_State_TransformToDevil",
        "DEN_Thieflings_HasMet_Guard2",
        "DEN_Thieflings_HasMet_Mol",
        "ORI_Karlach_HasMet",
        "MOO_Execution_State_PlayerWantedToAttack",
        "GOB_Festivities_HasMet_Ogre_00",
        "GOB_RatRacket_LocalRat_002_HasMet",
        "4466a73c-607a-4a7e-c1e5-94d549e8f23d_A",
        "ce2b9169-f3e7-e07f-9c58-0fd373d5df9a_PLA_ZhentDungeon_Zhent02_Dead_KnowsZarysisZhentarim",
        "HAV_Minthara_Hasmet",
        "HAV_ProdigyLament_Event_BookGivenAway",
        "DEN_AttackOnDen_Event_EnemiesAppear",
        "GLO_Ketheric_Knows_ImmortalitySource",
        "003e1f20-0cac-171b-aa7c-df901e42aa6c_B",
        "FOR_SchoolOgres_Event_AttemptedFirstSkillCheck",
        "GOB_Checkpoint_State_UsedAlarmOnce",
        "7cf6069c-f0dc-482c-bf10-eea39f59d778_B",
        "HAV_ProdigyLament_Event_Intro",
        "DEN_GoblinScouts_State_SavedDruid",
        "DEN_AttackOnDen_HasMet_Adventurer2",
        "d6df8edb-ac4b-e1d2-794b-6bfd00757cbf_A",
        "MOO_Assault_AssaultFlamingFist_003_ThroneRoomDefeated_HasMet",
        "HAV_ProdigyLament_HasMet_Ide",
        "SHA_SpiderMeatHunk_HasLicked",
        "GOB_GoblinToast_Event_IncludeFourthGoblin",
        "15b0a2b9-2b22-50ab-70c0-ab3042def597_GaleCommentTried",
        "DEN_HarpyMeal_InHideout_WasMean",
        "PreventTradeWithPlayer",
        "DEN_GoblinHunt_Event_GiveRewardBag",
        "1bddcc22-dadd-92c9-4186-4e10ebbfee68_CHA_Crypt_Jergal_DontFollow",
        "UND_AdamantineForge_Knows_Adamantine",
        "DEN_AdventurersQuest_Knows_AradinStory",
        "FOR_Bottomless_State_InteractedWithWell",
        "8baf8087-81b0-de5d-3efa-f74769a625f4_B",
        "ORI_INCLUSION_MINTHARA",
        "DEN_AttackOnDen_HasMet_ChefAndSon",
        "ORI_Inclusion_Astarion",
        "UND_DarkJusticiarsCorpses_Recognized",
        "fd9ed69f-475f-def2-bae0-25065ccc4143_B",
        "GLO_Florrick_State_KnowsWyllDevil",
        "GLO_Desire_State_FreedInAct1",
        "MOO_MoonriseTower_State_Outcast",
        "DEN_DruidLair_Knows_DruidsAlliance",
        "1591cb60-9e65-980a-c49e-69f68b958a1d_B",
        "GOB_Checkpoint_State_GainedAccess",
        "FOR_UnfortunateGnome_Bargaining",
        "DEN_AttackOnDen_HasMet_ProdigyBrother",
        "UND_Elevator_Event_GotWarning",
        "UND_FearfulRothe_Event_MakeDuergarHostileInDialog",
        "GOB_GuardUpset_State_ConvincedTrueSoul",
        "HAV_LiftingTheCurse_Portal_HasMet",
        "DEN_CapturedGoblin_State_InTransit",
        "GLO_Thieflings_State_PCShookPickpocketSister",
        "GOB_GEB_TorturedAdventurer_Assault_HasMet",
        "DEN_GroveConflict_Event_StoleIdolAttempt",
        "00a82e63-fae8-cc02-0b2b-314c9d21ce6c_F",
        "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_NoFFPresent",
        "MOO_CatBusiness_HasMet_SwA",
        "29ddc96b-303b-373d-2b6f-37ae4e8d534b_A",
        "DEN_Thieflings_Event_CallGuard",
        "SCL_Drider_HasMet",
        "DEN_AdventurersQuest_RaidAdventurerAtCorps_HasMet",
        "UND_FearfulRothe_HasMet_Rothe_001_SpeakWithAnimals",
        "UND_FearfulRothe_State_BefriendedRothe",
        "0d6dbe21-1644-b9bf-8297-dd60d820bd99_B",
        "DEN_GuardedEntrance_HasMet_LiedAboutDeath",
        "FOR_ApothecaryGoblins_Goblin01_HasMet",
        "HAG_AnimalIllusion_Revealed_HasMet1",
        "DEN_TieflingScam_Event_TalkedAboutBox",
        "SCE_Alfira_Event_GaveShiningDawn",
        "0276d317-8b34-66e2-48e2-6b9d69d6830b_F",
        "UND_Automaton_Knows_AskedPlace",
        "HAV_Florrick_Event_RavengardInTowers",
        "CRA_DeadFisherman2_Dead_WhatDoing",
        "GOB_GoblinToast_Event_IncludeThirdGoblin",
        "DEN_AttackOnDen_HasMet_PickpocketTrader",
        "COL_TadpolingCentre_Knows_IdentifiedDarkUrgePod",
        "GOB_GoblinThroneCheckpoint_Pass",
        "HalsinLeft_KilledLeaders",
        "DEN_AttackOnDen_HasMet_Halsin",
        "c167cdf3-7201-e55c-222f-773c758e1000_IncludedHusband",
        "HAG_HagLair_Victim_001_HasMet",
        "512d5ba7-a884-f1f5-5d26-fad488c07e2c_C",
        "MOO_Audience_State_KethericToldToKneelAtAltar",
        "PLA_StuckDwarf_HasMet_FoundWife",
        "GOB_SpiderNest_State_SpidersChill",
        "PLA_Tavern_Knows_DukeInTavern",
        "ORI_INCLUSION_KARLACH",
        "PLA_ZhentDungeon_State_AgentFreed",
        "UND_FurnaceSearch_Event_DuergarMentionsForge",
        "GLO_Moonrise_Knows_GoblinsCapturedADuke",
        "DEN_DruidLair_Knows_FoundingGrove",
        "FOR_Monitor_HasMet_Dinner",
        "AskedCircle",
        "SCL_Drider_HasMet_CaravanFirstTime",
        "03b6aa2e-e805-3a51-6bdb-d92f0b0da84a_UND_MyconidCircle_ServantHookHorror_01_RecognisedMonster",
        "DEN_GuardedEntrance_HasMet_Protester1",
        "MOO_Assault_AssaultHarper_002_ThroneRoomDefeated_HasMet",
        "ToldAboutTadpole",
        "DEN_DruidAttack_HasMet_Tiefling010AfterAttack",
        "f3f236b2-37a1-a0a2-5855-184ead7b1286_C",
        "GOB_DrowCommander_State_Hostile",
        "UND_ArguingGnomes_Event_LearnedAboutPhilomeen",
        "HAV_DevilishOx_LastLight_HasMet_SwA",
        "MOO_Assault_AssaultFlamingFist_004_PostAssault_HasMet",
        "UND_PetrifiedDrow_Knows_WizardIsDhourn",
        "ORI_Inclusion_End_ShadowHeart",
        "MOO_Assault_HasMet_HarperQuartermaster",
        "ORI_Shadowheart_Knows_SeenTempleVista",
        "FOR_BugBearLove_Event_CoupleHostile",
        "HAG_AnimalIllusion_Narrator",
        "SCL_DriderHarper_Ranger_001_StartInclusion",
        "DEN_Thieflings_State_DoneChase",
        "UND_ElevatorGuard002_HasMet",
        "ThankedFreed_BeldronThulla",
        "ORI_INCLUSION_MINSC",
        "DEN_Thieflings_Knows_PlayerRobbed",
        "DEN_ShadowDruid_HasMet_Opposed",
        "GLO_TadpoledCount1",
        "HAV_ProdigyLament_Brother_RolanDead_HasMet",
        "DEN_DruidAttack_HasMet_ExcitedBoar",
        "3b2ae6b6-ca7e-d905-0430-128078b3119f_B",
        "720e85fb-cc00-b81a-efff-343a04ca221e_A",
        "DEN_DevilishOx_MeetAtDruidsGrove_HasMet_SwA",
        "UND_ClericPetGrave_HasMet",
        "UND_MyconidCircle_DirectToSovereign_HasMet",
        "UND_GnomeWorkerLumpy_HasmetRescued",
        "DEN_GroveConflict_Quest_Learnt3LeadersTwoNames",
        "SCE_GnomeFollowUp_Wulbren_UneasyAboutPlayer",
        "HAV_SavingPrisoners_Knows_CapturedTieflings",
        "d97f72ff-8fb1-8a4c-f169-89751bd6e125_b",
        "85c99cdc-a2b2-a0c3-4ca3-6ec206fb4766_A",
        "ORI_INCLUSION_RANDOM",
        "HAG_Well_Event_DrinkWell",
        "a7407f82-add0-9f6d-e4e6-78b9c39195a6_C",
        "ORI_INCLUSION_WYLL",
        "4118b185-9468-2295-93f3-9d6eafd8fb8a_Second_Disabled",
        "FOR_GoblinAmbush_State_DrowAutoPass",
        "DEN_TieflingLeader_Quest_GobHuntResponded",
        "GLO_Halsin_Event_TalkedWithDruidLeader",
        "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionRefused",
        "HAV_ProdigyLament_State_ToldStory",
        "ORI_Inclusion_Gale",
        "DEN_RitualDruid_HasMet_Left5",
        "PLA_Desire_Quest_TriedForceDoor",
        "DEN_Thieflings_Pickpocket1_PCIsNotAChump",
        "MOO_InfernalVendor_State_AskedAboutDeals",
        "DEN_AttackOnDen_HasMet_Refugee002",
        "fb0e13b6-cc68-d496-51c2-4594f4f5bf40_TauntHer",
        "182bb613-b70c-5e7c-b3ea-ea14e02d1fab_C",
        "GOB_PainPriest_Event_PickScourge",
        "9378e194-3135-f75c-b557-457fa52db9f9_A",
        "DEN_GroveConflict_Knows_HeardAboutRitual",
        "d0423454-cc51-ae8e-5096-cffd1aac9f75_A",
        "FOR_BugBearLove_Knows_Lovemaking",
        "MOO_Assault_AssaultHarper_001_ThroneRoomDefeated_HasMet",
        "ORI_INCLUSION_LAEZEL",
        "DEN_DruidAttack_HasMet_SonOfChefAfterAttack",
        "MOO_Docks_Knows_TadpoleVats",
        "HAG_HagLair_TalkingDoor_HasMet",
        "ORI_Inclusion_ShadowHeart",
        "HAV_TieflingSurvivors_Mirkon_StartInclusion",
        "1ea9e483-36a9-82b1-852f-b901ec25552a_a",
        "DEN_Prodigy_HasMet",
        "PLA_ZhentShipment_State_TalkedAfterKilledGnolls",
        "551618bc-83c9-52cc-0ca7-37c224446cf7_Local1",
        "GOB_Bravado_State_Goblin3Hasmet",
        "SCE_GnomeFollowUp_HasMet_WulbrenAlive",
        "SCE_TieflingFollowUp_Ide_HasMet",
        "SCL_Drider_Event_PlayersAttackHarpers",
        "FOR_BottomlessWell_InteractWithWell_Knows_LookedDown",
        "ORI_INCLUSION_GALE",
        "DEN_GuardedEntrance_HasMet_Parents",
        "0cca6d90-e7d5-b1d6-8d9e-f6b5b8f65006_A",
        "GOB_GoblinToast_Event_IncludeSecondGoblin",
        "ca797aab-5a73-7ec5-edb7-022122573b39_B",
        "HAV_ProdigyLament_Sister_RolanDead_HasMet",
        "SCL_DriderHarper_Caster_000_StartInclusion",
        "DEN_AttackOnDen_Event_HeftyTieflingQuip",
        "HAV_ProdigyLament_HasMet_Rolan",
        "MOO_InfernalVendor_Event_SellingBlood",
        "MOO_WallTentacle_HasMet_Mig",
        "GOB_WolfPens_Event_HalsinLeftParty",
        "GLO_Factions_Knows_Harpers",
        "SHA_Orthon_Knows_RaphaelWillMeetAtCamp",
        "SCL_Drider_HasMet_HarperMelee000",
        "MOO_UpperFloor_HasMet_Guard01",
        "FactionHostileToPlayerGroupAfterDialog",
        "MOO_Jailbreak_HasMet_ProdigySister",
        "ORI_Laezel_Quest_FoundZorru",
        "GOB_GoblinPriest_Event_FreedFromChains",
        "PLA_StuckHalfElf_Knows_MentionedDowry",
        "SCL_Drider_AtTower_HasMet",
        "21e0890e-7019-66a3-1956-125405f96d7c_A",
        "a63e4af2-6edc-188a-efdf-b9ffc5460fc5_LOCAL_B",
        "SCL_Drider_Event_ResumeEscort",
        "DEN_DruidAttack_HasMet_DruidOpposedAfterAttack",
        "FOR_PriestOfTheConqueringGod_Cultists_Knows_Mission",
        "DEN_Apprentice_Event_RemoveBirdExhaustion",
        "DEN_CampGeneral_PCGotLore",
        "SpokeToBrothers",
        "5f09c70a-153e-77e8-731c-5c532e635809_B",
        "DEN_DruidAttack_HasMet_GatekeeperAfterAttack",
        "b951f0e6-65af-843d-a666-f5284343cc67_MentionedTrueSoul",
        "SCL_Drider_HarperCaster_000_AtAmbush_HasMet",
        "LearnedGroveSituation",
        "DEN_RaidingParty_Event_UnsheatheForFight",
        "ReachedWife",
        "GOB_Festivities_BugbearSleeper_00_HasMet",
        "SHA_Merregon_003_HasMet",
        "MOO_Jailbreak_State_WulbrenAlerted",
        "4ca79daf-c389-2693-bd63-4e758972e2da_B",
        "GLO_TadpoleIntro_NPC",
        "DEN_Thieflings_Knows_KidsThieves",
        "MOO_Execution_Guard_002_Hasmet",
        "30d43adb-dcaf-c0f3-d432-af96a1c2e1ea_spoketowulbren",
        "DEN_ShadowDruidLeaderPostGoblins_State_HasMet",
        "DEN_GroveConflict_Knows_LeaderNameKing",
        "153f4e14-c830-5653-1638-7495b0b9fc12_A",
        "TemporaryHostilityAfterDialog",
        "0884581d-9f92-0a34-9440-6a54c0813bbe_ProceedToSecondStage",
        "DEN_Prodigy_HasMet_Brother",
        "GLO_Absolute_Knows_TrueSoul",
        "UND_GnomeForeman_UnfortunateGnome_InclusionStart",
        "HAV_WrootRequest_State_ReunionDone",
        "DEN_WeepingTree_HasMet_Bear",
        "PLA_ZhentDungeon_Dog_03_HasMet",
        "a6f2350b-ecc4-bf6c-0c73-dcb37f9e9690_B",
        "GOB_DrowCommander_Knows_DrowLeader",
        "13d9f9ef-d1da-1d1d-287f-7a1763d72c38_B",
        "ORI_Shadowheart_State_IdolHint",
        "ea88dfe9-ff39-9b98-ae03-48d7fdf2708e_A",
        "DEN_AttackOnDen_HasMet_Refugee004Victory",
        "ORI_Inclusion_End_Astarion",
        "OrderedKillDruids",
        "DEN_DevilishOx_MeetAtDruidsGrove_State_Peaceful",
        "GLO_PixieBell_HasMet",
        "DEN_AttackOnDen_HasMet_RitualDruid002",
        "PLA_StuckHalfElf_StartInclusion",
        "DEN_Thieflings_Pickpocket2_HasMet",
        "375a6f59-375f-f5eb-5f42-60de2dc6aa6b_B",
        "GOB_Checkpoint_Event_WarnedAtCliff",
        "ORI_Shadowheart_State_HeardSharVoice",
        "PLA_ZhentShipment_State_Talked",
        "RefusedHelpBrothers1",
        "GOB_PainPriest_Event_ReactToMocking",
        "MOO_Jailbreak_Event_SpeakToTieflingsWarning",
        "DEN_DruidLair_Knows_RuneAppearance",
        "SCL_HarperScouts_ShadowCreatures_HasMet",
        "GLO_Hag_KnowsAboutSurrogate",
        "MOO_Jailbreak_Event_ForceBoatLeave",
        "MOO_Assault_AssaultFlamingFist_002_HasMet",
        "81f2a55d-d317-761f-f6a0-fe97ad6d5288_C",
        "UND_DuergarCamp_Knows_NereIsTrapped",
        "DEN_SenderBird_Event_TakeOff",
        "FOR_GnomeGoblinsPacified",
        "DEN_DruidAttack_HasMet_ChefAfterAttack",
        "ParentLied",
        "f8e3175b-5587-d6cd-2174-e5a3e9ca4890_A",
        "SCL_Drider_HasMet_CaravanHalfOrcMelee",
        "7256657b-1386-989f-0262-c6530e03a9fb_AskedWhy",
        "DEN_General_Inclusion_End_Pickpocket",
        "DEN_WeepingTree_Bear_Upset",
        "UND_TheDrowNere_Mutiny_InclusionStart_GnomeSilly",
        "bde7a4f1-933f-f6ce-4a3e-4b1f29f83704_B",
        "UND_TheDrowNere_Event_HadMindMeld",
        "b156dddb-036d-8d82-5a7a-8fd110e48cb4_B",
        "7c651195-e50f-fd75-7a35-f6f9a8d80e8d_B",
        "57c003e7-0932-6f0c-e655-99025a4abe3a_A",
        "DEN_YoungLovers_State_MetPlayer",
        "5310a408-76a3-3498-cc26-ae866871188b_Third_Disabled",
        "HAV_General_HarperScout_001_HasMet",
        "7ffcf0de-e30b-ef58-fcc5-8d3a1482fa59_b",
        "GLO_Absolute_Knows_GoblinsWorship",
        "DEN_Weaponsmith_Knows_Elturel",
        "SCL_DriderHarper_Ranger_000_StartInclusion",
        "DEN_ShadowDruid_Event_ReactionDone",
        "CHA_Crypt_Event_JergalAppears",
        "PLA_ZhentDungeon_Zhent05_HasMet",
        "DEN_TieflingLeader_HasMet_ReactToDruidAttack",
        "ORI_Laezel_State_StartedTieflingsSceneAtCage",
        "HAV_Siege_State_RefusedJaheira",
        "DEN_BirdSender_HasMet",
        "UND_MyconidCircle_DeepRothe_BaelenAteShroom_Hasmet",
        "GOB_BattleStations_Event_ToStation",
        "1fbc1449-b85a-90a5-3f67-a8898acbd1d0_B",
        "DEN_AttackOnDen_HasMet_Trainer",
        "GOB_GoblinHeretic_FreeToGo",
        "GOB_GoblinThroneCheckpoint_State_NonCharlatanAccess",
        "1c74b01f-5dcf-8107-b384-204d341ed9d5_OnlyOnce",
        "DEN_Thieflings_State_MessedWithMolsKids",
        "PLA_Refugee_001_HasMet",
        "UND_MyconidCircle_State_GainedAccess",
        "DEN_DruidAttack_HasMet_ParentAAfterAttack",
        "GOB_Checkpoint_State_GoblinsToldLeaders",
        "UND_DuergarCamp_Mutineers_HasMet",
        "LearnedDukeMissingCounsellor",
        "SCL_Drider_State_DeadCultistSituationDefused",
        "SHA_NightsongPrison_State_ShadowheartGaveOpinion",
        "SCE_JergalDebrief_Event_WhyHere",
        "94cd662c-844b-4dcc-ffdc-0b9a8da32bcc_BarcusSpokeUp",
        "DEN_AttackOnDen_HasMet_LairDoor",
        "RikkaAskedQuest",
        "DEN_General_Event_TriedNudgingBear",
        "DEN_HasMet_SoloParentB",
        "DEN_RitualDruid_HasMet_Left2",
        "GOB_Torturers_HasMet_Goblet",
        "16f542b8-5ef8-49a4-33e7-495ec95944b2_B",
        "FOR_BugbearLove_State_InterruptedCouple",
        "DEN_AttackOnDen_Servant005_Answered",
        "UND_BroodingSovereign_State_RefusedCircle",
        "HAV_Siege_Intro_DoSetup",
        "MOO_Docks_HasMet_OberverTadpolePowers",
        "DEN_Thieflings_HasMet_Trainee1",
        "23867c04-54b8-6ee9-a6bf-55a1a4c8b75d_B",
        "UND_DeadInTheWater_CorpseDisposerLeader_HasMet",
        "MOO_Assault_AssaultHarper_003_ThroneRoomDefeated_HasMet",
        "DEN_Tiefling011_State_Met",
        "DEN_Thieflings_PersuadedPickpocket",
        "GOB_GoblinToast_Event_NoMoreRefills",
        "ORI_Inclusion_Random",
        "MOO_Bazaar_HasMet_Guard00",
        "PLA_KarlachRecruitment_State_PersuasionSucceeded",
        "DEN_Thieflings_State_WitnessedArgument",
        "200aa519-5963-3b2d-3396-d1dcbb013702_AskedStrategy",
        "3b911555-52e5-7791-d2ac-44fe62465fa1_Loop3",
        "MOO_Assault_AssaultFlamingFist_001_ThroneRoomDefeated_HasMet",
        "GOB_RaiderCunning_HasMet",
        "GOB_Eye_HasMet",
        "DEN_AttackOnDen_HasMet_Refugee003",
        "DEN_Weaponsmith_HasMet",
        "34910f06-fac0-085f-b41a-337d0dfad85a_A",
        "ORI_Inclusion_Laezel",
        "GOB_GoblinToast_SecondGoblinToasted",
        "9e2ef14b-1a2f-4edc-3f78-7e3a27967e5c_C",
        "DEN_AttackOnDen_HasMet_ScoutCaptive",
        "PLA_KarlachRecruitmentTollhouse_State_HostilitiesBegan",
        "UND_PetrifiedDrow_Knows_MemoryCrystal",
        "MOO_WallTentacle_Daisy_Interacted",
        "UND_FairyRings_Dead_AskedDrowIdentity",
        "ZevlorRewarded",
        "COL_TadpolingCentre_Knows_ImpliedDarkUrgePod",
        "SCL_Drider_HasMet_CaravanGoblinRanger",
        "8f819d41-e936-8042-1935-56de252d6c7f_B",
        "GOB_PainPriest_Penanced",
        "b618166c-99f4-1c7a-02b7-32f0f0fbe420_LocalA",
        "SCE_TieflingFollowUp_Event_GiveShiningDawn",
        "DEN_AttackOnDen_HasMet_Servant004Victory",
        "DEN_AttackOnDen_HasMet_Mule1",
        "DEN_TieflingScam_HasMet",
        "MOO_Docks_State_PersuasionSuccess",
        "DEN_AttackOnDen_HasMet_Kid003",
        "UND_FearfulRothe_Event_ConvincedRotheToAttackDuergar",
        "MOO_BugBearVendor_State_FoundMotive",
        "PLA_FlamingFist7_InnBurntDown_HasMet",
        "1fb21305-2e50-068c-0243-64536fe2bd6c_A",
        "DEN_AttackOnDen_HasMet_Tiefling003Victory",
        "SCE_AncientFist_ToldStory",
        "0d9d0064-babd-6e83-6ea6-5b78afb0413c_B",
        "199a746e-309f-52f0-1a47-0375711725cb_A",
        "DEN_GoblinScouts_HasMet_Captive",
        "GLO_Absolute_Knows_Symbol",
        "PLA_ConflictedFlind_Event_MindControl_KillHerself",
        "HAV_BackupLeader_HasMet",
        "GLO_SpeakWithDead_Event_QuestionAsked",
        "HAG_Hah_MaskedVictim2_HasMet",
        "DEN_DruidAttack_HasMet_ZenBear",
        "SCL_Drider_Event_CaravanGoesHostile",
        "MOO_Audience_HasMet_WaitingKetheric",
        "SCL_Drider_State_AfterAmbushSituationDefused",
        "GOB_PainPriest_Event_BadReaction",
        "MOO_GuardRoom_HasMet_Guard01",
        "SCL_ServantOfTheRAven_Servant_HasMet",
        "UND_BrokenLantern_State_TriedArcane",
        "461152ff-16c3-2617-f8af-7ddb5681820b_b",
        "MOO_FlamingSpy_HasMet",
        "ed70fdfc-3d7b-7753-1171-957f7316fe55_B",
        "MOO_EntranceCheckpoint_Guard2_HasMet_AllowedIn",
        "SidedTieflings",
        "DEN_GroveConflict_Knows_KaghaRequestedPlayers",
        "PLA_StuckHalfElf_State_PlayerAngered",
        "SCL_Drider_Event_StartHarpersAmbush",
        "UND_BroodingSovereign_State_AskedCircle",
        "DEN_AttackOnDen_HasMet_Trainee001Victory",
        "UND_MyconidCircle_State_FirstGreetingDone",
        "6bde1237-aa43-36d3-9e53-ec1092198541_C",
        "SHA_Trials_Knows_LearnedAboutTrials",
        "2bc86ee2-13ec-992e-993a-8b2fb705bd0a_B",
        "UND_DarkLake_State_HostileResolution",
        "c3d825d1-49b8-9ae2-4554-4fc1f55d2eee_LocalA",
        "COL_TadpolingCentre_Event_PurgePods",
        "3c55f670-825a-6a8d-9e7e-8a5b7aa2f852_B",
        "DEN_ZhentAgent_02_Inclusion_Start",
        "DEN_AttackOnDen_HasMet_ProdigySister",
        "HAV_HarperScouts_Event_SawYonasFuneral",
        "ORI_Shadowheart_Event_DarkJusticiarHint",
        "HAV_General_HarperScout_000_HasMet",
        "873bc4e0-3d3c-1eac-903b-e94920fd6306_sawgithyanki",
        "DEN_CampGeneral_RufusHasMet",
        "DEN_Apprentice_HasMet",
        "DEN_General_Mule2_HasMet",
        "DEN_AttackOnDen_HasMet_ApprenticeVictory",
        "MOO_Bazaar_State_TalkedAboutPilgrims",
        "GLO_PixieBell_Event_TransformsIntoDeepRothe",
        "98423a2d-7b47-e379-6526-c435773e3cff_B",
        "DEN_Thieflings_Event_PlayerNotInvolved",
        "HAG_HagLair_Knows_DoorWasAlive",
        "ThankedFreed_Beldron",
        "DEN_AttackOnDen_HasMet_Griefling",
        "4d9f1cb5-200f-c998-657a-8d04f5c93c74_B",
        "DEN_AttackOnDen_HasMet_RitualDruid005",
        "4b4d2992-abb5-bd1b-9593-feb68eddf682_B",
        "SHA_NightsongPrison_Knows_NightsongIsPerson",
        "GLO_Ketheric_State_AngryAtPlayer",
        "ORI_Karlach_Knows_DammonWorkedInHell",
        "ORI_Inclusion_End_Random",
        "DEN_Squirrel_HasMet",
        "ORI_INCLUSION_HALSIN",
        "SCL_OliversDiary_State_SecondRound",
        "DEN_ShadowDruid_State_HadSelfReflection",
        "DEN_Thieflings_Pickpocket1_HasMet",
        "GLO_Ketheric_Knows_AboutImmortality",
        "PLA_FlamingFist7_Knows_AskedWhatHappened",
        "DEN_DruidAttack_HasMet_BardAfterAttack",
        "GOB_PainPriest_State_NeedMoreHP",
        "FOR_BugBearLove_Event_OpenDoor",
        "DEN_Thieflings_State_PCSawKidThievesGettingCaught",
        "260f61d5-60df-da35-608b-a9856291b143_PlayerKnowsOrinKilledZevlor",
        "916a75f0-23d8-f05b-449d-d926d69fe782_FailedCheck",
        "MOO_Jailbreak_HasMet_AngrySister",
        "SCE_GnomeFollowUp_Wulbren_HasMet",
        "DEN_druidservant_005_HasMet",
        "CHA_Jergal_HasMet",
        "ORI_Inclusion_End_Gale",
        "PLA_ConflictedFlind_Hyena_001_HasMet",
        "StartedAlt",
        "MOO_Audience_HasMet_AccessCultist",
        "DEN_RaidingParty_Adventurer2_HasMet",
        "GLO_Thieflings_State_PickpocketKidGotHit",
        "GOB_WolfPens_Event_HalsinLeavesGoblinCamp",
        "e6738c9d-060d-c901-b945-4d49ca303d5b_SuccessfullyReadTracks",
        "DEN_GruntingKid_HasMet",
        "SHA_Nightsong_HasMet",
        "2f161555-aab8-00cd-063a-8a03f5954c3e_B",
        "16193247-ccea-1974-45ec-e8229a7de4ef_B",
        "DEN_TieflingLeader_Quest_GobHuntDeclined",
        "DEN_RaidingParty_Event_GoblinsAppear",
        "DEN_GuardedEntrance_HasMet_Guard1",
        "GOB_PainPriest_Event_FirstHitDone",
        "ORI_Inclusion_End_Laezel",
        "SCL_Drider_HasMet_CaravanGoblinMelee_000",
        "DEN_General_Event_ElevatorBearMoves",
        "DEN_CapturedGoblin_OfferedRevenge",
        "DEN_General_Inclusion_Pickpocket",
        "DEN_RitualDruid_HasMet_Left4",
        "GOB_DrowCommander_HasMet",
        "GLO_Jergal_State_OutOfTomb",
        "HAV_ProdigyLament_Knows_AboutBook",
        "DEN_TieflingLeader_State_KaghaResolved",
        "f3afb428-73fc-2e5c-057b-2e0e5a1b2f1c_B",
        "ORI_DarkUrge_Knows_MetIsobel",
        "DEN_AttackOnDen_HasMet_Stargazer",
        "DEN_Thieflings_Event_ShookThief",
        "DEN_AttackOnDen_HasMet_Refugee001",
        "b70d5139-9980-efc6-3ba3-fe2eb56ab2e0_B",
        "HAV_LoneLover_HasMet_DanisUpset",
        "DEN_DruidAttack_HasMet_PetWolf",
        "26071d89-33af-8eac-3c05-ee8dca91338d_who",
        "DEN_Apprentice_UserShortcut",
        "ReflectedKagha",
        "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionAsked",
        "FOR_GoblinAmbush_GoblinsPacified",
        "MOO_Bazaar_BazaarStander_007_AudienceReady_HasMet",
        "MOO_BugBearVendor_HasMet_BazBugBear",
        "932401b1-7763-7fd7-bee1-8731fe62084f_DeadThree",
        "ORI_Shadowheart_State_TempleApproachHint",
        "HAV_WrootRequest_Event_TalkedToWulbrenInHaven",
        "DEN_DruidAttack_HasMet_GrieflingAfterAttack",
        "DEN_GuardedEntrance_State_ClearToPass",
        "GOB_Checkpoint_State_GuidedByCapturedGoblin",
        "DEN_RaidingParty_Event_GoblinRaidFight",
        "ORI_Inclusion_Wyll",
        "RefusedCircle",
        "DEN_TieflingScam_Knows_Scam",
        "3174fc37-851b-0494-321e-b606f7e43901_B",
        "DEN_BirdSender_Knows_AskedAboutBird",
        "DEN_DevilishOx_MeetAtDruidsGrove_Incapable",
        "DEN_Thieflings_CaveGuard_002_HasMet",
        "GOB_PainPriest_Knows_PenanceIsPain",
        "6bba3537-3756-eb27-a08a-a8596d765f2e_C",
        "28259eb0-5f20-5094-45f1-3292253ae1ed_C",
        "SHA_Trials_State_FirstStatueUsed",
        "CHA_LaezelRecruitment_Event_LaezelHostile",
        "DEN_GoblinScouts_SavedDruid",
        "ArrivedAtGrove",
        "DEN_GruntingKid_Event_AskedCanTalk",
        "DEN_Apprentice_Event_GiveReward",
        "acc081f3-204a-2f29-a3bb-6d33ff784c39_C",
        "DEN_AttackOnDen_GrieflingFriend_Knows_Kelemvor",
        "GOB_PainPriest_Event_Mercy",
        "c68c5474-226f-4b47-b327-a22274e360a0_B",
        "a2fa1f0f-b9b5-f8bf-bf27-b11194b8502f_B",
        "ORI_DarkUrge_Knows_ButlerDiedReaction",
        "HAV_LoneLover_Event_ReunionDone",
        "55452e03-17c6-9a9d-072b-80043381c98b_A",
        "UND_LoneDuergar_Event_WaitingForMainDialog",
        "OrderedBreachInn",
        "MOO_Jailbreak_HasMet_WulbrenOutcast",
        "DEN_RitualDruid_HasMet_Pacified3",
        "DEN_ShadowDruidRats_Event_RememberedLetter",
        "DEN_DruidAttack_State_PrepAfterDeathOfDruids",
        "PLA_Desire_Event_HasMet",
        "4103e544-e1db-525f-81ec-b5dfa71907d7_WantNereOut",
        "PLA_StuckHalfElf_Event_ToldQuestion",
        "UND_BroodingSovereign_Event_Enlarged",
        "f108995b-14f4-7823-d218-790177a93da8_B",
        "6a98f294-9f4f-d0b0-1cba-706f1cb15009_Local1",
        "c76693dc-e4a4-5631-a9b5-8abc6b4ab36e_DarkUrgeThreatened",
        "GOB_WolfPens_Worg_001_HasMet",
        "7cd27f5f-4eee-558e-eee6-ee37600f04ef_A",
        "MOO_Audience_Skeletons_SpokeTwice",
        "DEN_DruidAttack_HasMet_WeaponsmithAfterAttack",
        "MOO_Jailbreak_Event_BoatLeavesWithoutPlayers",
        "SCL_Drider_State_StartedAmbushQuestWithHarpers",
        "GLO_Volo_HasMet",
        "OpenedSarcophagus",
        "Counsellor_RefusedHelp",
        "02455563-e119-58e5-1fe7-eb46fe381d30_A",
        "GOB_GuardUpset_HasMet",
        "GOB_RatRacket_LocalRat_001_HasMet",
        "c5f62c4b-fb04-1505-c35b-63119d96b127_First_Disabled",
        "SHA_Trials_State_StatueUsed",
        "698f5a3b-6d88-3d9e-ee4f-26d9c1fc5b6b_B",
        "UND_TheDrowNere_State_KilledGnomeSerene",
        "COL_General_Knows_ColonyIsIllithid",
        "SCL_Harpers_Event_ShowHavenLocation",
        "GLO_VoloBallad_MetGuardPrison",
        "PLA_ZhentDungeon_Zhent01_HasMet",
        "7cd519b5-df41-47c0-1d53-6c315224e489_A",
        "90a73000-b6ed-ad55-7eae-f9a6f8f00f55_A",
        "ORI_Karlach_HasMet_DammonUnavailable",
        "GOB_CheckpointBackup003_HasMet",
        "DEN_TieflingScam_Event_FoundOutLies",
        "4ca7d7ab-9b51-31d8-22be-0e26b2a7f3ed_A",
        "UND_ArguingGnomes_Quest_Accepted",
        "DEN_Thieflings_HasMet_Chef"
      ]
    },
    "Town": {
      "chapter_id": "Act2_Town",
      "scenario_sequence": [
        "twn_tomasonsguildsignpost",
        "twn_centralsquaresignpost",
        "twn_selunegrave",
        "twn_tollhousesignpost",
        "twn_fishermannote",
        "twn_masonsguild",
        "twn_laezel",
        "twn_hospital",
        "twn_gale",
        "twn_masonsguildsignpost",
        "twn_interactedwithbloodbankinventorylist",
        "twn_missingpetscollarspile",
        "twn_mausoleum",
        "twn_mausoleumsignpost",
        "twn_readseluneprayerbook",
        "twn_arabellaspowers",
        "twn_bgsignpost",
        "twn_hospitalsignpost",
        "twn_approachedbloodbankinventorylist",
        "twn_missingpetsboard",
        "twn_finale",
        "twn_pickedupseluneprayerbook",
        "twn_tohospitalsignpost",
        "twn_tollhouse",
        "twn_helpwantedposter",
        "twn_hospitalplaque",
        "twn_marchingarmy",
        "twn_distillerysignpost",
        "twn_korrillathespy",
        "twn_distillery",
        "twn_aasimarsurvivor",
        "twn_vlaakithattack",
        "twn_monkamulet",
        "twn_prayersandcharms",
        "twn_centralsquare",
        "twn_masonguild"
      ],
      "scenario_results": {
        "twn_tomasonsguildsignpost": {
          "scenario_name": "twn_tomasonsguildsignpost",
          "session_sequence": [
            "AD"
          ],
          "paths": {
            "AD": [
              "AD_0"
            ]
          },
          "node_data": {
            "AD": [
              {
                "id": "AD_0",
                "speaker": "Narrator",
                "text": "*Ahead - Masons' Guild*<br>",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD": "Signpost in the Town."
          }
        },
        "twn_centralsquaresignpost": {
          "scenario_name": "twn_centralsquaresignpost",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "twn_selunegrave": {
          "scenario_name": "twn_selunegrave",
          "session_sequence": [
            "PAD_IdentifiedGrave"
          ],
          "paths": {
            "PAD_IdentifiedGrave": [
              "PAD_IdentifiedGrave_0"
            ]
          },
          "node_data": {
            "PAD_IdentifiedGrave": [
              {
                "id": "PAD_IdentifiedGrave_0",
                "speaker": "Player",
                "text": "Some of our war dead, from so long ago. Buried in haste when we had to flee the curse.",
                "node_type": "normal",
                "checkflags": [
                  "REALLY_HALSIN"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Solemn, Spotting some old makeshift graves."
              }
            ]
          },
          "session_synopses": {
            "PAD_IdentifiedGrave": "Player comes across some old, rushed graves for the war dead from a hundred years ago. They comment depending on how much they're aware of previous events in the region, Jaheira and Halsin, as veterans of this very fight, know the full context."
          }
        },
        "twn_tollhousesignpost": {
          "scenario_name": "twn_tollhousesignpost",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "twn_fishermannote": {
          "scenario_name": "twn_fishermannote",
          "session_sequence": [
            "AD"
          ],
          "paths": {
            "AD": [
              "AD_0"
            ]
          },
          "node_data": {
            "AD": [
              {
                "id": "AD_0",
                "speaker": "Narrator",
                "text": "*Gone fishing. CATCH you later! - Ellis*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD": "Just a note from a fisherman."
          }
        },
        "twn_masonsguild": {
          "scenario_name": "twn_masonsguild",
          "session_sequence": [
            "AD_MasonPlaque"
          ],
          "paths": {
            "AD_MasonPlaque": [
              "AD_MasonPlaque_0"
            ]
          },
          "node_data": {
            "AD_MasonPlaque": [
              {
                "id": "AD_MasonPlaque_0",
                "speaker": "Narrator",
                "text": "*Here lies the Grand Mason, his bones and lies exposed.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_MasonPlaque": "A plaque next to some bones laid out on a table in a masonry. It refers to the bones of the Grand Mason, who was found to be a traitor within a despotic regime, and executed."
          }
        },
        "twn_laezel": {
          "scenario_name": "twn_laezel",
          "session_sequence": [
            "AD_DeadGithyankiBodyWithMap"
          ],
          "paths": {
            "AD_DeadGithyankiBodyWithMap": [
              "AD_DeadGithyankiBodyWithMap_0"
            ]
          },
          "node_data": {
            "AD_DeadGithyankiBodyWithMap": [
              {
                "id": "AD_DeadGithyankiBodyWithMap_0",
                "speaker": "Lae'zel",
                "text": "A dead githyanki. The corpse may hold something useful.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_DeadGithyankiBodyWithMap": "Laezel directs the player's attention to the dead body."
          }
        },
        "twn_hospital": {
          "scenario_name": "twn_hospital",
          "session_sequence": [
            "AD_Surgeon_SuccessfulSurgery_Combat",
            "AD_Surgeon_Leech_Combat",
            "AD_Surgeon_InstrumentRequest_002_Combat",
            "PAD_SurgeonDead",
            "Reception_Receptionist",
            "ZealousAssistant_003_AD",
            "AD_Surgeon_InstrumentRequest_004_Combat",
            "AD_ResponseToSurgeon_001_Combat",
            "ZealousAssistant_002",
            "Reception_CorpseTender",
            "AD_Surgeon_InstrumentRequest_001_Combat",
            "AD_Surgeon_Trepan_Combat",
            "ZealousAssistant_001_AD",
            "Patient",
            "AD_ResponseToSurgeon_003_Combat",
            "PAD_Entrance_1P",
            "AD_Surgeon_Syringe_Combat",
            "AD_Surgeon_Bonesaw_Combat"
          ],
          "paths": {
            "AD_Surgeon_SuccessfulSurgery_Combat": [
              "AD_Surgeon_SuccessfulSurgery_Combat_0"
            ],
            "AD_Surgeon_Leech_Combat": [
              "AD_Surgeon_Leech_Combat_0"
            ],
            "AD_Surgeon_InstrumentRequest_002_Combat": [
              "AD_Surgeon_InstrumentRequest_002_Combat_0"
            ],
            "PAD_SurgeonDead": [
              "PAD_SurgeonDead_0"
            ],
            "Reception_Receptionist": [
              "Reception_Receptionist_88",
              "Reception_Receptionist_55",
              "Reception_Receptionist_95",
              "Reception_Receptionist_14",
              "Reception_Receptionist_43",
              "Reception_Receptionist_42",
              "Reception_Receptionist_45",
              "Reception_Receptionist_34",
              "Reception_Receptionist_35",
              "Reception_Receptionist_96"
            ],
            "ZealousAssistant_003_AD": [
              "ZealousAssistant_003_AD_0",
              "ZealousAssistant_003_AD_9"
            ],
            "AD_Surgeon_InstrumentRequest_004_Combat": [
              "AD_Surgeon_InstrumentRequest_004_Combat_0"
            ],
            "AD_ResponseToSurgeon_001_Combat": [
              "AD_ResponseToSurgeon_001_Combat_0"
            ],
            "ZealousAssistant_002": [
              "ZealousAssistant_002_0"
            ],
            "Reception_CorpseTender": [
              "Reception_CorpseTender_46",
              "Reception_CorpseTender_72",
              "Reception_CorpseTender_31",
              "53",
              "NODE_NOT_FOUND"
            ],
            "AD_Surgeon_InstrumentRequest_001_Combat": [
              "AD_Surgeon_InstrumentRequest_001_Combat_0"
            ],
            "AD_Surgeon_Trepan_Combat": [
              "AD_Surgeon_Trepan_Combat_0"
            ],
            "ZealousAssistant_001_AD": [
              "ZealousAssistant_001_AD_0"
            ],
            "Patient": [
              "Patient_1",
              "Patient_0"
            ],
            "AD_ResponseToSurgeon_003_Combat": [
              "AD_ResponseToSurgeon_003_Combat_0"
            ],
            "PAD_Entrance_1P": [
              "PAD_Entrance_1P_0"
            ],
            "AD_Surgeon_Syringe_Combat": [
              "AD_Surgeon_Syringe_Combat_0"
            ],
            "AD_Surgeon_Bonesaw_Combat": [
              "AD_Surgeon_Bonesaw_Combat_0"
            ]
          },
          "node_data": {
            "AD_Surgeon_SuccessfulSurgery_Combat": [
              {
                "id": "AD_Surgeon_SuccessfulSurgery_Combat_0",
                "speaker": "Malus Thorm",
                "text": "A successful procedure, Shar be praised!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Surgeon_Leech_Combat": [
              {
                "id": "AD_Surgeon_Leech_Combat_0",
                "speaker": "Malus Thorm",
                "text": "Behold - the leech, for draining humours most foul.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Surgeon_InstrumentRequest_002_Combat": [
              {
                "id": "AD_Surgeon_InstrumentRequest_002_Combat_0",
                "speaker": "Malus Thorm",
                "text": "The subject resists. Next instrument, good sister.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_SurgeonDead": [
              {
                "id": "PAD_SurgeonDead_0",
                "speaker": "Player",
                "text": "That's one shadow monster dead.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Reception_Receptionist": [
              {
                "id": "Reception_Receptionist_88",
                "speaker": "Sister Sinda",
                "text": "Here to see the doctor? Are we poorly? Are we desperately poorly?",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Hospital_Reception_Receptionist_HasMet = False"
                ],
                "setflags": [
                  "TWN_Hospital_Reception_Receptionist_HasMet"
                ],
                "goto": "",
                "link": "21",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Reception_Receptionist_55",
                "speaker": "Sister Sinda",
                "text": "Not so well. But well enough to wait. Join the line, and you will be seen.",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Hospital_Reception_State_LowHP = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "21",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: The nurse 'looks' you over, assessing your condition.\rInternalNodeContext: Upon investigation, deduces that you're not that sick."
              },
              {
                "id": "Reception_Receptionist_95",
                "speaker": "Player",
                "text": "I don't have time to wait - I need to see the doctor right now.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "25",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Reception_Receptionist_14",
                "speaker": "Sister Sinda",
                "text": "Yes yes, but all must wait. The doctor's hands are full.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "25",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: a little frantic, overwhelmed"
              },
              {
                "id": "Reception_Receptionist_43",
                "speaker": "Sister Sinda",
                "text": "Join the line - you will be seen.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "25",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: with a touch of desperation"
              },
              {
                "id": "Reception_Receptionist_42",
                "speaker": "Player",
                "text": "Pretend to be ill.",
                "node_type": "normal",
                "checkflags": [
                  "BARD = False",
                  "ROGUE = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "64",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Reception_Receptionist_45",
                "speaker": "",
                "text": "False",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "64",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Reception_Receptionist_34",
                "speaker": "Sister Sinda",
                "text": "You endanger the sick!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "TWN_Hospital_Reception_Receptionist_FailedPersuasion"
                ],
                "goto": "",
                "link": "64",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Disgusted reaction to player's pretend illness."
              },
              {
                "id": "Reception_Receptionist_35",
                "speaker": "Sister Sinda",
                "text": "Plague! Pest! In line, or leave.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "64",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: scathing"
              },
              {
                "id": "Reception_Receptionist_96",
                "speaker": "Player",
                "text": "Leave.",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Hospital_Reception_State_InLine = False"
                ],
                "setflags": [
                  "TeleportOutOfTrespass"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ZealousAssistant_003_AD": [
              {
                "id": "ZealousAssistant_003_AD_0",
                "speaker": "Sister Anya",
                "text": "Can you feel it? The hurting?",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Hospital_State_NursesKilledSurgeon",
                  "7cb61031-a8dd-1d49-5052-621c7050c9cb_C"
                ],
                "setflags": [
                  "7cb61031-a8dd-1d49-5052-621c7050c9cb_B = False",
                  "7cb61031-a8dd-1d49-5052-621c7050c9cb_A = False",
                  "7cb61031-a8dd-1d49-5052-621c7050c9cb_C = False"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Soft, soothing, and creepy."
              },
              {
                "id": "ZealousAssistant_003_AD_9",
                "speaker": "Sister Anya",
                "text": "Here, darling. Let me soothe the pain.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Surgeon_InstrumentRequest_004_Combat": [
              {
                "id": "AD_Surgeon_InstrumentRequest_004_Combat_0",
                "speaker": "Malus Thorm",
                "text": "This flesh must be flayed. The next instrument, sister.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_ResponseToSurgeon_001_Combat": [
              {
                "id": "AD_ResponseToSurgeon_001_Combat_0",
                "speaker": "Sister Geanne",
                "text": "Your wish guides my hand.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ZealousAssistant_002": [
              {
                "id": "ZealousAssistant_002_0",
                "speaker": "Narrator",
                "text": "*She remains silent.*",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Hospital_HasMet_Nurse002 = False",
                  "TWN_Hospital_State_NursesKilledSurgeon"
                ],
                "setflags": [
                  "TWN_Hospital_HasMet_Nurse002"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Reception_CorpseTender": [
              {
                "id": "Reception_CorpseTender_46",
                "speaker": "Sister Lidwin",
                "text": "Don't call the doctor yet! I've got potions, sutures - I know I can do this...",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Hospital_Reception_CorpseTender_HasMet = False"
                ],
                "setflags": [
                  "TWN_Hospital_Reception_CorpseTender_HasMet"
                ],
                "goto": "",
                "link": "53",
                "is_end": false,
                "approval": [],
                "context": "InternalNodeContext: She doesn't see you coming, but from the sound of your footsteps thinks you might be the doctor. \rNodeContext: The nurse is panicking assuming you are a patient"
              },
              {
                "id": "Reception_CorpseTender_72",
                "speaker": "Sister Lidwin",
                "text": "Oh, you're a patient. This is the children's ward - triage is back that way.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "53",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Mid-inspection, the nurse notices you. \rNodeContext: Mid-inspection, the nurse notices the player."
              },
              {
                "id": "Reception_CorpseTender_31",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "53",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "53",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ],
            "AD_Surgeon_InstrumentRequest_001_Combat": [
              {
                "id": "AD_Surgeon_InstrumentRequest_001_Combat_0",
                "speaker": "Malus Thorm",
                "text": "Sister. The first instrument, if I may.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Surgeon_Trepan_Combat": [
              {
                "id": "AD_Surgeon_Trepan_Combat_0",
                "speaker": "Malus Thorm",
                "text": "Blood has pooled in the brain. I must open the cranium!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ZealousAssistant_001_AD": [
              {
                "id": "ZealousAssistant_001_AD_0",
                "speaker": "Sister Geanne",
                "text": "He is absent. Abscence is him.",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Hospital_State_NursesKilledSurgeon",
                  "36aea695-4652-6e6a-8380-567e8c440740_C"
                ],
                "setflags": [
                  "36aea695-4652-6e6a-8380-567e8c440740_C = False",
                  "36aea695-4652-6e6a-8380-567e8c440740_A = False",
                  "36aea695-4652-6e6a-8380-567e8c440740_B = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Weird outbursts. Her mind is lost. Not loud, just intense"
              }
            ],
            "Patient": [
              {
                "id": "Patient_1",
                "speaker": "Distressed Patient",
                "text": "Rgrl. Gn - ungh. Ngh!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Patient_0",
                "speaker": "Player",
                "text": "Leave.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_ResponseToSurgeon_003_Combat": [
              {
                "id": "AD_ResponseToSurgeon_003_Combat_0",
                "speaker": "Sister Anya",
                "text": "A most excellent choice, master.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_Entrance_1P": [
              {
                "id": "PAD_Entrance_1P_0",
                "speaker": "Player",
                "text": "A house of healing, for all the good it does anyone now.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Surgeon_Syringe_Combat": [
              {
                "id": "AD_Surgeon_Syringe_Combat_0",
                "speaker": "Malus Thorm",
                "text": "A sure remedy for a sickened mind.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Surgeon_Bonesaw_Combat": [
              {
                "id": "AD_Surgeon_Bonesaw_Combat_0",
                "speaker": "Malus Thorm",
                "text": "Still yourself. The saw's teeth will open the way for her shadow.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_Surgeon_SuccessfulSurgery_Combat": "Combat AD",
            "AD_Surgeon_Leech_Combat": "Combat AD",
            "AD_Surgeon_InstrumentRequest_002_Combat": "Combat AD",
            "PAD_SurgeonDead": "PAD is played after Surgeon is dead.Variations: - Killed by Nurses; - Killed himself; - Killed in combat;",
            "Reception_Receptionist": "Receptionist at the entrance of the Hospital. She's mostly supposed to be there for flavor and to provide directions to the operating room (down the hallway and under the observation area.) If you piss her off or try to circumvent her to see the doctor, she'll fight you.",
            "ZealousAssistant_003_AD": "Nurses only speak if the Surgeon is dead.Case #1 They operated on the Surgeon and killed him.Case #2.The player killed the Surgeon and ran away. The nurses now have ADs.",
            "AD_Surgeon_InstrumentRequest_004_Combat": "Combat AD",
            "AD_ResponseToSurgeon_001_Combat": "Combat AD",
            "ZealousAssistant_002": "One of the nurses in the HospitalMUTE (maybe just can't talk or maybe lost her tongue to the surgeon)",
            "Reception_CorpseTender": "A nurse is tending to the corpse of Arabella's father, one of the rejected/failed experiments of the Surgeon. She is insistent that it makes sense, even though the corpse is well... a corpse. The player can trade with this nurse.",
            "AD_Surgeon_InstrumentRequest_001_Combat": "Combat AD",
            "AD_Surgeon_Trepan_Combat": "Combat AD",
            "ZealousAssistant_001_AD": "Nurses only speak if the Surgeon is dead.Case #1 They operated on the Surgeon and killed him.Case #2.The player killed the Surgeon and ran away. The nurses now have ADs.",
            "Patient": "Patient of the surgeon. Eyes, tongue have been removed.",
            "AD_ResponseToSurgeon_003_Combat": "Combat AD",
            "PAD_Entrance_1P": "VB that is played when you approach the Hospital in SCL",
            "AD_Surgeon_Syringe_Combat": "Combat AD",
            "AD_Surgeon_Bonesaw_Combat": "Combat AD"
          }
        },
        "twn_gale": {
          "scenario_name": "twn_gale",
          "session_sequence": [
            "LootBoss"
          ],
          "paths": {
            "LootBoss": [
              "LootBoss_3",
              "LootBoss_2",
              "LootBoss_5",
              "LootBoss_4",
              "LootBoss_11"
            ]
          },
          "node_data": {
            "LootBoss": [
              {
                "id": "LootBoss_3",
                "speaker": "Narrator",
                "text": "*The corpse is saturated with darkness, flesh and bone corrupted by a dense concentration of Shadow Weave. Sharran magic, summoned from beyond the Weave's boundaries. Beyond Mystra's control.*",
                "node_type": "normal",
                "checkflags": [
                  "BREWER_CREATURE = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "2",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: VFX of dark shadow magic reflecting flashing over Gale's face. Gale reacts."
              },
              {
                "id": "LootBoss_2",
                "speaker": "Narrator",
                "text": "*Left alone, its corruption will leak and spread. You could nullify it, preventing such harm as Mystra would want. Or you could absorb it, tasting Shar's forbidden magic for yourself.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "LootBoss_5",
                "speaker": "Gale",
                "text": "Cleanse the corpse. Destroy this tainted power.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "ORI_Gale_State_RefusedTWNBossPower"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "LootBoss_4",
                "speaker": "Narrator",
                "text": "*A blast of purest Weave is enough to banish the shadow magic trapped beneath the corpse's skin.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Gale focuses. Bright, white VFX (reading as morally good)."
              },
              {
                "id": "LootBoss_11",
                "speaker": "Narrator",
                "text": "*As its blight fades, you feel a lightness rush in to take its place - Mystra. A taste of what you lost and of what awaits you for fulfilling her purpose.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "CinematicNodeContext: Gale smiles"
              }
            ]
          },
          "session_synopses": {
            "LootBoss": "Gale (or someone near Gale) has attempted to loot a corpse and Gale realises the evil possibilities."
          }
        },
        "twn_masonsguildsignpost": {
          "scenario_name": "twn_masonsguildsignpost",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "twn_interactedwithbloodbankinventorylist": {
          "scenario_name": "twn_interactedwithbloodbankinventorylist",
          "session_sequence": [
            "PAD"
          ],
          "paths": {
            "PAD": [
              "PAD_0"
            ]
          },
          "node_data": {
            "PAD": [
              {
                "id": "PAD_0",
                "speaker": "Player",
                "text": "Quite the list of characters, but hardly my taste.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Just read a list of people who gave their blood to a hospital. Farmers and vagabonds - he's not impressed."
              }
            ]
          },
          "session_synopses": {
            "PAD": "Astarion reacting on picking up / reading \"Blood Bank Inventory List\" by any player (including himself)Location: SCL -> Hospital -> Morgue"
          }
        },
        "twn_missingpetscollarspile": {
          "scenario_name": "twn_missingpetscollarspile",
          "session_sequence": [
            "PAD"
          ],
          "paths": {
            "PAD": [
              "PAD_0"
            ]
          },
          "node_data": {
            "PAD": [
              {
                "id": "PAD_0",
                "speaker": "Player",
                "text": "'Rascal.'? 'Jagoda.'? All these collars belonged to pets.",
                "node_type": "normal",
                "checkflags": [
                  "TWN_MissingPets_State_ReadPosters = False"
                ],
                "setflags": [
                  "TWN_MissingPets_State_CheckedPileOfPetsCollars"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD": "Character interacts with a pile of pet collars.Different reaction depending on whether the user has read the missing pet posters before or not."
          }
        },
        "twn_mausoleum": {
          "scenario_name": "twn_mausoleum",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "twn_mausoleumsignpost": {
          "scenario_name": "twn_mausoleumsignpost",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "twn_readseluneprayerbook": {
          "scenario_name": "twn_readseluneprayerbook",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "twn_arabellaspowers": {
          "scenario_name": "twn_arabellaspowers",
          "session_sequence": [
            "TownIntroduction"
          ],
          "paths": {
            "TownIntroduction": [
              "TownIntroduction_75",
              "TownIntroduction_152",
              "TownIntroduction_100",
              "TownIntroduction_120",
              "TownIntroduction_67",
              "TownIntroduction_158",
              "TownIntroduction_9",
              "TownIntroduction_155",
              "137",
              "NODE_NOT_FOUND"
            ]
          },
          "node_data": {
            "TownIntroduction": [
              {
                "id": "TownIntroduction_75",
                "speaker": "Arabella",
                "text": "Hey - I know you! You're -",
                "node_type": "normal",
                "checkflags": [
                  "59d0ad61-4513-4d53-a397-c84dae053a2b"
                ],
                "setflags": [
                  "TWN_ArabellaPowers_Event_ShadowsAppear"
                ],
                "goto": "",
                "link": "137",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Before Arabella can finish, there is an eeries noise coming from behind her. Arabella turns to look as two Shadows emerge from the ground menacingly.\rNodeContext: About to continue from 'Hey, I know you! You're - ' with a proper introduction, but is interrupted by shadow creature spawning from ground."
              },
              {
                "id": "TownIntroduction_152",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "137",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: The creatures groan menacingly and prepare to lunge"
              },
              {
                "id": "TownIntroduction_100",
                "speaker": "",
                "text": "",
                "node_type": "visualstate",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "137",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "TownIntroduction_120",
                "speaker": "Arabella",
                "text": "Twist'em up!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "TWN_ArabellaPowers_Event_ShadowsTwisted"
                ],
                "goto": "",
                "link": "137",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Arbaella starts moving her hands to cast a spell, in the manner of Jaheira casting entangling vines."
              },
              {
                "id": "TownIntroduction_67",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "137",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Arabella casts her spell. Before the creatures can attack, vines rise from the ground and wrap around them, entangling them to her right"
              },
              {
                "id": "TownIntroduction_158",
                "speaker": "",
                "text": "",
                "node_type": "visualstate",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "137",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "TownIntroduction_9",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_Random"
                ],
                "goto": "",
                "link": "137",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "TownIntroduction_155",
                "speaker": "Narrator",
                "text": "*You remember this girl - Arabella, from the druids' grove, the thief Kagha tried to punish.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "137",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "137",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ]
          },
          "session_synopses": {
            "TownIntroduction": "Player comes upon a familiar face in the cursed land: Arabella, the girl they rescued from the snake in act 1. She has developed powers and is rooting shadow-creatures. She promises you to teach you this entangling power if you save her parents, who are lost."
          }
        },
        "twn_bgsignpost": {
          "scenario_name": "twn_bgsignpost",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "twn_hospitalsignpost": {
          "scenario_name": "twn_hospitalsignpost",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "twn_approachedbloodbankinventorylist": {
          "scenario_name": "twn_approachedbloodbankinventorylist",
          "session_sequence": [
            "PAD"
          ],
          "paths": {
            "PAD": [
              "PAD_0"
            ]
          },
          "node_data": {
            "PAD": [
              {
                "id": "PAD_0",
                "speaker": "Astarion",
                "text": "Is that blood on the shelves? Probably cold and congealed - urgh.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Unpleasantly surprised to find a room of jars filled with blood"
              }
            ]
          },
          "session_synopses": {
            "PAD": "Astarion reacting on approaching Blood Bank."
          }
        },
        "twn_missingpetsboard": {
          "scenario_name": "twn_missingpetsboard",
          "session_sequence": [
            "PAD"
          ],
          "paths": {
            "PAD": [
              "PAD_0"
            ]
          },
          "node_data": {
            "PAD": [
              {
                "id": "PAD_0",
                "speaker": "Player",
                "text": "Missing - 'Zola'. 'Rascal'. Why do those names sounds familiar? Oh - the blood-stained collars...",
                "node_type": "normal",
                "checkflags": [
                  "TWN_MissingPets_State_CheckedPileOfPetsCollars"
                ],
                "setflags": [
                  "TWN_MissingPets_State_ReadPosters"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD": "Character interacts with a board of posters outlining many pets who have gone missing in the town in the shadowlands."
          }
        },
        "twn_finale": {
          "scenario_name": "twn_finale",
          "session_sequence": [
            "PAD_ArmyLeft"
          ],
          "paths": {
            "PAD_ArmyLeft": [
              "PAD_ArmyLeft_0"
            ]
          },
          "node_data": {
            "PAD_ArmyLeft": [
              {
                "id": "PAD_ArmyLeft_0",
                "speaker": "Player",
                "text": "The Absolute's armies are on the march - and Baldur's Gate is their target.",
                "node_type": "normal",
                "checkflags": [
                  "TWN_MarchingArmy_State_SawAbsoluteArmy"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_ArmyLeft": "Comment on how the absolute army left. Reactivity if you saw them previously or not."
          }
        },
        "twn_pickedupseluneprayerbook": {
          "scenario_name": "twn_pickedupseluneprayerbook",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "twn_tohospitalsignpost": {
          "scenario_name": "twn_tohospitalsignpost",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "twn_tollhouse": {
          "scenario_name": "twn_tollhouse",
          "session_sequence": [
            "AD_TollhouseMaster_Buff_001_Combat",
            "TollhouseMaster",
            "AD_TollhouseMaster_Buff_004_Combat",
            "AD_Face_Regret",
            "PAD_CormyrCrate",
            "AD_TollhouseMaster",
            "AD_SafeSkeleton",
            "AD_Face_Cowardice",
            "AD_TollhouseMaster_Buff_002_Combat",
            "PAD_DalelandsCrate",
            "Face_Guilt",
            "PAD_TollmasterDead",
            "AD_ConfiscatedItemsPlaque",
            "AD_TollhouseMaster_Buff_005_Combat",
            "PAD_ThayCrate",
            "PAD_Entrance_1P",
            "Face_Heartlessness",
            "PAD_ConfiscatedItemPlaqueUsed",
            "AD_Face_Obedience",
            "Face_Greed",
            "AD_TollhouseMaster_Buff_003_Combat",
            "AD_TollhouseMaster_Vulnerable_Combat"
          ],
          "paths": {
            "AD_TollhouseMaster_Buff_001_Combat": [
              "AD_TollhouseMaster_Buff_001_Combat_0"
            ],
            "TollhouseMaster": [
              "TollhouseMaster_94",
              "TollhouseMaster_172",
              "TollhouseMaster_55",
              "TollhouseMaster_33",
              "42",
              "NODE_NOT_FOUND"
            ],
            "AD_TollhouseMaster_Buff_004_Combat": [
              "AD_TollhouseMaster_Buff_004_Combat_0"
            ],
            "AD_Face_Regret": [
              "AD_Face_Regret_0"
            ],
            "PAD_CormyrCrate": [
              "PAD_CormyrCrate_0"
            ],
            "AD_TollhouseMaster": [
              "AD_TollhouseMaster_0"
            ],
            "AD_SafeSkeleton": [
              "AD_SafeSkeleton_0"
            ],
            "AD_Face_Cowardice": [
              "AD_Face_Cowardice_0"
            ],
            "AD_TollhouseMaster_Buff_002_Combat": [
              "AD_TollhouseMaster_Buff_002_Combat_0"
            ],
            "PAD_DalelandsCrate": [
              "PAD_DalelandsCrate_0"
            ],
            "Face_Guilt": [
              "Face_Guilt_7",
              "Face_Guilt_28",
              "Face_Guilt_4",
              "Face_Guilt_24",
              "Face_Guilt_2",
              "Face_Guilt_22",
              "Face_Guilt_14",
              "Face_Guilt_10",
              "Face_Guilt_17",
              "Face_Guilt_9"
            ],
            "PAD_TollmasterDead": [
              "PAD_TollmasterDead_0"
            ],
            "AD_ConfiscatedItemsPlaque": [
              "AD_ConfiscatedItemsPlaque_0"
            ],
            "AD_TollhouseMaster_Buff_005_Combat": [
              "AD_TollhouseMaster_Buff_005_Combat_0"
            ],
            "PAD_ThayCrate": [
              "PAD_ThayCrate_0"
            ],
            "PAD_Entrance_1P": [
              "PAD_Entrance_1P_0"
            ],
            "Face_Heartlessness": [
              "Face_Heartlessness_0"
            ],
            "PAD_ConfiscatedItemPlaqueUsed": [
              "PAD_ConfiscatedItemPlaqueUsed_0"
            ],
            "AD_Face_Obedience": [
              "AD_Face_Obedience_0"
            ],
            "Face_Greed": [
              "Face_Greed_0"
            ],
            "AD_TollhouseMaster_Buff_003_Combat": [
              "AD_TollhouseMaster_Buff_003_Combat_0"
            ],
            "AD_TollhouseMaster_Vulnerable_Combat": [
              "AD_TollhouseMaster_Vulnerable_Combat_0"
            ]
          },
          "node_data": {
            "AD_TollhouseMaster_Buff_001_Combat": [
              {
                "id": "AD_TollhouseMaster_Buff_001_Combat_0",
                "speaker": "Gerringothe Thorm",
                "text": "IF YOU WILL NOT GIVE, THEN I WILL TAKE!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "TollhouseMaster": [
              {
                "id": "TollhouseMaster_94",
                "speaker": "Gerringothe Thorm",
                "text": "YOU BROUGHT VIOLENCE. UNACCEPTABLE. BUT ALL CAN BE FORGIVEN. FOR THE RIGHT PRICE.",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Tollhouse_TollhouseMaster_HasMet = False",
                  "TWN_Tollhouse_State_FaceWasAttacked"
                ],
                "setflags": [
                  "TWN_Tollhouse_TollhouseMaster_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: howling with anger on first phrases - more reasonable on last two phrases, hoping to get some cash out of the situation"
              },
              {
                "id": "TollhouseMaster_172",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "TollhouseMaster_55",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "TollhouseMaster_55",
                "speaker": "Gerringothe Thorm",
                "text": "WHAT DO YOU BRING?",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Tollhouse_TollhouseMaster_HasMet = False"
                ],
                "setflags": [
                  "TWN_Tollhouse_TollhouseMaster_HasMet"
                ],
                "goto": "",
                "link": "42",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Spotting you, Gerringothe lurches forward.\rNodeContext: a desperate, cacophonous howl"
              },
              {
                "id": "TollhouseMaster_33",
                "speaker": "Player",
                "text": "Who are you?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "42",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "42",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ],
            "AD_TollhouseMaster_Buff_004_Combat": [
              {
                "id": "AD_TollhouseMaster_Buff_004_Combat_0",
                "speaker": "Gerringothe Thorm",
                "text": "PAY ME IN BLOOD.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Face_Regret": [
              {
                "id": "AD_Face_Regret_0",
                "speaker": "Visage of Regret",
                "text": "So much time. Wasted.",
                "node_type": "normal",
                "checkflags": [
                  "1507f82b-d6a2-791b-17ed-65b81a40e9f5_A"
                ],
                "setflags": [
                  "1507f82b-d6a2-791b-17ed-65b81a40e9f5_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_CormyrCrate": [
              {
                "id": "PAD_CormyrCrate_0",
                "speaker": "Player",
                "text": "Silks from Cormyr, it says. Empty, though.<br>",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_TollhouseMaster": [
              {
                "id": "AD_TollhouseMaster_0",
                "speaker": "Gerringothe Thorm",
                "text": "GOLD...",
                "node_type": "normal",
                "checkflags": [
                  "dd1890a0-ff6c-a358-4269-1859078cc21d_A"
                ],
                "setflags": [
                  "dd1890a0-ff6c-a358-4269-1859078cc21d_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_SafeSkeleton": [
              {
                "id": "AD_SafeSkeleton_0",
                "speaker": "Narrator",
                "text": "*A forgotten soul, trapped in a safe - but who put them there, and why?*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Face_Cowardice": [
              {
                "id": "AD_Face_Cowardice_0",
                "speaker": "Visage of Cowardice",
                "text": "Don't tell on me. Please.",
                "node_type": "normal",
                "checkflags": [
                  "6d4ecf46-ffab-ed53-3b19-68607a0e1309_A"
                ],
                "setflags": [
                  "6d4ecf46-ffab-ed53-3b19-68607a0e1309_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_TollhouseMaster_Buff_002_Combat": [
              {
                "id": "AD_TollhouseMaster_Buff_002_Combat_0",
                "speaker": "Gerringothe Thorm",
                "text": "YOU WILL NOT BE FORGIVEN.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_DalelandsCrate": [
              {
                "id": "PAD_DalelandsCrate_0",
                "speaker": "Player",
                "text": "Cheese from the Dalelands. Or what's left of it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Face_Guilt": [
              {
                "id": "Face_Guilt_7",
                "speaker": "Visage of Guilt",
                "text": "They gave me what they had. Should I have let them leave?",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Tollhouse_HasMet_Guilt = False"
                ],
                "setflags": [
                  "TWN_Tollhouse_HasMet_Guilt"
                ],
                "goto": "",
                "link": "24",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Distraught, hand-wringing"
              },
              {
                "id": "Face_Guilt_28",
                "speaker": "Player",
                "text": "Yes. But I guess you didn't.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Face_Guilt_4",
                "speaker": "Visage of Guilt",
                "text": "No. I thought there might be more to take. Hidden inside.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Haunted, almost confused"
              },
              {
                "id": "Face_Guilt_24",
                "speaker": "Visage of Guilt",
                "text": "I opened them. Searched inside them.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Self loathing creeping in"
              },
              {
                "id": "Face_Guilt_2",
                "speaker": "Player",
                "text": "Why would you do something like that?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Face_Guilt_22",
                "speaker": "Visage of Guilt",
                "text": "Some wouldn't pay their dues. Some couldn't.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Rising disgust with each sentence - but a twinge of malice with the last few words"
              },
              {
                "id": "Face_Guilt_14",
                "speaker": "Visage of Guilt",
                "text": "They paid a different price in the end.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Frightened, even horrified"
              },
              {
                "id": "Face_Guilt_10",
                "speaker": "Player",
                "text": "Perhaps you'd feel less guilty if you paid for your crimes too.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Face_Guilt_17",
                "speaker": "",
                "text": "False",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Face_Guilt_9",
                "speaker": "Visage of Guilt",
                "text": "My guilt is my payment. My debts, bottomless.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_TollmasterDead": [
              {
                "id": "PAD_TollmasterDead_0",
                "speaker": "Player",
                "text": "Free from the curse, now - perhaps she'll find peace.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_ConfiscatedItemsPlaque": [
              {
                "id": "AD_ConfiscatedItemsPlaque_0",
                "speaker": "Narrator",
                "text": "*Seized Inventory*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_TollhouseMaster_Buff_005_Combat": [
              {
                "id": "AD_TollhouseMaster_Buff_005_Combat_0",
                "speaker": "Gerringothe Thorm",
                "text": "NO MORE TAKING. GIVE. GIVE. GIVE!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_ThayCrate": [
              {
                "id": "PAD_ThayCrate_0",
                "speaker": "Player",
                "text": "All the way from Thay. Jewels and gems, probably - one's still in there.<br>",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_Entrance_1P": [
              {
                "id": "PAD_Entrance_1P_0",
                "speaker": "Player",
                "text": "Crates and caravans. Must be where tolls were collected.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Face_Heartlessness": [
              {
                "id": "Face_Heartlessness_0",
                "speaker": "Visage of Heartlessness",
                "text": "You'll find much of sentimental value among the confiscated goods. That is to say - junk.",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Tollhouse_HasMet_Heartlessness = False"
                ],
                "setflags": [
                  "TWN_Tollhouse_HasMet_Heartlessness"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: The visage is disgusted at how little people had. Full poverty-shaming (because it wanted more.)"
              }
            ],
            "PAD_ConfiscatedItemPlaqueUsed": [
              {
                "id": "PAD_ConfiscatedItemPlaqueUsed_0",
                "speaker": "Player",
                "text": "Well, we're not getting in this way.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Face_Obedience": [
              {
                "id": "AD_Face_Obedience_0",
                "speaker": "Visage of Obedience",
                "text": "All goods are subject to inspection and taxation.",
                "node_type": "normal",
                "checkflags": [
                  "5d7c5690-f498-6124-0ded-9b3d95a20800_A"
                ],
                "setflags": [
                  "5d7c5690-f498-6124-0ded-9b3d95a20800_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Face_Greed": [
              {
                "id": "Face_Greed_0",
                "speaker": "Visage of Greed",
                "text": "Leave it. LEAVE IT. It's MINE.",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Tollhouse_State_VinesDestroyed"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_TollhouseMaster_Buff_003_Combat": [
              {
                "id": "AD_TollhouseMaster_Buff_003_Combat_0",
                "speaker": "Gerringothe Thorm",
                "text": "MINE. MINE!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_TollhouseMaster_Vulnerable_Combat": [
              {
                "id": "AD_TollhouseMaster_Vulnerable_Combat_0",
                "speaker": "Gerringothe Thorm",
                "text": "NO! TAKE NO MORE!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_TollhouseMaster_Buff_001_Combat": "Combat AD",
            "TollhouseMaster": "Dialogue with the Toll collector.She will continuously, endlessly demand gold from the player. You can convince her to let you pass (hard persuade), or you will have to fight  (once you stop giving it gold, or once you run out of gold).",
            "AD_TollhouseMaster_Buff_004_Combat": "Combat AD",
            "AD_Face_Regret": "The Visage of Regret is standing near a window that is looking at the harbor and regreting about not leaving this town.Speaks with the same voice as the shadow-cursed tollmaster, but with a distinct emotional inflectoin. Regret, in this case.",
            "PAD_CormyrCrate": "AD is played after the player used a specific container with emblem of Cormyr.",
            "AD_TollhouseMaster": "Tollhouse, Tollhouse Collector as she's hanging around by herself.",
            "AD_SafeSkeleton": "Player clicks on the skeleton that locked himself in the heavy safe in Tollhouse. This was am employee of Tollhouse and this way he hoped to wait out the fallout of Shadowcurse. But have died in that safe in dramatic way.",
            "AD_Face_Cowardice": "The Visage of Cowardice is hiding in the secret lair, hoping that nobody will find it. Speaks with the same voice as the shadow-cursed tollmaster, but with a distinct emotional inflectoin. Cowardice, in this case.",
            "AD_TollhouseMaster_Buff_002_Combat": "Combat AD",
            "PAD_DalelandsCrate": "AD is played after the player used a specific container with emblem of Dalelands.",
            "Face_Guilt": "The Visage of Guilt, hovering in front of several skeletons (dead adventurers that found their end by the hands of the Tollhouse Collector).",
            "PAD_TollmasterDead": "In Town in Act 2 we meet the Tollmaster that went crazy about gold",
            "AD_ConfiscatedItemsPlaque": "Plaque in the Tollhouse, outside a room full of confiscated items.",
            "AD_TollhouseMaster_Buff_005_Combat": "Combat AD",
            "PAD_ThayCrate": "AD is played after the player used a specific container with emblem of Thay.",
            "PAD_Entrance_1P": "VB that is played when you approach the Tollhouse in SCL",
            "Face_Heartlessness": "The Visage of Heartlesness is standing near some shelves with goods that it took from people.",
            "PAD_ConfiscatedItemPlaqueUsed": "You've just clicked on a plaque beside a door in the Tollhouse, which tells you that room is for confiscated items. The way into the room is blocked by vegetation/fallen masonry (don't be specific).",
            "AD_Face_Obedience": "The Visage of Obedience is standing near the entrance as the player enters the Tollhouse.",
            "Face_Greed": "This Visage of Greed is standing in front of a room full of items it confiscated that became inaccessible once the shadows and vines moved in and blocked the room off.",
            "AD_TollhouseMaster_Buff_003_Combat": "Combat AD",
            "AD_TollhouseMaster_Vulnerable_Combat": "Combat AD"
          }
        },
        "twn_helpwantedposter": {
          "scenario_name": "twn_helpwantedposter",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "twn_hospitalplaque": {
          "scenario_name": "twn_hospitalplaque",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "twn_marchingarmy": {
          "scenario_name": "twn_marchingarmy",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "twn_distillerysignpost": {
          "scenario_name": "twn_distillerysignpost",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "twn_korrillathespy": {
          "scenario_name": "twn_korrillathespy",
          "session_sequence": [
            "Korrilla"
          ],
          "paths": {
            "Korrilla": [
              "Korrilla_0"
            ]
          },
          "node_data": {
            "Korrilla": [
              {
                "id": "Korrilla_0",
                "speaker": "Korrilla",
                "text": "Tr-tread carefully. You are still... necessary.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "GLO_KorrillaTheSpy_State_Talked"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: the ellipses and hyphens here are to denote her struggling to get the words out as she's afflicted with shadowcurse"
              }
            ]
          },
          "session_synopses": {
            "Korrilla": "This is a fallback one-liner. In case the Player manages to approach her an initiate dialog in TWN, Korrilla gives a cryptic one-liner to the player. No Hasmet node is needed, as she teleports away right after.She would be struggling with the shadow curse as she says this line."
          }
        },
        "twn_distillery": {
          "scenario_name": "twn_distillery",
          "session_sequence": [
            "Brewer_Zombie_01",
            "ResearchNotes",
            "PAD_Brewer_Poison",
            "AD_Brewer_Zombie_02",
            "AD_Brewer_Zombie_03",
            "AD_Brewer_Hallucinating_001_Combat",
            "AD_HalflingsSign",
            "PAD_Entrance_1P",
            "AD_Brewer",
            "AD_WaningMoonSign",
            "AD_Brewer_Zombie_04",
            "AD_Brewer_Necro_Combat",
            "AD_Brewer_Physical_Combat",
            "AD_Brewer_Drunk_003_Combat",
            "AD_Brewer_Poison_Combat",
            "PAD_ArmInBarrel",
            "PAD_Brewer_Hallucinating",
            "Brewer",
            "AD_Brewer_Fire_Combat",
            "AD_Brewer_Cold_Combat"
          ],
          "paths": {
            "Brewer_Zombie_01": [
              "Brewer_Zombie_01_20",
              "Brewer_Zombie_01_13",
              "Brewer_Zombie_01_4",
              "Brewer_Zombie_01_3",
              "Brewer_Zombie_01_22"
            ],
            "ResearchNotes": [
              "ResearchNotes_26",
              "ResearchNotes_9",
              "ResearchNotes_19",
              "ResearchNotes_4",
              "ResearchNotes_0",
              "ResearchNotes_11",
              "ResearchNotes_16",
              "ResearchNotes_21",
              "ResearchNotes_20"
            ],
            "PAD_Brewer_Poison": [
              "PAD_Brewer_Poison_0"
            ],
            "AD_Brewer_Zombie_02": [
              "AD_Brewer_Zombie_02_0"
            ],
            "AD_Brewer_Zombie_03": [
              "AD_Brewer_Zombie_03_0"
            ],
            "AD_Brewer_Hallucinating_001_Combat": [
              "AD_Brewer_Hallucinating_001_Combat_0"
            ],
            "AD_HalflingsSign": [
              "AD_HalflingsSign_0"
            ],
            "PAD_Entrance_1P": [
              "PAD_Entrance_1P_0"
            ],
            "AD_Brewer": [
              "AD_Brewer_1",
              "AD_Brewer_5"
            ],
            "AD_WaningMoonSign": [
              "AD_WaningMoonSign_0"
            ],
            "AD_Brewer_Zombie_04": [
              "AD_Brewer_Zombie_04_0"
            ],
            "AD_Brewer_Necro_Combat": [
              "AD_Brewer_Necro_Combat_0"
            ],
            "AD_Brewer_Physical_Combat": [
              "AD_Brewer_Physical_Combat_0"
            ],
            "AD_Brewer_Drunk_003_Combat": [
              "AD_Brewer_Drunk_003_Combat_0"
            ],
            "AD_Brewer_Poison_Combat": [
              "AD_Brewer_Poison_Combat_0"
            ],
            "PAD_ArmInBarrel": [
              "PAD_ArmInBarrel_0"
            ],
            "PAD_Brewer_Hallucinating": [
              "PAD_Brewer_Hallucinating_0"
            ],
            "Brewer": [
              "Brewer_179",
              "Brewer_258",
              "Brewer_288",
              "Brewer_49",
              "Brewer_103",
              "Brewer_25"
            ],
            "AD_Brewer_Fire_Combat": [
              "AD_Brewer_Fire_Combat_0"
            ],
            "AD_Brewer_Cold_Combat": [
              "AD_Brewer_Cold_Combat_0"
            ]
          },
          "node_data": {
            "Brewer_Zombie_01": [
              {
                "id": "Brewer_Zombie_01_20",
                "speaker": "Blighted Barman",
                "text": "D-do mess our pardon. Our master d-distiller spill's quite the caused.",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Distillery_HasMet_Zombie_01 = False",
                  "TWN_Distillery_State_PeacefulResolution"
                ],
                "setflags": [
                  "TWN_Distillery_HasMet_Zombie_01"
                ],
                "goto": "",
                "link": "3",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Brewer_Zombie_01_13",
                "speaker": "Blighted Barman",
                "text": "Now settle your mind, chum, and get your shine on. Be will it what?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "3",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Brewer_Zombie_01_4",
                "speaker": "Player",
                "text": "Nothing for me, thanks.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "15",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Brewer_Zombie_01_3",
                "speaker": "Blighted Barman",
                "text": "M-moon Mountain Dark, coming righ-righ-right up. A man of proper t-taste!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "15",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Stuck on repeat, going through the motions and 'glitching out'."
              },
              {
                "id": "Brewer_Zombie_01_22",
                "speaker": "Player",
                "text": "Leave.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ResearchNotes": [
              {
                "id": "ResearchNotes_26",
                "speaker": "Narrator",
                "text": "*Research notes. They describe a powerful venom extracted from a rare purple worm. Distiller Thisobald Thorm sought to create a fatal poison using the worm's gullet.*",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Distillery_Knows_AlchemyStashLocation = False",
                  "TWN_Distillery_HasMet_ResearchNotes = False"
                ],
                "setflags": [
                  "TWN_Distillery_HasMet_ResearchNotes"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ResearchNotes_9",
                "speaker": "Narrator",
                "text": "*He procured several parts of a gullet, but rinsed one in error. The poison he brewed was noxious - but not fatal.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ResearchNotes_19",
                "speaker": "Narrator",
                "text": "*He devoted months to formulating a deadly poison with the remaining ingredients, without success.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ResearchNotes_4",
                "speaker": "Narrator",
                "text": "*After exhaustive experimentation, he was able to make a near-deadly extract from the glands. But to complete his poison, Thisobald required one last ingredient:*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ResearchNotes_0",
                "speaker": "Narrator",
                "text": "*The petals of a corpse rose.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ResearchNotes_11",
                "speaker": "Narrator",
                "text": "*The book's index reveals corpse roses may grow near tombs, mausoleums, and particularly redolent cadavers.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ResearchNotes_16",
                "speaker": "Narrator",
                "text": "*Thisobald enlisted a courier from Baldur's Gate to obtain corpse rose petals and other ingredients and deliver them to a covert location.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ResearchNotes_21",
                "speaker": "Narrator",
                "text": "*Unfortunately, a deep purple stain darkens the final page, obscuring the parcel's destination.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ResearchNotes_20",
                "speaker": "Player",
                "text": "Leave.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_Brewer_Poison": [
              {
                "id": "PAD_Brewer_Poison_0",
                "speaker": "Player",
                "text": "Hells - his brew's turned to poison.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Brewer_Zombie_02": [
              {
                "id": "AD_Brewer_Zombie_02_0",
                "speaker": "Blighted Patron",
                "text": "Finally, there might be some more drink for the rest of us.",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Distillery_State_PeacefulResolution",
                  "0b8c6047-3086-fee9-4fbe-4a29d5a3928d_C"
                ],
                "setflags": [
                  "0b8c6047-3086-fee9-4fbe-4a29d5a3928d_C = False",
                  "0b8c6047-3086-fee9-4fbe-4a29d5a3928d_A = False",
                  "0b8c6047-3086-fee9-4fbe-4a29d5a3928d_B = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: reflecting on the fact the brewer just died, but with little emotion"
              }
            ],
            "AD_Brewer_Zombie_03": [
              {
                "id": "AD_Brewer_Zombie_03_0",
                "speaker": "Blighted Troubador",
                "text": "Drink has torn his mortal stitches - Say, hey, for the pub!",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Distillery_State_PeacefulResolution",
                  "6d7dd0b2-3ea0-9fe3-4c7f-98061f69f70b_A"
                ],
                "setflags": [
                  "6d7dd0b2-3ea0-9fe3-4c7f-98061f69f70b_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: referring to the brewer, who just died"
              }
            ],
            "AD_Brewer_Hallucinating_001_Combat": [
              {
                "id": "AD_Brewer_Hallucinating_001_Combat_0",
                "speaker": "Thisobald Thorm",
                "text": "Imps! No, no - illusions, delusions, delirium.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_HalflingsSign": [
              {
                "id": "AD_HalflingsSign_0",
                "speaker": "Narrator",
                "text": "*Halflings and gnomes - order here.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_Entrance_1P": [
              {
                "id": "PAD_Entrance_1P_0",
                "speaker": "Player",
                "text": "That sign above. This must be a brewery - or distillery.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Brewer": [
              {
                "id": "AD_Brewer_1",
                "speaker": "Thisobald Thorm",
                "text": "Never enough.",
                "node_type": "normal",
                "checkflags": [
                  "b0d721a3-ca68-1e03-4e19-6eeddf6dd9ab_A"
                ],
                "setflags": [
                  "b0d721a3-ca68-1e03-4e19-6eeddf6dd9ab_B"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: melancholy"
              },
              {
                "id": "AD_Brewer_5",
                "speaker": "Thisobald Thorm",
                "text": "Always empty.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: melancholy"
              }
            ],
            "AD_WaningMoonSign": [
              {
                "id": "AD_WaningMoonSign_0",
                "speaker": "Narrator",
                "text": "*The Waning Moon - Distillery.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Brewer_Zombie_04": [
              {
                "id": "AD_Brewer_Zombie_04_0",
                "speaker": "Blighted Actor",
                "text": "Wait... what am I doing here again?",
                "node_type": "normal",
                "checkflags": [
                  "4823073f-d1c4-5fe7-de96-d63538c05fbb_A"
                ],
                "setflags": [
                  "4823073f-d1c4-5fe7-de96-d63538c05fbb_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Brewer_Necro_Combat": [
              {
                "id": "AD_Brewer_Necro_Combat_0",
                "speaker": "Thisobald Thorm",
                "text": "Drink of dead, dying, death. Order up.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Brewer_Physical_Combat": [
              {
                "id": "AD_Brewer_Physical_Combat_0",
                "speaker": "Thisobald Thorm",
                "text": "Blrgh. Need... relief...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Brewer_Drunk_003_Combat": [
              {
                "id": "AD_Brewer_Drunk_003_Combat_0",
                "speaker": "Thisobald Thorm",
                "text": "Blrgh. Don't feel so good...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Brewer_Poison_Combat": [
              {
                "id": "AD_Brewer_Poison_Combat_0",
                "speaker": "Thisobald Thorm",
                "text": "I've picked your poison.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_ArmInBarrel": [
              {
                "id": "PAD_ArmInBarrel_0",
                "speaker": "Player",
                "text": "Is that... a human arm? Do I even want to know?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_Brewer_Hallucinating": [
              {
                "id": "PAD_Brewer_Hallucinating_0",
                "speaker": "Player",
                "text": "Is that... yes! His hallucinations made real.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Brewer": [
              {
                "id": "Brewer_179",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "85",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: The brewer drags itself to a bar counter, on which are two full mugs."
              },
              {
                "id": "Brewer_258",
                "speaker": "Thisobald Thorm",
                "text": "Drink, gulp it down, wet your whistle. Tell your story.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "85",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Twisted and creepy, a jovial barman who has been corrupted by curse."
              },
              {
                "id": "Brewer_288",
                "speaker": "Player",
                "text": "What in all Nine Hells are you?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "85",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Brewer_49",
                "speaker": "Thisobald Thorm",
                "text": "Son of Thorm. Sot of Sword Coast.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "85",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Thorm pronounced like Thorn)"
              },
              {
                "id": "Brewer_103",
                "speaker": "Thisobald Thorm",
                "text": "Go on. Cheers, bottoms up, down the hatch.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "85",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: still an offer, but becoming more of a threat"
              },
              {
                "id": "Brewer_25",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_Random"
                ],
                "goto": "",
                "link": "85",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Brewer_Fire_Combat": [
              {
                "id": "AD_Brewer_Fire_Combat_0",
                "speaker": "Thisobald Thorm",
                "text": "Fire and flames, blaze and burn.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Brewer_Cold_Combat": [
              {
                "id": "AD_Brewer_Cold_Combat_0",
                "speaker": "Thisobald Thorm",
                "text": "Brr. Cold, chilled, frozen.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "Brewer_Zombie_01": "A zombie who was once the waiter. He is stuck on repeat, going through the motions and 'glitching out'.",
            "ResearchNotes": "Research notes of the Brewer.He experimented with different poisons on different creatures, trying to figure out the most effective ways of poisoning them. This book also contains info about his attempts to create a Purple Worm Poison.",
            "PAD_Brewer_Poison": "Played during the fight with the Brewer.",
            "AD_Brewer_Zombie_02": "One of the zombie patrons in the Brewery. Just wandering around.He's been trapped in the shadow-curse for a hundred years, and has been drained of most of his emotions. What lingers is a sense of sadness - he misses the joy of the old times.",
            "AD_Brewer_Zombie_03": "Zombie Patron #3 in BreweryTroubador singing/chanting drinking rhymes.",
            "AD_Brewer_Hallucinating_001_Combat": "Combat AD",
            "AD_HalflingsSign": "Plaque that says \"Halfings and gnomes order here.\"",
            "PAD_Entrance_1P": "VB that is played when you approach the Distillery in SCL",
            "AD_Brewer": "Brewer in Shadow-Cursed Town. Waiting for someone to join him as he stands behind the bar.The brewer was once an ordinary person, but has been twisted by the shadowcurse and is now a huge, bloated monstrosity. He speaks in fragments, and is menacing but with an air of melancholy. He wants to drink until he forgets everything, and would like to bring everyone into oblivion with him.",
            "AD_WaningMoonSign": "Click on the sign of Distillery in TWN",
            "AD_Brewer_Zombie_04": "Zombie Patron #4 in Brewery. Used to be an actor, was on her way to Baldur's Gate. Like the other patrons in the brewery, she's been trapped in the shadow-curse for a hundred years, and is mostly drained of emotions.",
            "AD_Brewer_Necro_Combat": "Combat AD",
            "AD_Brewer_Physical_Combat": "Combat AD",
            "AD_Brewer_Drunk_003_Combat": "Combat AD",
            "AD_Brewer_Poison_Combat": "Combat AD",
            "PAD_ArmInBarrel": "There is a barrel with an arm sticking out of it, Clicking on it makes the characters comment. The comment is different depending on whether the player has read the Brewer's diary.",
            "PAD_Brewer_Hallucinating": "Played during the fight with the Brewer.",
            "Brewer": "Dialog with the Brewer. He is a bloated creature who asks us to drink ourselves into oblivion with him. Player choices lead either to combat, or to the brewer drinking himself until he explodes.Twisted and creepy, a jovial barman who has been corrupted by curse to become a monstrous drunk. He speaks in fragments, swinging between melancholy, menace, and humour. Extra emphasis and derangment on bold words.",
            "AD_Brewer_Fire_Combat": "Combat AD",
            "AD_Brewer_Cold_Combat": "Combat AD"
          }
        },
        "twn_aasimarsurvivor": {
          "scenario_name": "twn_aasimarsurvivor",
          "session_sequence": [
            "PAD_DoorSpotted"
          ],
          "paths": {
            "PAD_DoorSpotted": [
              "PAD_DoorSpotted_0"
            ]
          },
          "node_data": {
            "PAD_DoorSpotted": [
              {
                "id": "PAD_DoorSpotted_0",
                "speaker": "Player",
                "text": "Strange - the dust on the leftmost door has been wiped clean.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_DoorSpotted": "The player discovers a door to the hideout where an Aasimar Harper had survived longer than most would in the curse."
          }
        },
        "twn_vlaakithattack": {
          "scenario_name": "twn_vlaakithattack",
          "session_sequence": [
            "AD_Caster_000_TakingTurn_001",
            "Melee_000_Dead",
            "AD_Caster_000_TakingTurn_002"
          ],
          "paths": {
            "AD_Caster_000_TakingTurn_001": [
              "AD_Caster_000_TakingTurn_001_0"
            ],
            "Melee_000_Dead": [
              "Melee_000_Dead_23",
              "Melee_000_Dead_24",
              "Melee_000_Dead_21",
              "Melee_000_Dead_6"
            ],
            "AD_Caster_000_TakingTurn_002": [
              "AD_Caster_000_TakingTurn_002_0"
            ]
          },
          "node_data": {
            "AD_Caster_000_TakingTurn_001": [
              {
                "id": "AD_Caster_000_TakingTurn_001_0",
                "speaker": "Ch'r'ai Tska'an",
                "text": "The queen demands your sacrifice.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Melee_000_Dead": [
              {
                "id": "Melee_000_Dead_23",
                "speaker": "Narrator",
                "text": "*The corpse regards you lifelessly.*",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Melee_000_Dead_24",
                "speaker": "Player",
                "text": "Who are you?",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [
                  "GLO_SpeakWithDead_Event_QuestionAsked"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Melee_000_Dead_21",
                "speaker": "Veteran Warrior Bradi'ith",
                "text": "Bradi'ith...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Melee_000_Dead_6",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Caster_000_TakingTurn_002": [
              {
                "id": "AD_Caster_000_TakingTurn_002_0",
                "speaker": "Ch'r'ai Tska'an",
                "text": "Ch'mar, zal'a Vlaakith!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Vlaakith's will above all - cheh-MAR ZAL-ah VLAH-kith"
              }
            ]
          },
          "session_synopses": {
            "AD_Caster_000_TakingTurn_001": "Combat AD",
            "Melee_000_Dead": "SwD dialog for S_TWN_VlaakithAttack_Melee_000. Players are ambushed by a group of giths sent by Vlaakith to follow up on her threats.https://larianstudios.atlassian.net/browse/GUS-210886",
            "AD_Caster_000_TakingTurn_002": "Combat AD"
          }
        },
        "twn_monkamulet": {
          "scenario_name": "twn_monkamulet",
          "session_sequence": [
            "AD_HospitalComment"
          ],
          "paths": {
            "AD_HospitalComment": [
              "AD_HospitalComment_0"
            ]
          },
          "node_data": {
            "AD_HospitalComment": [
              {
                "id": "AD_HospitalComment_0",
                "speaker": "",
                "text": "Ho ho, that unmistakable Sharran spirit. Ever so eager to stab, prod, and finger.",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Hospital_State_SurgeonPermaDefeated = False",
                  "TWN_Hospital_State_NursesKilledSurgeon = False",
                  "TWN_Hospital_Event_MakeNursesKillEachOther = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_HospitalComment": "The spirit of the amulet comments on the shadow-cursed town's hospital, and the Sharran hospital stuff that aren't shy of torture and mutilation."
          }
        },
        "twn_prayersandcharms": {
          "scenario_name": "twn_prayersandcharms",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "twn_centralsquare": {
          "scenario_name": "twn_centralsquare",
          "session_sequence": [
            "PAD_PlaqueFirstUse",
            "PAD_EnteredSanctuary",
            "SharAltar",
            "Plaque_002_AD",
            "Plaque_003_AD"
          ],
          "paths": {
            "PAD_PlaqueFirstUse": [
              "PAD_PlaqueFirstUse_0"
            ],
            "PAD_EnteredSanctuary": [
              "PAD_EnteredSanctuary_0"
            ],
            "SharAltar": [
              "SharAltar_19",
              "SharAltar_11",
              "SharAltar_15",
              "SharAltar_7",
              "SharAltar_3",
              "SharAltar_8",
              "SharAltar_10"
            ],
            "Plaque_002_AD": [
              "Plaque_002_AD_0"
            ],
            "Plaque_003_AD": [
              "Plaque_003_AD_0"
            ]
          },
          "node_data": {
            "PAD_PlaqueFirstUse": [
              {
                "id": "PAD_PlaqueFirstUse_0",
                "speaker": "Player",
                "text": "Was that a click I heard? There's something about these plaques...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_EnteredSanctuary": [
              {
                "id": "PAD_EnteredSanctuary_0",
                "speaker": "Player",
                "text": "The curse has no effect here - what is this place?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "SharAltar": [
              {
                "id": "SharAltar_19",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [
                  "TWN_CentralSquare_SharAltar_Event_PassedPassiveReligion = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "7",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: The player stands before an altar of shar. Resting upon it is an ornate dagger."
              },
              {
                "id": "SharAltar_11",
                "speaker": "Player",
                "text": "",
                "node_type": "normal",
                "checkflags": [
                  "SHAR = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "2",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "SharAltar_15",
                "speaker": "",
                "text": "True",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "2",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "SharAltar_7",
                "speaker": "Narrator",
                "text": "*An altar to Shar. It appears to seek pray, and a blood offering - your blood.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "TWN_CentralSquare_SharAltar_Event_PassedPassiveReligion"
                ],
                "goto": "",
                "link": "2",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "SharAltar_3",
                "speaker": "Player",
                "text": "Take up the dagger, recite Shar's wisdom and offer blood from your arm.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "TWN_CentralSquare_State_RecitedDogmas"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "SharAltar_8",
                "speaker": "",
                "text": "",
                "node_type": "visualstate",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "SharAltar_10",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [
                  "TWN_CentralSquare_Event_GotBlessing"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "CinematicNodeContext: With the ritual dagger in their right hand, the player quickly sliced their left palm, wincing in pain.\rInternalNodeContext: Rewards will appear on two pedestals in gameplay following this node."
              }
            ],
            "Plaque_002_AD": [
              {
                "id": "Plaque_002_AD_0",
                "speaker": "Plaque",
                "text": "O U R - L <br>M I S T R <br>W H E N - N I <br>T H O R M -",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Plaque_003_AD": [
              {
                "id": "Plaque_003_AD_0",
                "speaker": "Plaque",
                "text": "A D Y - O <br>E S S - O F <br>G H T - F <br>S H A L",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_PlaqueFirstUse": "Clicking on one of the plaquet at the central square in Town for the first time. The plaques must be pressed in the right order to unlock a secret room, and have what looks like nonsense written on them, but is actually the clue to the order.",
            "PAD_EnteredSanctuary": "This PAD is played when you enter the secret Shar sanctuary beneath the Central Sqaure of the Town. It's free of the Shadow Curse and the player character comments on that.",
            "SharAltar": "Altar dedicated to Shar. Has a ritual dagger on it. The altar appears when you activate three tapestries with dogmas of Shar.When the altar appears the door that leads outside gets locked. You need to recite the dogmas at the altar and spill your blood on it to open the door.If you a follower of shar you can do it with not issue and get a blessing.If you aren't a follower of shar, but you passed all the saving throws you can also get a blessing of shar by reciting the dogmas.If you didn't pass all the saving throws and perform a ritual then the guardians appear because you aren't worthy.If you desecrate the altar by taking the dagger then the guardians appear no matter who you are.",
            "Plaque_002_AD": "One of the plaque in the Central Square.You need to click on the 3 plaques in a correct sequence to unlock a secret entrance to the secret room underneath the central square.The correct sequence: 2-3-1The plaques should either tell the history of Ketheric Thorm / this outpost or be some sort of propaganda.",
            "Plaque_003_AD": "One of the plaque in the Central Square.You need to click on the 3 plaques in a correct sequence to unlock a secret entrance to the secret room underneath the central square.The correct sequence: 2-3-1The plaques should either tell the history of Ketheric Thorm / this outpost or be some sort of propaganda."
          }
        },
        "twn_masonguild": {
          "scenario_name": "twn_masonguild",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        }
      },
      "final_flags": [
        "SCL_Drider_HasMet_HarperCaster000",
        "HAV_Isobel_KidnappingQuestions_DarkUrge",
        "GOB_SpiderNest_State_SpidersHostile",
        "DEN_AttackOnDen_HasMet_Prodigy",
        "DEN_CapturedGoblin_GuardsHasMet",
        "HAV_HarperScouts_Harper_003_HasMet_Protected",
        "GOB_Checkpoint_Event_MoveToCamp",
        "UND_MyconidRevenge_Event_TakeHead",
        "8a9a14b0-87da-5c78-aa76-7a266de7a786_Phase1",
        "HAV_Umi_NightsongFreed_HasMet",
        "PLA_TavernInvestigation_Knows_AskedStelmane",
        "DEN_AttackOnDen_HasMet_Tiefling010Victory",
        "GLO_Moonrise_Knows_AbsoluteAtGrymforge",
        "CRA_DeadPrisoner_Dead_AskedQuestion",
        "UND_DuergarMutineerFollowUp_Event_Happened",
        "CHA_Outside_Event_DoorGuardConvinced",
        "e0b6dfeb-2923-e0ad-1dc5-2a5d1e055e16_local1",
        "DEN_AttackOnDen_HasMet_GrieflingFriend",
        "DEN_AttackOnDen_HasMet_Tiefling001",
        "GOB_QuartermasterFlimsy_HasMet",
        "HAV_SavingPrisoners_HasMet_Manip",
        "GEN_TransferNPCPayment_2",
        "DEN_AttackOnDen_Event_OpenGateAfterCombat",
        "5e9c4c72-4f56-2646-ce36-88207d2dc33c_KinSaved",
        "GOB_OwlbearCub_Event_InvitedToCamp",
        "MOO_Jailbreak_HasMet_Guard004",
        "PLA_Desire_Knows_RavengardTaken",
        "DEN_DruidServant005_Knows_TalkedAboutLockdown",
        "UND_SocietyOfBrilliance_MindFlayer_State_MindFlayerFeeding",
        "PLA_ConflictedFlind_Event_MindControlDamage_Minor",
        "11580029-0578-1ea8-3575-6a0f6020d1b2_B",
        "DEN_AttackOnDen_HasMet_Servant005Victory",
        "PLA_Desire_State_WyllComTrack",
        "CHA_Chapel_Event_OpenedJergalsTomb",
        "UND_DarkLake_State_ClaimedGekhWasDead",
        "DEN_AttackOnDen_Pet004_HasMet",
        "HAV_Isobel_HasMetDefault",
        "GLO_Player_Knows_MoonlanternExists",
        "GOB_PainPriest_Event_Reward",
        "2da46374-abab-9219-f7ce-2a002cfd72a5_a",
        "DEN_AttackOnDen_Ranged_001_HasMet",
        "GLO_Volo_HasMet_Personally",
        "GOB_PainPriest_State_ReactedToPenance",
        "8916beac-0385-3df9-de07-8be3cc6752a7_A",
        "da38cd0f-efef-6809-231d-26f71308cd07_B",
        "HAV_ProdigyLament_Knows_RolanAlive",
        "DEN_RaidingParty_Event_SkipConfrontation",
        "ORI_INCLUSION_SHADOWHEART",
        "GLO_TadpoledCount6",
        "PLA_TavernInvestigation_Quest_WallCollapsed",
        "PLA_Refugee_002_TollhouseMentioned",
        "DEN_AttackOnDen_HasMet_RobberKid",
        "876dbe2e-5070-a2c1-0148-cc993aa62289_B",
        "FOR_PriestsConqueringGod_AlliedPlayer",
        "HAG_GurHunter_Dead_Knows_Hunter",
        "HAV_TieflingSurvivors_State_DidNotPromiseToSaveMol",
        "DEN_AttackOnDen_HasMet_PickpocketVictory",
        "DEN_GuardedEntrance_State_ParentsKnowDeath",
        "GLO_IronhandGnomes_Knows_WulbrenInMoonrise",
        "MOO_Background_Outlander_CatBusiness",
        "Den_Thieflings_InterferingGuard_PCGotLore",
        "WLD_FOR_GnomeGoblinsAngry",
        "26007d1c-bac9-a896-4f4d-19a9d2a1e66f_A",
        "MOO_KitchenFight_HasMet_GnollMaster",
        "HAV_LastLightOx000_HasMet_SpeakWithAnimals",
        "GOB_Checkpoint_Guard01_HasMet",
        "c7cbc714-5e48-c78a-0867-2ce81a42d681_B",
        "HAV_TieflingSurvivors_HasMet_Mattis",
        "WLD_UnfortunateGnome_PayPassage",
        "4c78f756-720d-a285-a3e6-8f69a6069abc_Step1",
        "cd4b312f-5a40-b8c1-1ecb-0862c829a479_A",
        "5ebae00c-47d8-736c-6738-4ee56cebbc49_B",
        "GLO_Prodigy_State_ToldSiblingsProdigyDead",
        "MOO_Jailbreak_Event_ProdigyIntro",
        "DEN_General_YoungLovers_HasMet",
        "GOB_PainPriest_Event_CheckHP",
        "6d4ecf46-ffab-ed53-3b19-68607a0e1309_B",
        "GLO_Desire_HasMet",
        "b43d3bc7-f10d-73cc-232e-c1f93cba3ed5_Local2",
        "DEN_AttackOnDen_Pet002_HasMet",
        "FOR_UnfortunateGnome_State_NonCharlatanAccess",
        "UND_MyconidCircle_PlantDuergarHasMet",
        "aa1d4932-8689-5e30-2b17-9b0968663a7a_historysuccess",
        "4823073f-d1c4-5fe7-de96-d63538c05fbb_B",
        "MOO_Execution_Knows_Executioner",
        "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_WyllSpoke",
        "GOB_WolfPens_Worg_002_HasMet",
        "PLA_GithChokepoint_State_FailedReadingMap",
        "PLA_ZhentShipment_Agent_002_StartInclusion",
        "GLO_HAV_TakingIsobel_HasMet_BriefInRoom",
        "SCL_Drider_HarpersAtInn_OneLinerHasMet",
        "4951b7ce-8495-b2c8-badc-beaff0e3d807_H",
        "DEN_ShadowDruid_Event_SetFaithwarden",
        "CRA_DeadPrisoner_Dead_MentionedTadpole",
        "TWN_ArabellaPowers_Event_ShadowsTwisted",
        "GLO_Absolute_Knows_MoonriseTowers",
        "DEN_Rat_Event_MoveToShack",
        "DEN_DruidAttack_HasMet_Protester3AfterAttack",
        "ORI_Inclusion_End_Karlach",
        "UND_WormWall_State_RecognisedCrawlers",
        "GLO_GithChokepoint_DragonAppear",
        "SHA_Merregon_000_HasMet",
        "df3e1892-2ab5-7b69-e57b-a75504e1a8f2_B",
        "94726285-a32b-9d8e-579f-5aa051e986b7_Picture",
        "10297257-36dd-3799-f681-657656779d4a_TieflingsLaezelAD1",
        "ORI_Inclusion_End_Wyll",
        "HAV_Siege_Intro_JaheiraAggroToPlayer",
        "DEN_AttackOnDen_HasMet_BackupLeader",
        "SHA_LastJusticiar_RatsNegotiation_Event_Hasmet",
        "SHA_LastJusticiar_State_StudiedDiplorat",
        "GLO_HeadRemoval_Event_HeadToInventory",
        "CHA_Jergal_Event_AttemptedAttack",
        "9b4c05c6-0a79-ea8d-c351-43d6fbb04abc_Story1",
        "GOB_AbsoluteCultistStiff_HasMet",
        "GLO_Shadowcurse_Knows_FromGnome",
        "PLA_StuckHalfElf_Knows_ExplainedDowry",
        "FOR_BugBearLove_Event_MovePlayerInside",
        "ddb63ed1-6bbb-2251-c4d6-b1c59315e195_A",
        "DEN_Stargazing_Event_SawDragon",
        "SCL_Drider_HarperRanger_000_AtAmbush_HasMet",
        "SHA_LastJusticiar_Event_JusticiarTransforms",
        "ORI_INCLUSION_ASTARION",
        "FOR_UnfortunateGone_TiedUpHasmet",
        "HAG_Hagspawn_State_JakeBerserk",
        "6cf6ff37-64f7-3ccf-d702-ee2025510422_B",
        "UND_EbonLake_Event_MoveToLake",
        "FOR_SeluneStash_NoticeStashSeal_CommentedOnSeal",
        "GOB_Torturers_Rat_001_HasMet",
        "GOB_Scrying_NoddedOrShrugged",
        "DEN_BirdSender_HasMet_GobLeadersDead",
        "a759296c-5d41-f5b9-7d31-1c70d1e10dc7_Once",
        "8ab0520b-3a8d-822f-1934-336e2d24e0a0_B",
        "989f8f48-9328-2eca-3aa2-15007aabd48b_MindHasBeenRead",
        "d3eb78cf-ff8c-1e7a-7df7-4b6a04226b17_B",
        "DEN_HarpyMeal_Event_OriginCharm3",
        "683cb55e-08b9-c865-78a6-4e047ee62a24_B",
        "GLO_Tadpoled_UsedToday1",
        "GLO_HAV_TakingIsobel_HeardOfIsobel",
        "DEN_Thieflings_Event_PartnerQuestionAsked",
        "HAG_SurrogateMother_HasMet",
        "3e7a6665-f36f-0ddb-3882-7d68260b2104_B",
        "b2a52f0b-5fa8-d275-f080-0fc8edbe1faf_B",
        "GOB_GoblingKing_Event_HealerPersuasion",
        "MOO_Jailbreak_Event_SpeakToGnomesWarning",
        "TWN_Hospital_Reception_Receptionist_HasMet",
        "UND_DuergarCamp_State_DocksHostile",
        "PLA_ZhentShipment_Agent_001_StartInclusion",
        "57c003e7-0932-6f0c-e655-99025a4abe3a_B",
        "dd1890a0-ff6c-a358-4269-1859078cc21d_B",
        "DEN_AttackOnDen_HasMet_TieflingLeader",
        "09983dce-d7d0-c108-506f-dcadc4044b0a_Derryth_SwD_Who",
        "PLA_TavernInvestigation_State_HasMet",
        "ORI_Inclusion_Karlach",
        "UND_BrokenMoonLantern_HasMet",
        "3483cea8-0c11-9432-2421-6b95b9140d95_B",
        "7611fa51-4b1b-3d2c-a8a5-74c04d9db7fa_AnimalHandlingSuccess",
        "UND_DuergarPatroller_03_HasMet",
        "DEN_DruidAttack_HasMet_HideoutLeaderAfterAttack",
        "DEN_TieflingScam_Event_InspectedBox",
        "GnomeAskedHelp",
        "3f665b97-a69e-81c5-68e6-5b931720721e_Part1",
        "CHA_LaezelRecruitment_MindMeld",
        "MOO_Bazaar_BazaarStander_006_JailbreakSuccess_HasMet",
        "SCL_MastiffPoachers_Knows_ContinualFlame",
        "GLO_ScryingEyes_State_FeltGaze",
        "DEN_GuardedEntrance_HasMet_Guard3",
        "DEN_RaidingParty_Event_KanonOpensGate",
        "SHA_SpiderMeatHunk_HasMet",
        "DEN_AttackOnDen_HasMet_Wyll",
        "PLA_ConflictedFlind_Knows_Gnolls",
        "GLO_TalkedToVoloAboutAbsolute",
        "UND_MyconidCircle_DwarvenAlchemist_BaelenRestoredHasmet",
        "6bc7114f-5279-4374-385e-b396157d5189_B",
        "COL_Barracks_State_InterruptConvinced",
        "GOB_Festivities_Trader_HasMet",
        "DEN_AttackOnDen_HasMet_Tiefling004",
        "ZhentDungeon_AgreedBuy",
        "11d70a18-2aae-47a0-1a18-c486858b1eaf_B",
        "DEN_GruntingKid_Event_DisappearIntoWall",
        "GOB_BattleStations_HasMet_WarDrum",
        "GOB_GoblinJolly_HasMet",
        "UND_MyconidCircle_InjuredGnome_ReportedGrymforgeFate",
        "564fac12-29bd-3abe-d380-0a864e688883_Turn1",
        "COL_TadpolingCentre_MemoryImprint_FirstUse",
        "HAV_TieflingSurvivors_Mirkon_EndInclusion",
        "GLO_KorrillaTheSpy_State_Talked",
        "DEN_Apprentice_HasMet_ReactedToShadowDruids",
        "DEN_CampGeneral_HasMet_Gatekeeper",
        "SCL_Drider_HasMet_CaravanHalfOrcCaster",
        "UND_DeadInTheWater_CorpseDisposerCompanion_HasMet",
        "MOO_InfernalVendor_Knows_AskedAboutResearch",
        "UND_MyconidCircle_MyconidSuspicious_HasMet",
        "MOO_Jailbreak_Knows_ToolsNeeded",
        "DEN_Hideout_State_GivenWarning",
        "PLA_Refugee_002_HasMet",
        "UND_DuergarGuard_AtPier_01_HasMet",
        "DEN_DruidAttack_HasMet_PickpocketTraderAfterAttack",
        "SCE_Jergal_HasMet",
        "6d9043f1-e0c3-43de-a895-b87cae60e0c0_C",
        "DEN_RaidingParty_Event_OpenDenGate",
        "GOB_GoblinKingDead_Event_SaidFugitives",
        "HAV_SavingPrisoners_HasMet_Florrick",
        "HAV_EnteringHaven_State_RevealedArtifact",
        "UND_State_LeaderFreedGnomes",
        "41e56e7f-1722-7350-33dc-aefe523650fe_B",
        "d3d3855d-6721-b089-5c1e-d6d255a46fdc_A",
        "PLA_ZhentDungeon_State_SaidPassword",
        "c3207254-eafb-348b-d327-f690af0e213f_startedattackmove",
        "DEN_AttackOnDen_HasMet_TieflingBard",
        "UND_MyconidCircle_BroodingSovereign_State_InParty",
        "DEN_AttackOnDen_HasMet_Kid004Victory",
        "TWN_MissingPets_State_ReadPosters",
        "DEN_Hideout_Event_LeaveCountdown",
        "1493763b-776c-959c-259a-89f34f326e04_A",
        "DEN_AttackOnDen_ZenBear_HasMet",
        "SCE_TieflingFollowUp_Knows_MolMissingEyepatch",
        "UND_FurnaceSearch_Knows_Xargrim",
        "HAV_ProdigyLament_Knows_SiblingsInMoonrise",
        "DEN_DevilishOx_State_ArcanaCheckComplete_SwA",
        "fa6e2ce0-64f3-bfb8-fb47-10f50f02cadf_AbsoluteMentioned",
        "MOO_Bazaar_HasMet_Bystander01",
        "DEN_AttackOnDen_Event_PassedByEntrance",
        "DEN_Thieflings_TieflingGuard11_HasMet",
        "GOB_Trader_Knows_Goods",
        "DEN_AttackOnDen_HasMet_Tiefling005",
        "HAV_LiftingTheCurse_Portal_Knows_DontTouchPortal",
        "GOB_GoblinToast_Event_ToastSuccess",
        "COL_Barracks_Mistress_Knows_ThinksPlayerIsThrall",
        "DEN_ZenBear_Helped",
        "FOR_KnifeInMeat_State_KnifeBroken",
        "GOB_Festivities_Goblin001_HasMet",
        "2fb08ca0-df67-8450-3f01-c1e1c2a78b59_A",
        "FOR_GnomeGoblin1_HasMet",
        "DEN_TieflingRefugees_Quest_HuntRewardOffered",
        "DEN_RaidingParty_Event_GatekeeperToLever",
        "DEN_DruidAttack_HasMet_ServantGnome",
        "COL_NecroLab_GrandDesignSculpture_HasMet_LaezelInclusion",
        "FOR_GoblinAmbush_Event_StopSpotting",
        "DEN_AttackOnDen_HasMet_RitualDruid003",
        "ReportedToDerryth_BaelenIsAlive",
        "GOB_Owlbear_HasMet_NotChasing",
        "UND_SocietyOfBrilliance_MindFlayer_HasMet",
        "ba2b225d-e9d4-944d-5b4f-b27dd975c626_A",
        "DEN_AttackOnDenDruidLeader_State_HasMet",
        "6fa2b72d-fde1-4ee3-e1d1-f184232f693d_A",
        "DEN_DruidAttack_HasMet_ParentBAfterAttack",
        "DEN_General_Squirrel_LearnedTerritory",
        "MOO_Assault_HasMet_KethericHound",
        "HAG_Hagspawn_Knows_PromisedRaiseHusband",
        "ORI_Shadowheart_Knows_CurseResistant",
        "PLA_ZhentShipment_Agent_001_Inclusion_Start",
        "GOB_RaiderStupid_HasMet",
        "SCL_HarperScouts_BridgePoint_003_Hasmet",
        "83fdf5e9-88b8-19e7-ba8f-ff075d2222ce_PLA_ZhentShipment_Knows_Gnolls",
        "DEN_Apprentice_Event_RevealedTadpole",
        "DEN_Thieflings_Event_HideoutTrespassCrimeResolved",
        "SHA_OrthonLair_Knows_MeatPoisoned",
        "469a1188-028b-0e6b-b595-fa464baa551e_b",
        "GOB_RaiderBold_HasMet",
        "8f847adf-7b8a-3551-cfc0-4ea0c66a999a_F",
        "FoundCounsellor",
        "UND_DuergarCamp_State_SidedNone",
        "99aa7b78-defd-57bc-eabf-a8aa43a030d9_B",
        "a0afae3d-53b0-192d-d822-c61da104f979_A",
        "SCL_DriderHarper_Melee_000_StartInclusion",
        "DEN_Apprentice_State_ShadowDruidPath",
        "DEN_AttackOnDen_HasMet_LeaderKidVictory",
        "FOR_Monitor_Event_TakeFood",
        "GOB_GoblinToast_ThirdGoblinToasted",
        "FOR_Monitor_State_TransformToDevil",
        "DEN_Thieflings_HasMet_Guard2",
        "TWN_MissingPets_State_CheckedPileOfPetsCollars",
        "DEN_Thieflings_HasMet_Mol",
        "ORI_Karlach_HasMet",
        "MOO_Execution_State_PlayerWantedToAttack",
        "GOB_Festivities_HasMet_Ogre_00",
        "GOB_RatRacket_LocalRat_002_HasMet",
        "TWN_Tollhouse_HasMet_Guilt",
        "4466a73c-607a-4a7e-c1e5-94d549e8f23d_A",
        "ce2b9169-f3e7-e07f-9c58-0fd373d5df9a_PLA_ZhentDungeon_Zhent02_Dead_KnowsZarysisZhentarim",
        "HAV_Minthara_Hasmet",
        "HAV_ProdigyLament_Event_BookGivenAway",
        "DEN_AttackOnDen_Event_EnemiesAppear",
        "GLO_Ketheric_Knows_ImmortalitySource",
        "003e1f20-0cac-171b-aa7c-df901e42aa6c_B",
        "FOR_SchoolOgres_Event_AttemptedFirstSkillCheck",
        "GOB_Checkpoint_State_UsedAlarmOnce",
        "TWN_Distillery_HasMet_ResearchNotes",
        "7cf6069c-f0dc-482c-bf10-eea39f59d778_B",
        "HAV_ProdigyLament_Event_Intro",
        "DEN_GoblinScouts_State_SavedDruid",
        "DEN_AttackOnDen_HasMet_Adventurer2",
        "d6df8edb-ac4b-e1d2-794b-6bfd00757cbf_A",
        "MOO_Assault_AssaultFlamingFist_003_ThroneRoomDefeated_HasMet",
        "HAV_ProdigyLament_HasMet_Ide",
        "SHA_SpiderMeatHunk_HasLicked",
        "GOB_GoblinToast_Event_IncludeFourthGoblin",
        "15b0a2b9-2b22-50ab-70c0-ab3042def597_GaleCommentTried",
        "DEN_HarpyMeal_InHideout_WasMean",
        "PreventTradeWithPlayer",
        "DEN_GoblinHunt_Event_GiveRewardBag",
        "1bddcc22-dadd-92c9-4186-4e10ebbfee68_CHA_Crypt_Jergal_DontFollow",
        "UND_AdamantineForge_Knows_Adamantine",
        "DEN_AdventurersQuest_Knows_AradinStory",
        "FOR_Bottomless_State_InteractedWithWell",
        "8baf8087-81b0-de5d-3efa-f74769a625f4_B",
        "ORI_INCLUSION_MINTHARA",
        "DEN_AttackOnDen_HasMet_ChefAndSon",
        "ORI_Inclusion_Astarion",
        "UND_DarkJusticiarsCorpses_Recognized",
        "fd9ed69f-475f-def2-bae0-25065ccc4143_B",
        "GLO_Florrick_State_KnowsWyllDevil",
        "GLO_Desire_State_FreedInAct1",
        "MOO_MoonriseTower_State_Outcast",
        "DEN_DruidLair_Knows_DruidsAlliance",
        "1591cb60-9e65-980a-c49e-69f68b958a1d_B",
        "GOB_Checkpoint_State_GainedAccess",
        "FOR_UnfortunateGnome_Bargaining",
        "DEN_AttackOnDen_HasMet_ProdigyBrother",
        "UND_Elevator_Event_GotWarning",
        "UND_FearfulRothe_Event_MakeDuergarHostileInDialog",
        "GOB_GuardUpset_State_ConvincedTrueSoul",
        "HAV_LiftingTheCurse_Portal_HasMet",
        "DEN_CapturedGoblin_State_InTransit",
        "TWN_Tollhouse_TollhouseMaster_HasMet",
        "GLO_Thieflings_State_PCShookPickpocketSister",
        "GOB_GEB_TorturedAdventurer_Assault_HasMet",
        "DEN_GroveConflict_Event_StoleIdolAttempt",
        "00a82e63-fae8-cc02-0b2b-314c9d21ce6c_F",
        "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_NoFFPresent",
        "MOO_CatBusiness_HasMet_SwA",
        "29ddc96b-303b-373d-2b6f-37ae4e8d534b_A",
        "DEN_Thieflings_Event_CallGuard",
        "SCL_Drider_HasMet",
        "DEN_AdventurersQuest_RaidAdventurerAtCorps_HasMet",
        "UND_FearfulRothe_HasMet_Rothe_001_SpeakWithAnimals",
        "UND_FearfulRothe_State_BefriendedRothe",
        "TWN_CentralSquare_Event_GotBlessing",
        "0d6dbe21-1644-b9bf-8297-dd60d820bd99_B",
        "DEN_GuardedEntrance_HasMet_LiedAboutDeath",
        "FOR_ApothecaryGoblins_Goblin01_HasMet",
        "HAG_AnimalIllusion_Revealed_HasMet1",
        "DEN_TieflingScam_Event_TalkedAboutBox",
        "SCE_Alfira_Event_GaveShiningDawn",
        "0276d317-8b34-66e2-48e2-6b9d69d6830b_F",
        "UND_Automaton_Knows_AskedPlace",
        "HAV_Florrick_Event_RavengardInTowers",
        "CRA_DeadFisherman2_Dead_WhatDoing",
        "GOB_GoblinToast_Event_IncludeThirdGoblin",
        "DEN_AttackOnDen_HasMet_PickpocketTrader",
        "COL_TadpolingCentre_Knows_IdentifiedDarkUrgePod",
        "GOB_GoblinThroneCheckpoint_Pass",
        "HalsinLeft_KilledLeaders",
        "DEN_AttackOnDen_HasMet_Halsin",
        "c167cdf3-7201-e55c-222f-773c758e1000_IncludedHusband",
        "HAG_HagLair_Victim_001_HasMet",
        "512d5ba7-a884-f1f5-5d26-fad488c07e2c_C",
        "MOO_Audience_State_KethericToldToKneelAtAltar",
        "PLA_StuckDwarf_HasMet_FoundWife",
        "GOB_SpiderNest_State_SpidersChill",
        "PLA_Tavern_Knows_DukeInTavern",
        "ORI_INCLUSION_KARLACH",
        "PLA_ZhentDungeon_State_AgentFreed",
        "UND_FurnaceSearch_Event_DuergarMentionsForge",
        "GLO_Moonrise_Knows_GoblinsCapturedADuke",
        "DEN_DruidLair_Knows_FoundingGrove",
        "FOR_Monitor_HasMet_Dinner",
        "AskedCircle",
        "SCL_Drider_HasMet_CaravanFirstTime",
        "03b6aa2e-e805-3a51-6bdb-d92f0b0da84a_UND_MyconidCircle_ServantHookHorror_01_RecognisedMonster",
        "DEN_GuardedEntrance_HasMet_Protester1",
        "MOO_Assault_AssaultHarper_002_ThroneRoomDefeated_HasMet",
        "ToldAboutTadpole",
        "DEN_DruidAttack_HasMet_Tiefling010AfterAttack",
        "f3f236b2-37a1-a0a2-5855-184ead7b1286_C",
        "GOB_DrowCommander_State_Hostile",
        "5d7c5690-f498-6124-0ded-9b3d95a20800_B",
        "UND_ArguingGnomes_Event_LearnedAboutPhilomeen",
        "HAV_DevilishOx_LastLight_HasMet_SwA",
        "MOO_Assault_AssaultFlamingFist_004_PostAssault_HasMet",
        "UND_PetrifiedDrow_Knows_WizardIsDhourn",
        "ORI_Inclusion_End_ShadowHeart",
        "MOO_Assault_HasMet_HarperQuartermaster",
        "ORI_Shadowheart_Knows_SeenTempleVista",
        "FOR_BugBearLove_Event_CoupleHostile",
        "HAG_AnimalIllusion_Narrator",
        "SCL_DriderHarper_Ranger_001_StartInclusion",
        "DEN_Thieflings_State_DoneChase",
        "UND_ElevatorGuard002_HasMet",
        "ThankedFreed_BeldronThulla",
        "ORI_INCLUSION_MINSC",
        "DEN_Thieflings_Knows_PlayerRobbed",
        "DEN_ShadowDruid_HasMet_Opposed",
        "GLO_TadpoledCount1",
        "HAV_ProdigyLament_Brother_RolanDead_HasMet",
        "DEN_DruidAttack_HasMet_ExcitedBoar",
        "3b2ae6b6-ca7e-d905-0430-128078b3119f_B",
        "720e85fb-cc00-b81a-efff-343a04ca221e_A",
        "DEN_DevilishOx_MeetAtDruidsGrove_HasMet_SwA",
        "UND_ClericPetGrave_HasMet",
        "UND_MyconidCircle_DirectToSovereign_HasMet",
        "UND_GnomeWorkerLumpy_HasmetRescued",
        "DEN_GroveConflict_Quest_Learnt3LeadersTwoNames",
        "SCE_GnomeFollowUp_Wulbren_UneasyAboutPlayer",
        "HAV_SavingPrisoners_Knows_CapturedTieflings",
        "d97f72ff-8fb1-8a4c-f169-89751bd6e125_b",
        "85c99cdc-a2b2-a0c3-4ca3-6ec206fb4766_A",
        "ORI_INCLUSION_RANDOM",
        "HAG_Well_Event_DrinkWell",
        "a7407f82-add0-9f6d-e4e6-78b9c39195a6_C",
        "ORI_INCLUSION_WYLL",
        "TWN_Hospital_Reception_Receptionist_FailedPersuasion",
        "4118b185-9468-2295-93f3-9d6eafd8fb8a_Second_Disabled",
        "FOR_GoblinAmbush_State_DrowAutoPass",
        "DEN_TieflingLeader_Quest_GobHuntResponded",
        "GLO_Halsin_Event_TalkedWithDruidLeader",
        "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionRefused",
        "HAV_ProdigyLament_State_ToldStory",
        "ORI_Inclusion_Gale",
        "DEN_RitualDruid_HasMet_Left5",
        "PLA_Desire_Quest_TriedForceDoor",
        "DEN_Thieflings_Pickpocket1_PCIsNotAChump",
        "MOO_InfernalVendor_State_AskedAboutDeals",
        "DEN_AttackOnDen_HasMet_Refugee002",
        "fb0e13b6-cc68-d496-51c2-4594f4f5bf40_TauntHer",
        "182bb613-b70c-5e7c-b3ea-ea14e02d1fab_C",
        "GOB_PainPriest_Event_PickScourge",
        "9378e194-3135-f75c-b557-457fa52db9f9_A",
        "DEN_GroveConflict_Knows_HeardAboutRitual",
        "d0423454-cc51-ae8e-5096-cffd1aac9f75_A",
        "FOR_BugBearLove_Knows_Lovemaking",
        "MOO_Assault_AssaultHarper_001_ThroneRoomDefeated_HasMet",
        "ORI_INCLUSION_LAEZEL",
        "DEN_DruidAttack_HasMet_SonOfChefAfterAttack",
        "TeleportOutOfTrespass",
        "MOO_Docks_Knows_TadpoleVats",
        "HAG_HagLair_TalkingDoor_HasMet",
        "ORI_Inclusion_ShadowHeart",
        "HAV_TieflingSurvivors_Mirkon_StartInclusion",
        "1ea9e483-36a9-82b1-852f-b901ec25552a_a",
        "DEN_Prodigy_HasMet",
        "PLA_ZhentShipment_State_TalkedAfterKilledGnolls",
        "551618bc-83c9-52cc-0ca7-37c224446cf7_Local1",
        "GOB_Bravado_State_Goblin3Hasmet",
        "SCE_GnomeFollowUp_HasMet_WulbrenAlive",
        "SCE_TieflingFollowUp_Ide_HasMet",
        "6d7dd0b2-3ea0-9fe3-4c7f-98061f69f70b_B",
        "SCL_Drider_Event_PlayersAttackHarpers",
        "FOR_BottomlessWell_InteractWithWell_Knows_LookedDown",
        "ORI_INCLUSION_GALE",
        "DEN_GuardedEntrance_HasMet_Parents",
        "0cca6d90-e7d5-b1d6-8d9e-f6b5b8f65006_A",
        "GOB_GoblinToast_Event_IncludeSecondGoblin",
        "ca797aab-5a73-7ec5-edb7-022122573b39_B",
        "HAV_ProdigyLament_Sister_RolanDead_HasMet",
        "SCL_DriderHarper_Caster_000_StartInclusion",
        "DEN_AttackOnDen_Event_HeftyTieflingQuip",
        "HAV_ProdigyLament_HasMet_Rolan",
        "MOO_InfernalVendor_Event_SellingBlood",
        "MOO_WallTentacle_HasMet_Mig",
        "GOB_WolfPens_Event_HalsinLeftParty",
        "GLO_Factions_Knows_Harpers",
        "SHA_Orthon_Knows_RaphaelWillMeetAtCamp",
        "SCL_Drider_HasMet_HarperMelee000",
        "MOO_UpperFloor_HasMet_Guard01",
        "FactionHostileToPlayerGroupAfterDialog",
        "MOO_Jailbreak_HasMet_ProdigySister",
        "ORI_Laezel_Quest_FoundZorru",
        "GOB_GoblinPriest_Event_FreedFromChains",
        "PLA_StuckHalfElf_Knows_MentionedDowry",
        "SCL_Drider_AtTower_HasMet",
        "21e0890e-7019-66a3-1956-125405f96d7c_A",
        "a63e4af2-6edc-188a-efdf-b9ffc5460fc5_LOCAL_B",
        "SCL_Drider_Event_ResumeEscort",
        "DEN_DruidAttack_HasMet_DruidOpposedAfterAttack",
        "FOR_PriestOfTheConqueringGod_Cultists_Knows_Mission",
        "DEN_Apprentice_Event_RemoveBirdExhaustion",
        "DEN_CampGeneral_PCGotLore",
        "SpokeToBrothers",
        "5f09c70a-153e-77e8-731c-5c532e635809_B",
        "DEN_DruidAttack_HasMet_GatekeeperAfterAttack",
        "b951f0e6-65af-843d-a666-f5284343cc67_MentionedTrueSoul",
        "SCL_Drider_HarperCaster_000_AtAmbush_HasMet",
        "LearnedGroveSituation",
        "DEN_RaidingParty_Event_UnsheatheForFight",
        "ReachedWife",
        "GOB_Festivities_BugbearSleeper_00_HasMet",
        "SHA_Merregon_003_HasMet",
        "MOO_Jailbreak_State_WulbrenAlerted",
        "4ca79daf-c389-2693-bd63-4e758972e2da_B",
        "GLO_TadpoleIntro_NPC",
        "DEN_Thieflings_Knows_KidsThieves",
        "MOO_Execution_Guard_002_Hasmet",
        "30d43adb-dcaf-c0f3-d432-af96a1c2e1ea_spoketowulbren",
        "DEN_ShadowDruidLeaderPostGoblins_State_HasMet",
        "DEN_GroveConflict_Knows_LeaderNameKing",
        "153f4e14-c830-5653-1638-7495b0b9fc12_A",
        "TemporaryHostilityAfterDialog",
        "0884581d-9f92-0a34-9440-6a54c0813bbe_ProceedToSecondStage",
        "DEN_Prodigy_HasMet_Brother",
        "GLO_Absolute_Knows_TrueSoul",
        "UND_GnomeForeman_UnfortunateGnome_InclusionStart",
        "HAV_WrootRequest_State_ReunionDone",
        "DEN_WeepingTree_HasMet_Bear",
        "PLA_ZhentDungeon_Dog_03_HasMet",
        "a6f2350b-ecc4-bf6c-0c73-dcb37f9e9690_B",
        "GOB_DrowCommander_Knows_DrowLeader",
        "13d9f9ef-d1da-1d1d-287f-7a1763d72c38_B",
        "ORI_Shadowheart_State_IdolHint",
        "ea88dfe9-ff39-9b98-ae03-48d7fdf2708e_A",
        "DEN_AttackOnDen_HasMet_Refugee004Victory",
        "ORI_Inclusion_End_Astarion",
        "OrderedKillDruids",
        "DEN_DevilishOx_MeetAtDruidsGrove_State_Peaceful",
        "GLO_PixieBell_HasMet",
        "DEN_AttackOnDen_HasMet_RitualDruid002",
        "PLA_StuckHalfElf_StartInclusion",
        "DEN_Thieflings_Pickpocket2_HasMet",
        "375a6f59-375f-f5eb-5f42-60de2dc6aa6b_B",
        "GOB_Checkpoint_Event_WarnedAtCliff",
        "ORI_Shadowheart_State_HeardSharVoice",
        "PLA_ZhentShipment_State_Talked",
        "RefusedHelpBrothers1",
        "GOB_PainPriest_Event_ReactToMocking",
        "MOO_Jailbreak_Event_SpeakToTieflingsWarning",
        "DEN_DruidLair_Knows_RuneAppearance",
        "SCL_HarperScouts_ShadowCreatures_HasMet",
        "GLO_Hag_KnowsAboutSurrogate",
        "MOO_Jailbreak_Event_ForceBoatLeave",
        "MOO_Assault_AssaultFlamingFist_002_HasMet",
        "81f2a55d-d317-761f-f6a0-fe97ad6d5288_C",
        "UND_DuergarCamp_Knows_NereIsTrapped",
        "DEN_SenderBird_Event_TakeOff",
        "FOR_GnomeGoblinsPacified",
        "DEN_DruidAttack_HasMet_ChefAfterAttack",
        "ParentLied",
        "f8e3175b-5587-d6cd-2174-e5a3e9ca4890_A",
        "SCL_Drider_HasMet_CaravanHalfOrcMelee",
        "7256657b-1386-989f-0262-c6530e03a9fb_AskedWhy",
        "DEN_General_Inclusion_End_Pickpocket",
        "DEN_WeepingTree_Bear_Upset",
        "UND_TheDrowNere_Mutiny_InclusionStart_GnomeSilly",
        "bde7a4f1-933f-f6ce-4a3e-4b1f29f83704_B",
        "TWN_Hospital_Reception_CorpseTender_HasMet",
        "UND_TheDrowNere_Event_HadMindMeld",
        "b156dddb-036d-8d82-5a7a-8fd110e48cb4_B",
        "TWN_CentralSquare_State_RecitedDogmas",
        "7c651195-e50f-fd75-7a35-f6f9a8d80e8d_B",
        "57c003e7-0932-6f0c-e655-99025a4abe3a_A",
        "DEN_YoungLovers_State_MetPlayer",
        "5310a408-76a3-3498-cc26-ae866871188b_Third_Disabled",
        "HAV_General_HarperScout_001_HasMet",
        "7ffcf0de-e30b-ef58-fcc5-8d3a1482fa59_b",
        "GLO_Absolute_Knows_GoblinsWorship",
        "DEN_Weaponsmith_Knows_Elturel",
        "SCL_DriderHarper_Ranger_000_StartInclusion",
        "DEN_ShadowDruid_Event_ReactionDone",
        "CHA_Crypt_Event_JergalAppears",
        "PLA_ZhentDungeon_Zhent05_HasMet",
        "DEN_TieflingLeader_HasMet_ReactToDruidAttack",
        "TWN_Distillery_HasMet_Zombie_01",
        "ORI_Laezel_State_StartedTieflingsSceneAtCage",
        "HAV_Siege_State_RefusedJaheira",
        "DEN_BirdSender_HasMet",
        "UND_MyconidCircle_DeepRothe_BaelenAteShroom_Hasmet",
        "GOB_BattleStations_Event_ToStation",
        "1fbc1449-b85a-90a5-3f67-a8898acbd1d0_B",
        "DEN_AttackOnDen_HasMet_Trainer",
        "GOB_GoblinHeretic_FreeToGo",
        "GOB_GoblinThroneCheckpoint_State_NonCharlatanAccess",
        "1c74b01f-5dcf-8107-b384-204d341ed9d5_OnlyOnce",
        "DEN_Thieflings_State_MessedWithMolsKids",
        "PLA_Refugee_001_HasMet",
        "UND_MyconidCircle_State_GainedAccess",
        "DEN_DruidAttack_HasMet_ParentAAfterAttack",
        "GOB_Checkpoint_State_GoblinsToldLeaders",
        "UND_DuergarCamp_Mutineers_HasMet",
        "LearnedDukeMissingCounsellor",
        "SCL_Drider_State_DeadCultistSituationDefused",
        "b0d721a3-ca68-1e03-4e19-6eeddf6dd9ab_B",
        "SHA_NightsongPrison_State_ShadowheartGaveOpinion",
        "SCE_JergalDebrief_Event_WhyHere",
        "94cd662c-844b-4dcc-ffdc-0b9a8da32bcc_BarcusSpokeUp",
        "DEN_AttackOnDen_HasMet_LairDoor",
        "RikkaAskedQuest",
        "DEN_General_Event_TriedNudgingBear",
        "DEN_HasMet_SoloParentB",
        "DEN_RitualDruid_HasMet_Left2",
        "GOB_Torturers_HasMet_Goblet",
        "16f542b8-5ef8-49a4-33e7-495ec95944b2_B",
        "FOR_BugbearLove_State_InterruptedCouple",
        "DEN_AttackOnDen_Servant005_Answered",
        "UND_BroodingSovereign_State_RefusedCircle",
        "HAV_Siege_Intro_DoSetup",
        "MOO_Docks_HasMet_OberverTadpolePowers",
        "DEN_Thieflings_HasMet_Trainee1",
        "23867c04-54b8-6ee9-a6bf-55a1a4c8b75d_B",
        "UND_DeadInTheWater_CorpseDisposerLeader_HasMet",
        "MOO_Assault_AssaultHarper_003_ThroneRoomDefeated_HasMet",
        "DEN_Tiefling011_State_Met",
        "DEN_Thieflings_PersuadedPickpocket",
        "GOB_GoblinToast_Event_NoMoreRefills",
        "ORI_Inclusion_Random",
        "MOO_Bazaar_HasMet_Guard00",
        "PLA_KarlachRecruitment_State_PersuasionSucceeded",
        "DEN_Thieflings_State_WitnessedArgument",
        "200aa519-5963-3b2d-3396-d1dcbb013702_AskedStrategy",
        "3b911555-52e5-7791-d2ac-44fe62465fa1_Loop3",
        "MOO_Assault_AssaultFlamingFist_001_ThroneRoomDefeated_HasMet",
        "GOB_RaiderCunning_HasMet",
        "GOB_Eye_HasMet",
        "DEN_AttackOnDen_HasMet_Refugee003",
        "DEN_Weaponsmith_HasMet",
        "34910f06-fac0-085f-b41a-337d0dfad85a_A",
        "ORI_Inclusion_Laezel",
        "GOB_GoblinToast_SecondGoblinToasted",
        "9e2ef14b-1a2f-4edc-3f78-7e3a27967e5c_C",
        "ORI_Gale_State_RefusedTWNBossPower",
        "DEN_AttackOnDen_HasMet_ScoutCaptive",
        "PLA_KarlachRecruitmentTollhouse_State_HostilitiesBegan",
        "UND_PetrifiedDrow_Knows_MemoryCrystal",
        "MOO_WallTentacle_Daisy_Interacted",
        "UND_FairyRings_Dead_AskedDrowIdentity",
        "ZevlorRewarded",
        "COL_TadpolingCentre_Knows_ImpliedDarkUrgePod",
        "SCL_Drider_HasMet_CaravanGoblinRanger",
        "8f819d41-e936-8042-1935-56de252d6c7f_B",
        "GOB_PainPriest_Penanced",
        "b618166c-99f4-1c7a-02b7-32f0f0fbe420_LocalA",
        "SCE_TieflingFollowUp_Event_GiveShiningDawn",
        "DEN_AttackOnDen_HasMet_Servant004Victory",
        "DEN_AttackOnDen_HasMet_Mule1",
        "DEN_TieflingScam_HasMet",
        "MOO_Docks_State_PersuasionSuccess",
        "DEN_AttackOnDen_HasMet_Kid003",
        "UND_FearfulRothe_Event_ConvincedRotheToAttackDuergar",
        "MOO_BugBearVendor_State_FoundMotive",
        "PLA_FlamingFist7_InnBurntDown_HasMet",
        "1fb21305-2e50-068c-0243-64536fe2bd6c_A",
        "DEN_AttackOnDen_HasMet_Tiefling003Victory",
        "SCE_AncientFist_ToldStory",
        "0d9d0064-babd-6e83-6ea6-5b78afb0413c_B",
        "199a746e-309f-52f0-1a47-0375711725cb_A",
        "TWN_ArabellaPowers_Event_ShadowsAppear",
        "DEN_GoblinScouts_HasMet_Captive",
        "GLO_Absolute_Knows_Symbol",
        "PLA_ConflictedFlind_Event_MindControl_KillHerself",
        "HAV_BackupLeader_HasMet",
        "GLO_SpeakWithDead_Event_QuestionAsked",
        "HAG_Hah_MaskedVictim2_HasMet",
        "DEN_DruidAttack_HasMet_ZenBear",
        "SCL_Drider_Event_CaravanGoesHostile",
        "MOO_Audience_HasMet_WaitingKetheric",
        "SCL_Drider_State_AfterAmbushSituationDefused",
        "GOB_PainPriest_Event_BadReaction",
        "MOO_GuardRoom_HasMet_Guard01",
        "SCL_ServantOfTheRAven_Servant_HasMet",
        "UND_BrokenLantern_State_TriedArcane",
        "461152ff-16c3-2617-f8af-7ddb5681820b_b",
        "MOO_FlamingSpy_HasMet",
        "ed70fdfc-3d7b-7753-1171-957f7316fe55_B",
        "MOO_EntranceCheckpoint_Guard2_HasMet_AllowedIn",
        "SidedTieflings",
        "DEN_GroveConflict_Knows_KaghaRequestedPlayers",
        "PLA_StuckHalfElf_State_PlayerAngered",
        "SCL_Drider_Event_StartHarpersAmbush",
        "UND_BroodingSovereign_State_AskedCircle",
        "DEN_AttackOnDen_HasMet_Trainee001Victory",
        "UND_MyconidCircle_State_FirstGreetingDone",
        "6bde1237-aa43-36d3-9e53-ec1092198541_C",
        "SHA_Trials_Knows_LearnedAboutTrials",
        "2bc86ee2-13ec-992e-993a-8b2fb705bd0a_B",
        "UND_DarkLake_State_HostileResolution",
        "c3d825d1-49b8-9ae2-4554-4fc1f55d2eee_LocalA",
        "COL_TadpolingCentre_Event_PurgePods",
        "3c55f670-825a-6a8d-9e7e-8a5b7aa2f852_B",
        "DEN_ZhentAgent_02_Inclusion_Start",
        "DEN_AttackOnDen_HasMet_ProdigySister",
        "HAV_HarperScouts_Event_SawYonasFuneral",
        "ORI_Shadowheart_Event_DarkJusticiarHint",
        "HAV_General_HarperScout_000_HasMet",
        "1507f82b-d6a2-791b-17ed-65b81a40e9f5_B",
        "873bc4e0-3d3c-1eac-903b-e94920fd6306_sawgithyanki",
        "DEN_CampGeneral_RufusHasMet",
        "DEN_Apprentice_HasMet",
        "DEN_General_Mule2_HasMet",
        "DEN_AttackOnDen_HasMet_ApprenticeVictory",
        "MOO_Bazaar_State_TalkedAboutPilgrims",
        "GLO_PixieBell_Event_TransformsIntoDeepRothe",
        "98423a2d-7b47-e379-6526-c435773e3cff_B",
        "DEN_Thieflings_Event_PlayerNotInvolved",
        "HAG_HagLair_Knows_DoorWasAlive",
        "ThankedFreed_Beldron",
        "DEN_AttackOnDen_HasMet_Griefling",
        "4d9f1cb5-200f-c998-657a-8d04f5c93c74_B",
        "DEN_AttackOnDen_HasMet_RitualDruid005",
        "4b4d2992-abb5-bd1b-9593-feb68eddf682_B",
        "SHA_NightsongPrison_Knows_NightsongIsPerson",
        "GLO_Ketheric_State_AngryAtPlayer",
        "ORI_Karlach_Knows_DammonWorkedInHell",
        "ORI_Inclusion_End_Random",
        "DEN_Squirrel_HasMet",
        "ORI_INCLUSION_HALSIN",
        "SCL_OliversDiary_State_SecondRound",
        "DEN_ShadowDruid_State_HadSelfReflection",
        "DEN_Thieflings_Pickpocket1_HasMet",
        "GLO_Ketheric_Knows_AboutImmortality",
        "PLA_FlamingFist7_Knows_AskedWhatHappened",
        "DEN_DruidAttack_HasMet_BardAfterAttack",
        "GOB_PainPriest_State_NeedMoreHP",
        "TWN_Hospital_HasMet_Nurse002",
        "FOR_BugBearLove_Event_OpenDoor",
        "DEN_Thieflings_State_PCSawKidThievesGettingCaught",
        "260f61d5-60df-da35-608b-a9856291b143_PlayerKnowsOrinKilledZevlor",
        "916a75f0-23d8-f05b-449d-d926d69fe782_FailedCheck",
        "MOO_Jailbreak_HasMet_AngrySister",
        "SCE_GnomeFollowUp_Wulbren_HasMet",
        "DEN_druidservant_005_HasMet",
        "CHA_Jergal_HasMet",
        "ORI_Inclusion_End_Gale",
        "PLA_ConflictedFlind_Hyena_001_HasMet",
        "StartedAlt",
        "MOO_Audience_HasMet_AccessCultist",
        "DEN_RaidingParty_Adventurer2_HasMet",
        "GLO_Thieflings_State_PickpocketKidGotHit",
        "GOB_WolfPens_Event_HalsinLeavesGoblinCamp",
        "e6738c9d-060d-c901-b945-4d49ca303d5b_SuccessfullyReadTracks",
        "DEN_GruntingKid_HasMet",
        "SHA_Nightsong_HasMet",
        "2f161555-aab8-00cd-063a-8a03f5954c3e_B",
        "16193247-ccea-1974-45ec-e8229a7de4ef_B",
        "DEN_TieflingLeader_Quest_GobHuntDeclined",
        "DEN_RaidingParty_Event_GoblinsAppear",
        "DEN_GuardedEntrance_HasMet_Guard1",
        "GOB_PainPriest_Event_FirstHitDone",
        "ORI_Inclusion_End_Laezel",
        "SCL_Drider_HasMet_CaravanGoblinMelee_000",
        "DEN_General_Event_ElevatorBearMoves",
        "DEN_CapturedGoblin_OfferedRevenge",
        "DEN_General_Inclusion_Pickpocket",
        "DEN_RitualDruid_HasMet_Left4",
        "GOB_DrowCommander_HasMet",
        "GLO_Jergal_State_OutOfTomb",
        "HAV_ProdigyLament_Knows_AboutBook",
        "DEN_TieflingLeader_State_KaghaResolved",
        "f3afb428-73fc-2e5c-057b-2e0e5a1b2f1c_B",
        "ORI_DarkUrge_Knows_MetIsobel",
        "DEN_AttackOnDen_HasMet_Stargazer",
        "DEN_Thieflings_Event_ShookThief",
        "DEN_AttackOnDen_HasMet_Refugee001",
        "b70d5139-9980-efc6-3ba3-fe2eb56ab2e0_B",
        "HAV_LoneLover_HasMet_DanisUpset",
        "DEN_DruidAttack_HasMet_PetWolf",
        "26071d89-33af-8eac-3c05-ee8dca91338d_who",
        "DEN_Apprentice_UserShortcut",
        "ReflectedKagha",
        "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionAsked",
        "FOR_GoblinAmbush_GoblinsPacified",
        "MOO_Bazaar_BazaarStander_007_AudienceReady_HasMet",
        "MOO_BugBearVendor_HasMet_BazBugBear",
        "932401b1-7763-7fd7-bee1-8731fe62084f_DeadThree",
        "ORI_Shadowheart_State_TempleApproachHint",
        "HAV_WrootRequest_Event_TalkedToWulbrenInHaven",
        "DEN_DruidAttack_HasMet_GrieflingAfterAttack",
        "DEN_GuardedEntrance_State_ClearToPass",
        "GOB_Checkpoint_State_GuidedByCapturedGoblin",
        "DEN_RaidingParty_Event_GoblinRaidFight",
        "ORI_Inclusion_Wyll",
        "RefusedCircle",
        "DEN_TieflingScam_Knows_Scam",
        "3174fc37-851b-0494-321e-b606f7e43901_B",
        "DEN_BirdSender_Knows_AskedAboutBird",
        "DEN_DevilishOx_MeetAtDruidsGrove_Incapable",
        "DEN_Thieflings_CaveGuard_002_HasMet",
        "GOB_PainPriest_Knows_PenanceIsPain",
        "6bba3537-3756-eb27-a08a-a8596d765f2e_C",
        "28259eb0-5f20-5094-45f1-3292253ae1ed_C",
        "SHA_Trials_State_FirstStatueUsed",
        "CHA_LaezelRecruitment_Event_LaezelHostile",
        "DEN_GoblinScouts_SavedDruid",
        "ArrivedAtGrove",
        "DEN_GruntingKid_Event_AskedCanTalk",
        "DEN_Apprentice_Event_GiveReward",
        "acc081f3-204a-2f29-a3bb-6d33ff784c39_C",
        "DEN_AttackOnDen_GrieflingFriend_Knows_Kelemvor",
        "GOB_PainPriest_Event_Mercy",
        "c68c5474-226f-4b47-b327-a22274e360a0_B",
        "a2fa1f0f-b9b5-f8bf-bf27-b11194b8502f_B",
        "ORI_DarkUrge_Knows_ButlerDiedReaction",
        "HAV_LoneLover_Event_ReunionDone",
        "55452e03-17c6-9a9d-072b-80043381c98b_A",
        "UND_LoneDuergar_Event_WaitingForMainDialog",
        "OrderedBreachInn",
        "MOO_Jailbreak_HasMet_WulbrenOutcast",
        "DEN_RitualDruid_HasMet_Pacified3",
        "DEN_ShadowDruidRats_Event_RememberedLetter",
        "DEN_DruidAttack_State_PrepAfterDeathOfDruids",
        "PLA_Desire_Event_HasMet",
        "4103e544-e1db-525f-81ec-b5dfa71907d7_WantNereOut",
        "PLA_StuckHalfElf_Event_ToldQuestion",
        "UND_BroodingSovereign_Event_Enlarged",
        "f108995b-14f4-7823-d218-790177a93da8_B",
        "6a98f294-9f4f-d0b0-1cba-706f1cb15009_Local1",
        "c76693dc-e4a4-5631-a9b5-8abc6b4ab36e_DarkUrgeThreatened",
        "GOB_WolfPens_Worg_001_HasMet",
        "7cd27f5f-4eee-558e-eee6-ee37600f04ef_A",
        "MOO_Audience_Skeletons_SpokeTwice",
        "DEN_DruidAttack_HasMet_WeaponsmithAfterAttack",
        "MOO_Jailbreak_Event_BoatLeavesWithoutPlayers",
        "SCL_Drider_State_StartedAmbushQuestWithHarpers",
        "GLO_Volo_HasMet",
        "OpenedSarcophagus",
        "Counsellor_RefusedHelp",
        "02455563-e119-58e5-1fe7-eb46fe381d30_A",
        "GOB_GuardUpset_HasMet",
        "GOB_RatRacket_LocalRat_001_HasMet",
        "c5f62c4b-fb04-1505-c35b-63119d96b127_First_Disabled",
        "SHA_Trials_State_StatueUsed",
        "698f5a3b-6d88-3d9e-ee4f-26d9c1fc5b6b_B",
        "UND_TheDrowNere_State_KilledGnomeSerene",
        "COL_General_Knows_ColonyIsIllithid",
        "SCL_Harpers_Event_ShowHavenLocation",
        "GLO_VoloBallad_MetGuardPrison",
        "PLA_ZhentDungeon_Zhent01_HasMet",
        "TWN_Tollhouse_HasMet_Heartlessness",
        "7cd519b5-df41-47c0-1d53-6c315224e489_A",
        "90a73000-b6ed-ad55-7eae-f9a6f8f00f55_A",
        "ORI_Karlach_HasMet_DammonUnavailable",
        "GOB_CheckpointBackup003_HasMet",
        "DEN_TieflingScam_Event_FoundOutLies",
        "4ca7d7ab-9b51-31d8-22be-0e26b2a7f3ed_A",
        "UND_ArguingGnomes_Quest_Accepted",
        "DEN_Thieflings_HasMet_Chef",
        "TWN_CentralSquare_SharAltar_Event_PassedPassiveReligion"
      ]
    }
  },
  "final_flags": [
    "003e1f20-0cac-171b-aa7c-df901e42aa6c_B",
    "00a82e63-fae8-cc02-0b2b-314c9d21ce6c_F",
    "02455563-e119-58e5-1fe7-eb46fe381d30_A",
    "0276d317-8b34-66e2-48e2-6b9d69d6830b_F",
    "03b6aa2e-e805-3a51-6bdb-d92f0b0da84a_UND_MyconidCircle_ServantHookHorror_01_RecognisedMonster",
    "0884581d-9f92-0a34-9440-6a54c0813bbe_ProceedToSecondStage",
    "09983dce-d7d0-c108-506f-dcadc4044b0a_Derryth_SwD_Who",
    "0cca6d90-e7d5-b1d6-8d9e-f6b5b8f65006_A",
    "0d6dbe21-1644-b9bf-8297-dd60d820bd99_B",
    "0d9d0064-babd-6e83-6ea6-5b78afb0413c_B",
    "10297257-36dd-3799-f681-657656779d4a_TieflingsLaezelAD1",
    "11580029-0578-1ea8-3575-6a0f6020d1b2_B",
    "11d70a18-2aae-47a0-1a18-c486858b1eaf_B",
    "13d9f9ef-d1da-1d1d-287f-7a1763d72c38_B",
    "1493763b-776c-959c-259a-89f34f326e04_A",
    "1507f82b-d6a2-791b-17ed-65b81a40e9f5_B",
    "153f4e14-c830-5653-1638-7495b0b9fc12_A",
    "1591cb60-9e65-980a-c49e-69f68b958a1d_B",
    "15b0a2b9-2b22-50ab-70c0-ab3042def597_GaleCommentTried",
    "16193247-ccea-1974-45ec-e8229a7de4ef_B",
    "16f542b8-5ef8-49a4-33e7-495ec95944b2_B",
    "182bb613-b70c-5e7c-b3ea-ea14e02d1fab_C",
    "199a746e-309f-52f0-1a47-0375711725cb_A",
    "1bddcc22-dadd-92c9-4186-4e10ebbfee68_CHA_Crypt_Jergal_DontFollow",
    "1c74b01f-5dcf-8107-b384-204d341ed9d5_OnlyOnce",
    "1ea9e483-36a9-82b1-852f-b901ec25552a_a",
    "1fb21305-2e50-068c-0243-64536fe2bd6c_A",
    "1fbc1449-b85a-90a5-3f67-a8898acbd1d0_B",
    "200aa519-5963-3b2d-3396-d1dcbb013702_AskedStrategy",
    "21e0890e-7019-66a3-1956-125405f96d7c_A",
    "23867c04-54b8-6ee9-a6bf-55a1a4c8b75d_B",
    "26007d1c-bac9-a896-4f4d-19a9d2a1e66f_A",
    "26071d89-33af-8eac-3c05-ee8dca91338d_who",
    "260f61d5-60df-da35-608b-a9856291b143_PlayerKnowsOrinKilledZevlor",
    "28259eb0-5f20-5094-45f1-3292253ae1ed_C",
    "29ddc96b-303b-373d-2b6f-37ae4e8d534b_A",
    "2bc86ee2-13ec-992e-993a-8b2fb705bd0a_B",
    "2da46374-abab-9219-f7ce-2a002cfd72a5_a",
    "2f161555-aab8-00cd-063a-8a03f5954c3e_B",
    "2fb08ca0-df67-8450-3f01-c1e1c2a78b59_A",
    "30d43adb-dcaf-c0f3-d432-af96a1c2e1ea_spoketowulbren",
    "3174fc37-851b-0494-321e-b606f7e43901_B",
    "3483cea8-0c11-9432-2421-6b95b9140d95_B",
    "34910f06-fac0-085f-b41a-337d0dfad85a_A",
    "375a6f59-375f-f5eb-5f42-60de2dc6aa6b_B",
    "3b2ae6b6-ca7e-d905-0430-128078b3119f_B",
    "3b911555-52e5-7791-d2ac-44fe62465fa1_Loop3",
    "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_NoFFPresent",
    "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_WyllSpoke",
    "3c55f670-825a-6a8d-9e7e-8a5b7aa2f852_B",
    "3e7a6665-f36f-0ddb-3882-7d68260b2104_B",
    "3f665b97-a69e-81c5-68e6-5b931720721e_Part1",
    "4103e544-e1db-525f-81ec-b5dfa71907d7_WantNereOut",
    "4118b185-9468-2295-93f3-9d6eafd8fb8a_Second_Disabled",
    "41e56e7f-1722-7350-33dc-aefe523650fe_B",
    "4466a73c-607a-4a7e-c1e5-94d549e8f23d_A",
    "461152ff-16c3-2617-f8af-7ddb5681820b_b",
    "469a1188-028b-0e6b-b595-fa464baa551e_b",
    "4823073f-d1c4-5fe7-de96-d63538c05fbb_B",
    "4951b7ce-8495-b2c8-badc-beaff0e3d807_H",
    "4b4d2992-abb5-bd1b-9593-feb68eddf682_B",
    "4c78f756-720d-a285-a3e6-8f69a6069abc_Step1",
    "4ca79daf-c389-2693-bd63-4e758972e2da_B",
    "4ca7d7ab-9b51-31d8-22be-0e26b2a7f3ed_A",
    "4d9f1cb5-200f-c998-657a-8d04f5c93c74_B",
    "512d5ba7-a884-f1f5-5d26-fad488c07e2c_C",
    "5310a408-76a3-3498-cc26-ae866871188b_Third_Disabled",
    "551618bc-83c9-52cc-0ca7-37c224446cf7_Local1",
    "55452e03-17c6-9a9d-072b-80043381c98b_A",
    "564fac12-29bd-3abe-d380-0a864e688883_Turn1",
    "57c003e7-0932-6f0c-e655-99025a4abe3a_A",
    "57c003e7-0932-6f0c-e655-99025a4abe3a_B",
    "5d7c5690-f498-6124-0ded-9b3d95a20800_B",
    "5e9c4c72-4f56-2646-ce36-88207d2dc33c_KinSaved",
    "5ebae00c-47d8-736c-6738-4ee56cebbc49_B",
    "5f09c70a-153e-77e8-731c-5c532e635809_B",
    "683cb55e-08b9-c865-78a6-4e047ee62a24_B",
    "698f5a3b-6d88-3d9e-ee4f-26d9c1fc5b6b_B",
    "6a98f294-9f4f-d0b0-1cba-706f1cb15009_Local1",
    "6bba3537-3756-eb27-a08a-a8596d765f2e_C",
    "6bc7114f-5279-4374-385e-b396157d5189_B",
    "6bde1237-aa43-36d3-9e53-ec1092198541_C",
    "6cf6ff37-64f7-3ccf-d702-ee2025510422_B",
    "6d4ecf46-ffab-ed53-3b19-68607a0e1309_B",
    "6d7dd0b2-3ea0-9fe3-4c7f-98061f69f70b_B",
    "6d9043f1-e0c3-43de-a895-b87cae60e0c0_C",
    "6fa2b72d-fde1-4ee3-e1d1-f184232f693d_A",
    "720e85fb-cc00-b81a-efff-343a04ca221e_A",
    "7256657b-1386-989f-0262-c6530e03a9fb_AskedWhy",
    "7611fa51-4b1b-3d2c-a8a5-74c04d9db7fa_AnimalHandlingSuccess",
    "7c651195-e50f-fd75-7a35-f6f9a8d80e8d_B",
    "7cd27f5f-4eee-558e-eee6-ee37600f04ef_A",
    "7cd519b5-df41-47c0-1d53-6c315224e489_A",
    "7cf6069c-f0dc-482c-bf10-eea39f59d778_B",
    "7ffcf0de-e30b-ef58-fcc5-8d3a1482fa59_b",
    "81f2a55d-d317-761f-f6a0-fe97ad6d5288_C",
    "83fdf5e9-88b8-19e7-ba8f-ff075d2222ce_PLA_ZhentShipment_Knows_Gnolls",
    "85c99cdc-a2b2-a0c3-4ca3-6ec206fb4766_A",
    "873bc4e0-3d3c-1eac-903b-e94920fd6306_sawgithyanki",
    "876dbe2e-5070-a2c1-0148-cc993aa62289_B",
    "8916beac-0385-3df9-de07-8be3cc6752a7_A",
    "8a9a14b0-87da-5c78-aa76-7a266de7a786_Phase1",
    "8ab0520b-3a8d-822f-1934-336e2d24e0a0_B",
    "8baf8087-81b0-de5d-3efa-f74769a625f4_B",
    "8f819d41-e936-8042-1935-56de252d6c7f_B",
    "8f847adf-7b8a-3551-cfc0-4ea0c66a999a_F",
    "90a73000-b6ed-ad55-7eae-f9a6f8f00f55_A",
    "916a75f0-23d8-f05b-449d-d926d69fe782_FailedCheck",
    "932401b1-7763-7fd7-bee1-8731fe62084f_DeadThree",
    "9378e194-3135-f75c-b557-457fa52db9f9_A",
    "94726285-a32b-9d8e-579f-5aa051e986b7_Picture",
    "94cd662c-844b-4dcc-ffdc-0b9a8da32bcc_BarcusSpokeUp",
    "98423a2d-7b47-e379-6526-c435773e3cff_B",
    "989f8f48-9328-2eca-3aa2-15007aabd48b_MindHasBeenRead",
    "99aa7b78-defd-57bc-eabf-a8aa43a030d9_B",
    "9b4c05c6-0a79-ea8d-c351-43d6fbb04abc_Story1",
    "9e2ef14b-1a2f-4edc-3f78-7e3a27967e5c_C",
    "ArrivedAtGrove",
    "AskedCircle",
    "CHA_Chapel_Event_OpenedJergalsTomb",
    "CHA_Crypt_Event_JergalAppears",
    "CHA_Jergal_Event_AttemptedAttack",
    "CHA_Jergal_HasMet",
    "CHA_LaezelRecruitment_Event_LaezelHostile",
    "CHA_LaezelRecruitment_MindMeld",
    "CHA_Outside_Event_DoorGuardConvinced",
    "COL_Barracks_Mistress_Knows_ThinksPlayerIsThrall",
    "COL_Barracks_State_InterruptConvinced",
    "COL_General_Knows_ColonyIsIllithid",
    "COL_NecroLab_GrandDesignSculpture_HasMet_LaezelInclusion",
    "COL_TadpolingCentre_Event_PurgePods",
    "COL_TadpolingCentre_Knows_IdentifiedDarkUrgePod",
    "COL_TadpolingCentre_Knows_ImpliedDarkUrgePod",
    "COL_TadpolingCentre_MemoryImprint_FirstUse",
    "CRA_DeadFisherman2_Dead_WhatDoing",
    "CRA_DeadPrisoner_Dead_AskedQuestion",
    "CRA_DeadPrisoner_Dead_MentionedTadpole",
    "Counsellor_RefusedHelp",
    "DEN_AdventurersQuest_Knows_AradinStory",
    "DEN_AdventurersQuest_RaidAdventurerAtCorps_HasMet",
    "DEN_Apprentice_Event_GiveReward",
    "DEN_Apprentice_Event_RemoveBirdExhaustion",
    "DEN_Apprentice_Event_RevealedTadpole",
    "DEN_Apprentice_HasMet",
    "DEN_Apprentice_HasMet_ReactedToShadowDruids",
    "DEN_Apprentice_State_ShadowDruidPath",
    "DEN_Apprentice_UserShortcut",
    "DEN_AttackOnDenDruidLeader_State_HasMet",
    "DEN_AttackOnDen_Event_EnemiesAppear",
    "DEN_AttackOnDen_Event_HeftyTieflingQuip",
    "DEN_AttackOnDen_Event_OpenGateAfterCombat",
    "DEN_AttackOnDen_Event_PassedByEntrance",
    "DEN_AttackOnDen_GrieflingFriend_Knows_Kelemvor",
    "DEN_AttackOnDen_HasMet_Adventurer2",
    "DEN_AttackOnDen_HasMet_ApprenticeVictory",
    "DEN_AttackOnDen_HasMet_BackupLeader",
    "DEN_AttackOnDen_HasMet_ChefAndSon",
    "DEN_AttackOnDen_HasMet_Griefling",
    "DEN_AttackOnDen_HasMet_GrieflingFriend",
    "DEN_AttackOnDen_HasMet_Halsin",
    "DEN_AttackOnDen_HasMet_Kid003",
    "DEN_AttackOnDen_HasMet_Kid004Victory",
    "DEN_AttackOnDen_HasMet_LairDoor",
    "DEN_AttackOnDen_HasMet_LeaderKidVictory",
    "DEN_AttackOnDen_HasMet_Mule1",
    "DEN_AttackOnDen_HasMet_PickpocketTrader",
    "DEN_AttackOnDen_HasMet_PickpocketVictory",
    "DEN_AttackOnDen_HasMet_Prodigy",
    "DEN_AttackOnDen_HasMet_ProdigyBrother",
    "DEN_AttackOnDen_HasMet_ProdigySister",
    "DEN_AttackOnDen_HasMet_Refugee001",
    "DEN_AttackOnDen_HasMet_Refugee002",
    "DEN_AttackOnDen_HasMet_Refugee003",
    "DEN_AttackOnDen_HasMet_Refugee004Victory",
    "DEN_AttackOnDen_HasMet_RitualDruid002",
    "DEN_AttackOnDen_HasMet_RitualDruid003",
    "DEN_AttackOnDen_HasMet_RitualDruid005",
    "DEN_AttackOnDen_HasMet_RobberKid",
    "DEN_AttackOnDen_HasMet_ScoutCaptive",
    "DEN_AttackOnDen_HasMet_Servant004Victory",
    "DEN_AttackOnDen_HasMet_Servant005Victory",
    "DEN_AttackOnDen_HasMet_Stargazer",
    "DEN_AttackOnDen_HasMet_Tiefling001",
    "DEN_AttackOnDen_HasMet_Tiefling003Victory",
    "DEN_AttackOnDen_HasMet_Tiefling004",
    "DEN_AttackOnDen_HasMet_Tiefling005",
    "DEN_AttackOnDen_HasMet_Tiefling010Victory",
    "DEN_AttackOnDen_HasMet_TieflingBard",
    "DEN_AttackOnDen_HasMet_TieflingLeader",
    "DEN_AttackOnDen_HasMet_Trainee001Victory",
    "DEN_AttackOnDen_HasMet_Trainer",
    "DEN_AttackOnDen_HasMet_Wyll",
    "DEN_AttackOnDen_Pet002_HasMet",
    "DEN_AttackOnDen_Pet004_HasMet",
    "DEN_AttackOnDen_Ranged_001_HasMet",
    "DEN_AttackOnDen_Servant005_Answered",
    "DEN_AttackOnDen_ZenBear_HasMet",
    "DEN_BirdSender_HasMet",
    "DEN_BirdSender_HasMet_GobLeadersDead",
    "DEN_BirdSender_Knows_AskedAboutBird",
    "DEN_CampGeneral_HasMet_Gatekeeper",
    "DEN_CampGeneral_PCGotLore",
    "DEN_CampGeneral_RufusHasMet",
    "DEN_CapturedGoblin_GuardsHasMet",
    "DEN_CapturedGoblin_OfferedRevenge",
    "DEN_CapturedGoblin_State_InTransit",
    "DEN_DevilishOx_MeetAtDruidsGrove_HasMet_SwA",
    "DEN_DevilishOx_MeetAtDruidsGrove_Incapable",
    "DEN_DevilishOx_MeetAtDruidsGrove_State_Peaceful",
    "DEN_DevilishOx_State_ArcanaCheckComplete_SwA",
    "DEN_DruidAttack_HasMet_BardAfterAttack",
    "DEN_DruidAttack_HasMet_ChefAfterAttack",
    "DEN_DruidAttack_HasMet_DruidOpposedAfterAttack",
    "DEN_DruidAttack_HasMet_ExcitedBoar",
    "DEN_DruidAttack_HasMet_GatekeeperAfterAttack",
    "DEN_DruidAttack_HasMet_GrieflingAfterAttack",
    "DEN_DruidAttack_HasMet_HideoutLeaderAfterAttack",
    "DEN_DruidAttack_HasMet_ParentAAfterAttack",
    "DEN_DruidAttack_HasMet_ParentBAfterAttack",
    "DEN_DruidAttack_HasMet_PetWolf",
    "DEN_DruidAttack_HasMet_PickpocketTraderAfterAttack",
    "DEN_DruidAttack_HasMet_Protester3AfterAttack",
    "DEN_DruidAttack_HasMet_ServantGnome",
    "DEN_DruidAttack_HasMet_SonOfChefAfterAttack",
    "DEN_DruidAttack_HasMet_Tiefling010AfterAttack",
    "DEN_DruidAttack_HasMet_WeaponsmithAfterAttack",
    "DEN_DruidAttack_HasMet_ZenBear",
    "DEN_DruidAttack_State_PrepAfterDeathOfDruids",
    "DEN_DruidLair_Knows_DruidsAlliance",
    "DEN_DruidLair_Knows_FoundingGrove",
    "DEN_DruidLair_Knows_RuneAppearance",
    "DEN_DruidServant005_Knows_TalkedAboutLockdown",
    "DEN_General_Event_ElevatorBearMoves",
    "DEN_General_Event_TriedNudgingBear",
    "DEN_General_Inclusion_End_Pickpocket",
    "DEN_General_Inclusion_Pickpocket",
    "DEN_General_Mule2_HasMet",
    "DEN_General_Squirrel_LearnedTerritory",
    "DEN_General_YoungLovers_HasMet",
    "DEN_GoblinHunt_Event_GiveRewardBag",
    "DEN_GoblinScouts_HasMet_Captive",
    "DEN_GoblinScouts_SavedDruid",
    "DEN_GoblinScouts_State_SavedDruid",
    "DEN_GroveConflict_Event_StoleIdolAttempt",
    "DEN_GroveConflict_Knows_HeardAboutRitual",
    "DEN_GroveConflict_Knows_KaghaRequestedPlayers",
    "DEN_GroveConflict_Knows_LeaderNameKing",
    "DEN_GroveConflict_Quest_Learnt3LeadersTwoNames",
    "DEN_GruntingKid_Event_AskedCanTalk",
    "DEN_GruntingKid_Event_DisappearIntoWall",
    "DEN_GruntingKid_HasMet",
    "DEN_GuardedEntrance_HasMet_Guard1",
    "DEN_GuardedEntrance_HasMet_Guard3",
    "DEN_GuardedEntrance_HasMet_LiedAboutDeath",
    "DEN_GuardedEntrance_HasMet_Parents",
    "DEN_GuardedEntrance_HasMet_Protester1",
    "DEN_GuardedEntrance_State_ClearToPass",
    "DEN_GuardedEntrance_State_ParentsKnowDeath",
    "DEN_HarpyMeal_Event_OriginCharm3",
    "DEN_HarpyMeal_InHideout_WasMean",
    "DEN_HasMet_SoloParentB",
    "DEN_Hideout_Event_LeaveCountdown",
    "DEN_Hideout_State_GivenWarning",
    "DEN_Prodigy_HasMet",
    "DEN_Prodigy_HasMet_Brother",
    "DEN_RaidingParty_Adventurer2_HasMet",
    "DEN_RaidingParty_Event_GatekeeperToLever",
    "DEN_RaidingParty_Event_GoblinRaidFight",
    "DEN_RaidingParty_Event_GoblinsAppear",
    "DEN_RaidingParty_Event_KanonOpensGate",
    "DEN_RaidingParty_Event_OpenDenGate",
    "DEN_RaidingParty_Event_SkipConfrontation",
    "DEN_RaidingParty_Event_UnsheatheForFight",
    "DEN_Rat_Event_MoveToShack",
    "DEN_RitualDruid_HasMet_Left2",
    "DEN_RitualDruid_HasMet_Left4",
    "DEN_RitualDruid_HasMet_Left5",
    "DEN_RitualDruid_HasMet_Pacified3",
    "DEN_SenderBird_Event_TakeOff",
    "DEN_ShadowDruidLeaderPostGoblins_State_HasMet",
    "DEN_ShadowDruidRats_Event_RememberedLetter",
    "DEN_ShadowDruid_Event_ReactionDone",
    "DEN_ShadowDruid_Event_SetFaithwarden",
    "DEN_ShadowDruid_HasMet_Opposed",
    "DEN_ShadowDruid_State_HadSelfReflection",
    "DEN_Squirrel_HasMet",
    "DEN_Stargazing_Event_SawDragon",
    "DEN_Thieflings_CaveGuard_002_HasMet",
    "DEN_Thieflings_Event_CallGuard",
    "DEN_Thieflings_Event_HideoutTrespassCrimeResolved",
    "DEN_Thieflings_Event_PartnerQuestionAsked",
    "DEN_Thieflings_Event_PlayerNotInvolved",
    "DEN_Thieflings_Event_ShookThief",
    "DEN_Thieflings_HasMet_Chef",
    "DEN_Thieflings_HasMet_Guard2",
    "DEN_Thieflings_HasMet_Mol",
    "DEN_Thieflings_HasMet_Trainee1",
    "DEN_Thieflings_Knows_KidsThieves",
    "DEN_Thieflings_Knows_PlayerRobbed",
    "DEN_Thieflings_PersuadedPickpocket",
    "DEN_Thieflings_Pickpocket1_HasMet",
    "DEN_Thieflings_Pickpocket1_PCIsNotAChump",
    "DEN_Thieflings_Pickpocket2_HasMet",
    "DEN_Thieflings_State_DoneChase",
    "DEN_Thieflings_State_MessedWithMolsKids",
    "DEN_Thieflings_State_PCSawKidThievesGettingCaught",
    "DEN_Thieflings_State_WitnessedArgument",
    "DEN_Thieflings_TieflingGuard11_HasMet",
    "DEN_Tiefling011_State_Met",
    "DEN_TieflingLeader_HasMet_ReactToDruidAttack",
    "DEN_TieflingLeader_Quest_GobHuntDeclined",
    "DEN_TieflingLeader_Quest_GobHuntResponded",
    "DEN_TieflingLeader_State_KaghaResolved",
    "DEN_TieflingRefugees_Quest_HuntRewardOffered",
    "DEN_TieflingScam_Event_FoundOutLies",
    "DEN_TieflingScam_Event_InspectedBox",
    "DEN_TieflingScam_Event_TalkedAboutBox",
    "DEN_TieflingScam_HasMet",
    "DEN_TieflingScam_Knows_Scam",
    "DEN_Weaponsmith_HasMet",
    "DEN_Weaponsmith_Knows_Elturel",
    "DEN_WeepingTree_Bear_Upset",
    "DEN_WeepingTree_HasMet_Bear",
    "DEN_YoungLovers_State_MetPlayer",
    "DEN_ZenBear_Helped",
    "DEN_ZhentAgent_02_Inclusion_Start",
    "DEN_druidservant_005_HasMet",
    "Den_Thieflings_InterferingGuard_PCGotLore",
    "FOR_ApothecaryGoblins_Goblin01_HasMet",
    "FOR_BottomlessWell_InteractWithWell_Knows_LookedDown",
    "FOR_Bottomless_State_InteractedWithWell",
    "FOR_BugBearLove_Event_CoupleHostile",
    "FOR_BugBearLove_Event_MovePlayerInside",
    "FOR_BugBearLove_Event_OpenDoor",
    "FOR_BugBearLove_Knows_Lovemaking",
    "FOR_BugbearLove_State_InterruptedCouple",
    "FOR_GnomeGoblin1_HasMet",
    "FOR_GnomeGoblinsPacified",
    "FOR_GoblinAmbush_Event_StopSpotting",
    "FOR_GoblinAmbush_GoblinsPacified",
    "FOR_GoblinAmbush_State_DrowAutoPass",
    "FOR_KnifeInMeat_State_KnifeBroken",
    "FOR_Monitor_Event_TakeFood",
    "FOR_Monitor_HasMet_Dinner",
    "FOR_Monitor_State_TransformToDevil",
    "FOR_PriestOfTheConqueringGod_Cultists_Knows_Mission",
    "FOR_PriestsConqueringGod_AlliedPlayer",
    "FOR_SchoolOgres_Event_AttemptedFirstSkillCheck",
    "FOR_SeluneStash_NoticeStashSeal_CommentedOnSeal",
    "FOR_UnfortunateGnome_Bargaining",
    "FOR_UnfortunateGnome_State_NonCharlatanAccess",
    "FOR_UnfortunateGone_TiedUpHasmet",
    "FactionHostileToPlayerGroupAfterDialog",
    "FoundCounsellor",
    "GEN_TransferNPCPayment_2",
    "GLO_Absolute_Knows_GoblinsWorship",
    "GLO_Absolute_Knows_MoonriseTowers",
    "GLO_Absolute_Knows_Symbol",
    "GLO_Absolute_Knows_TrueSoul",
    "GLO_Desire_HasMet",
    "GLO_Desire_State_FreedInAct1",
    "GLO_Factions_Knows_Harpers",
    "GLO_Florrick_State_KnowsWyllDevil",
    "GLO_GithChokepoint_DragonAppear",
    "GLO_HAV_TakingIsobel_HasMet_BriefInRoom",
    "GLO_HAV_TakingIsobel_HeardOfIsobel",
    "GLO_Hag_KnowsAboutSurrogate",
    "GLO_Halsin_Event_TalkedWithDruidLeader",
    "GLO_HeadRemoval_Event_HeadToInventory",
    "GLO_IronhandGnomes_Knows_WulbrenInMoonrise",
    "GLO_Jergal_State_OutOfTomb",
    "GLO_Ketheric_Knows_AboutImmortality",
    "GLO_Ketheric_Knows_ImmortalitySource",
    "GLO_Ketheric_State_AngryAtPlayer",
    "GLO_KorrillaTheSpy_State_Talked",
    "GLO_Moonrise_Knows_AbsoluteAtGrymforge",
    "GLO_Moonrise_Knows_GoblinsCapturedADuke",
    "GLO_PixieBell_Event_TransformsIntoDeepRothe",
    "GLO_PixieBell_HasMet",
    "GLO_Player_Knows_MoonlanternExists",
    "GLO_Prodigy_State_ToldSiblingsProdigyDead",
    "GLO_ScryingEyes_State_FeltGaze",
    "GLO_Shadowcurse_Knows_FromGnome",
    "GLO_SpeakWithDead_Event_QuestionAsked",
    "GLO_TadpoleIntro_NPC",
    "GLO_TadpoledCount1",
    "GLO_TadpoledCount6",
    "GLO_Tadpoled_UsedToday1",
    "GLO_TalkedToVoloAboutAbsolute",
    "GLO_Thieflings_State_PCShookPickpocketSister",
    "GLO_Thieflings_State_PickpocketKidGotHit",
    "GLO_VoloBallad_MetGuardPrison",
    "GLO_Volo_HasMet",
    "GLO_Volo_HasMet_Personally",
    "GOB_AbsoluteCultistStiff_HasMet",
    "GOB_BattleStations_Event_ToStation",
    "GOB_BattleStations_HasMet_WarDrum",
    "GOB_Bravado_State_Goblin3Hasmet",
    "GOB_CheckpointBackup003_HasMet",
    "GOB_Checkpoint_Event_MoveToCamp",
    "GOB_Checkpoint_Event_WarnedAtCliff",
    "GOB_Checkpoint_Guard01_HasMet",
    "GOB_Checkpoint_State_GainedAccess",
    "GOB_Checkpoint_State_GoblinsToldLeaders",
    "GOB_Checkpoint_State_GuidedByCapturedGoblin",
    "GOB_Checkpoint_State_UsedAlarmOnce",
    "GOB_DrowCommander_HasMet",
    "GOB_DrowCommander_Knows_DrowLeader",
    "GOB_DrowCommander_State_Hostile",
    "GOB_Eye_HasMet",
    "GOB_Festivities_BugbearSleeper_00_HasMet",
    "GOB_Festivities_Goblin001_HasMet",
    "GOB_Festivities_HasMet_Ogre_00",
    "GOB_Festivities_Trader_HasMet",
    "GOB_GEB_TorturedAdventurer_Assault_HasMet",
    "GOB_GoblinHeretic_FreeToGo",
    "GOB_GoblinJolly_HasMet",
    "GOB_GoblinKingDead_Event_SaidFugitives",
    "GOB_GoblinPriest_Event_FreedFromChains",
    "GOB_GoblinThroneCheckpoint_Pass",
    "GOB_GoblinThroneCheckpoint_State_NonCharlatanAccess",
    "GOB_GoblinToast_Event_IncludeFourthGoblin",
    "GOB_GoblinToast_Event_IncludeSecondGoblin",
    "GOB_GoblinToast_Event_IncludeThirdGoblin",
    "GOB_GoblinToast_Event_NoMoreRefills",
    "GOB_GoblinToast_Event_ToastSuccess",
    "GOB_GoblinToast_SecondGoblinToasted",
    "GOB_GoblinToast_ThirdGoblinToasted",
    "GOB_GoblingKing_Event_HealerPersuasion",
    "GOB_GuardUpset_HasMet",
    "GOB_GuardUpset_State_ConvincedTrueSoul",
    "GOB_OwlbearCub_Event_InvitedToCamp",
    "GOB_Owlbear_HasMet_NotChasing",
    "GOB_PainPriest_Event_BadReaction",
    "GOB_PainPriest_Event_CheckHP",
    "GOB_PainPriest_Event_FirstHitDone",
    "GOB_PainPriest_Event_Mercy",
    "GOB_PainPriest_Event_PickScourge",
    "GOB_PainPriest_Event_ReactToMocking",
    "GOB_PainPriest_Event_Reward",
    "GOB_PainPriest_Knows_PenanceIsPain",
    "GOB_PainPriest_Penanced",
    "GOB_PainPriest_State_NeedMoreHP",
    "GOB_PainPriest_State_ReactedToPenance",
    "GOB_QuartermasterFlimsy_HasMet",
    "GOB_RaiderBold_HasMet",
    "GOB_RaiderCunning_HasMet",
    "GOB_RaiderStupid_HasMet",
    "GOB_RatRacket_LocalRat_001_HasMet",
    "GOB_RatRacket_LocalRat_002_HasMet",
    "GOB_Scrying_NoddedOrShrugged",
    "GOB_SpiderNest_State_SpidersChill",
    "GOB_SpiderNest_State_SpidersHostile",
    "GOB_Torturers_HasMet_Goblet",
    "GOB_Torturers_Rat_001_HasMet",
    "GOB_Trader_Knows_Goods",
    "GOB_WolfPens_Event_HalsinLeavesGoblinCamp",
    "GOB_WolfPens_Event_HalsinLeftParty",
    "GOB_WolfPens_Worg_001_HasMet",
    "GOB_WolfPens_Worg_002_HasMet",
    "GnomeAskedHelp",
    "HAG_AnimalIllusion_Narrator",
    "HAG_AnimalIllusion_Revealed_HasMet1",
    "HAG_GurHunter_Dead_Knows_Hunter",
    "HAG_HagLair_Knows_DoorWasAlive",
    "HAG_HagLair_TalkingDoor_HasMet",
    "HAG_HagLair_Victim_001_HasMet",
    "HAG_Hagspawn_Knows_PromisedRaiseHusband",
    "HAG_Hagspawn_State_JakeBerserk",
    "HAG_Hah_MaskedVictim2_HasMet",
    "HAG_SurrogateMother_HasMet",
    "HAG_Well_Event_DrinkWell",
    "HAV_BackupLeader_HasMet",
    "HAV_DevilishOx_LastLight_HasMet_SwA",
    "HAV_EnteringHaven_State_RevealedArtifact",
    "HAV_Florrick_Event_RavengardInTowers",
    "HAV_General_HarperScout_000_HasMet",
    "HAV_General_HarperScout_001_HasMet",
    "HAV_HarperScouts_Event_SawYonasFuneral",
    "HAV_HarperScouts_Harper_003_HasMet_Protected",
    "HAV_Isobel_HasMetDefault",
    "HAV_Isobel_KidnappingQuestions_DarkUrge",
    "HAV_LastLightOx000_HasMet_SpeakWithAnimals",
    "HAV_LiftingTheCurse_Portal_HasMet",
    "HAV_LiftingTheCurse_Portal_Knows_DontTouchPortal",
    "HAV_LoneLover_Event_ReunionDone",
    "HAV_LoneLover_HasMet_DanisUpset",
    "HAV_Minthara_Hasmet",
    "HAV_ProdigyLament_Brother_RolanDead_HasMet",
    "HAV_ProdigyLament_Event_BookGivenAway",
    "HAV_ProdigyLament_Event_Intro",
    "HAV_ProdigyLament_HasMet_Ide",
    "HAV_ProdigyLament_HasMet_Rolan",
    "HAV_ProdigyLament_Knows_AboutBook",
    "HAV_ProdigyLament_Knows_RolanAlive",
    "HAV_ProdigyLament_Knows_SiblingsInMoonrise",
    "HAV_ProdigyLament_Sister_RolanDead_HasMet",
    "HAV_ProdigyLament_State_ToldStory",
    "HAV_SavingPrisoners_HasMet_Florrick",
    "HAV_SavingPrisoners_HasMet_Manip",
    "HAV_SavingPrisoners_Knows_CapturedTieflings",
    "HAV_Siege_Intro_DoSetup",
    "HAV_Siege_Intro_JaheiraAggroToPlayer",
    "HAV_Siege_State_RefusedJaheira",
    "HAV_TieflingSurvivors_HasMet_Mattis",
    "HAV_TieflingSurvivors_Mirkon_EndInclusion",
    "HAV_TieflingSurvivors_Mirkon_StartInclusion",
    "HAV_TieflingSurvivors_State_DidNotPromiseToSaveMol",
    "HAV_Umi_NightsongFreed_HasMet",
    "HAV_WrootRequest_Event_TalkedToWulbrenInHaven",
    "HAV_WrootRequest_State_ReunionDone",
    "HalsinLeft_KilledLeaders",
    "LearnedDukeMissingCounsellor",
    "LearnedGroveSituation",
    "MOO_Assault_AssaultFlamingFist_001_ThroneRoomDefeated_HasMet",
    "MOO_Assault_AssaultFlamingFist_002_HasMet",
    "MOO_Assault_AssaultFlamingFist_003_ThroneRoomDefeated_HasMet",
    "MOO_Assault_AssaultFlamingFist_004_PostAssault_HasMet",
    "MOO_Assault_AssaultHarper_001_ThroneRoomDefeated_HasMet",
    "MOO_Assault_AssaultHarper_002_ThroneRoomDefeated_HasMet",
    "MOO_Assault_AssaultHarper_003_ThroneRoomDefeated_HasMet",
    "MOO_Assault_HasMet_HarperQuartermaster",
    "MOO_Assault_HasMet_KethericHound",
    "MOO_Audience_HasMet_AccessCultist",
    "MOO_Audience_HasMet_WaitingKetheric",
    "MOO_Audience_Skeletons_SpokeTwice",
    "MOO_Audience_State_KethericToldToKneelAtAltar",
    "MOO_Background_Outlander_CatBusiness",
    "MOO_Bazaar_BazaarStander_006_JailbreakSuccess_HasMet",
    "MOO_Bazaar_BazaarStander_007_AudienceReady_HasMet",
    "MOO_Bazaar_HasMet_Bystander01",
    "MOO_Bazaar_HasMet_Guard00",
    "MOO_Bazaar_State_TalkedAboutPilgrims",
    "MOO_BugBearVendor_HasMet_BazBugBear",
    "MOO_BugBearVendor_State_FoundMotive",
    "MOO_CatBusiness_HasMet_SwA",
    "MOO_Docks_HasMet_OberverTadpolePowers",
    "MOO_Docks_Knows_TadpoleVats",
    "MOO_Docks_State_PersuasionSuccess",
    "MOO_EntranceCheckpoint_Guard2_HasMet_AllowedIn",
    "MOO_Execution_Guard_002_Hasmet",
    "MOO_Execution_Knows_Executioner",
    "MOO_Execution_State_PlayerWantedToAttack",
    "MOO_FlamingSpy_HasMet",
    "MOO_GuardRoom_HasMet_Guard01",
    "MOO_InfernalVendor_Event_SellingBlood",
    "MOO_InfernalVendor_Knows_AskedAboutResearch",
    "MOO_InfernalVendor_State_AskedAboutDeals",
    "MOO_Jailbreak_Event_BoatLeavesWithoutPlayers",
    "MOO_Jailbreak_Event_ForceBoatLeave",
    "MOO_Jailbreak_Event_ProdigyIntro",
    "MOO_Jailbreak_Event_SpeakToGnomesWarning",
    "MOO_Jailbreak_Event_SpeakToTieflingsWarning",
    "MOO_Jailbreak_HasMet_AngrySister",
    "MOO_Jailbreak_HasMet_Guard004",
    "MOO_Jailbreak_HasMet_ProdigySister",
    "MOO_Jailbreak_HasMet_WulbrenOutcast",
    "MOO_Jailbreak_Knows_ToolsNeeded",
    "MOO_Jailbreak_State_WulbrenAlerted",
    "MOO_KitchenFight_HasMet_GnollMaster",
    "MOO_MoonriseTower_State_Outcast",
    "MOO_UpperFloor_HasMet_Guard01",
    "MOO_WallTentacle_Daisy_Interacted",
    "MOO_WallTentacle_HasMet_Mig",
    "ORI_DarkUrge_Knows_ButlerDiedReaction",
    "ORI_DarkUrge_Knows_MetIsobel",
    "ORI_Gale_State_RefusedTWNBossPower",
    "ORI_INCLUSION_ASTARION",
    "ORI_INCLUSION_GALE",
    "ORI_INCLUSION_HALSIN",
    "ORI_INCLUSION_KARLACH",
    "ORI_INCLUSION_LAEZEL",
    "ORI_INCLUSION_MINSC",
    "ORI_INCLUSION_MINTHARA",
    "ORI_INCLUSION_RANDOM",
    "ORI_INCLUSION_SHADOWHEART",
    "ORI_INCLUSION_WYLL",
    "ORI_Inclusion_Astarion",
    "ORI_Inclusion_End_Astarion",
    "ORI_Inclusion_End_Gale",
    "ORI_Inclusion_End_Karlach",
    "ORI_Inclusion_End_Laezel",
    "ORI_Inclusion_End_Random",
    "ORI_Inclusion_End_ShadowHeart",
    "ORI_Inclusion_End_Wyll",
    "ORI_Inclusion_Gale",
    "ORI_Inclusion_Karlach",
    "ORI_Inclusion_Laezel",
    "ORI_Inclusion_Random",
    "ORI_Inclusion_ShadowHeart",
    "ORI_Inclusion_Wyll",
    "ORI_Karlach_HasMet",
    "ORI_Karlach_HasMet_DammonUnavailable",
    "ORI_Karlach_Knows_DammonWorkedInHell",
    "ORI_Laezel_Quest_FoundZorru",
    "ORI_Laezel_State_StartedTieflingsSceneAtCage",
    "ORI_Shadowheart_Event_DarkJusticiarHint",
    "ORI_Shadowheart_Knows_CurseResistant",
    "ORI_Shadowheart_Knows_SeenTempleVista",
    "ORI_Shadowheart_State_HeardSharVoice",
    "ORI_Shadowheart_State_IdolHint",
    "ORI_Shadowheart_State_TempleApproachHint",
    "OpenedSarcophagus",
    "OrderedBreachInn",
    "OrderedKillDruids",
    "PLA_ConflictedFlind_Event_MindControlDamage_Minor",
    "PLA_ConflictedFlind_Event_MindControl_KillHerself",
    "PLA_ConflictedFlind_Hyena_001_HasMet",
    "PLA_ConflictedFlind_Knows_Gnolls",
    "PLA_Desire_Event_HasMet",
    "PLA_Desire_Knows_RavengardTaken",
    "PLA_Desire_Quest_TriedForceDoor",
    "PLA_Desire_State_WyllComTrack",
    "PLA_FlamingFist7_InnBurntDown_HasMet",
    "PLA_FlamingFist7_Knows_AskedWhatHappened",
    "PLA_GithChokepoint_State_FailedReadingMap",
    "PLA_KarlachRecruitmentTollhouse_State_HostilitiesBegan",
    "PLA_KarlachRecruitment_State_PersuasionSucceeded",
    "PLA_Refugee_001_HasMet",
    "PLA_Refugee_002_HasMet",
    "PLA_Refugee_002_TollhouseMentioned",
    "PLA_StuckDwarf_HasMet_FoundWife",
    "PLA_StuckHalfElf_Event_ToldQuestion",
    "PLA_StuckHalfElf_Knows_ExplainedDowry",
    "PLA_StuckHalfElf_Knows_MentionedDowry",
    "PLA_StuckHalfElf_StartInclusion",
    "PLA_StuckHalfElf_State_PlayerAngered",
    "PLA_TavernInvestigation_Knows_AskedStelmane",
    "PLA_TavernInvestigation_Quest_WallCollapsed",
    "PLA_TavernInvestigation_State_HasMet",
    "PLA_Tavern_Knows_DukeInTavern",
    "PLA_ZhentDungeon_Dog_03_HasMet",
    "PLA_ZhentDungeon_State_AgentFreed",
    "PLA_ZhentDungeon_State_SaidPassword",
    "PLA_ZhentDungeon_Zhent01_HasMet",
    "PLA_ZhentDungeon_Zhent05_HasMet",
    "PLA_ZhentShipment_Agent_001_Inclusion_Start",
    "PLA_ZhentShipment_Agent_001_StartInclusion",
    "PLA_ZhentShipment_Agent_002_StartInclusion",
    "PLA_ZhentShipment_State_Talked",
    "PLA_ZhentShipment_State_TalkedAfterKilledGnolls",
    "ParentLied",
    "PreventTradeWithPlayer",
    "ReachedWife",
    "ReflectedKagha",
    "RefusedCircle",
    "RefusedHelpBrothers1",
    "ReportedToDerryth_BaelenIsAlive",
    "RikkaAskedQuest",
    "SCE_Alfira_Event_GaveShiningDawn",
    "SCE_AncientFist_ToldStory",
    "SCE_GnomeFollowUp_HasMet_WulbrenAlive",
    "SCE_GnomeFollowUp_Wulbren_HasMet",
    "SCE_GnomeFollowUp_Wulbren_UneasyAboutPlayer",
    "SCE_JergalDebrief_Event_WhyHere",
    "SCE_Jergal_HasMet",
    "SCE_TieflingFollowUp_Event_GiveShiningDawn",
    "SCE_TieflingFollowUp_Ide_HasMet",
    "SCE_TieflingFollowUp_Knows_MolMissingEyepatch",
    "SCL_DriderHarper_Caster_000_StartInclusion",
    "SCL_DriderHarper_Melee_000_StartInclusion",
    "SCL_DriderHarper_Ranger_000_StartInclusion",
    "SCL_DriderHarper_Ranger_001_StartInclusion",
    "SCL_Drider_AtTower_HasMet",
    "SCL_Drider_Event_CaravanGoesHostile",
    "SCL_Drider_Event_PlayersAttackHarpers",
    "SCL_Drider_Event_ResumeEscort",
    "SCL_Drider_Event_StartHarpersAmbush",
    "SCL_Drider_HarperCaster_000_AtAmbush_HasMet",
    "SCL_Drider_HarperRanger_000_AtAmbush_HasMet",
    "SCL_Drider_HarpersAtInn_OneLinerHasMet",
    "SCL_Drider_HasMet",
    "SCL_Drider_HasMet_CaravanFirstTime",
    "SCL_Drider_HasMet_CaravanGoblinMelee_000",
    "SCL_Drider_HasMet_CaravanGoblinRanger",
    "SCL_Drider_HasMet_CaravanHalfOrcCaster",
    "SCL_Drider_HasMet_CaravanHalfOrcMelee",
    "SCL_Drider_HasMet_HarperCaster000",
    "SCL_Drider_HasMet_HarperMelee000",
    "SCL_Drider_State_AfterAmbushSituationDefused",
    "SCL_Drider_State_DeadCultistSituationDefused",
    "SCL_Drider_State_StartedAmbushQuestWithHarpers",
    "SCL_HarperScouts_BridgePoint_003_Hasmet",
    "SCL_HarperScouts_ShadowCreatures_HasMet",
    "SCL_Harpers_Event_ShowHavenLocation",
    "SCL_MastiffPoachers_Knows_ContinualFlame",
    "SCL_OliversDiary_State_SecondRound",
    "SCL_ServantOfTheRAven_Servant_HasMet",
    "SHA_LastJusticiar_Event_JusticiarTransforms",
    "SHA_LastJusticiar_RatsNegotiation_Event_Hasmet",
    "SHA_LastJusticiar_State_StudiedDiplorat",
    "SHA_Merregon_000_HasMet",
    "SHA_Merregon_003_HasMet",
    "SHA_NightsongPrison_Knows_NightsongIsPerson",
    "SHA_NightsongPrison_State_ShadowheartGaveOpinion",
    "SHA_Nightsong_HasMet",
    "SHA_OrthonLair_Knows_MeatPoisoned",
    "SHA_Orthon_Knows_RaphaelWillMeetAtCamp",
    "SHA_SpiderMeatHunk_HasLicked",
    "SHA_SpiderMeatHunk_HasMet",
    "SHA_Trials_Knows_LearnedAboutTrials",
    "SHA_Trials_State_FirstStatueUsed",
    "SHA_Trials_State_StatueUsed",
    "SidedTieflings",
    "SpokeToBrothers",
    "StartedAlt",
    "TWN_ArabellaPowers_Event_ShadowsAppear",
    "TWN_ArabellaPowers_Event_ShadowsTwisted",
    "TWN_CentralSquare_Event_GotBlessing",
    "TWN_CentralSquare_SharAltar_Event_PassedPassiveReligion",
    "TWN_CentralSquare_State_RecitedDogmas",
    "TWN_Distillery_HasMet_ResearchNotes",
    "TWN_Distillery_HasMet_Zombie_01",
    "TWN_Hospital_HasMet_Nurse002",
    "TWN_Hospital_Reception_CorpseTender_HasMet",
    "TWN_Hospital_Reception_Receptionist_FailedPersuasion",
    "TWN_Hospital_Reception_Receptionist_HasMet",
    "TWN_MissingPets_State_CheckedPileOfPetsCollars",
    "TWN_MissingPets_State_ReadPosters",
    "TWN_Tollhouse_HasMet_Guilt",
    "TWN_Tollhouse_HasMet_Heartlessness",
    "TWN_Tollhouse_TollhouseMaster_HasMet",
    "TeleportOutOfTrespass",
    "TemporaryHostilityAfterDialog",
    "ThankedFreed_Beldron",
    "ThankedFreed_BeldronThulla",
    "ToldAboutTadpole",
    "UND_AdamantineForge_Knows_Adamantine",
    "UND_ArguingGnomes_Event_LearnedAboutPhilomeen",
    "UND_ArguingGnomes_Quest_Accepted",
    "UND_Automaton_Knows_AskedPlace",
    "UND_BrokenLantern_State_TriedArcane",
    "UND_BrokenMoonLantern_HasMet",
    "UND_BroodingSovereign_Event_Enlarged",
    "UND_BroodingSovereign_State_AskedCircle",
    "UND_BroodingSovereign_State_RefusedCircle",
    "UND_ClericPetGrave_HasMet",
    "UND_DarkJusticiarsCorpses_Recognized",
    "UND_DarkLake_State_ClaimedGekhWasDead",
    "UND_DarkLake_State_HostileResolution",
    "UND_DeadInTheWater_CorpseDisposerCompanion_HasMet",
    "UND_DeadInTheWater_CorpseDisposerLeader_HasMet",
    "UND_DuergarCamp_Knows_NereIsTrapped",
    "UND_DuergarCamp_Mutineers_HasMet",
    "UND_DuergarCamp_State_DocksHostile",
    "UND_DuergarCamp_State_SidedNone",
    "UND_DuergarGuard_AtPier_01_HasMet",
    "UND_DuergarMutineerFollowUp_Event_Happened",
    "UND_DuergarPatroller_03_HasMet",
    "UND_EbonLake_Event_MoveToLake",
    "UND_ElevatorGuard002_HasMet",
    "UND_Elevator_Event_GotWarning",
    "UND_FairyRings_Dead_AskedDrowIdentity",
    "UND_FearfulRothe_Event_ConvincedRotheToAttackDuergar",
    "UND_FearfulRothe_Event_MakeDuergarHostileInDialog",
    "UND_FearfulRothe_HasMet_Rothe_001_SpeakWithAnimals",
    "UND_FearfulRothe_State_BefriendedRothe",
    "UND_FurnaceSearch_Event_DuergarMentionsForge",
    "UND_FurnaceSearch_Knows_Xargrim",
    "UND_GnomeForeman_UnfortunateGnome_InclusionStart",
    "UND_GnomeWorkerLumpy_HasmetRescued",
    "UND_LoneDuergar_Event_WaitingForMainDialog",
    "UND_MyconidCircle_BroodingSovereign_State_InParty",
    "UND_MyconidCircle_DeepRothe_BaelenAteShroom_Hasmet",
    "UND_MyconidCircle_DirectToSovereign_HasMet",
    "UND_MyconidCircle_DwarvenAlchemist_BaelenRestoredHasmet",
    "UND_MyconidCircle_InjuredGnome_ReportedGrymforgeFate",
    "UND_MyconidCircle_MyconidSuspicious_HasMet",
    "UND_MyconidCircle_PlantDuergarHasMet",
    "UND_MyconidCircle_State_FirstGreetingDone",
    "UND_MyconidCircle_State_GainedAccess",
    "UND_MyconidRevenge_Event_TakeHead",
    "UND_PetrifiedDrow_Knows_MemoryCrystal",
    "UND_PetrifiedDrow_Knows_WizardIsDhourn",
    "UND_SocietyOfBrilliance_MindFlayer_HasMet",
    "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionAsked",
    "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionRefused",
    "UND_SocietyOfBrilliance_MindFlayer_State_MindFlayerFeeding",
    "UND_State_LeaderFreedGnomes",
    "UND_TheDrowNere_Event_HadMindMeld",
    "UND_TheDrowNere_Mutiny_InclusionStart_GnomeSilly",
    "UND_TheDrowNere_State_KilledGnomeSerene",
    "UND_WormWall_State_RecognisedCrawlers",
    "WLD_FOR_GnomeGoblinsAngry",
    "WLD_UnfortunateGnome_PayPassage",
    "ZevlorRewarded",
    "ZhentDungeon_AgreedBuy",
    "a0afae3d-53b0-192d-d822-c61da104f979_A",
    "a2fa1f0f-b9b5-f8bf-bf27-b11194b8502f_B",
    "a63e4af2-6edc-188a-efdf-b9ffc5460fc5_LOCAL_B",
    "a6f2350b-ecc4-bf6c-0c73-dcb37f9e9690_B",
    "a7407f82-add0-9f6d-e4e6-78b9c39195a6_C",
    "a759296c-5d41-f5b9-7d31-1c70d1e10dc7_Once",
    "aa1d4932-8689-5e30-2b17-9b0968663a7a_historysuccess",
    "acc081f3-204a-2f29-a3bb-6d33ff784c39_C",
    "b0d721a3-ca68-1e03-4e19-6eeddf6dd9ab_B",
    "b156dddb-036d-8d82-5a7a-8fd110e48cb4_B",
    "b2a52f0b-5fa8-d275-f080-0fc8edbe1faf_B",
    "b43d3bc7-f10d-73cc-232e-c1f93cba3ed5_Local2",
    "b618166c-99f4-1c7a-02b7-32f0f0fbe420_LocalA",
    "b70d5139-9980-efc6-3ba3-fe2eb56ab2e0_B",
    "b951f0e6-65af-843d-a666-f5284343cc67_MentionedTrueSoul",
    "ba2b225d-e9d4-944d-5b4f-b27dd975c626_A",
    "bde7a4f1-933f-f6ce-4a3e-4b1f29f83704_B",
    "c167cdf3-7201-e55c-222f-773c758e1000_IncludedHusband",
    "c3207254-eafb-348b-d327-f690af0e213f_startedattackmove",
    "c3d825d1-49b8-9ae2-4554-4fc1f55d2eee_LocalA",
    "c5f62c4b-fb04-1505-c35b-63119d96b127_First_Disabled",
    "c68c5474-226f-4b47-b327-a22274e360a0_B",
    "c76693dc-e4a4-5631-a9b5-8abc6b4ab36e_DarkUrgeThreatened",
    "c7cbc714-5e48-c78a-0867-2ce81a42d681_B",
    "ca797aab-5a73-7ec5-edb7-022122573b39_B",
    "cd4b312f-5a40-b8c1-1ecb-0862c829a479_A",
    "ce2b9169-f3e7-e07f-9c58-0fd373d5df9a_PLA_ZhentDungeon_Zhent02_Dead_KnowsZarysisZhentarim",
    "d0423454-cc51-ae8e-5096-cffd1aac9f75_A",
    "d3d3855d-6721-b089-5c1e-d6d255a46fdc_A",
    "d3eb78cf-ff8c-1e7a-7df7-4b6a04226b17_B",
    "d6df8edb-ac4b-e1d2-794b-6bfd00757cbf_A",
    "d97f72ff-8fb1-8a4c-f169-89751bd6e125_b",
    "da38cd0f-efef-6809-231d-26f71308cd07_B",
    "dd1890a0-ff6c-a358-4269-1859078cc21d_B",
    "ddb63ed1-6bbb-2251-c4d6-b1c59315e195_A",
    "df3e1892-2ab5-7b69-e57b-a75504e1a8f2_B",
    "e0b6dfeb-2923-e0ad-1dc5-2a5d1e055e16_local1",
    "e6738c9d-060d-c901-b945-4d49ca303d5b_SuccessfullyReadTracks",
    "ea88dfe9-ff39-9b98-ae03-48d7fdf2708e_A",
    "ed70fdfc-3d7b-7753-1171-957f7316fe55_B",
    "f108995b-14f4-7823-d218-790177a93da8_B",
    "f3afb428-73fc-2e5c-057b-2e0e5a1b2f1c_B",
    "f3f236b2-37a1-a0a2-5855-184ead7b1286_C",
    "f8e3175b-5587-d6cd-2174-e5a3e9ca4890_A",
    "fa6e2ce0-64f3-bfb8-fb47-10f50f02cadf_AbsoluteMentioned",
    "fb0e13b6-cc68-d496-51c2-4594f4f5bf40_TauntHer",
    "fd9ed69f-475f-def2-bae0-25065ccc4143_B"
  ]
}