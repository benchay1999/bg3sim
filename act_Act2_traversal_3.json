{
  "act_id": "Act2",
  "chapter_sequence": [
    "Colony",
    "Epilogue",
    "Haven",
    "MoonriseTowers",
    "Shadowland",
    "Shar",
    "Town"
  ],
  "chapter_results": {
    "Colony": {
      "chapter_id": "Act2_Colony",
      "scenario_sequence": [
        "col_necromancerlab",
        "col_memorylibrary",
        "col_arrival",
        "col_entrancedoor",
        "col_kethericshowdown",
        "col_tadpolechamber",
        "col_barracks",
        "col_elderbrain",
        "col_vault",
        "col_necrolab",
        "col_regenstation",
        "col_cleansingchute",
        "col_kitchenvista",
        "col_kitchenentry",
        "col_entrance",
        "col_kitchensecret",
        "col_mizorarescue",
        "col_morgue",
        "col_gen",
        "col_partysuppression",
        "bhvr_col",
        "col_necromancer",
        "col_kitchen",
        "col_general",
        "col_nautiloid",
        "col_brainreader",
        "col_tadpolingcentre"
      ],
      "scenario_results": {
        "col_necromancerlab": {
          "scenario_name": "col_necromancerlab",
          "session_sequence": [
            "AD_MintharaEntersLab",
            "AD_Zombie"
          ],
          "paths": {
            "AD_MintharaEntersLab": [
              "AD_MintharaEntersLab_0"
            ],
            "AD_Zombie": [
              "AD_Zombie_0"
            ]
          },
          "node_data": {
            "AD_MintharaEntersLab": [
              {
                "id": "AD_MintharaEntersLab_0",
                "speaker": "Nightwarden Minthara",
                "text": "Whatever experiments Balthazar performed here, I fear he made more than thralls and ghouls.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Zombie": [
              {
                "id": "AD_Zombie_0",
                "speaker": "Cal, Danis, Dror Ragzlin, GROUP_Act2_COL_NecromancerZombies, Lakrissa, Lia, Nickels, Nightwarden Minthara, Nimble, Wulbren Bongle",
                "text": "*Groan.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: SFX only. zombie sound."
              }
            ]
          },
          "session_synopses": {
            "AD_MintharaEntersLab": "",
            "AD_Zombie": "The player interacts with a zombie in the necromancer's lab,"
          }
        },
        "col_memorylibrary": {
          "scenario_name": "col_memorylibrary",
          "session_sequence": [
            "PAD_Manuscripts"
          ],
          "paths": {
            "PAD_Manuscripts": [
              "PAD_Manuscripts_0"
            ]
          },
          "node_data": {
            "PAD_Manuscripts": [
              {
                "id": "PAD_Manuscripts_0",
                "speaker": "Player",
                "text": "Seems I can understand illithid script. Thank you, tadpole.",
                "node_type": "normal",
                "checkflags": [
                  "COL_MemoryLibrary_Manuscripts_ArcanaCheckSuccess"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_Manuscripts": "This dialog plays upon rolling a passive Arcana check after reading one of the illithid manuscripts in the lower Colony's Memory Library.For tadpoled companions, each companion will see this check once, after reading an illithid manuscript, unless someone else has succeeded this check.For non-tadpoled companions, a different check occurs when they try to read the illithid manuscripts. As they do not have a tadpole, they can't read the script, and will remark on this. A different Arcana Check occurs in script, and the resulting AD from this check will also play again everytime they try to read an illithid manuscript afterwards.So for non-tadpoled companions (no ILLITHID tag) this dialog is repeatable, but not for tadpoled companions."
          }
        },
        "col_arrival": {
          "scenario_name": "col_arrival",
          "session_sequence": [
            "DaisyAD_ThroughHole_SkippedPrison"
          ],
          "paths": {
            "DaisyAD_ThroughHole_SkippedPrison": [
              "DaisyAD_ThroughHole_SkippedPrison_0",
              "DaisyAD_ThroughHole_SkippedPrison_1"
            ]
          },
          "node_data": {
            "DaisyAD_ThroughHole_SkippedPrison": [
              {
                "id": "DaisyAD_ThroughHole_SkippedPrison_0",
                "speaker": "",
                "text": "This is an illithid colony. The source of the tadpoles must be in here, somewhere.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "COL_General_Knows_ColonyIsIllithid"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "DaisyAD_ThroughHole_SkippedPrison_1",
                "speaker": "",
                "text": "Tread carefully. That telepathic storm is now a tempest.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "DaisyAD_ThroughHole_SkippedPrison": "On arrival in colony. If through hole in tower and you did not go through prison"
          }
        },
        "col_entrancedoor": {
          "scenario_name": "col_entrancedoor",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "15",
              "20"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "15",
                "speaker": "Narrator",
                "text": "*The door pulses in recognition.*",
                "node_type": "normal",
                "checkflags": [
                  "COL_EntranceDoor_State_Inside"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "20",
                "speaker": "Narrator",
                "text": "*But in denial, too. It will not open, even for you.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "": "Dialogue when approaching the door at the end of the Colony that precedes the Ketheric Showdown - once you're inside, it remains locked from the inside until Ketheric is defeated.The COL_EntranceDoor_State_Outside flag indicates on what side the player is."
          }
        },
        "col_kethericshowdown": {
          "scenario_name": "col_kethericshowdown",
          "session_sequence": [
            "AD_Phase3Transition",
            "AD_NightsongApostle",
            "KethericIntro",
            "PAD_AfterCombatComment",
            "DaisyAD_ElderBrain",
            "AD_NightsongTransform",
            "AD_KethericInvulnerable",
            "AD_NightsongAfterCombat"
          ],
          "paths": {
            "AD_Phase3Transition": [
              "AD_Phase3Transition_0"
            ],
            "AD_NightsongApostle": [
              "AD_NightsongApostle_0"
            ],
            "KethericIntro": [
              "KethericIntro_71",
              "KethericIntro_44",
              "KethericIntro_76",
              "KethericIntro_3",
              "KethericIntro_36",
              "KethericIntro_26",
              "KethericIntro_21",
              "KethericIntro_25",
              "KethericIntro_48",
              "KethericIntro_57",
              "KethericIntro_13",
              "KethericIntro_27",
              "KethericIntro_0",
              "KethericIntro_78",
              "KethericIntro_56",
              "KethericIntro_12",
              "KethericIntro_14"
            ],
            "PAD_AfterCombatComment": [
              "PAD_AfterCombatComment_0"
            ],
            "DaisyAD_ElderBrain": [
              "DaisyAD_ElderBrain_0"
            ],
            "AD_NightsongTransform": [
              "AD_NightsongTransform_0"
            ],
            "AD_KethericInvulnerable": [
              "AD_KethericInvulnerable_0"
            ],
            "AD_NightsongAfterCombat": [
              "AD_NightsongAfterCombat_0"
            ]
          },
          "node_data": {
            "AD_Phase3Transition": [
              {
                "id": "AD_Phase3Transition_0",
                "speaker": "",
                "text": "UNLIFE TO MY LIFE - SUSTAIN ME, SLAVES.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_NightsongApostle": [
              {
                "id": "AD_NightsongApostle_0",
                "speaker": "Nightsong",
                "text": "Now you wear a face to match your soul, oathbreaker.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Scorn in the heat of battle - her nemesis has just turned into a hideous monster"
              }
            ],
            "KethericIntro": [
              {
                "id": "KethericIntro_71",
                "speaker": "Ketheric Thorm",
                "text": "There you are. As predicted. What is it, I wonder, that draws one toward death like a moth to light?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "FactionHostileToPlayerGroupAfterDialog"
                ],
                "goto": "",
                "link": "74",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KethericIntro_44",
                "speaker": "Ketheric Thorm",
                "text": "You could have run away. Absconded with the Prism - the one thing that could prevent me from fulfilling my destiny.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "74",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KethericIntro_76",
                "speaker": "Ketheric Thorm",
                "text": "But the lure of one's destiny is irresistible, isn't it?",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Audience_State_SpokeToKetheric = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "74",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KethericIntro_3",
                "speaker": "Ketheric Thorm",
                "text": "Perhaps you hoped to learn your place in history before you are erased from it. A bright flash of clarity before the snuffing-out.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "74",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KethericIntro_36",
                "speaker": "Player",
                "text": "Why is the Prism so important to you?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "2",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KethericIntro_26",
                "speaker": "Ketheric Thorm",
                "text": "The very fact of your being attests to its power - despite your infection, you resisted the brain, here in the heart of its domain.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KethericIntro_21",
                "speaker": "Ketheric Thorm",
                "text": "What good is an army of thralls if they do not obey their master?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KethericIntro_25",
                "speaker": "Ketheric Thorm",
                "text": "Let us speak plainly.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KethericIntro_48",
                "speaker": "Ketheric Thorm",
                "text": "My Lord Myrkul gave me the one thing I desired - the one thing that no other god could grant me.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KethericIntro_57",
                "speaker": "Ketheric Thorm",
                "text": "My daughter's life returned. Her heart beating once more.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KethericIntro_13",
                "speaker": "Ketheric Thorm",
                "text": "For that, he asked that I serve as his Chosen, join Orin and Gortash to grow the cult of the Absolute, and then... take control of it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KethericIntro_27",
                "speaker": "Ketheric Thorm",
                "text": "He's never had a more devoted follower.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KethericIntro_0",
                "speaker": "Ketheric Thorm",
                "text": "I have fought great wars before, in the service of other gods, and other powers. But for Myrkul, I would condemn all of Faerûn to death.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KethericIntro_78",
                "speaker": "Ketheric Thorm",
                "text": "You are all that stands between me and my destiny - and you have brought the Prism here.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KethericIntro_56",
                "speaker": "Ketheric Thorm",
                "text": "I will kill you now. And then I will raise you as my servant.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Cold, merciless ire."
              },
              {
                "id": "KethericIntro_12",
                "speaker": "Player",
                "text": "Enough talk. Let's finish this.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KethericIntro_14",
                "speaker": "Ketheric Thorm",
                "text": "With pleasure.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_AfterCombatComment": [
              {
                "id": "PAD_AfterCombatComment_0",
                "speaker": "Player",
                "text": "The Chosen of Myrkul is dead - permanently, this time.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Karlach: She's distracted. More focused on Gortash."
              }
            ],
            "DaisyAD_ElderBrain": [
              {
                "id": "DaisyAD_ElderBrain_0",
                "speaker": "",
                "text": "An elder brain... One of the cruellest and most powerful creatures in existence, enslaved by mere mortals.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_NightsongTransform": [
              {
                "id": "AD_NightsongTransform_0",
                "speaker": "Nightsong",
                "text": "MOONMAIDEN, HEAR ME! DAME AYLIN IS FREE!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Scorn in the heat of battle - her nemesis has just turned into a hideous monster"
              }
            ],
            "AD_KethericInvulnerable": [
              {
                "id": "AD_KethericInvulnerable_0",
                "speaker": "",
                "text": "Have you not learned? I am beyond death, fool.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_NightsongAfterCombat": [
              {
                "id": "AD_NightsongAfterCombat_0",
                "speaker": "Nightsong",
                "text": "We fly at your word.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Scorn in the heat of battle - her nemesis has just turned into a hideous monster"
              }
            ]
          },
          "session_synopses": {
            "AD_Phase3Transition": "This AD plays during the Ketheric Showdown in the lower Colony, when the third phase of the fight starts, this will play only once on Ketheric when his turn starts. Ketheric, in his Apostle of Myrkul form, calls upon the Necromites to sacrifice themselves to heal him.",
            "AD_NightsongApostle": "This AD plays during the Ketheric Showdown in the lower Colony, after Ketheric has transformed into his Apostle form/reached his second stage, Nightsong will react to this upon her first combat turn after this.",
            "KethericIntro": "This dialog plays at the start of the Ketheric boss fight in the Colony. There are numerous permutations here: Nightsong being dead or alive, freed from her soul cage (through stealth before being spotted); Isobel being absent or tadpoled or tadpoled and killed (in the boss chamber) before entering the dialog; Jaheira being present here (and spotted) or being absent.",
            "PAD_AfterCombatComment": "A PAD commenting on defeating Ketheric in his Apostle form at the end of the mind flayer Colony. After this the player will say that they need to go discuss the next course of action with their allies (alluding to Intermezzo in Moonrise Tower).At this point the players should take Ketheric's Netherstone (but we can't ensure that a player hasn't already looted said netherstone off his corpse by the time that end node is played).If there are two players available, they will banter together, otherwise a solo PAD will play.",
            "DaisyAD_ElderBrain": "The Elder Brain. One of the cruelest and most powerful creatures that exist. Subservient to those three. And those gems seem to be the key. We must obtain them.",
            "AD_NightsongTransform": "This AD plays during the Ketheric Showdown in the lower Colony, after Nightsong is freed from her soul cage. She will transform into her paladin form.",
            "AD_KethericInvulnerable": "This AD plays during the Ketheric Showdown in the lower Colony, when the player tries to damage Ketheric while he is invulnerable (Nightsong is still in the soul cage). Ketheric will react to the damage attempt. This will play if Ketheric is in his human form.",
            "AD_NightsongAfterCombat": "This dialogue will play when interacting with Nightsong after the Ketheric Showdown combat at the end of the Colony."
          }
        },
        "col_tadpolechamber": {
          "scenario_name": "col_tadpolechamber",
          "session_sequence": [
            "PAD_BrinePool"
          ],
          "paths": {
            "PAD_BrinePool": [
              "PAD_BrinePool_0"
            ]
          },
          "node_data": {
            "PAD_BrinePool": [
              {
                "id": "PAD_BrinePool_0",
                "speaker": "Player",
                "text": "No tadpoles in this brine pool.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_BrinePool": "A PAD reacting to the brine pool in the Tadpoling Centre in the Colony. The player will interact with the brine pool and play this dialog. If a player succeeds a perception check and fishes out the last remaining tadpole, a different node will be played."
          }
        },
        "col_barracks": {
          "scenario_name": "col_barracks",
          "session_sequence": [
            "AD_MistressOfSouls_Combat",
            "AD_MistressOfSouls_GoForth",
            "AD_SkullLasher_003_Combat",
            "MistressOfSouls_InterruptBlessing"
          ],
          "paths": {
            "AD_MistressOfSouls_Combat": [
              "AD_MistressOfSouls_Combat_0"
            ],
            "AD_MistressOfSouls_GoForth": [
              "AD_MistressOfSouls_GoForth_0"
            ],
            "AD_SkullLasher_003_Combat": [
              "AD_SkullLasher_003_Combat_0"
            ],
            "MistressOfSouls_InterruptBlessing": [
              "MistressOfSouls_InterruptBlessing_7",
              "MistressOfSouls_InterruptBlessing_0",
              "MistressOfSouls_InterruptBlessing_17",
              "MistressOfSouls_InterruptBlessing_6",
              "MistressOfSouls_InterruptBlessing_4",
              "MistressOfSouls_InterruptBlessing_13",
              "MistressOfSouls_InterruptBlessing_14"
            ]
          },
          "node_data": {
            "AD_MistressOfSouls_Combat": [
              {
                "id": "AD_MistressOfSouls_Combat_0",
                "speaker": "Kressa Bonedaughter",
                "text": "Not even the worms will want your carcass once I'm done with you!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Battle taunt"
              }
            ],
            "AD_MistressOfSouls_GoForth": [
              {
                "id": "AD_MistressOfSouls_GoForth_0",
                "speaker": "Kressa Bonedaughter",
                "text": "Gather yourselves - soon, we march to victory.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Command issued to troops."
              }
            ],
            "AD_SkullLasher_003_Combat": [
              {
                "id": "AD_SkullLasher_003_Combat_0",
                "speaker": "Maghtew Budj",
                "text": "I shall make sweet music of your screams!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Battle taunt"
              }
            ],
            "MistressOfSouls_InterruptBlessing": [
              {
                "id": "MistressOfSouls_InterruptBlessing_7",
                "speaker": "Kressa Bonedaughter",
                "text": "Halt. Who are you, pretty dead thing, that interrupts this consecration of the undying?",
                "node_type": "normal",
                "checkflags": [
                  "REALLY_ASTARION"
                ],
                "setflags": [
                  "FactionHostileToPlayerGroupAfterDialog"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "MistressOfSouls_InterruptBlessing_0",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "MistressOfSouls_InterruptBlessing_17",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "MistressOfSouls_InterruptBlessing_17",
                "speaker": "Kressa Bonedaughter",
                "text": "Halt. Who are you, warm of blood and quick of heart, that interrupts this consecration of the undying?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "FactionHostileToPlayerGroupAfterDialog"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "MistressOfSouls_InterruptBlessing_6",
                "speaker": "Player",
                "text": "I am unworthy of your notice - a nobody.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "InternalNodeContext: Non-bards. No advantage."
              },
              {
                "id": "MistressOfSouls_InterruptBlessing_4",
                "speaker": "",
                "text": "True",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "MistressOfSouls_InterruptBlessing_13",
                "speaker": "Kressa Bonedaughter",
                "text": "Tsk. A defective thrall that should have had its tongue removed.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "MistressOfSouls_InterruptBlessing_14",
                "speaker": "Kressa Bonedaughter",
                "text": "We are preparing to leave. Make yourself useful below.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "COL_Barracks_Mistress_Knows_ThinksPlayerIsThrall",
                  "COL_Barracks_State_InterruptConvinced"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_MistressOfSouls_Combat": "Krustine, Mistress of Souls in the Colony Barracks, combat AD. Played only once.",
            "AD_MistressOfSouls_GoForth": "Krustine, Mistress of Souls in the Colony Barracks, sends the Skull Lashers on their way to prepare for the march on Baldur's Gate. Played only once.",
            "AD_SkullLasher_003_Combat": "Magthew Budj, a human male, one of three Skull Lashers in the Colony Barracks, combat AD. Played only once.",
            "MistressOfSouls_InterruptBlessing": "Reaction to interrupting Krustine's blessing ceremony in the Colony Barracks. She is blessing three Skull Lashers, and approaching or interrupting will cause her to interrogate you."
          }
        },
        "col_elderbrain": {
          "scenario_name": "col_elderbrain",
          "session_sequence": [
            "AD_Rapid02",
            "AD_Rapid03"
          ],
          "paths": {
            "AD_Rapid02": [
              "AD_Rapid02_0"
            ],
            "AD_Rapid03": [
              "AD_Rapid03_0"
            ]
          },
          "node_data": {
            "AD_Rapid02": [
              {
                "id": "AD_Rapid02_0",
                "speaker": "",
                "text": "---ASSEMBLE---",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Frantic"
              }
            ],
            "AD_Rapid03": [
              {
                "id": "AD_Rapid03_0",
                "speaker": "",
                "text": "---PREPARE---",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: frantic"
              }
            ]
          },
          "session_synopses": {
            "AD_Rapid02": "Quick-fire Elder Brain ADs in the Colony corridors. If the party attacked Ketheric on the Moonrise Rooftop, there will be more frantic, fast-paced ADs from the Elder Brain surrounding us in quick succession, similar to when we approach the Elder Brain in the Morphic Pool. In this flow, the evacuation of the Colony is a lot more pressing because Ketheric was attacked.",
            "AD_Rapid03": "Quick-fire Elder Brain ADs in the Colony corridors. If the party attacked Ketheric on the Moonrise Rooftop, there will be more frantic, fast-paced ADs from the Elder Brain surrounding us in quick succession, similar to when we approach the Elder Brain in the Morphic Pool. In this flow, the evacuation of the Colony is a lot more pressing because Ketheric was attacked."
          }
        },
        "col_vault": {
          "scenario_name": "col_vault",
          "session_sequence": [
            "DaisyAD_GrandDesignReaction",
            "Puzzle",
            "PAD_GrandDesign",
            "AD_Solving"
          ],
          "paths": {
            "DaisyAD_GrandDesignReaction": [
              "DaisyAD_GrandDesignReaction_0"
            ],
            "Puzzle": [
              "Puzzle_13",
              "Puzzle_12",
              "Puzzle_1"
            ],
            "PAD_GrandDesign": [
              "PAD_GrandDesign_0",
              "PAD_GrandDesign_1"
            ],
            "AD_Solving": [
              "AD_Solving_0"
            ]
          },
          "node_data": {
            "DaisyAD_GrandDesignReaction": [
              {
                "id": "DaisyAD_GrandDesignReaction_0",
                "speaker": "",
                "text": "The Grand Design. The restoration of the mind flayer empire. The dream of all illithids.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Puzzle": [
              {
                "id": "Puzzle_13",
                "speaker": "Narrator",
                "text": "*As the console bursts into life, a mind touches your own. Alien and full of desperate need - but fragmented, too.*",
                "node_type": "normal",
                "checkflags": [
                  "COL_Vault_State_HasAccess = False",
                  "COL_Vault_State_Unlocked = False"
                ],
                "setflags": [
                  "COL_Vault_State_HasAccess"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Shot of puzzle space as it winks into existence"
              },
              {
                "id": "Puzzle_12",
                "speaker": "Narrator",
                "text": "*It is... incomplete. It yearns to connect - but needs you to guide the process, linking each part of your mind to its like.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Shot of the starting point of the player's mind, and the ending point of the machine's, with all the unconnected paths in between."
              },
              {
                "id": "Puzzle_1",
                "speaker": "Player",
                "text": "Begin to manipulate the mind.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "COL_Vault_Event_Start"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_GrandDesign": [
              {
                "id": "PAD_GrandDesign_0",
                "speaker": "Gale",
                "text": "I wonder, how did the Illithid Empire fall?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PAD_GrandDesign_1",
                "speaker": "Karlach, Lae'zel, Shadowheart",
                "text": "Probably with a great gooey bang.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Solving": [
              {
                "id": "AD_Solving_0",
                "speaker": "Mind of the Vault",
                "text": "Wel... Welcome back, masterrrr!",
                "node_type": "normal",
                "checkflags": [
                  "COL_Vault_State_3NodeUnlocked"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: Partial lucidity (3 out of 3 brain parts activated; fully lucid in following lines as puzzle is now solved)\rNodeContext: Mechanically distorted speech; almost \"normal\""
              }
            ]
          },
          "session_synopses": {
            "DaisyAD_GrandDesignReaction": "Daisy reacts to seeing an illithid sculpture of the Grand Design.",
            "Puzzle": "This dialog plays when interacting with the button at the Colony Vault. It is an interaction with the mind within the illithid machine. Only companions with a tadpole may interact with the machine, or they will be denied access.Interacting with the mind allows the player to start solving the puzzle, reset the puzzle or talk to it after the puzzle is solved. When it is solved, the mind considers you its master, and you can ask it to do things like open or close the vaults (which contain rewards), show you a map of the Colony or \"shatter\" the mind to its original state.",
            "PAD_GrandDesign": "",
            "AD_Solving": "AD occasionally played as the player solves the puzzle, providing feedback to the player."
          }
        },
        "col_necrolab": {
          "scenario_name": "col_necrolab",
          "session_sequence": [
            "GrandDesignSculpture",
            "AD_Minthara_WitnessedBrainDevice"
          ],
          "paths": {
            "GrandDesignSculpture": [
              "GrandDesignSculpture_7",
              "GrandDesignSculpture_6",
              "GrandDesignSculpture_10",
              "GrandDesignSculpture_3",
              "GrandDesignSculpture_4",
              "GrandDesignSculpture_2",
              "GrandDesignSculpture_8",
              "GrandDesignSculpture_1",
              "GrandDesignSculpture_5",
              "GrandDesignSculpture_0"
            ],
            "AD_Minthara_WitnessedBrainDevice": [
              "AD_Minthara_WitnessedBrainDevice_0"
            ]
          },
          "node_data": {
            "GrandDesignSculpture": [
              {
                "id": "GrandDesignSculpture_7",
                "speaker": "Narrator",
                "text": "-OUR-<br>                     -destiny-<br>-DESIGN-<br>                 -downfall-",
                "node_type": "normal",
                "checkflags": [
                  "ILLITHID"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Wide shot of entire relief, dwarfing player"
              },
              {
                "id": "GrandDesignSculpture_6",
                "speaker": "Narrator",
                "text": "*Your tadpole echoes. Not with presence, but memory - tinged with loss.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Close-up of central figure, looming large with Brain above"
              },
              {
                "id": "GrandDesignSculpture_10",
                "speaker": "",
                "text": "-THE GRAND DESIGN-<br>             -order-<br>-perfection-<br>                -UNITY-",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Shot of nautiloids"
              },
              {
                "id": "GrandDesignSculpture_3",
                "speaker": "",
                "text": "-every plane-<br>          -AS ONE-<br>-every being-<br>          -IN THEIR PLACE-",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Shots of the various scenes of torture on the sculpture, humanoid shapes bowed in agony"
              },
              {
                "id": "GrandDesignSculpture_4",
                "speaker": "Narrator",
                "text": "*That loss blooms into a sudden fury, burying claws in your mind.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Mind-meld effect, player in pain"
              },
              {
                "id": "GrandDesignSculpture_2",
                "speaker": "",
                "text": "-taken-<br>           -corrupted-<br>-GONE-",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Mind-meld effect, player in pain"
              },
              {
                "id": "GrandDesignSculpture_8",
                "speaker": "Narrator",
                "text": "*And just as suddenly, pain and memory are gone - leaving only stone once more.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Wide shot of sculpture again, pulling out as player straightens."
              },
              {
                "id": "GrandDesignSculpture_1",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_Laezel"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "GrandDesignSculpture_5",
                "speaker": "Lae'zel",
                "text": "The Grand Design. It is every githyanki's duty to ensure the ghaik empire is never reborn.",
                "node_type": "normal",
                "checkflags": [
                  "COL_NecroLab_GrandDesignSculpture_HasMet_LaezelInclusion = False"
                ],
                "setflags": [
                  "COL_NecroLab_GrandDesignSculpture_HasMet_LaezelInclusion"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "GrandDesignSculpture_0",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_End_Laezel"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Minthara_WitnessedBrainDevice": [
              {
                "id": "AD_Minthara_WitnessedBrainDevice_0",
                "speaker": "Nightwarden Minthara",
                "text": "A splendid device. All the benefits of a cleric, no gods required.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "GrandDesignSculpture": "An interaction with the mind flayer sculpture depicting the Grand Design, as seen in the intro cutscene of the game in the Nautiloid. A psionic imprint tells you its story.",
            "AD_Minthara_WitnessedBrainDevice": ""
          }
        },
        "col_regenstation": {
          "scenario_name": "col_regenstation",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "col_cleansingchute": {
          "scenario_name": "col_cleansingchute",
          "session_sequence": [
            "PAD"
          ],
          "paths": {
            "PAD": [
              "PAD_0"
            ]
          },
          "node_data": {
            "PAD": [
              {
                "id": "PAD_0",
                "speaker": "Player",
                "text": "An offering from Moonrise Towers.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD": "The player witnesses a bloody corpse rolling out of the chute in the Cleansing Room of the lower Mind Flayer Colony, coming in from the Oubliette. This PAD is their reaction to seeing this, and connecting it to Moonrise above."
          }
        },
        "col_kitchenvista": {
          "scenario_name": "col_kitchenvista",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "col_kitchenentry": {
          "scenario_name": "col_kitchenentry",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "col_entrance": {
          "scenario_name": "col_entrance",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "col_kitchensecret": {
          "scenario_name": "col_kitchensecret",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "col_mizorarescue": {
          "scenario_name": "col_mizorarescue",
          "session_sequence": [
            "AD_MizoraInPod"
          ],
          "paths": {
            "AD_MizoraInPod": [
              "AD_MizoraInPod_0"
            ]
          },
          "node_data": {
            "AD_MizoraInPod": [
              {
                "id": "AD_MizoraInPod_0",
                "speaker": "",
                "text": "Bastards. Can't conjure so much as a fireball in this thing.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_MizoraInPod": "Mizora in a pod in COLony"
          }
        },
        "col_morgue": {
          "scenario_name": "col_morgue",
          "session_sequence": [
            "AD_Minthara_EnteredRoom",
            "AD_Butcher_CombatTurn002",
            "Us"
          ],
          "paths": {
            "AD_Minthara_EnteredRoom": [
              "AD_Minthara_EnteredRoom_0"
            ],
            "AD_Butcher_CombatTurn002": [
              "AD_Butcher_CombatTurn002_0"
            ],
            "Us": [
              "Us_3",
              "Us_9",
              "Us_1",
              "Us_0",
              "Us_8",
              "Us_4"
            ]
          },
          "node_data": {
            "AD_Minthara_EnteredRoom": [
              {
                "id": "AD_Minthara_EnteredRoom_0",
                "speaker": "Nightwarden Minthara",
                "text": "Fresh recruits for Ketheric's army. To a necromancer, a morgue is a muster yard.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Butcher_CombatTurn002": [
              {
                "id": "AD_Butcher_CombatTurn002_0",
                "speaker": "Chop",
                "text": "Kill me. No more voices. No more red. Only peace. Only dead.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Anguished moment of lucidity cried out during combat. Wants to be put out of his misery,"
              }
            ],
            "Us": [
              {
                "id": "Us_3",
                "speaker": "Us",
                "text": "Friend! You found the helm!",
                "node_type": "normal",
                "checkflags": [
                  "COL_Morgue_HasMet_Us = False"
                ],
                "setflags": [
                  "COL_Morgue_User_HasMet_Us"
                ],
                "goto": "",
                "link": "7",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Recognition/excited ('helm' referencing their previous adventures to get to a nautiloid helm during the tutorial)"
              },
              {
                "id": "Us_9",
                "speaker": "Us",
                "text": "We remember you well. You saved Us once. Perhaps you can do it again?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "7",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Pleading"
              },
              {
                "id": "Us_1",
                "speaker": "Us",
                "text": "They are not kind to Us here. We are different, they say. Aberrant.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "7",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Pleading"
              },
              {
                "id": "Us_0",
                "speaker": "Us",
                "text": "They wish to repurpose Us - destroy what they cannot fix. Please, help Us escape harm!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "COL_Morgue_HasMet_Us"
                ],
                "goto": "",
                "link": "7",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Pleading"
              },
              {
                "id": "Us_8",
                "speaker": "Player",
                "text": "I'll free you.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "7",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Us_4",
                "speaker": "Us",
                "text": "Oh, thank you, thank you! You are a good friend - no, more. Rescuer.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Relieved/grateful"
              }
            ]
          },
          "session_synopses": {
            "AD_Minthara_EnteredRoom": "",
            "AD_Butcher_CombatTurn002": "This AD plays during combat with Chop, the Colony Butcher. Chop will fight you because he is enthralled, but has a secret desire to be put out of his misery.",
            "Us": "Default dialogue with Us while they are in the Colony. Us is either locked in a cage in the Morgue, trying to sneak away from the Butcher, or thanking you for saving them, after which they will disappear."
          }
        },
        "col_gen": {
          "scenario_name": "col_gen",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "col_partysuppression": {
          "scenario_name": "col_partysuppression",
          "session_sequence": [
            "PAD_DefeatedKetheric"
          ],
          "paths": {
            "PAD_DefeatedKetheric": [
              "PAD_DefeatedKetheric_0"
            ]
          },
          "node_data": {
            "PAD_DefeatedKetheric": [
              {
                "id": "PAD_DefeatedKetheric_0",
                "speaker": "Player",
                "text": "An elder brain... That was the Heart of the Absolute?",
                "node_type": "normal",
                "checkflags": [
                  "ORI_Gale_Event_BombDisarmed",
                  "REALLY_GALE"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Almost to self, processing this information"
              }
            ]
          },
          "session_synopses": {
            "PAD_DefeatedKetheric": ""
          }
        },
        "bhvr_col": {
          "scenario_name": "bhvr_col",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "col_necromancer": {
          "scenario_name": "col_necromancer",
          "session_sequence": [
            "AD_ZombieErrandDone",
            "AD_Haruspicy",
            "PAD_MolEyepatch",
            "DaisyAD_Balthazar",
            "AD_Combat_ResendZombie"
          ],
          "paths": {
            "AD_ZombieErrandDone": [
              "AD_ZombieErrandDone_0"
            ],
            "AD_Haruspicy": [
              "AD_Haruspicy_0"
            ],
            "PAD_MolEyepatch": [
              "PAD_MolEyepatch_0"
            ],
            "DaisyAD_Balthazar": [
              "DaisyAD_Balthazar_0",
              "DaisyAD_Balthazar_1"
            ],
            "AD_Combat_ResendZombie": [
              "AD_Combat_ResendZombie_0"
            ]
          },
          "node_data": {
            "AD_ZombieErrandDone": [
              {
                "id": "AD_ZombieErrandDone_0",
                "speaker": "Balthazar",
                "text": "Stop dawdling - it's not as though you have somewhere better to be.",
                "node_type": "normal",
                "checkflags": [
                  "14e6adcb-c6a8-99e4-1c39-4d3b925590e2_A"
                ],
                "setflags": [
                  "14e6adcb-c6a8-99e4-1c39-4d3b925590e2_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Chastising a zombie errand-runner"
              }
            ],
            "AD_Haruspicy": [
              {
                "id": "AD_Haruspicy_0",
                "speaker": "Balthazar",
                "text": "Medullis et sanguis...",
                "node_type": "normal",
                "checkflags": [
                  "0d9d0064-babd-6e83-6ea6-5b78afb0413c_A"
                ],
                "setflags": [
                  "0d9d0064-babd-6e83-6ea6-5b78afb0413c_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: Latin translation: \"Marrow and blood...\"\rNodeContext: meh-DOOH-lis et SAN-gwis"
              }
            ],
            "PAD_MolEyepatch": [
              {
                "id": "PAD_MolEyepatch_0",
                "speaker": "Player",
                "text": "This is Mol's eyepatch - what's become of her?",
                "node_type": "normal",
                "checkflags": [
                  "DEN_Thieflings_HasMet_Mol"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "DaisyAD_Balthazar": [
              {
                "id": "DaisyAD_Balthazar_0",
                "speaker": "",
                "text": "The necromancer was experimenting on the tadpoles.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "DaisyAD_Balthazar_1",
                "speaker": "",
                "text": "But they were already imbued with Netherese magic - so where did that magic come from?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Combat_ResendZombie": [
              {
                "id": "AD_Combat_ResendZombie_0",
                "speaker": "Balthazar",
                "text": "Relight the candles - go!",
                "node_type": "normal",
                "checkflags": [
                  "9d0ddaf8-3f55-4255-3297-42521cfb8a5c_HappenedOnce"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Urgent command to a zombie lackey during combat"
              }
            ]
          },
          "session_synopses": {
            "AD_ZombieErrandDone": "The necromancer is standing over a bowl of blood and bone, conducting a ritual to see the future. He's sending zombies off on errands.The zombie returns, and he reacts.",
            "AD_Haruspicy": "The necromancer is standing over a bowl of blood and bone, conducting a ritual to see the future. This will trigger in the Necromancer's idle behavior if you entered through the main entrance while he is still alive OR after all zombies have been revived in the post-Audience combat and the players are still in the cages.For help with Latin, contact either Tom Ryckeboer or Ilya Voulis.",
            "PAD_MolEyepatch": "The players may come across Mol's discarded eyepatch in the Necromancer Chamber in the Upper Colony. They will react to it appropriately, depending on whether they ever met Mol or not.",
            "DaisyAD_Balthazar": "On arrival in colony. On encountering Balthazar in room. The necromancer did experiments on the tadpoles here. We know they are magically manipulated. But how?",
            "AD_Combat_ResendZombie": "The necromancer is sending a zombie to light the candles that start an arcane ritual which drains the player's hitpoints and ultimately turns them into a zombie, after the player has extinguished them."
          }
        },
        "col_kitchen": {
          "scenario_name": "col_kitchen",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "col_general": {
          "scenario_name": "col_general",
          "session_sequence": [
            "PAD_CallLiftFail"
          ],
          "paths": {
            "PAD_CallLiftFail": [
              "PAD_CallLiftFail_0"
            ]
          },
          "node_data": {
            "PAD_CallLiftFail": [
              {
                "id": "PAD_CallLiftFail_0",
                "speaker": "Player",
                "text": "The platform's already here.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_CallLiftFail": "The player has tried to call the platform in COL while it's already at the level in question."
          }
        },
        "col_nautiloid": {
          "scenario_name": "col_nautiloid",
          "session_sequence": [
            "PAD"
          ],
          "paths": {
            "PAD": [
              "PAD_0"
            ]
          },
          "node_data": {
            "PAD": [
              {
                "id": "PAD_0",
                "speaker": "Player",
                "text": "A whole fleet of nautiloids. How many 'True Souls' have passed through this place?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD": "While exploring the Colony, a player arrives at a precipice from which they can see a row of floating nautiloids."
          }
        },
        "col_brainreader": {
          "scenario_name": "col_brainreader",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "col_tadpolingcentre": {
          "scenario_name": "col_tadpolingcentre",
          "session_sequence": [
            "AD_MemoryImprint_003_Mindflayer",
            "AD_MemoryImprint_004_Mindflayer",
            "AD_MemoryImprint_006_Zevlor",
            "Pods",
            "PAD_BrinePool_Tadpole",
            "AD_MemoryImprint_005_Mindflayer",
            "AD_MemoryImprint_007_Mindflayer",
            "DaisyAD_BrinePool",
            "Zevlor_Dead",
            "AD_MemoryImprint_009_Empty",
            "PAD_MizoraPodComment",
            "AD_Minthara_EnteredTadpolingCenter",
            "PostCombat_Yeva",
            "AD_MemoryImprint_002_Manip",
            "AD_MemoryImprint_001_Mindflayer",
            "DarkUrgePod"
          ],
          "paths": {
            "AD_MemoryImprint_003_Mindflayer": [
              "AD_MemoryImprint_003_Mindflayer_1",
              "AD_MemoryImprint_003_Mindflayer_2",
              "AD_MemoryImprint_003_Mindflayer_0"
            ],
            "AD_MemoryImprint_004_Mindflayer": [
              "AD_MemoryImprint_004_Mindflayer_0"
            ],
            "AD_MemoryImprint_006_Zevlor": [
              "AD_MemoryImprint_006_Zevlor_2",
              "AD_MemoryImprint_006_Zevlor_0",
              "AD_MemoryImprint_006_Zevlor_1"
            ],
            "Pods": [
              "Pods_1",
              "Pods_7",
              "Pods_18",
              "Pods_3"
            ],
            "PAD_BrinePool_Tadpole": [
              "PAD_BrinePool_Tadpole_0"
            ],
            "AD_MemoryImprint_005_Mindflayer": [
              "AD_MemoryImprint_005_Mindflayer_1",
              "AD_MemoryImprint_005_Mindflayer_2",
              "AD_MemoryImprint_005_Mindflayer_3"
            ],
            "AD_MemoryImprint_007_Mindflayer": [
              "AD_MemoryImprint_007_Mindflayer_1",
              "AD_MemoryImprint_007_Mindflayer_2",
              "AD_MemoryImprint_007_Mindflayer_0"
            ],
            "DaisyAD_BrinePool": [
              "DaisyAD_BrinePool_0"
            ],
            "Zevlor_Dead": [
              "Zevlor_Dead_7",
              "Zevlor_Dead_15",
              "Zevlor_Dead_3",
              "Zevlor_Dead_0"
            ],
            "AD_MemoryImprint_009_Empty": [
              "AD_MemoryImprint_009_Empty_0"
            ],
            "PAD_MizoraPodComment": [
              "PAD_MizoraPodComment_0"
            ],
            "AD_Minthara_EnteredTadpolingCenter": [
              "AD_Minthara_EnteredTadpolingCenter_0"
            ],
            "PostCombat_Yeva": [
              "PostCombat_Yeva_4",
              "PostCombat_Yeva_7",
              "PostCombat_Yeva_1",
              "PostCombat_Yeva_6",
              "PostCombat_Yeva_10",
              "PostCombat_Yeva_3"
            ],
            "AD_MemoryImprint_002_Manip": [
              "AD_MemoryImprint_002_Manip_0"
            ],
            "AD_MemoryImprint_001_Mindflayer": [
              "AD_MemoryImprint_001_Mindflayer_0",
              "AD_MemoryImprint_001_Mindflayer_3",
              "AD_MemoryImprint_001_Mindflayer_1"
            ],
            "DarkUrgePod": [
              "DarkUrgePod_30",
              "DarkUrgePod_27",
              "DarkUrgePod_11",
              "DarkUrgePod_6",
              "DarkUrgePod_17",
              "DarkUrgePod_19"
            ]
          },
          "node_data": {
            "AD_MemoryImprint_003_Mindflayer": [
              {
                "id": "AD_MemoryImprint_003_Mindflayer_1",
                "speaker": "Narrator",
                "text": "*The device releases a stream of fragmented memories and emotions - all that remains of the pod inhabitant's former self.*",
                "node_type": "normal",
                "checkflags": [
                  "COL_TadpolingCentre_MemoryImprint_FirstUse = False"
                ],
                "setflags": [
                  "COL_TadpolingCentre_MemoryImprint_FirstUse"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_MemoryImprint_003_Mindflayer_2",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "AD_MemoryImprint_003_Mindflayer_0",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_MemoryImprint_003_Mindflayer_0",
                "speaker": "Narrator",
                "text": "*Desperation... pain... terror. Cultists raided his village - he was the sole survivor.*",
                "node_type": "normal",
                "checkflags": [
                  "COL_TadpolingCentre_MemoryImprint_FirstUse"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_MemoryImprint_004_Mindflayer": [
              {
                "id": "AD_MemoryImprint_004_Mindflayer_0",
                "speaker": "Narrator",
                "text": "*The device does not react to your presence.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_MemoryImprint_006_Zevlor": [
              {
                "id": "AD_MemoryImprint_006_Zevlor_2",
                "speaker": "Narrator",
                "text": "*You remember the shattered windows of Elturel's High Cathedral, the burning black sky of Avernus beyond.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_MemoryImprint_006_Zevlor_0",
                "speaker": "Narrator",
                "text": "*In its horror, the Blood War unites you. Tiefling, dwarf and elf alike huddle behind the shields of your paladin order, waiting for salvation. But when it comes... disunity.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_MemoryImprint_006_Zevlor_1",
                "speaker": "Narrator",
                "text": "*The returned city casts your people out, the devils who dragged them down to hell. In the end, it is not your paladin oath that is broken: it is your faith itself.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Pods": [
              {
                "id": "Pods_1",
                "speaker": "Narrator",
                "text": "*You connect to the device, and gain control of the pods - and the fate of their occupants.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "7",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Pods_7",
                "speaker": "Narrator",
                "text": "*The device is open to your tadpole's command - to your authority.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Pods_18",
                "speaker": "Player",
                "text": "Purge.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "COL_TadpolingCentre_Event_PurgePods"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Gale -1",
                  "Karlach -5",
                  "Lae'zel 5",
                  "Shadowheart -5",
                  "Wyll 5",
                  "Minthara 1",
                  "Halsin -5"
                ],
                "context": ""
              },
              {
                "id": "Pods_3",
                "speaker": "Narrator",
                "text": "*Screams. Psychic agony. Terror. Then... nothing.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_BrinePool_Tadpole": [
              {
                "id": "PAD_BrinePool_Tadpole_0",
                "speaker": "Player",
                "text": "An unusual parasite, here. It's - it's reaching out to me.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_MemoryImprint_005_Mindflayer": [
              {
                "id": "AD_MemoryImprint_005_Mindflayer_1",
                "speaker": "Narrator",
                "text": "*The device releases a stream of fragmented memories and emotions - all that remains of the pod inhabitant's former self.*",
                "node_type": "normal",
                "checkflags": [
                  "COL_TadpolingCentre_MemoryImprint_FirstUse = False"
                ],
                "setflags": [
                  "COL_TadpolingCentre_MemoryImprint_FirstUse"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_MemoryImprint_005_Mindflayer_2",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "AD_MemoryImprint_005_Mindflayer_3",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_MemoryImprint_005_Mindflayer_3",
                "speaker": "Narrator",
                "text": "*Courage... conviction... defiance. Even as her organs began to dissolve, she believed she could resist.*",
                "node_type": "normal",
                "checkflags": [
                  "COL_TadpolingCentre_MemoryImprint_FirstUse"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_MemoryImprint_007_Mindflayer": [
              {
                "id": "AD_MemoryImprint_007_Mindflayer_1",
                "speaker": "Narrator",
                "text": "*The device releases a stream of fragmented memories and emotions - all that remains of the pod inhabitant's former self.*",
                "node_type": "normal",
                "checkflags": [
                  "COL_TadpolingCentre_MemoryImprint_FirstUse = False"
                ],
                "setflags": [
                  "COL_TadpolingCentre_MemoryImprint_FirstUse"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_MemoryImprint_007_Mindflayer_2",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "AD_MemoryImprint_007_Mindflayer_0",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_MemoryImprint_007_Mindflayer_0",
                "speaker": "Narrator",
                "text": "*Delirium... mania... laughter. His mind broke before the end, and he was laughing uncontrollably as the skin fell from his face.*",
                "node_type": "normal",
                "checkflags": [
                  "COL_TadpolingCentre_MemoryImprint_FirstUse"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "DaisyAD_BrinePool": [
              {
                "id": "DaisyAD_BrinePool_0",
                "speaker": "",
                "text": "Brine pools... but empty of tadpoles. Unusual. Harvesting all the larvae indicates they are getting ready for something big.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Zevlor_Dead": [
              {
                "id": "Zevlor_Dead_7",
                "speaker": "Narrator",
                "text": "*The corpse stares at you lifelessly.*",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Zevlor_Dead_15",
                "speaker": "Player",
                "text": "What happened to you?",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [
                  "GLO_SpeakWithDead_Event_QuestionAsked"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Zevlor_Dead_3",
                "speaker": "Zevlor",
                "text": "Blessed... by the Chosen...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "260f61d5-60df-da35-608b-a9856291b143_PlayerKnowsOrinKilledZevlor"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Zevlor_Dead_0",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ],
            "AD_MemoryImprint_009_Empty": [
              {
                "id": "AD_MemoryImprint_009_Empty_0",
                "speaker": "Narrator",
                "text": "*The device does not react to your presence.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_MizoraPodComment": [
              {
                "id": "PAD_MizoraPodComment_0",
                "speaker": "Player",
                "text": "That pod - is that Mizora inside?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Minthara_EnteredTadpolingCenter": [
              {
                "id": "AD_Minthara_EnteredTadpolingCenter_0",
                "speaker": "Nightwarden Minthara",
                "text": "This place has been used to make slaves of those who should be masters.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PostCombat_Yeva": [
              {
                "id": "PostCombat_Yeva_4",
                "speaker": "Gauntlet Yeva",
                "text": "I don't know how to thank you. I thought I was done for.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "12",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PostCombat_Yeva_7",
                "speaker": "Gauntlet Yeva",
                "text": "This is a bleeding shitshow. Half my squad's dead, the other half's sporting tentacles.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "12",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PostCombat_Yeva_1",
                "speaker": "Gauntlet Yeva",
                "text": "We came here to rescue Duke Ravengard, but we didn't stand a chance.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "COL_TadpolingCentre_HasMet_Yeva"
                ],
                "goto": "",
                "link": "12",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PostCombat_Yeva_6",
                "speaker": "Player",
                "text": "I'll take it from here.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PostCombat_Yeva_10",
                "speaker": "Gauntlet Yeva",
                "text": "You've got more courage than sense if you're planning to go deeper. But someone needs to.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PostCombat_Yeva_3",
                "speaker": "Gauntlet Yeva",
                "text": "The cultists took Ravengard when they locked us up. He was still human last I saw him. Still trying to put up a fight.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_MemoryImprint_002_Manip": [
              {
                "id": "AD_MemoryImprint_002_Manip_0",
                "speaker": "Narrator",
                "text": "*This pod pulsates with the angry memories of Ravengard's search officer, Manip Shuurga. She laments her failure to locate him.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_MemoryImprint_001_Mindflayer": [
              {
                "id": "AD_MemoryImprint_001_Mindflayer_0",
                "speaker": "Narrator",
                "text": "*The device releases a stream of fragmented memories and emotions - all that remains of the pod inhabitant's former self.*",
                "node_type": "normal",
                "checkflags": [
                  "COL_TadpolingCentre_MemoryImprint_FirstUse = False"
                ],
                "setflags": [
                  "COL_TadpolingCentre_MemoryImprint_FirstUse"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_MemoryImprint_001_Mindflayer_3",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "AD_MemoryImprint_001_Mindflayer_1",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_MemoryImprint_001_Mindflayer_1",
                "speaker": "Narrator",
                "text": "*Amusement... curiosity... fascination. He believed the horrors of Moonrise to be a fleeting dream that fade on waking.*",
                "node_type": "normal",
                "checkflags": [
                  "COL_TadpolingCentre_MemoryImprint_FirstUse"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "DarkUrgePod": [
              {
                "id": "DarkUrgePod_30",
                "speaker": "Narrator",
                "text": "*This pod has a different air to its chitinous cavern. Dust and dirt are gathered on the inside.*",
                "node_type": "normal",
                "checkflags": [
                  "COL_TadpolingCentre_Knows_IdentifiedDarkUrgePod = False",
                  "REALLY_DARK_URGE"
                ],
                "setflags": [],
                "goto": "",
                "link": "13",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "DarkUrgePod_27",
                "speaker": "Narrator",
                "text": "*It's broken beyond repair. Seemingly by a blunt impact, as if whoever was inside threw themselves against it in an effort to break out.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "COL_TadpolingCentre_Knows_IdentifiedDarkUrgePod"
                ],
                "goto": "",
                "link": "13",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Dark Urge bends down next to the pod, to look into the area beyond the glass, it doesn't have to be shown"
              },
              {
                "id": "DarkUrgePod_11",
                "speaker": "Narrator",
                "text": "*Your brain hurls an image towards you. Your own head-blood gushing down in front of your eyes.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "13",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "DarkUrgePod_6",
                "speaker": "Player",
                "text": "Try to discern how long this pod has been empty.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "13",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "DarkUrgePod_17",
                "speaker": "",
                "text": "False",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "DarkUrgePod_19",
                "speaker": "Narrator",
                "text": "*These pods are made to preserve. Time means nothing.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_MemoryImprint_003_Mindflayer": "AD for a mind flayer's memory imprint in the Tadpoling Centre, showing who they used to be when they entered the pod.",
            "AD_MemoryImprint_004_Mindflayer": "AD for a memory imprint on an empty pod in the Tadpoling Centre.",
            "AD_MemoryImprint_006_Zevlor": "AD for Zevlor's memory imprint in the Tadpoling Centre, showing a memory from before he was imprisoned here.",
            "Pods": "Interacting with the mind flayer device in the Tadpoling Centre that controls the pods inside. You get to choose whether to free or purge the occupants of the pods - mind flayers and innocents alike.",
            "PAD_BrinePool_Tadpole": "The party reacts to spotting a special tadpole in one of the brine pools of the Colony Tadpoling Centre. It can be used for the tadpole powers tree.",
            "AD_MemoryImprint_005_Mindflayer": "AD for a mind flayer's memory imprint in the Tadpoling Centre, showing who they used to be when they entered the pod.",
            "AD_MemoryImprint_007_Mindflayer": "AD for a mind flayer's memory imprint in the Tadpoling Centre, showing who they used to be when they entered the pod.",
            "DaisyAD_BrinePool": "Brine pools. But they’ve been harvested. They should be full of tadpoles.",
            "Zevlor_Dead": "",
            "AD_MemoryImprint_009_Empty": "AD for an empty pod's memory imprint in the Tadpoling Centre, showing a memory from whoever was imprisoned here before.",
            "PAD_MizoraPodComment": "Players comment when approaching Mizora's pod in the back of the Tadpoling Centre, provided she is there.",
            "AD_Minthara_EnteredTadpolingCenter": "",
            "PostCombat_Yeva": "Dialogue with Yeva after freeing her from his pod in the Colony Tadpoling Centre.",
            "AD_MemoryImprint_002_Manip": "AD for Shuurga's memory imprint in the Tadpoling Centre, showing a memory from before she was imprisoned here.",
            "AD_MemoryImprint_001_Mindflayer": "AD for a mind flayer's memory imprint in the Tadpoling Centre, showing who they used to be when they entered the pod.",
            "DarkUrgePod": "A player character interacts with a pod in the Tadpoling Centre that once belonged to the Dark Urge character. Other player characters may also investigate the pod, and imply something about who the pod belonged to if they succeed a skill check."
          }
        }
      },
      "final_flags": [
        "GOB_SpiderNest_State_SpidersHostile",
        "DEN_AttackOnDen_HasMet_Prodigy",
        "DEN_CapturedGoblin_GuardsHasMet",
        "GOB_Checkpoint_Event_MoveToCamp",
        "UND_MyconidRevenge_Event_TakeHead",
        "8a9a14b0-87da-5c78-aa76-7a266de7a786_Phase1",
        "PLA_TavernInvestigation_Knows_AskedStelmane",
        "DEN_AttackOnDen_HasMet_Tiefling010Victory",
        "GLO_Moonrise_Knows_AbsoluteAtGrymforge",
        "COL_Vault_State_HasAccess",
        "CRA_DeadPrisoner_Dead_AskedQuestion",
        "UND_DuergarMutineerFollowUp_Event_Happened",
        "CHA_Outside_Event_DoorGuardConvinced",
        "e0b6dfeb-2923-e0ad-1dc5-2a5d1e055e16_local1",
        "DEN_AttackOnDen_HasMet_GrieflingFriend",
        "DEN_AttackOnDen_HasMet_Tiefling001",
        "GOB_QuartermasterFlimsy_HasMet",
        "GEN_TransferNPCPayment_2",
        "DEN_AttackOnDen_Event_OpenGateAfterCombat",
        "5e9c4c72-4f56-2646-ce36-88207d2dc33c_KinSaved",
        "GOB_OwlbearCub_Event_InvitedToCamp",
        "PLA_Desire_Knows_RavengardTaken",
        "DEN_DruidServant005_Knows_TalkedAboutLockdown",
        "UND_SocietyOfBrilliance_MindFlayer_State_MindFlayerFeeding",
        "PLA_ConflictedFlind_Event_MindControlDamage_Minor",
        "DEN_AttackOnDen_HasMet_Servant005Victory",
        "PLA_Desire_State_WyllComTrack",
        "CHA_Chapel_Event_OpenedJergalsTomb",
        "UND_DarkLake_State_ClaimedGekhWasDead",
        "DEN_AttackOnDen_Pet004_HasMet",
        "GLO_Player_Knows_MoonlanternExists",
        "GOB_PainPriest_Event_Reward",
        "2da46374-abab-9219-f7ce-2a002cfd72a5_a",
        "DEN_AttackOnDen_Ranged_001_HasMet",
        "GLO_Volo_HasMet_Personally",
        "GOB_PainPriest_State_ReactedToPenance",
        "da38cd0f-efef-6809-231d-26f71308cd07_B",
        "DEN_RaidingParty_Event_SkipConfrontation",
        "ORI_INCLUSION_SHADOWHEART",
        "GLO_TadpoledCount6",
        "PLA_TavernInvestigation_Quest_WallCollapsed",
        "PLA_Refugee_002_TollhouseMentioned",
        "DEN_AttackOnDen_HasMet_RobberKid",
        "FOR_PriestsConqueringGod_AlliedPlayer",
        "HAG_GurHunter_Dead_Knows_Hunter",
        "DEN_AttackOnDen_HasMet_PickpocketVictory",
        "DEN_GuardedEntrance_State_ParentsKnowDeath",
        "GLO_IronhandGnomes_Knows_WulbrenInMoonrise",
        "Den_Thieflings_InterferingGuard_PCGotLore",
        "WLD_FOR_GnomeGoblinsAngry",
        "GOB_Checkpoint_Guard01_HasMet",
        "WLD_UnfortunateGnome_PayPassage",
        "4c78f756-720d-a285-a3e6-8f69a6069abc_Step1",
        "cd4b312f-5a40-b8c1-1ecb-0862c829a479_A",
        "5ebae00c-47d8-736c-6738-4ee56cebbc49_B",
        "DEN_General_YoungLovers_HasMet",
        "GOB_PainPriest_Event_CheckHP",
        "GLO_Desire_HasMet",
        "b43d3bc7-f10d-73cc-232e-c1f93cba3ed5_Local2",
        "DEN_AttackOnDen_Pet002_HasMet",
        "FOR_UnfortunateGnome_State_NonCharlatanAccess",
        "UND_MyconidCircle_PlantDuergarHasMet",
        "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_WyllSpoke",
        "GOB_WolfPens_Worg_002_HasMet",
        "PLA_GithChokepoint_State_FailedReadingMap",
        "PLA_ZhentShipment_Agent_002_StartInclusion",
        "DEN_ShadowDruid_Event_SetFaithwarden",
        "CRA_DeadPrisoner_Dead_MentionedTadpole",
        "GLO_Absolute_Knows_MoonriseTowers",
        "DEN_Rat_Event_MoveToShack",
        "DEN_DruidAttack_HasMet_Protester3AfterAttack",
        "ORI_Inclusion_End_Karlach",
        "UND_WormWall_State_RecognisedCrawlers",
        "GLO_GithChokepoint_DragonAppear",
        "df3e1892-2ab5-7b69-e57b-a75504e1a8f2_B",
        "10297257-36dd-3799-f681-657656779d4a_TieflingsLaezelAD1",
        "ORI_Inclusion_End_Wyll",
        "DEN_AttackOnDen_HasMet_BackupLeader",
        "GLO_HeadRemoval_Event_HeadToInventory",
        "CHA_Jergal_Event_AttemptedAttack",
        "9b4c05c6-0a79-ea8d-c351-43d6fbb04abc_Story1",
        "GOB_AbsoluteCultistStiff_HasMet",
        "GLO_Shadowcurse_Knows_FromGnome",
        "PLA_StuckHalfElf_Knows_ExplainedDowry",
        "FOR_BugBearLove_Event_MovePlayerInside",
        "DEN_Stargazing_Event_SawDragon",
        "ORI_INCLUSION_ASTARION",
        "FOR_UnfortunateGone_TiedUpHasmet",
        "HAG_Hagspawn_State_JakeBerserk",
        "6cf6ff37-64f7-3ccf-d702-ee2025510422_B",
        "UND_EbonLake_Event_MoveToLake",
        "FOR_SeluneStash_NoticeStashSeal_CommentedOnSeal",
        "GOB_Torturers_Rat_001_HasMet",
        "GOB_Scrying_NoddedOrShrugged",
        "DEN_BirdSender_HasMet_GobLeadersDead",
        "a759296c-5d41-f5b9-7d31-1c70d1e10dc7_Once",
        "DEN_HarpyMeal_Event_OriginCharm3",
        "683cb55e-08b9-c865-78a6-4e047ee62a24_B",
        "GLO_Tadpoled_UsedToday1",
        "DEN_Thieflings_Event_PartnerQuestionAsked",
        "HAG_SurrogateMother_HasMet",
        "b2a52f0b-5fa8-d275-f080-0fc8edbe1faf_B",
        "GOB_GoblingKing_Event_HealerPersuasion",
        "UND_DuergarCamp_State_DocksHostile",
        "PLA_ZhentShipment_Agent_001_StartInclusion",
        "57c003e7-0932-6f0c-e655-99025a4abe3a_B",
        "DEN_AttackOnDen_HasMet_TieflingLeader",
        "09983dce-d7d0-c108-506f-dcadc4044b0a_Derryth_SwD_Who",
        "PLA_TavernInvestigation_State_HasMet",
        "ORI_Inclusion_Karlach",
        "UND_BrokenMoonLantern_HasMet",
        "3483cea8-0c11-9432-2421-6b95b9140d95_B",
        "7611fa51-4b1b-3d2c-a8a5-74c04d9db7fa_AnimalHandlingSuccess",
        "UND_DuergarPatroller_03_HasMet",
        "DEN_DruidAttack_HasMet_HideoutLeaderAfterAttack",
        "DEN_TieflingScam_Event_InspectedBox",
        "GnomeAskedHelp",
        "3f665b97-a69e-81c5-68e6-5b931720721e_Part1",
        "CHA_LaezelRecruitment_MindMeld",
        "GLO_ScryingEyes_State_FeltGaze",
        "DEN_GuardedEntrance_HasMet_Guard3",
        "DEN_RaidingParty_Event_KanonOpensGate",
        "DEN_AttackOnDen_HasMet_Wyll",
        "PLA_ConflictedFlind_Knows_Gnolls",
        "GLO_TalkedToVoloAboutAbsolute",
        "UND_MyconidCircle_DwarvenAlchemist_BaelenRestoredHasmet",
        "COL_Barracks_State_InterruptConvinced",
        "GOB_Festivities_Trader_HasMet",
        "DEN_AttackOnDen_HasMet_Tiefling004",
        "ZhentDungeon_AgreedBuy",
        "11d70a18-2aae-47a0-1a18-c486858b1eaf_B",
        "DEN_GruntingKid_Event_DisappearIntoWall",
        "GOB_BattleStations_HasMet_WarDrum",
        "GOB_GoblinJolly_HasMet",
        "UND_MyconidCircle_InjuredGnome_ReportedGrymforgeFate",
        "564fac12-29bd-3abe-d380-0a864e688883_Turn1",
        "COL_TadpolingCentre_MemoryImprint_FirstUse",
        "DEN_Apprentice_HasMet_ReactedToShadowDruids",
        "DEN_CampGeneral_HasMet_Gatekeeper",
        "UND_DeadInTheWater_CorpseDisposerCompanion_HasMet",
        "UND_MyconidCircle_MyconidSuspicious_HasMet",
        "DEN_Hideout_State_GivenWarning",
        "PLA_Refugee_002_HasMet",
        "UND_DuergarGuard_AtPier_01_HasMet",
        "DEN_DruidAttack_HasMet_PickpocketTraderAfterAttack",
        "DEN_RaidingParty_Event_OpenDenGate",
        "GOB_GoblinKingDead_Event_SaidFugitives",
        "UND_State_LeaderFreedGnomes",
        "41e56e7f-1722-7350-33dc-aefe523650fe_B",
        "PLA_ZhentDungeon_State_SaidPassword",
        "c3207254-eafb-348b-d327-f690af0e213f_startedattackmove",
        "DEN_AttackOnDen_HasMet_TieflingBard",
        "UND_MyconidCircle_BroodingSovereign_State_InParty",
        "DEN_AttackOnDen_HasMet_Kid004Victory",
        "DEN_Hideout_Event_LeaveCountdown",
        "1493763b-776c-959c-259a-89f34f326e04_A",
        "DEN_AttackOnDen_ZenBear_HasMet",
        "UND_FurnaceSearch_Knows_Xargrim",
        "DEN_DevilishOx_State_ArcanaCheckComplete_SwA",
        "fa6e2ce0-64f3-bfb8-fb47-10f50f02cadf_AbsoluteMentioned",
        "DEN_AttackOnDen_Event_PassedByEntrance",
        "DEN_Thieflings_TieflingGuard11_HasMet",
        "GOB_Trader_Knows_Goods",
        "DEN_AttackOnDen_HasMet_Tiefling005",
        "GOB_GoblinToast_Event_ToastSuccess",
        "COL_Barracks_Mistress_Knows_ThinksPlayerIsThrall",
        "DEN_ZenBear_Helped",
        "FOR_KnifeInMeat_State_KnifeBroken",
        "GOB_Festivities_Goblin001_HasMet",
        "FOR_GnomeGoblin1_HasMet",
        "DEN_TieflingRefugees_Quest_HuntRewardOffered",
        "DEN_RaidingParty_Event_GatekeeperToLever",
        "DEN_DruidAttack_HasMet_ServantGnome",
        "COL_NecroLab_GrandDesignSculpture_HasMet_LaezelInclusion",
        "FOR_GoblinAmbush_Event_StopSpotting",
        "DEN_AttackOnDen_HasMet_RitualDruid003",
        "ReportedToDerryth_BaelenIsAlive",
        "GOB_Owlbear_HasMet_NotChasing",
        "UND_SocietyOfBrilliance_MindFlayer_HasMet",
        "ba2b225d-e9d4-944d-5b4f-b27dd975c626_A",
        "DEN_AttackOnDenDruidLeader_State_HasMet",
        "6fa2b72d-fde1-4ee3-e1d1-f184232f693d_A",
        "DEN_DruidAttack_HasMet_ParentBAfterAttack",
        "DEN_General_Squirrel_LearnedTerritory",
        "HAG_Hagspawn_Knows_PromisedRaiseHusband",
        "PLA_ZhentShipment_Agent_001_Inclusion_Start",
        "GOB_RaiderStupid_HasMet",
        "83fdf5e9-88b8-19e7-ba8f-ff075d2222ce_PLA_ZhentShipment_Knows_Gnolls",
        "DEN_Apprentice_Event_RevealedTadpole",
        "DEN_Thieflings_Event_HideoutTrespassCrimeResolved",
        "469a1188-028b-0e6b-b595-fa464baa551e_b",
        "GOB_RaiderBold_HasMet",
        "FoundCounsellor",
        "UND_DuergarCamp_State_SidedNone",
        "a0afae3d-53b0-192d-d822-c61da104f979_A",
        "DEN_Apprentice_State_ShadowDruidPath",
        "DEN_AttackOnDen_HasMet_LeaderKidVictory",
        "FOR_Monitor_Event_TakeFood",
        "GOB_GoblinToast_ThirdGoblinToasted",
        "FOR_Monitor_State_TransformToDevil",
        "DEN_Thieflings_HasMet_Guard2",
        "DEN_Thieflings_HasMet_Mol",
        "ORI_Karlach_HasMet",
        "GOB_Festivities_HasMet_Ogre_00",
        "GOB_RatRacket_LocalRat_002_HasMet",
        "ce2b9169-f3e7-e07f-9c58-0fd373d5df9a_PLA_ZhentDungeon_Zhent02_Dead_KnowsZarysisZhentarim",
        "DEN_AttackOnDen_Event_EnemiesAppear",
        "FOR_SchoolOgres_Event_AttemptedFirstSkillCheck",
        "GOB_Checkpoint_State_UsedAlarmOnce",
        "DEN_GoblinScouts_State_SavedDruid",
        "DEN_AttackOnDen_HasMet_Adventurer2",
        "GOB_GoblinToast_Event_IncludeFourthGoblin",
        "15b0a2b9-2b22-50ab-70c0-ab3042def597_GaleCommentTried",
        "DEN_HarpyMeal_InHideout_WasMean",
        "PreventTradeWithPlayer",
        "DEN_GoblinHunt_Event_GiveRewardBag",
        "1bddcc22-dadd-92c9-4186-4e10ebbfee68_CHA_Crypt_Jergal_DontFollow",
        "UND_AdamantineForge_Knows_Adamantine",
        "DEN_AdventurersQuest_Knows_AradinStory",
        "FOR_Bottomless_State_InteractedWithWell",
        "ORI_INCLUSION_MINTHARA",
        "DEN_AttackOnDen_HasMet_ChefAndSon",
        "ORI_Inclusion_Astarion",
        "UND_DarkJusticiarsCorpses_Recognized",
        "GLO_Desire_State_FreedInAct1",
        "DEN_DruidLair_Knows_DruidsAlliance",
        "GOB_Checkpoint_State_GainedAccess",
        "FOR_UnfortunateGnome_Bargaining",
        "DEN_AttackOnDen_HasMet_ProdigyBrother",
        "UND_Elevator_Event_GotWarning",
        "UND_FearfulRothe_Event_MakeDuergarHostileInDialog",
        "GOB_GuardUpset_State_ConvincedTrueSoul",
        "DEN_CapturedGoblin_State_InTransit",
        "GLO_Thieflings_State_PCShookPickpocketSister",
        "GOB_GEB_TorturedAdventurer_Assault_HasMet",
        "DEN_GroveConflict_Event_StoleIdolAttempt",
        "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_NoFFPresent",
        "DEN_Thieflings_Event_CallGuard",
        "DEN_AdventurersQuest_RaidAdventurerAtCorps_HasMet",
        "UND_FearfulRothe_HasMet_Rothe_001_SpeakWithAnimals",
        "UND_FearfulRothe_State_BefriendedRothe",
        "0d6dbe21-1644-b9bf-8297-dd60d820bd99_B",
        "DEN_GuardedEntrance_HasMet_LiedAboutDeath",
        "FOR_ApothecaryGoblins_Goblin01_HasMet",
        "HAG_AnimalIllusion_Revealed_HasMet1",
        "DEN_TieflingScam_Event_TalkedAboutBox",
        "UND_Automaton_Knows_AskedPlace",
        "CRA_DeadFisherman2_Dead_WhatDoing",
        "GOB_GoblinToast_Event_IncludeThirdGoblin",
        "DEN_AttackOnDen_HasMet_PickpocketTrader",
        "COL_TadpolingCentre_Knows_IdentifiedDarkUrgePod",
        "GOB_GoblinThroneCheckpoint_Pass",
        "HalsinLeft_KilledLeaders",
        "DEN_AttackOnDen_HasMet_Halsin",
        "c167cdf3-7201-e55c-222f-773c758e1000_IncludedHusband",
        "HAG_HagLair_Victim_001_HasMet",
        "PLA_StuckDwarf_HasMet_FoundWife",
        "GOB_SpiderNest_State_SpidersChill",
        "PLA_Tavern_Knows_DukeInTavern",
        "ORI_INCLUSION_KARLACH",
        "PLA_ZhentDungeon_State_AgentFreed",
        "UND_FurnaceSearch_Event_DuergarMentionsForge",
        "GLO_Moonrise_Knows_GoblinsCapturedADuke",
        "DEN_DruidLair_Knows_FoundingGrove",
        "FOR_Monitor_HasMet_Dinner",
        "AskedCircle",
        "03b6aa2e-e805-3a51-6bdb-d92f0b0da84a_UND_MyconidCircle_ServantHookHorror_01_RecognisedMonster",
        "DEN_GuardedEntrance_HasMet_Protester1",
        "ToldAboutTadpole",
        "DEN_DruidAttack_HasMet_Tiefling010AfterAttack",
        "f3f236b2-37a1-a0a2-5855-184ead7b1286_C",
        "GOB_DrowCommander_State_Hostile",
        "UND_ArguingGnomes_Event_LearnedAboutPhilomeen",
        "UND_PetrifiedDrow_Knows_WizardIsDhourn",
        "ORI_Inclusion_End_ShadowHeart",
        "ORI_Shadowheart_Knows_SeenTempleVista",
        "FOR_BugBearLove_Event_CoupleHostile",
        "HAG_AnimalIllusion_Narrator",
        "DEN_Thieflings_State_DoneChase",
        "UND_ElevatorGuard002_HasMet",
        "ThankedFreed_BeldronThulla",
        "ORI_INCLUSION_MINSC",
        "DEN_Thieflings_Knows_PlayerRobbed",
        "DEN_ShadowDruid_HasMet_Opposed",
        "GLO_TadpoledCount1",
        "DEN_DruidAttack_HasMet_ExcitedBoar",
        "3b2ae6b6-ca7e-d905-0430-128078b3119f_B",
        "720e85fb-cc00-b81a-efff-343a04ca221e_A",
        "DEN_DevilishOx_MeetAtDruidsGrove_HasMet_SwA",
        "UND_ClericPetGrave_HasMet",
        "UND_MyconidCircle_DirectToSovereign_HasMet",
        "UND_GnomeWorkerLumpy_HasmetRescued",
        "DEN_GroveConflict_Quest_Learnt3LeadersTwoNames",
        "d97f72ff-8fb1-8a4c-f169-89751bd6e125_b",
        "ORI_INCLUSION_RANDOM",
        "HAG_Well_Event_DrinkWell",
        "a7407f82-add0-9f6d-e4e6-78b9c39195a6_C",
        "ORI_INCLUSION_WYLL",
        "4118b185-9468-2295-93f3-9d6eafd8fb8a_Second_Disabled",
        "FOR_GoblinAmbush_State_DrowAutoPass",
        "DEN_TieflingLeader_Quest_GobHuntResponded",
        "GLO_Halsin_Event_TalkedWithDruidLeader",
        "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionRefused",
        "ORI_Inclusion_Gale",
        "DEN_RitualDruid_HasMet_Left5",
        "PLA_Desire_Quest_TriedForceDoor",
        "DEN_Thieflings_Pickpocket1_PCIsNotAChump",
        "DEN_AttackOnDen_HasMet_Refugee002",
        "fb0e13b6-cc68-d496-51c2-4594f4f5bf40_TauntHer",
        "182bb613-b70c-5e7c-b3ea-ea14e02d1fab_C",
        "GOB_PainPriest_Event_PickScourge",
        "DEN_GroveConflict_Knows_HeardAboutRitual",
        "d0423454-cc51-ae8e-5096-cffd1aac9f75_A",
        "FOR_BugBearLove_Knows_Lovemaking",
        "ORI_INCLUSION_LAEZEL",
        "DEN_DruidAttack_HasMet_SonOfChefAfterAttack",
        "HAG_HagLair_TalkingDoor_HasMet",
        "ORI_Inclusion_ShadowHeart",
        "1ea9e483-36a9-82b1-852f-b901ec25552a_a",
        "DEN_Prodigy_HasMet",
        "PLA_ZhentShipment_State_TalkedAfterKilledGnolls",
        "551618bc-83c9-52cc-0ca7-37c224446cf7_Local1",
        "GOB_Bravado_State_Goblin3Hasmet",
        "FOR_BottomlessWell_InteractWithWell_Knows_LookedDown",
        "ORI_INCLUSION_GALE",
        "DEN_GuardedEntrance_HasMet_Parents",
        "GOB_GoblinToast_Event_IncludeSecondGoblin",
        "ca797aab-5a73-7ec5-edb7-022122573b39_B",
        "DEN_AttackOnDen_Event_HeftyTieflingQuip",
        "COL_Vault_Event_Start",
        "GOB_WolfPens_Event_HalsinLeftParty",
        "FactionHostileToPlayerGroupAfterDialog",
        "ORI_Laezel_Quest_FoundZorru",
        "GOB_GoblinPriest_Event_FreedFromChains",
        "PLA_StuckHalfElf_Knows_MentionedDowry",
        "21e0890e-7019-66a3-1956-125405f96d7c_A",
        "DEN_DruidAttack_HasMet_DruidOpposedAfterAttack",
        "FOR_PriestOfTheConqueringGod_Cultists_Knows_Mission",
        "DEN_Apprentice_Event_RemoveBirdExhaustion",
        "DEN_CampGeneral_PCGotLore",
        "SpokeToBrothers",
        "5f09c70a-153e-77e8-731c-5c532e635809_B",
        "DEN_DruidAttack_HasMet_GatekeeperAfterAttack",
        "LearnedGroveSituation",
        "DEN_RaidingParty_Event_UnsheatheForFight",
        "ReachedWife",
        "GOB_Festivities_BugbearSleeper_00_HasMet",
        "GLO_TadpoleIntro_NPC",
        "DEN_Thieflings_Knows_KidsThieves",
        "DEN_ShadowDruidLeaderPostGoblins_State_HasMet",
        "DEN_GroveConflict_Knows_LeaderNameKing",
        "TemporaryHostilityAfterDialog",
        "0884581d-9f92-0a34-9440-6a54c0813bbe_ProceedToSecondStage",
        "DEN_Prodigy_HasMet_Brother",
        "GLO_Absolute_Knows_TrueSoul",
        "UND_GnomeForeman_UnfortunateGnome_InclusionStart",
        "DEN_WeepingTree_HasMet_Bear",
        "PLA_ZhentDungeon_Dog_03_HasMet",
        "GOB_DrowCommander_Knows_DrowLeader",
        "ORI_Shadowheart_State_IdolHint",
        "ea88dfe9-ff39-9b98-ae03-48d7fdf2708e_A",
        "DEN_AttackOnDen_HasMet_Refugee004Victory",
        "ORI_Inclusion_End_Astarion",
        "OrderedKillDruids",
        "DEN_DevilishOx_MeetAtDruidsGrove_State_Peaceful",
        "DEN_AttackOnDen_HasMet_RitualDruid002",
        "PLA_StuckHalfElf_StartInclusion",
        "DEN_Thieflings_Pickpocket2_HasMet",
        "GOB_Checkpoint_Event_WarnedAtCliff",
        "PLA_ZhentShipment_State_Talked",
        "RefusedHelpBrothers1",
        "GOB_PainPriest_Event_ReactToMocking",
        "DEN_DruidLair_Knows_RuneAppearance",
        "GLO_Hag_KnowsAboutSurrogate",
        "81f2a55d-d317-761f-f6a0-fe97ad6d5288_C",
        "UND_DuergarCamp_Knows_NereIsTrapped",
        "DEN_SenderBird_Event_TakeOff",
        "FOR_GnomeGoblinsPacified",
        "DEN_DruidAttack_HasMet_ChefAfterAttack",
        "ParentLied",
        "7256657b-1386-989f-0262-c6530e03a9fb_AskedWhy",
        "DEN_General_Inclusion_End_Pickpocket",
        "DEN_WeepingTree_Bear_Upset",
        "UND_TheDrowNere_Mutiny_InclusionStart_GnomeSilly",
        "bde7a4f1-933f-f6ce-4a3e-4b1f29f83704_B",
        "UND_TheDrowNere_Event_HadMindMeld",
        "57c003e7-0932-6f0c-e655-99025a4abe3a_A",
        "DEN_YoungLovers_State_MetPlayer",
        "5310a408-76a3-3498-cc26-ae866871188b_Third_Disabled",
        "7ffcf0de-e30b-ef58-fcc5-8d3a1482fa59_b",
        "GLO_Absolute_Knows_GoblinsWorship",
        "DEN_Weaponsmith_Knows_Elturel",
        "DEN_ShadowDruid_Event_ReactionDone",
        "CHA_Crypt_Event_JergalAppears",
        "PLA_ZhentDungeon_Zhent05_HasMet",
        "DEN_TieflingLeader_HasMet_ReactToDruidAttack",
        "ORI_Laezel_State_StartedTieflingsSceneAtCage",
        "DEN_BirdSender_HasMet",
        "UND_MyconidCircle_DeepRothe_BaelenAteShroom_Hasmet",
        "GOB_BattleStations_Event_ToStation",
        "DEN_AttackOnDen_HasMet_Trainer",
        "GOB_GoblinHeretic_FreeToGo",
        "GOB_GoblinThroneCheckpoint_State_NonCharlatanAccess",
        "1c74b01f-5dcf-8107-b384-204d341ed9d5_OnlyOnce",
        "DEN_Thieflings_State_MessedWithMolsKids",
        "PLA_Refugee_001_HasMet",
        "UND_MyconidCircle_State_GainedAccess",
        "DEN_DruidAttack_HasMet_ParentAAfterAttack",
        "GOB_Checkpoint_State_GoblinsToldLeaders",
        "UND_DuergarCamp_Mutineers_HasMet",
        "LearnedDukeMissingCounsellor",
        "94cd662c-844b-4dcc-ffdc-0b9a8da32bcc_BarcusSpokeUp",
        "DEN_AttackOnDen_HasMet_LairDoor",
        "RikkaAskedQuest",
        "DEN_General_Event_TriedNudgingBear",
        "DEN_HasMet_SoloParentB",
        "DEN_RitualDruid_HasMet_Left2",
        "GOB_Torturers_HasMet_Goblet",
        "FOR_BugbearLove_State_InterruptedCouple",
        "DEN_AttackOnDen_Servant005_Answered",
        "UND_BroodingSovereign_State_RefusedCircle",
        "DEN_Thieflings_HasMet_Trainee1",
        "UND_DeadInTheWater_CorpseDisposerLeader_HasMet",
        "DEN_Tiefling011_State_Met",
        "DEN_Thieflings_PersuadedPickpocket",
        "GOB_GoblinToast_Event_NoMoreRefills",
        "ORI_Inclusion_Random",
        "PLA_KarlachRecruitment_State_PersuasionSucceeded",
        "DEN_Thieflings_State_WitnessedArgument",
        "COL_TadpolingCentre_HasMet_Yeva",
        "3b911555-52e5-7791-d2ac-44fe62465fa1_Loop3",
        "GOB_RaiderCunning_HasMet",
        "GOB_Eye_HasMet",
        "DEN_AttackOnDen_HasMet_Refugee003",
        "DEN_Weaponsmith_HasMet",
        "34910f06-fac0-085f-b41a-337d0dfad85a_A",
        "ORI_Inclusion_Laezel",
        "GOB_GoblinToast_SecondGoblinToasted",
        "9e2ef14b-1a2f-4edc-3f78-7e3a27967e5c_C",
        "DEN_AttackOnDen_HasMet_ScoutCaptive",
        "PLA_KarlachRecruitmentTollhouse_State_HostilitiesBegan",
        "UND_PetrifiedDrow_Knows_MemoryCrystal",
        "UND_FairyRings_Dead_AskedDrowIdentity",
        "ZevlorRewarded",
        "GOB_PainPriest_Penanced",
        "b618166c-99f4-1c7a-02b7-32f0f0fbe420_LocalA",
        "DEN_AttackOnDen_HasMet_Servant004Victory",
        "DEN_AttackOnDen_HasMet_Mule1",
        "DEN_TieflingScam_HasMet",
        "DEN_AttackOnDen_HasMet_Kid003",
        "UND_FearfulRothe_Event_ConvincedRotheToAttackDuergar",
        "PLA_FlamingFist7_InnBurntDown_HasMet",
        "DEN_AttackOnDen_HasMet_Tiefling003Victory",
        "0d9d0064-babd-6e83-6ea6-5b78afb0413c_B",
        "DEN_GoblinScouts_HasMet_Captive",
        "GLO_Absolute_Knows_Symbol",
        "PLA_ConflictedFlind_Event_MindControl_KillHerself",
        "GLO_SpeakWithDead_Event_QuestionAsked",
        "HAG_Hah_MaskedVictim2_HasMet",
        "DEN_DruidAttack_HasMet_ZenBear",
        "GOB_PainPriest_Event_BadReaction",
        "UND_BrokenLantern_State_TriedArcane",
        "461152ff-16c3-2617-f8af-7ddb5681820b_b",
        "ed70fdfc-3d7b-7753-1171-957f7316fe55_B",
        "SidedTieflings",
        "DEN_GroveConflict_Knows_KaghaRequestedPlayers",
        "PLA_StuckHalfElf_State_PlayerAngered",
        "UND_BroodingSovereign_State_AskedCircle",
        "DEN_AttackOnDen_HasMet_Trainee001Victory",
        "UND_MyconidCircle_State_FirstGreetingDone",
        "6bde1237-aa43-36d3-9e53-ec1092198541_C",
        "UND_DarkLake_State_HostileResolution",
        "c3d825d1-49b8-9ae2-4554-4fc1f55d2eee_LocalA",
        "COL_TadpolingCentre_Event_PurgePods",
        "DEN_ZhentAgent_02_Inclusion_Start",
        "DEN_AttackOnDen_HasMet_ProdigySister",
        "ORI_Shadowheart_Event_DarkJusticiarHint",
        "873bc4e0-3d3c-1eac-903b-e94920fd6306_sawgithyanki",
        "DEN_CampGeneral_RufusHasMet",
        "DEN_Apprentice_HasMet",
        "DEN_General_Mule2_HasMet",
        "DEN_AttackOnDen_HasMet_ApprenticeVictory",
        "98423a2d-7b47-e379-6526-c435773e3cff_B",
        "14e6adcb-c6a8-99e4-1c39-4d3b925590e2_B",
        "DEN_Thieflings_Event_PlayerNotInvolved",
        "HAG_HagLair_Knows_DoorWasAlive",
        "ThankedFreed_Beldron",
        "DEN_AttackOnDen_HasMet_Griefling",
        "4d9f1cb5-200f-c998-657a-8d04f5c93c74_B",
        "DEN_AttackOnDen_HasMet_RitualDruid005",
        "COL_Morgue_HasMet_Us",
        "4b4d2992-abb5-bd1b-9593-feb68eddf682_B",
        "ORI_Karlach_Knows_DammonWorkedInHell",
        "ORI_Inclusion_End_Random",
        "DEN_Squirrel_HasMet",
        "ORI_INCLUSION_HALSIN",
        "DEN_ShadowDruid_State_HadSelfReflection",
        "DEN_Thieflings_Pickpocket1_HasMet",
        "PLA_FlamingFist7_Knows_AskedWhatHappened",
        "DEN_DruidAttack_HasMet_BardAfterAttack",
        "GOB_PainPriest_State_NeedMoreHP",
        "FOR_BugBearLove_Event_OpenDoor",
        "DEN_Thieflings_State_PCSawKidThievesGettingCaught",
        "260f61d5-60df-da35-608b-a9856291b143_PlayerKnowsOrinKilledZevlor",
        "916a75f0-23d8-f05b-449d-d926d69fe782_FailedCheck",
        "DEN_druidservant_005_HasMet",
        "CHA_Jergal_HasMet",
        "ORI_Inclusion_End_Gale",
        "PLA_ConflictedFlind_Hyena_001_HasMet",
        "StartedAlt",
        "DEN_RaidingParty_Adventurer2_HasMet",
        "GLO_Thieflings_State_PickpocketKidGotHit",
        "GOB_WolfPens_Event_HalsinLeavesGoblinCamp",
        "e6738c9d-060d-c901-b945-4d49ca303d5b_SuccessfullyReadTracks",
        "DEN_GruntingKid_HasMet",
        "16193247-ccea-1974-45ec-e8229a7de4ef_B",
        "DEN_TieflingLeader_Quest_GobHuntDeclined",
        "DEN_RaidingParty_Event_GoblinsAppear",
        "DEN_GuardedEntrance_HasMet_Guard1",
        "GOB_PainPriest_Event_FirstHitDone",
        "ORI_Inclusion_End_Laezel",
        "DEN_General_Event_ElevatorBearMoves",
        "DEN_CapturedGoblin_OfferedRevenge",
        "DEN_General_Inclusion_Pickpocket",
        "DEN_RitualDruid_HasMet_Left4",
        "GOB_DrowCommander_HasMet",
        "GLO_Jergal_State_OutOfTomb",
        "DEN_TieflingLeader_State_KaghaResolved",
        "f3afb428-73fc-2e5c-057b-2e0e5a1b2f1c_B",
        "DEN_AttackOnDen_HasMet_Stargazer",
        "DEN_Thieflings_Event_ShookThief",
        "DEN_AttackOnDen_HasMet_Refugee001",
        "b70d5139-9980-efc6-3ba3-fe2eb56ab2e0_B",
        "DEN_DruidAttack_HasMet_PetWolf",
        "26071d89-33af-8eac-3c05-ee8dca91338d_who",
        "DEN_Apprentice_UserShortcut",
        "ReflectedKagha",
        "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionAsked",
        "FOR_GoblinAmbush_GoblinsPacified",
        "DEN_DruidAttack_HasMet_GrieflingAfterAttack",
        "DEN_GuardedEntrance_State_ClearToPass",
        "GOB_Checkpoint_State_GuidedByCapturedGoblin",
        "DEN_RaidingParty_Event_GoblinRaidFight",
        "ORI_Inclusion_Wyll",
        "RefusedCircle",
        "DEN_TieflingScam_Knows_Scam",
        "DEN_BirdSender_Knows_AskedAboutBird",
        "DEN_DevilishOx_MeetAtDruidsGrove_Incapable",
        "DEN_Thieflings_CaveGuard_002_HasMet",
        "GOB_PainPriest_Knows_PenanceIsPain",
        "6bba3537-3756-eb27-a08a-a8596d765f2e_C",
        "CHA_LaezelRecruitment_Event_LaezelHostile",
        "DEN_GoblinScouts_SavedDruid",
        "ArrivedAtGrove",
        "DEN_GruntingKid_Event_AskedCanTalk",
        "DEN_Apprentice_Event_GiveReward",
        "acc081f3-204a-2f29-a3bb-6d33ff784c39_C",
        "DEN_AttackOnDen_GrieflingFriend_Knows_Kelemvor",
        "GOB_PainPriest_Event_Mercy",
        "c68c5474-226f-4b47-b327-a22274e360a0_B",
        "UND_LoneDuergar_Event_WaitingForMainDialog",
        "OrderedBreachInn",
        "COL_Morgue_User_HasMet_Us",
        "DEN_RitualDruid_HasMet_Pacified3",
        "DEN_ShadowDruidRats_Event_RememberedLetter",
        "DEN_DruidAttack_State_PrepAfterDeathOfDruids",
        "PLA_Desire_Event_HasMet",
        "4103e544-e1db-525f-81ec-b5dfa71907d7_WantNereOut",
        "PLA_StuckHalfElf_Event_ToldQuestion",
        "UND_BroodingSovereign_Event_Enlarged",
        "f108995b-14f4-7823-d218-790177a93da8_B",
        "6a98f294-9f4f-d0b0-1cba-706f1cb15009_Local1",
        "GOB_WolfPens_Worg_001_HasMet",
        "DEN_DruidAttack_HasMet_WeaponsmithAfterAttack",
        "GLO_Volo_HasMet",
        "OpenedSarcophagus",
        "Counsellor_RefusedHelp",
        "02455563-e119-58e5-1fe7-eb46fe381d30_A",
        "GOB_GuardUpset_HasMet",
        "GOB_RatRacket_LocalRat_001_HasMet",
        "c5f62c4b-fb04-1505-c35b-63119d96b127_First_Disabled",
        "698f5a3b-6d88-3d9e-ee4f-26d9c1fc5b6b_B",
        "UND_TheDrowNere_State_KilledGnomeSerene",
        "COL_General_Knows_ColonyIsIllithid",
        "GLO_VoloBallad_MetGuardPrison",
        "PLA_ZhentDungeon_Zhent01_HasMet",
        "ORI_Karlach_HasMet_DammonUnavailable",
        "GOB_CheckpointBackup003_HasMet",
        "DEN_TieflingScam_Event_FoundOutLies",
        "UND_ArguingGnomes_Quest_Accepted",
        "DEN_Thieflings_HasMet_Chef"
      ]
    },
    "Epilogue": {
      "chapter_id": "Act2_Epilogue",
      "scenario_sequence": [
        "sce_jaheira",
        "sce_umi",
        "glo_gatheryourallies",
        "sce_cerys",
        "sce_alfira",
        "sce_ide",
        "sce_gnomeprisoner",
        "sce_partyvb",
        "sce_wulbren",
        "sce_nightsongsoloreunion",
        "sce_ad",
        "sce_mattis",
        "sce_isobelsoloreunion",
        "sce_patrollingflamingfist",
        "sce_debrief",
        "sce_standingflamingfist",
        "sce_jergal",
        "sce_halsin",
        "sce_minthara",
        "sce_unfortunategnome",
        "sce_cursedfist",
        "sce_isobelnightsongreunion",
        "sce_ravenguardfollowup"
      ],
      "scenario_results": {
        "sce_jaheira": {
          "scenario_name": "sce_jaheira",
          "session_sequence": [
            "AD_EpilogueIntro"
          ],
          "paths": {
            "AD_EpilogueIntro": [
              "AD_EpilogueIntro_0"
            ]
          },
          "node_data": {
            "AD_EpilogueIntro": [
              {
                "id": "AD_EpilogueIntro_0",
                "speaker": "Jaheira",
                "text": "I've been thinking on all that you learned below. If you've caught your breath, we ought to discuss our next steps.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Thoughtful"
              }
            ]
          },
          "session_synopses": {
            "AD_EpilogueIntro": "Jaheira AD's on returning back from the confrontation with Ketheric (If there). To draw attention to the player and encourage them to speak with her. Also going to use this to address that the player could do with recruiting her again if they did before."
          }
        },
        "sce_umi": {
          "scenario_name": "sce_umi",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "11",
              "19",
              "22",
              "8",
              "0"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "11",
                "speaker": "",
                "text": "",
                "node_type": "alias",
                "checkflags": [
                  "COL_NecromancerLab_HasItem_MolEyepatch"
                ],
                "setflags": [
                  "SCE_TieflingFollowUp_Umi_HasMet"
                ],
                "goto": "",
                "link": "16",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "19",
                "speaker": "Player",
                "text": "I found Mol's eyepatch.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "22",
                "speaker": "Umi",
                "text": "What? Where is she?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCE_TieflingFollowUp_Knows_MolMissingEyepatch"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Rising tearful panic"
              },
              {
                "id": "8",
                "speaker": "Player",
                "text": "Hey, calm down - I'm sure she just dropped it. Mol's fine, I promise.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Gale 1",
                  "Astarion -1",
                  "Lae'zel -1",
                  "Wyll 1",
                  "Karlach 1",
                  "Halsin 1",
                  "Minthara -1"
                ],
                "context": ""
              },
              {
                "id": "0",
                "speaker": "Umi",
                "text": "You think so? Mol is really clever. I hope she finds us again soon.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Hovering on the brink of tears despite the player's reassurances"
              }
            ]
          },
          "session_synopses": {
            "": "Umi is upset by Mol's absence and is just barely holding it together (despite Alfira's best attempts)."
          }
        },
        "glo_gatheryourallies": {
          "scenario_name": "glo_gatheryourallies",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sce_cerys": {
          "scenario_name": "sce_cerys",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "23",
              "39",
              "25",
              "44",
              "26",
              "9",
              "12",
              "34",
              "18",
              "4",
              "41"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "23",
                "speaker": "Cerys",
                "text": "Back in Last Light, I was racking my brains - how the hells do we get past the curse?",
                "node_type": "normal",
                "checkflags": [
                  "SCE_BackupLeader_HasMet = False"
                ],
                "setflags": [
                  "SCE_BackupLeader_HasMet"
                ],
                "goto": "",
                "link": "18",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "39",
                "speaker": "Cerys",
                "text": "And then, a blinding light cuts through the darkness, like a blade through butter. All thanks to you, I hear.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "18",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "25",
                "speaker": "Cerys",
                "text": "Didn't think we'd make it without the old Hellrider to lead us. But you did a damn fine job.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "18",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "44",
                "speaker": "Player",
                "text": "Nightsong's the real hero here - she was the light in the darkness.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "26",
                "is_end": false,
                "approval": [
                  "Astarion -1",
                  "Lae'zel 1",
                  "Gale 1",
                  "Shadowheart 2",
                  "Wyll 1",
                  "Karlach 1",
                  "Minthara 1",
                  "Halsin 1"
                ],
                "context": ""
              },
              {
                "id": "26",
                "speaker": "Cerys",
                "text": "You're too humble.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "4",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "9",
                "speaker": "Cerys",
                "text": "But the best leaders know they're only as good as the people around them. Zevlor told me that.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "4",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "12",
                "speaker": "Cerys",
                "text": "Turns out the people around him were better than him. Guess he got what was coming to him.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "4",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "34",
                "speaker": "Player",
                "text": "You shouldn't speak ill of the dead - Zevlor did his best.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "4",
                "is_end": false,
                "approval": [
                  "Astarion 1",
                  "Gale 1",
                  "Lae'zel -1",
                  "Shadowheart 1",
                  "Wyll 1",
                  "Karlach 1",
                  "Minthara -1",
                  "Halsin 1"
                ],
                "context": ""
              },
              {
                "id": "18",
                "speaker": "Cerys",
                "text": "I looked up to him - we all did. But he let us down when we needed him most.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "4",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "4",
                "speaker": "Cerys",
                "text": "There are less mouths to feed now, but we still need supplies for the road. We'll scavenge what we can.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "41",
                "speaker": "Cerys",
                "text": "Hopefully we'll see you again in the city.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "": "Cerys is preparing to lead the surviving tieflings onwards to Baldur’s Gate. Shocked to have survived the Shadow-Cursed Lands, she finds herself taking responsibility for the others - in Zevlor’s absence. It’s not a role she ever wanted, but somebody has to do it. She’s adjusting to a life without Zevlor, and briefly reflects on his surrender and presumed death."
          }
        },
        "sce_alfira": {
          "scenario_name": "sce_alfira",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "14",
              "5",
              "20",
              "6",
              "45",
              "38"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "14",
                "speaker": "Alfira",
                "text": "Ah! A fellow bard. Sorry to ask out of the blue, but would you like to play together?",
                "node_type": "normal",
                "checkflags": [
                  "SCE_Alfira_State_RequestedBard",
                  "SCE_Alfira_Event_GaveShiningDawn = False",
                  "BARD"
                ],
                "setflags": [],
                "goto": "",
                "link": "42",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: cheerful and excited"
              },
              {
                "id": "5",
                "speaker": "Alfira",
                "text": "The kids have been really down - I figured a concert would cheer them up. Or distract them, at least. What do you say?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: sincere and excited"
              },
              {
                "id": "20",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "6",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "6",
                "speaker": "Alfira",
                "text": "It'd be like a private concert, just for them - they'd love it!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "45",
                "speaker": "Player",
                "text": "Sure. Ready when you are.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Gale 1",
                  "Astarion -1",
                  "Lae'zel -1",
                  "Wyll 1",
                  "Karlach 1",
                  "Shadowheart 1",
                  "Minthara -1",
                  "Halsin 1"
                ],
                "context": ""
              },
              {
                "id": "38",
                "speaker": "Alfira",
                "text": "Yes! I've missed this. If you can't keep up, don't take it to heart.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCE_Alfira_Event_GaveShiningDawn",
                  "SCE_TieflingFollowUp_Event_GiveShiningDawn"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: excited, about to play with a bard for the first time in forever"
              }
            ]
          },
          "session_synopses": {
            "": "Alfira is leading the kids in a bit of fun moment of constructing their story into a ballad of sorts. When the player arrives they will have just finished up the lyrics and if the player is a bard, Alfira will invite them to play along with. At the end of the duet (gameplay playing animation with music, not a full cinematic) the Bard is given the Shining Dawn ability."
          }
        },
        "sce_ide": {
          "scenario_name": "sce_ide",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "9",
              "19",
              "15",
              "20",
              "6",
              "22",
              "0"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "9",
                "speaker": "",
                "text": "",
                "node_type": "alias",
                "checkflags": [
                  "DEN_TieflingBard_State_ConvincedToQuit",
                  "COL_NecromancerLab_HasItem_MolEyepatch"
                ],
                "setflags": [
                  "SCE_TieflingFollowUp_Ide_HasMet"
                ],
                "goto": "",
                "link": "11",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "19",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "15",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "15",
                "speaker": "",
                "text": "",
                "node_type": "alias",
                "checkflags": [
                  "COL_NecromancerLab_HasItem_MolEyepatch"
                ],
                "setflags": [
                  "SCE_TieflingFollowUp_Ide_HasMet"
                ],
                "goto": "",
                "link": "13",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "20",
                "speaker": "Player",
                "text": "I found Mol's eyepatch.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "6",
                "speaker": "Ide",
                "text": "This is Mol's... Where did you find it?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCE_TieflingFollowUp_Knows_MolMissingEyepatch"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Almost accusatory"
              },
              {
                "id": "22",
                "speaker": "Player",
                "text": "What does it matter? Your friend's dead anyway.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Astarion 1",
                  "Lae'zel 1",
                  "Gale -1",
                  "Shadowheart 1",
                  "Wyll -1",
                  "Karlach -1",
                  "Minthara 1",
                  "Halsin -1"
                ],
                "context": ""
              },
              {
                "id": "0",
                "speaker": "Ide",
                "text": "And I bet you'll be dead in a ditch before you even smell Baldur's Gate! Go away!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCE_TieflingFollowUp_Knows_MeanAboutMol"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Anger jostling with upset at the implication of her friend's death"
              }
            ]
          },
          "session_synopses": {
            "": "Ide is frustrated by Alfira's attempts to cheer her and the other tiefling kids up - she's more worried about Mol (who is missing)."
          }
        },
        "sce_gnomeprisoner": {
          "scenario_name": "sce_gnomeprisoner",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sce_partyvb": {
          "scenario_name": "sce_partyvb",
          "session_sequence": [
            "PAD_CurseStateComment"
          ],
          "paths": {
            "PAD_CurseStateComment": [
              "PAD_CurseStateComment_0"
            ]
          },
          "node_data": {
            "PAD_CurseStateComment": [
              {
                "id": "PAD_CurseStateComment_0",
                "speaker": "Player",
                "text": "The shadow curse will soon be forgotten, thanks to us.",
                "node_type": "normal",
                "checkflags": [
                  "GLO_LiftingTheCurse_State_BreathHasBeenRestored"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_CurseStateComment": "After the act 2 epilogue, the party comments on the state of the Shadow Curse before leaving for Baldur's Gate."
          }
        },
        "sce_wulbren": {
          "scenario_name": "sce_wulbren",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "88",
              "29",
              "5",
              "12",
              "50",
              "37",
              "64",
              "32",
              "21",
              "41",
              "63",
              "16",
              "46",
              "34",
              "54",
              "20",
              "18",
              "56"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "88",
                "speaker": "Wulbren Bongle",
                "text": "You helped me escape this hellspit, then took down the heart of Moonrise - Ketheric himself. I'm impressed.",
                "node_type": "normal",
                "checkflags": [
                  "SCE_GnomeFollowUp_Wulbren_HasMet = False"
                ],
                "setflags": [
                  "SCE_GnomeFollowUp_Wulbren_HasMet"
                ],
                "goto": "",
                "link": "50",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "29",
                "speaker": "Wulbren Bongle",
                "text": "And I'm not a man easily impressed.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "50",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "5",
                "speaker": "Player",
                "text": "Last I saw you, you were disappearing on a boat down the river.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_SavingPrisoners_State_WulbrenReturned = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "63",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "12",
                "speaker": "Wulbren Bongle",
                "text": "Not my finest exit. I hid out on the river until the sky lit up. Couldn't believe my eyes - especially when I realised you were behind it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "63",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: sincere and impressed"
              },
              {
                "id": "50",
                "speaker": "Wulbren Bongle",
                "text": "I underestimated you. Kept who I was, and who I represent, from you - but I see now that was a mistake.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "63",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "37",
                "speaker": "Wulbren Bongle",
                "text": "I am Wulbren Bongle, leader of the Ironhand Gnomes. No doubt you've heard of us?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "63",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: said with immense pride"
              },
              {
                "id": "64",
                "speaker": "Player",
                "text": "",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "63",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "32",
                "speaker": "",
                "text": "True",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "63",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "21",
                "speaker": "Narrator",
                "text": "*You recall stories of the Ironhand Gnomes - a talented group of inventors who were banished from Baldur's Gate.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "aa1d4932-8689-5e30-2b17-9b0968663a7a_historysuccess"
                ],
                "goto": "",
                "link": "63",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "41",
                "speaker": "Player",
                "text": "I don't know much, I'm afraid.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_WrootRequest_Wulbren_AskedAboutIronhandGnomes = False",
                  "aa1d4932-8689-5e30-2b17-9b0968663a7a_historysuccess = False"
                ],
                "setflags": [
                  "HAV_WrootRequest_Wulbren_AskedAboutIronhandGnomes"
                ],
                "goto": "",
                "link": "54",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "63",
                "speaker": "Wulbren Bongle",
                "text": "We are inventors of the highest order, matched, perhaps, but never surpassed by the Gondians at the High House of Wonders.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "54",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "16",
                "speaker": "Wulbren Bongle",
                "text": "But our forebears were foolish - complicit with Sarevok's madness over a century past, and so we were banished. Still are to this day.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "54",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "46",
                "speaker": "Player",
                "text": "Pity he never succeeded.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Astarion 1"
                ],
                "context": ""
              },
              {
                "id": "34",
                "speaker": "Wulbren Bongle",
                "text": "You agree with such machinations? Duly noted.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "54",
                "speaker": "Wulbren Bongle",
                "text": "I've fought tooth and nail to restore our reputation. Particularly against Gondian detractors who live in glass houses.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "20",
                "speaker": "Wulbren Bongle",
                "text": "I've filled appeals - pleaded with the High Artificer himself. They've refused us time and again. Now, however, I will make them listen.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "18",
                "speaker": "Player",
                "text": "Good luck with that.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "56",
                "speaker": "Wulbren Bongle",
                "text": "Our cause is just and righteous, friend. That's all the luck we need.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: determined and zealous"
              }
            ]
          },
          "session_synopses": {
            "": "This dialogue is peak Wulbren. If he's met you in haven (after you saved him), he rolls back on how rude he was as he realises the player would be an amazing asset in the city. If this is your first time meeting him since the escape (if haven is destroyed he waits out on the river until this scene in the epilogue), he realises how good the player would be to have on his side in the city and tells him all about how wronged the ironhand gnomes were."
          }
        },
        "sce_nightsongsoloreunion": {
          "scenario_name": "sce_nightsongsoloreunion",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sce_ad": {
          "scenario_name": "sce_ad",
          "session_sequence": [
            "UnfortunateGnome",
            "Nickels",
            "Umi",
            "Wulbren"
          ],
          "paths": {
            "UnfortunateGnome": [
              "UnfortunateGnome_0"
            ],
            "Nickels": [
              "Nickels_0"
            ],
            "Umi": [
              "Umi_0"
            ],
            "Wulbren": [
              "Wulbren_0"
            ]
          },
          "node_data": {
            "UnfortunateGnome": [
              {
                "id": "UnfortunateGnome_0",
                "speaker": "Barcus Wroot",
                "text": "Curse this heart of mine.",
                "node_type": "normal",
                "checkflags": [
                  "d3eb78cf-ff8c-1e7a-7df7-4b6a04226b17_A"
                ],
                "setflags": [
                  "d3eb78cf-ff8c-1e7a-7df7-4b6a04226b17_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Nickels": [
              {
                "id": "Nickels_0",
                "speaker": "Nickels",
                "text": "Nimble, where is my... oh.",
                "node_type": "normal",
                "checkflags": [
                  "8ab0520b-3a8d-822f-1934-336e2d24e0a0_A"
                ],
                "setflags": [
                  "8ab0520b-3a8d-822f-1934-336e2d24e0a0_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: remembers she's dead"
              }
            ],
            "Umi": [
              {
                "id": "Umi_0",
                "speaker": "Umi",
                "text": "Maybe I should ask the grown-ups to look for Mol again.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "55452e03-17c6-9a9d-072b-80043381c98b_A"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Wulbren": [
              {
                "id": "Wulbren_0",
                "speaker": "Wulbren Bongle",
                "text": "It's finally time for the Ironhand Gnomes to come home.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "d2eeb9af-9d20-919f-5bcf-63b09a554a90_A"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: eager, excited to return to the city"
              }
            ]
          },
          "session_synopses": {
            "UnfortunateGnome": "This occurs in the epilogue. In the top set Wulbren has died and barcus is considering his next steps. In the bottom, Wulbren is alive and barcus is determined to do everything he can to help him.",
            "Nickels": "Nickels is alive but his friend and caretaker Nimble is dead. He's lost without her and out of sorts.",
            "Umi": "Umi is worried about Mol, who is missing. In the top set, the player has down Umi Mol's eyepatch - hinting that she's dead. She's scared for her friend. In the bottom set, she's anxiously worried for her friend.",
            "Wulbren": "These ADs occur in the epilogue. In one set, Wulbren is admiring the stonework in front of him, and contemplating the artistry of Moonrise Towers. In the other, it's his idle behaviour as he prepares to leave for Baldur's Gate - excited for his plans to all come together."
          }
        },
        "sce_mattis": {
          "scenario_name": "sce_mattis",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sce_isobelsoloreunion": {
          "scenario_name": "sce_isobelsoloreunion",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sce_patrollingflamingfist": {
          "scenario_name": "sce_patrollingflamingfist",
          "session_sequence": [
            "000"
          ],
          "paths": {
            "000": [
              "000_0"
            ]
          },
          "node_data": {
            "000": [
              {
                "id": "000_0",
                "speaker": "Flaming Fist",
                "text": "Safely on to Baldur's Gate. For all of us.",
                "node_type": "normal",
                "checkflags": [
                  "SCE_PatrollingFlamingFist_000_HasMet"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "000": "Flaming fist one-liner."
          }
        },
        "sce_debrief": {
          "scenario_name": "sce_debrief",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sce_standingflamingfist": {
          "scenario_name": "sce_standingflamingfist",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sce_jergal": {
          "scenario_name": "sce_jergal",
          "session_sequence": [
            "Debrief",
            "AD_EpilogueIntro"
          ],
          "paths": {
            "Debrief": [
              "Debrief_26",
              "Debrief_16",
              "Debrief_103",
              "Debrief_68",
              "Debrief_76",
              "Debrief_22",
              "Debrief_82",
              "Debrief_57",
              "Debrief_7",
              "Debrief_99"
            ],
            "AD_EpilogueIntro": [
              "AD_EpilogueIntro_0"
            ]
          },
          "node_data": {
            "Debrief": [
              {
                "id": "Debrief_26",
                "speaker": "Withers",
                "text": "The shadows yet fester. The Dead Three, united under cover of darkness. The balance shifts.",
                "node_type": "normal",
                "checkflags": [
                  "GLO_LiftingTheCurse_State_BreathHasBeenRestored = False"
                ],
                "setflags": [
                  "SCE_Jergal_HasMet"
                ],
                "goto": "",
                "link": "2",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Debrief_16",
                "speaker": "Player",
                "text": "",
                "node_type": "normal",
                "checkflags": [
                  "GLO_Absolute_Knows_DeadThree = False",
                  "CLERIC_BANE = False",
                  "PALADIN_BANE = False",
                  "PALADIN_BHAAL = False",
                  "PALADIN_MYRKUL = False",
                  "CLERIC_MYRKUL = False",
                  "CLERIC_BHAAL = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "2",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Debrief_103",
                "speaker": "",
                "text": "True",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "2",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Debrief_68",
                "speaker": "Narrator",
                "text": "*The Dead Three. Myrkul, Bane, and Bhaal - lords of deathly tenets, and traitors to Ao, god of gods.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "932401b1-7763-7fd7-bee1-8731fe62084f_DeadThree"
                ],
                "goto": "",
                "link": "2",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Debrief_76",
                "speaker": "Narrator",
                "text": "*All three sowed chaos at the height of their power. And all three now walk the planes as mortals - or so it's believed.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "2",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Debrief_22",
                "speaker": "Withers",
                "text": "There are depths to this alliance yet unplumbed. Consider, mortal:",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "2",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Debrief_82",
                "speaker": "Withers",
                "text": "Do illithids possess souls?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "2",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Debrief_57",
                "speaker": "Player",
                "text": "Forget that. Who are you? What are you doing here?",
                "node_type": "normal",
                "checkflags": [
                  "SCE_JergalDebrief_Event_WhyHere = False",
                  "CHA_Jergal_HasMet = False",
                  "CAMP_Jergal_HasMet = False"
                ],
                "setflags": [
                  "SCE_JergalDebrief_Event_WhyHere"
                ],
                "goto": "",
                "link": "123",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Debrief_7",
                "speaker": "",
                "text": "",
                "node_type": "alias",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "123",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Debrief_99",
                "speaker": "Withers",
                "text": "I shall ask yet again. Do illithids possess souls?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ],
            "AD_EpilogueIntro": [
              {
                "id": "AD_EpilogueIntro_0",
                "speaker": "Withers",
                "text": "Against all odds, thou hast survived. Wilt thou reflect with me upon thy triumph?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "Debrief": "Jergal's debrief at MOO after the mind flayer colony.",
            "AD_EpilogueIntro": "Withers AD's on the player successfully defeating Ketheric and coming back to the Epilogue."
          }
        },
        "sce_halsin": {
          "scenario_name": "sce_halsin",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "88",
              "3",
              "42",
              "90",
              "92",
              "72",
              "7",
              "41",
              "44",
              "25",
              "84"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "88",
                "speaker": "Halsin",
                "text": "Thaniel rests still, but it's no easy slumber.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_LiftingTheCurse_State_HalsinWaitingInCamp"
                ],
                "setflags": [
                  "HAV_LiftingTheCurse_Knows_SeekingBreath"
                ],
                "goto": "",
                "link": "44",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Concerned/Urgent. The curse will not be lifted unless a spirit of the land is fully restored"
              },
              {
                "id": "3",
                "speaker": "Halsin",
                "text": "The shadows rended him in two when they bore him away to the Shadowfell. Half of his essence remained here, amidst the curse.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "44",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Concerned/Urgent. The curse will not be lifted unless a spirit of the land is fully restored"
              },
              {
                "id": "42",
                "speaker": "Halsin",
                "text": "What stayed behind would have been the strongest part of him. But after all these years left in darkness, corruption must have taken hold.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "44",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Concerned/Urgent. The curse will not be lifted unless a spirit of the land is fully restored"
              },
              {
                "id": "90",
                "speaker": "Player",
                "text": "Can it be undone?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "72",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "92",
                "speaker": "Halsin",
                "text": "Perhaps - if we can find Thaniel's lost half, and make him whole again.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "72",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Concerned/Urgent. The curse will not be lifted unless a spirit of the land is fully restored"
              },
              {
                "id": "72",
                "speaker": "Halsin",
                "text": "Only, the missing half may not come willingly. The curse will have sunk its tendrils deep, twisting Thaniel's essence into something... else.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "44",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Some foreboding. The curse will not be lifted unless a spirit of the land is fully restored"
              },
              {
                "id": "7",
                "speaker": "Player",
                "text": "All right, leave it to me.",
                "node_type": "normal",
                "checkflags": [
                  "ORI_State_Recruited = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "44",
                "is_end": false,
                "approval": [
                  "Astarion -1",
                  "Gale 1",
                  "Wyll 1",
                  "Karlach 1",
                  "Halsin 10"
                ],
                "context": ""
              },
              {
                "id": "41",
                "speaker": "Halsin",
                "text": "This doesn't have to be your burden alone. Every moment counts, and I've asked much of you already without being at your side.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "44",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Stalwart, heartfelt"
              },
              {
                "id": "44",
                "speaker": "Halsin",
                "text": "If you want me, I'm yours. Against the curse, against the Absolute - anything. Just say the word.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "GLO_LiftingTheCurse_State_HalsinRecruitable"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Stalwart, heartfelt"
              },
              {
                "id": "25",
                "speaker": "Player",
                "text": "Join me.",
                "node_type": "normal",
                "checkflags": [
                  "ORI_State_Recruited = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "84",
                "speaker": "Halsin",
                "text": "Good. Now our roots can deepen - together.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "OriginAddToParty"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [
                  "Gale 1",
                  "Shadowheart 1",
                  "Wyll 1",
                  "Karlach 1"
                ],
                "context": "NodeContext: Resolute/comradely"
              }
            ]
          },
          "session_synopses": {
            "": "Dialogue with Halsin in the epilogue of Act 2. In it, he reacts to the various states that could occur in relation to his desire to rid the Act 2 region of the shadow curse:- if you've already done everything needed to ensure success. he's grateful and seeks to remain with you on the journey to Baldur's Gate.- if the curse is not yet sure to be lifted, but there's still something that can be done (ie Thaniel was saved from the Shadowfell, but hasn't been fully restored), he will implore the players to help and offer to join them.- if it's no longer possible to lift the curse, Halsin is sad and resigned to staying behind to stand sentry over it. He will not be available as a companion in Act 3, and his story effectively ends here."
          }
        },
        "sce_minthara": {
          "scenario_name": "sce_minthara",
          "session_sequence": [
            "Debrief"
          ],
          "paths": {
            "Debrief": [
              "Debrief_1",
              "Debrief_0"
            ]
          },
          "node_data": {
            "Debrief": [
              {
                "id": "Debrief_1",
                "speaker": "Nightwarden Minthara",
                "text": "| Ketheric is defeated, but his army marches on. To rid ourselves of this parasite, we will have to give chase. |",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCE_Minthara_HasMet",
                  "SCE_Debrief_State_PartyDebriefed"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Debrief_0",
                "speaker": "Nightwarden Minthara",
                "text": "| Baldur's Gate awaits. |",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "Debrief": "Minthara is present and gives the debrief to the player after the mindflayer colony."
          }
        },
        "sce_unfortunategnome": {
          "scenario_name": "sce_unfortunategnome",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "1",
              "26",
              "40",
              "3",
              "14",
              "11",
              "24",
              "9",
              "20"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "1",
                "speaker": "Barcus Wroot",
                "text": "There you are. I was wondering where the devil you'd been.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCE_GnomeFollowUp_HasMet_WulbrenAlive"
                ],
                "goto": "",
                "link": "11",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "26",
                "speaker": "Player",
                "text": "I was preoccupied defeating Ketheric Thorm.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "11",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "40",
                "speaker": "Barcus Wroot",
                "text": "Who? Oh - right. Well, forget about that magungus. We have more important things to worry about. Like Wulbren.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "11",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: 'muh-GUN-guss' (hard g's)."
              },
              {
                "id": "3",
                "speaker": "Player",
                "text": "What about him?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "14",
                "speaker": "Barcus Wroot",
                "text": "Wulbren and the Ironhand Gnomes are planning something dreadful in the city.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "11",
                "speaker": "Barcus Wroot",
                "text": "They have runepowder. They have motive. We have to stop them.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "24",
                "speaker": "Player",
                "text": "It seems we'll have our hands full in Baldur's Gate.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "9",
                "speaker": "Barcus Wroot",
                "text": "With the sword of justice in one hand and the shield of self-righteousness in the other, we most certainly will.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "20",
                "speaker": "Barcus Wroot",
                "text": "To saving the city - and my fool of a friend.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "": "He's a bit mopey but is very much wanting to stick by Wulbren's side despite being mistreated by him. He doesn't know what's happening next but he knows Wulbren has a plan. So that's something."
          }
        },
        "sce_cursedfist": {
          "scenario_name": "sce_cursedfist",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sce_isobelnightsongreunion": {
          "scenario_name": "sce_isobelnightsongreunion",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sce_ravenguardfollowup": {
          "scenario_name": "sce_ravenguardfollowup",
          "session_sequence": [
            "AD_ArtAndFlamingFist"
          ],
          "paths": {
            "AD_ArtAndFlamingFist": [
              "AD_ArtAndFlamingFist_0",
              "AD_ArtAndFlamingFist_2",
              "AD_ArtAndFlamingFist_1"
            ]
          },
          "node_data": {
            "AD_ArtAndFlamingFist": [
              {
                "id": "AD_ArtAndFlamingFist_0",
                "speaker": "Art Cullagh",
                "text": "It's... like... like your mind wants you dead.",
                "node_type": "normal",
                "checkflags": [
                  "e680129a-9d39-6ffc-3e6d-926daf0d76ff_A = False"
                ],
                "setflags": [
                  "e680129a-9d39-6ffc-3e6d-926daf0d76ff_A"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_ArtAndFlamingFist_2",
                "speaker": "Flaming Fist",
                "text": "How'd you survive it?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_ArtAndFlamingFist_1",
                "speaker": "Art Cullagh",
                "text": "Thaniel. I had to look after him. Without him, I wouldn't have lasted long.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_ArtAndFlamingFist": "Art has been cursed for a long time and finally has been freed from the curse. At the epilogue, he will be chatting with another harper about how it felt if he is cured and available."
          }
        }
      },
      "final_flags": [
        "GOB_SpiderNest_State_SpidersHostile",
        "DEN_AttackOnDen_HasMet_Prodigy",
        "DEN_CapturedGoblin_GuardsHasMet",
        "GOB_Checkpoint_Event_MoveToCamp",
        "UND_MyconidRevenge_Event_TakeHead",
        "8a9a14b0-87da-5c78-aa76-7a266de7a786_Phase1",
        "PLA_TavernInvestigation_Knows_AskedStelmane",
        "DEN_AttackOnDen_HasMet_Tiefling010Victory",
        "GLO_Moonrise_Knows_AbsoluteAtGrymforge",
        "COL_Vault_State_HasAccess",
        "CRA_DeadPrisoner_Dead_AskedQuestion",
        "UND_DuergarMutineerFollowUp_Event_Happened",
        "CHA_Outside_Event_DoorGuardConvinced",
        "e0b6dfeb-2923-e0ad-1dc5-2a5d1e055e16_local1",
        "DEN_AttackOnDen_HasMet_GrieflingFriend",
        "DEN_AttackOnDen_HasMet_Tiefling001",
        "GOB_QuartermasterFlimsy_HasMet",
        "GEN_TransferNPCPayment_2",
        "DEN_AttackOnDen_Event_OpenGateAfterCombat",
        "5e9c4c72-4f56-2646-ce36-88207d2dc33c_KinSaved",
        "GOB_OwlbearCub_Event_InvitedToCamp",
        "PLA_Desire_Knows_RavengardTaken",
        "DEN_DruidServant005_Knows_TalkedAboutLockdown",
        "UND_SocietyOfBrilliance_MindFlayer_State_MindFlayerFeeding",
        "PLA_ConflictedFlind_Event_MindControlDamage_Minor",
        "DEN_AttackOnDen_HasMet_Servant005Victory",
        "PLA_Desire_State_WyllComTrack",
        "CHA_Chapel_Event_OpenedJergalsTomb",
        "UND_DarkLake_State_ClaimedGekhWasDead",
        "DEN_AttackOnDen_Pet004_HasMet",
        "GLO_Player_Knows_MoonlanternExists",
        "GOB_PainPriest_Event_Reward",
        "2da46374-abab-9219-f7ce-2a002cfd72a5_a",
        "DEN_AttackOnDen_Ranged_001_HasMet",
        "GLO_Volo_HasMet_Personally",
        "GOB_PainPriest_State_ReactedToPenance",
        "da38cd0f-efef-6809-231d-26f71308cd07_B",
        "DEN_RaidingParty_Event_SkipConfrontation",
        "ORI_INCLUSION_SHADOWHEART",
        "GLO_TadpoledCount6",
        "PLA_TavernInvestigation_Quest_WallCollapsed",
        "PLA_Refugee_002_TollhouseMentioned",
        "DEN_AttackOnDen_HasMet_RobberKid",
        "FOR_PriestsConqueringGod_AlliedPlayer",
        "HAG_GurHunter_Dead_Knows_Hunter",
        "DEN_AttackOnDen_HasMet_PickpocketVictory",
        "DEN_GuardedEntrance_State_ParentsKnowDeath",
        "GLO_IronhandGnomes_Knows_WulbrenInMoonrise",
        "WLD_FOR_GnomeGoblinsAngry",
        "Den_Thieflings_InterferingGuard_PCGotLore",
        "GOB_Checkpoint_Guard01_HasMet",
        "WLD_UnfortunateGnome_PayPassage",
        "4c78f756-720d-a285-a3e6-8f69a6069abc_Step1",
        "cd4b312f-5a40-b8c1-1ecb-0862c829a479_A",
        "5ebae00c-47d8-736c-6738-4ee56cebbc49_B",
        "DEN_General_YoungLovers_HasMet",
        "GOB_PainPriest_Event_CheckHP",
        "GLO_LiftingTheCurse_State_HalsinRecruitable",
        "GLO_Desire_HasMet",
        "b43d3bc7-f10d-73cc-232e-c1f93cba3ed5_Local2",
        "DEN_AttackOnDen_Pet002_HasMet",
        "FOR_UnfortunateGnome_State_NonCharlatanAccess",
        "UND_MyconidCircle_PlantDuergarHasMet",
        "aa1d4932-8689-5e30-2b17-9b0968663a7a_historysuccess",
        "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_WyllSpoke",
        "GOB_WolfPens_Worg_002_HasMet",
        "PLA_GithChokepoint_State_FailedReadingMap",
        "PLA_ZhentShipment_Agent_002_StartInclusion",
        "d2eeb9af-9d20-919f-5bcf-63b09a554a90_A",
        "DEN_ShadowDruid_Event_SetFaithwarden",
        "CRA_DeadPrisoner_Dead_MentionedTadpole",
        "GLO_Absolute_Knows_MoonriseTowers",
        "DEN_Rat_Event_MoveToShack",
        "DEN_DruidAttack_HasMet_Protester3AfterAttack",
        "ORI_Inclusion_End_Karlach",
        "UND_WormWall_State_RecognisedCrawlers",
        "GLO_GithChokepoint_DragonAppear",
        "df3e1892-2ab5-7b69-e57b-a75504e1a8f2_B",
        "10297257-36dd-3799-f681-657656779d4a_TieflingsLaezelAD1",
        "ORI_Inclusion_End_Wyll",
        "DEN_AttackOnDen_HasMet_BackupLeader",
        "GLO_HeadRemoval_Event_HeadToInventory",
        "CHA_Jergal_Event_AttemptedAttack",
        "9b4c05c6-0a79-ea8d-c351-43d6fbb04abc_Story1",
        "GOB_AbsoluteCultistStiff_HasMet",
        "GLO_Shadowcurse_Knows_FromGnome",
        "PLA_StuckHalfElf_Knows_ExplainedDowry",
        "FOR_BugBearLove_Event_MovePlayerInside",
        "DEN_Stargazing_Event_SawDragon",
        "ORI_INCLUSION_ASTARION",
        "FOR_UnfortunateGone_TiedUpHasmet",
        "HAG_Hagspawn_State_JakeBerserk",
        "6cf6ff37-64f7-3ccf-d702-ee2025510422_B",
        "UND_EbonLake_Event_MoveToLake",
        "FOR_SeluneStash_NoticeStashSeal_CommentedOnSeal",
        "GOB_Torturers_Rat_001_HasMet",
        "GOB_Scrying_NoddedOrShrugged",
        "DEN_BirdSender_HasMet_GobLeadersDead",
        "a759296c-5d41-f5b9-7d31-1c70d1e10dc7_Once",
        "8ab0520b-3a8d-822f-1934-336e2d24e0a0_B",
        "d3eb78cf-ff8c-1e7a-7df7-4b6a04226b17_B",
        "DEN_HarpyMeal_Event_OriginCharm3",
        "683cb55e-08b9-c865-78a6-4e047ee62a24_B",
        "GLO_Tadpoled_UsedToday1",
        "DEN_Thieflings_Event_PartnerQuestionAsked",
        "HAG_SurrogateMother_HasMet",
        "b2a52f0b-5fa8-d275-f080-0fc8edbe1faf_B",
        "GOB_GoblingKing_Event_HealerPersuasion",
        "UND_DuergarCamp_State_DocksHostile",
        "PLA_ZhentShipment_Agent_001_StartInclusion",
        "57c003e7-0932-6f0c-e655-99025a4abe3a_B",
        "DEN_AttackOnDen_HasMet_TieflingLeader",
        "09983dce-d7d0-c108-506f-dcadc4044b0a_Derryth_SwD_Who",
        "PLA_TavernInvestigation_State_HasMet",
        "ORI_Inclusion_Karlach",
        "UND_BrokenMoonLantern_HasMet",
        "3483cea8-0c11-9432-2421-6b95b9140d95_B",
        "7611fa51-4b1b-3d2c-a8a5-74c04d9db7fa_AnimalHandlingSuccess",
        "UND_DuergarPatroller_03_HasMet",
        "DEN_DruidAttack_HasMet_HideoutLeaderAfterAttack",
        "DEN_TieflingScam_Event_InspectedBox",
        "GnomeAskedHelp",
        "3f665b97-a69e-81c5-68e6-5b931720721e_Part1",
        "CHA_LaezelRecruitment_MindMeld",
        "GLO_ScryingEyes_State_FeltGaze",
        "DEN_GuardedEntrance_HasMet_Guard3",
        "DEN_RaidingParty_Event_KanonOpensGate",
        "DEN_AttackOnDen_HasMet_Wyll",
        "PLA_ConflictedFlind_Knows_Gnolls",
        "GLO_TalkedToVoloAboutAbsolute",
        "UND_MyconidCircle_DwarvenAlchemist_BaelenRestoredHasmet",
        "COL_Barracks_State_InterruptConvinced",
        "GOB_Festivities_Trader_HasMet",
        "DEN_AttackOnDen_HasMet_Tiefling004",
        "ZhentDungeon_AgreedBuy",
        "11d70a18-2aae-47a0-1a18-c486858b1eaf_B",
        "DEN_GruntingKid_Event_DisappearIntoWall",
        "GOB_BattleStations_HasMet_WarDrum",
        "GOB_GoblinJolly_HasMet",
        "UND_MyconidCircle_InjuredGnome_ReportedGrymforgeFate",
        "564fac12-29bd-3abe-d380-0a864e688883_Turn1",
        "COL_TadpolingCentre_MemoryImprint_FirstUse",
        "DEN_Apprentice_HasMet_ReactedToShadowDruids",
        "DEN_CampGeneral_HasMet_Gatekeeper",
        "HAV_WrootRequest_Wulbren_AskedAboutIronhandGnomes",
        "UND_DeadInTheWater_CorpseDisposerCompanion_HasMet",
        "UND_MyconidCircle_MyconidSuspicious_HasMet",
        "DEN_Hideout_State_GivenWarning",
        "PLA_Refugee_002_HasMet",
        "UND_DuergarGuard_AtPier_01_HasMet",
        "DEN_DruidAttack_HasMet_PickpocketTraderAfterAttack",
        "SCE_Jergal_HasMet",
        "DEN_RaidingParty_Event_OpenDenGate",
        "GOB_GoblinKingDead_Event_SaidFugitives",
        "UND_State_LeaderFreedGnomes",
        "41e56e7f-1722-7350-33dc-aefe523650fe_B",
        "PLA_ZhentDungeon_State_SaidPassword",
        "c3207254-eafb-348b-d327-f690af0e213f_startedattackmove",
        "DEN_AttackOnDen_HasMet_TieflingBard",
        "UND_MyconidCircle_BroodingSovereign_State_InParty",
        "DEN_AttackOnDen_HasMet_Kid004Victory",
        "DEN_Hideout_Event_LeaveCountdown",
        "1493763b-776c-959c-259a-89f34f326e04_A",
        "UND_FurnaceSearch_Knows_Xargrim",
        "DEN_AttackOnDen_ZenBear_HasMet",
        "DEN_DevilishOx_State_ArcanaCheckComplete_SwA",
        "SCE_TieflingFollowUp_Knows_MolMissingEyepatch",
        "fa6e2ce0-64f3-bfb8-fb47-10f50f02cadf_AbsoluteMentioned",
        "DEN_AttackOnDen_Event_PassedByEntrance",
        "DEN_Thieflings_TieflingGuard11_HasMet",
        "GOB_Trader_Knows_Goods",
        "DEN_AttackOnDen_HasMet_Tiefling005",
        "GOB_GoblinToast_Event_ToastSuccess",
        "COL_Barracks_Mistress_Knows_ThinksPlayerIsThrall",
        "DEN_ZenBear_Helped",
        "FOR_KnifeInMeat_State_KnifeBroken",
        "GOB_Festivities_Goblin001_HasMet",
        "FOR_GnomeGoblin1_HasMet",
        "DEN_TieflingRefugees_Quest_HuntRewardOffered",
        "DEN_RaidingParty_Event_GatekeeperToLever",
        "DEN_DruidAttack_HasMet_ServantGnome",
        "COL_NecroLab_GrandDesignSculpture_HasMet_LaezelInclusion",
        "FOR_GoblinAmbush_Event_StopSpotting",
        "DEN_AttackOnDen_HasMet_RitualDruid003",
        "ReportedToDerryth_BaelenIsAlive",
        "GOB_Owlbear_HasMet_NotChasing",
        "UND_SocietyOfBrilliance_MindFlayer_HasMet",
        "ba2b225d-e9d4-944d-5b4f-b27dd975c626_A",
        "DEN_AttackOnDenDruidLeader_State_HasMet",
        "6fa2b72d-fde1-4ee3-e1d1-f184232f693d_A",
        "DEN_DruidAttack_HasMet_ParentBAfterAttack",
        "DEN_General_Squirrel_LearnedTerritory",
        "HAG_Hagspawn_Knows_PromisedRaiseHusband",
        "OriginAddToParty",
        "PLA_ZhentShipment_Agent_001_Inclusion_Start",
        "GOB_RaiderStupid_HasMet",
        "83fdf5e9-88b8-19e7-ba8f-ff075d2222ce_PLA_ZhentShipment_Knows_Gnolls",
        "DEN_Apprentice_Event_RevealedTadpole",
        "DEN_Thieflings_Event_HideoutTrespassCrimeResolved",
        "469a1188-028b-0e6b-b595-fa464baa551e_b",
        "GOB_RaiderBold_HasMet",
        "FoundCounsellor",
        "UND_DuergarCamp_State_SidedNone",
        "a0afae3d-53b0-192d-d822-c61da104f979_A",
        "DEN_Apprentice_State_ShadowDruidPath",
        "DEN_AttackOnDen_HasMet_LeaderKidVictory",
        "FOR_Monitor_Event_TakeFood",
        "GOB_GoblinToast_ThirdGoblinToasted",
        "FOR_Monitor_State_TransformToDevil",
        "DEN_Thieflings_HasMet_Guard2",
        "DEN_Thieflings_HasMet_Mol",
        "ORI_Karlach_HasMet",
        "GOB_Festivities_HasMet_Ogre_00",
        "GOB_RatRacket_LocalRat_002_HasMet",
        "ce2b9169-f3e7-e07f-9c58-0fd373d5df9a_PLA_ZhentDungeon_Zhent02_Dead_KnowsZarysisZhentarim",
        "DEN_AttackOnDen_Event_EnemiesAppear",
        "FOR_SchoolOgres_Event_AttemptedFirstSkillCheck",
        "GOB_Checkpoint_State_UsedAlarmOnce",
        "DEN_GoblinScouts_State_SavedDruid",
        "DEN_AttackOnDen_HasMet_Adventurer2",
        "GOB_GoblinToast_Event_IncludeFourthGoblin",
        "15b0a2b9-2b22-50ab-70c0-ab3042def597_GaleCommentTried",
        "DEN_HarpyMeal_InHideout_WasMean",
        "PreventTradeWithPlayer",
        "DEN_GoblinHunt_Event_GiveRewardBag",
        "1bddcc22-dadd-92c9-4186-4e10ebbfee68_CHA_Crypt_Jergal_DontFollow",
        "UND_AdamantineForge_Knows_Adamantine",
        "DEN_AdventurersQuest_Knows_AradinStory",
        "FOR_Bottomless_State_InteractedWithWell",
        "ORI_INCLUSION_MINTHARA",
        "SCE_Debrief_State_PartyDebriefed",
        "DEN_AttackOnDen_HasMet_ChefAndSon",
        "ORI_Inclusion_Astarion",
        "UND_DarkJusticiarsCorpses_Recognized",
        "GLO_Desire_State_FreedInAct1",
        "DEN_DruidLair_Knows_DruidsAlliance",
        "GOB_Checkpoint_State_GainedAccess",
        "FOR_UnfortunateGnome_Bargaining",
        "DEN_AttackOnDen_HasMet_ProdigyBrother",
        "UND_Elevator_Event_GotWarning",
        "UND_FearfulRothe_Event_MakeDuergarHostileInDialog",
        "GOB_GuardUpset_State_ConvincedTrueSoul",
        "DEN_CapturedGoblin_State_InTransit",
        "GLO_Thieflings_State_PCShookPickpocketSister",
        "GOB_GEB_TorturedAdventurer_Assault_HasMet",
        "DEN_GroveConflict_Event_StoleIdolAttempt",
        "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_NoFFPresent",
        "DEN_Thieflings_Event_CallGuard",
        "DEN_AdventurersQuest_RaidAdventurerAtCorps_HasMet",
        "UND_FearfulRothe_HasMet_Rothe_001_SpeakWithAnimals",
        "UND_FearfulRothe_State_BefriendedRothe",
        "0d6dbe21-1644-b9bf-8297-dd60d820bd99_B",
        "DEN_GuardedEntrance_HasMet_LiedAboutDeath",
        "FOR_ApothecaryGoblins_Goblin01_HasMet",
        "HAG_AnimalIllusion_Revealed_HasMet1",
        "DEN_TieflingScam_Event_TalkedAboutBox",
        "SCE_Alfira_Event_GaveShiningDawn",
        "UND_Automaton_Knows_AskedPlace",
        "CRA_DeadFisherman2_Dead_WhatDoing",
        "GOB_GoblinToast_Event_IncludeThirdGoblin",
        "DEN_AttackOnDen_HasMet_PickpocketTrader",
        "COL_TadpolingCentre_Knows_IdentifiedDarkUrgePod",
        "GOB_GoblinThroneCheckpoint_Pass",
        "HalsinLeft_KilledLeaders",
        "DEN_AttackOnDen_HasMet_Halsin",
        "c167cdf3-7201-e55c-222f-773c758e1000_IncludedHusband",
        "HAG_HagLair_Victim_001_HasMet",
        "PLA_StuckDwarf_HasMet_FoundWife",
        "GOB_SpiderNest_State_SpidersChill",
        "PLA_Tavern_Knows_DukeInTavern",
        "ORI_INCLUSION_KARLACH",
        "PLA_ZhentDungeon_State_AgentFreed",
        "UND_FurnaceSearch_Event_DuergarMentionsForge",
        "GLO_Moonrise_Knows_GoblinsCapturedADuke",
        "DEN_DruidLair_Knows_FoundingGrove",
        "FOR_Monitor_HasMet_Dinner",
        "AskedCircle",
        "03b6aa2e-e805-3a51-6bdb-d92f0b0da84a_UND_MyconidCircle_ServantHookHorror_01_RecognisedMonster",
        "DEN_GuardedEntrance_HasMet_Protester1",
        "SCE_Minthara_HasMet",
        "ToldAboutTadpole",
        "DEN_DruidAttack_HasMet_Tiefling010AfterAttack",
        "f3f236b2-37a1-a0a2-5855-184ead7b1286_C",
        "GOB_DrowCommander_State_Hostile",
        "UND_ArguingGnomes_Event_LearnedAboutPhilomeen",
        "UND_PetrifiedDrow_Knows_WizardIsDhourn",
        "ORI_Inclusion_End_ShadowHeart",
        "ORI_Shadowheart_Knows_SeenTempleVista",
        "FOR_BugBearLove_Event_CoupleHostile",
        "HAG_AnimalIllusion_Narrator",
        "DEN_Thieflings_State_DoneChase",
        "UND_ElevatorGuard002_HasMet",
        "ThankedFreed_BeldronThulla",
        "ORI_INCLUSION_MINSC",
        "DEN_Thieflings_Knows_PlayerRobbed",
        "DEN_ShadowDruid_HasMet_Opposed",
        "GLO_TadpoledCount1",
        "DEN_DruidAttack_HasMet_ExcitedBoar",
        "3b2ae6b6-ca7e-d905-0430-128078b3119f_B",
        "720e85fb-cc00-b81a-efff-343a04ca221e_A",
        "DEN_DevilishOx_MeetAtDruidsGrove_HasMet_SwA",
        "UND_ClericPetGrave_HasMet",
        "UND_MyconidCircle_DirectToSovereign_HasMet",
        "UND_GnomeWorkerLumpy_HasmetRescued",
        "DEN_GroveConflict_Quest_Learnt3LeadersTwoNames",
        "d97f72ff-8fb1-8a4c-f169-89751bd6e125_b",
        "ORI_INCLUSION_RANDOM",
        "HAG_Well_Event_DrinkWell",
        "a7407f82-add0-9f6d-e4e6-78b9c39195a6_C",
        "ORI_INCLUSION_WYLL",
        "4118b185-9468-2295-93f3-9d6eafd8fb8a_Second_Disabled",
        "FOR_GoblinAmbush_State_DrowAutoPass",
        "DEN_TieflingLeader_Quest_GobHuntResponded",
        "GLO_Halsin_Event_TalkedWithDruidLeader",
        "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionRefused",
        "ORI_Inclusion_Gale",
        "DEN_RitualDruid_HasMet_Left5",
        "PLA_Desire_Quest_TriedForceDoor",
        "DEN_Thieflings_Pickpocket1_PCIsNotAChump",
        "DEN_AttackOnDen_HasMet_Refugee002",
        "fb0e13b6-cc68-d496-51c2-4594f4f5bf40_TauntHer",
        "182bb613-b70c-5e7c-b3ea-ea14e02d1fab_C",
        "GOB_PainPriest_Event_PickScourge",
        "DEN_GroveConflict_Knows_HeardAboutRitual",
        "d0423454-cc51-ae8e-5096-cffd1aac9f75_A",
        "FOR_BugBearLove_Knows_Lovemaking",
        "ORI_INCLUSION_LAEZEL",
        "DEN_DruidAttack_HasMet_SonOfChefAfterAttack",
        "HAG_HagLair_TalkingDoor_HasMet",
        "ORI_Inclusion_ShadowHeart",
        "1ea9e483-36a9-82b1-852f-b901ec25552a_a",
        "DEN_Prodigy_HasMet",
        "PLA_ZhentShipment_State_TalkedAfterKilledGnolls",
        "551618bc-83c9-52cc-0ca7-37c224446cf7_Local1",
        "GOB_Bravado_State_Goblin3Hasmet",
        "SCE_GnomeFollowUp_HasMet_WulbrenAlive",
        "HAV_LiftingTheCurse_Knows_SeekingBreath",
        "SCE_TieflingFollowUp_Ide_HasMet",
        "FOR_BottomlessWell_InteractWithWell_Knows_LookedDown",
        "ORI_INCLUSION_GALE",
        "DEN_GuardedEntrance_HasMet_Parents",
        "GOB_GoblinToast_Event_IncludeSecondGoblin",
        "ca797aab-5a73-7ec5-edb7-022122573b39_B",
        "DEN_AttackOnDen_Event_HeftyTieflingQuip",
        "COL_Vault_Event_Start",
        "GOB_WolfPens_Event_HalsinLeftParty",
        "FactionHostileToPlayerGroupAfterDialog",
        "ORI_Laezel_Quest_FoundZorru",
        "GOB_GoblinPriest_Event_FreedFromChains",
        "PLA_StuckHalfElf_Knows_MentionedDowry",
        "21e0890e-7019-66a3-1956-125405f96d7c_A",
        "DEN_DruidAttack_HasMet_DruidOpposedAfterAttack",
        "FOR_PriestOfTheConqueringGod_Cultists_Knows_Mission",
        "DEN_Apprentice_Event_RemoveBirdExhaustion",
        "DEN_CampGeneral_PCGotLore",
        "SpokeToBrothers",
        "5f09c70a-153e-77e8-731c-5c532e635809_B",
        "DEN_DruidAttack_HasMet_GatekeeperAfterAttack",
        "LearnedGroveSituation",
        "DEN_RaidingParty_Event_UnsheatheForFight",
        "ReachedWife",
        "SCE_BackupLeader_HasMet",
        "GOB_Festivities_BugbearSleeper_00_HasMet",
        "GLO_TadpoleIntro_NPC",
        "DEN_Thieflings_Knows_KidsThieves",
        "DEN_ShadowDruidLeaderPostGoblins_State_HasMet",
        "DEN_GroveConflict_Knows_LeaderNameKing",
        "SCE_TieflingFollowUp_Knows_MeanAboutMol",
        "TemporaryHostilityAfterDialog",
        "0884581d-9f92-0a34-9440-6a54c0813bbe_ProceedToSecondStage",
        "DEN_Prodigy_HasMet_Brother",
        "GLO_Absolute_Knows_TrueSoul",
        "UND_GnomeForeman_UnfortunateGnome_InclusionStart",
        "DEN_WeepingTree_HasMet_Bear",
        "PLA_ZhentDungeon_Dog_03_HasMet",
        "GOB_DrowCommander_Knows_DrowLeader",
        "ORI_Shadowheart_State_IdolHint",
        "ea88dfe9-ff39-9b98-ae03-48d7fdf2708e_A",
        "DEN_AttackOnDen_HasMet_Refugee004Victory",
        "ORI_Inclusion_End_Astarion",
        "OrderedKillDruids",
        "DEN_DevilishOx_MeetAtDruidsGrove_State_Peaceful",
        "DEN_AttackOnDen_HasMet_RitualDruid002",
        "PLA_StuckHalfElf_StartInclusion",
        "DEN_Thieflings_Pickpocket2_HasMet",
        "GOB_Checkpoint_Event_WarnedAtCliff",
        "PLA_ZhentShipment_State_Talked",
        "RefusedHelpBrothers1",
        "GOB_PainPriest_Event_ReactToMocking",
        "DEN_DruidLair_Knows_RuneAppearance",
        "GLO_Hag_KnowsAboutSurrogate",
        "81f2a55d-d317-761f-f6a0-fe97ad6d5288_C",
        "UND_DuergarCamp_Knows_NereIsTrapped",
        "DEN_SenderBird_Event_TakeOff",
        "FOR_GnomeGoblinsPacified",
        "DEN_DruidAttack_HasMet_ChefAfterAttack",
        "ParentLied",
        "7256657b-1386-989f-0262-c6530e03a9fb_AskedWhy",
        "DEN_General_Inclusion_End_Pickpocket",
        "DEN_WeepingTree_Bear_Upset",
        "UND_TheDrowNere_Mutiny_InclusionStart_GnomeSilly",
        "bde7a4f1-933f-f6ce-4a3e-4b1f29f83704_B",
        "UND_TheDrowNere_Event_HadMindMeld",
        "57c003e7-0932-6f0c-e655-99025a4abe3a_A",
        "DEN_YoungLovers_State_MetPlayer",
        "5310a408-76a3-3498-cc26-ae866871188b_Third_Disabled",
        "7ffcf0de-e30b-ef58-fcc5-8d3a1482fa59_b",
        "GLO_Absolute_Knows_GoblinsWorship",
        "DEN_Weaponsmith_Knows_Elturel",
        "DEN_ShadowDruid_Event_ReactionDone",
        "CHA_Crypt_Event_JergalAppears",
        "PLA_ZhentDungeon_Zhent05_HasMet",
        "DEN_TieflingLeader_HasMet_ReactToDruidAttack",
        "ORI_Laezel_State_StartedTieflingsSceneAtCage",
        "DEN_BirdSender_HasMet",
        "UND_MyconidCircle_DeepRothe_BaelenAteShroom_Hasmet",
        "GOB_BattleStations_Event_ToStation",
        "DEN_AttackOnDen_HasMet_Trainer",
        "GOB_GoblinHeretic_FreeToGo",
        "GOB_GoblinThroneCheckpoint_State_NonCharlatanAccess",
        "1c74b01f-5dcf-8107-b384-204d341ed9d5_OnlyOnce",
        "DEN_Thieflings_State_MessedWithMolsKids",
        "PLA_Refugee_001_HasMet",
        "UND_MyconidCircle_State_GainedAccess",
        "DEN_DruidAttack_HasMet_ParentAAfterAttack",
        "GOB_Checkpoint_State_GoblinsToldLeaders",
        "UND_DuergarCamp_Mutineers_HasMet",
        "LearnedDukeMissingCounsellor",
        "SCE_JergalDebrief_Event_WhyHere",
        "94cd662c-844b-4dcc-ffdc-0b9a8da32bcc_BarcusSpokeUp",
        "DEN_AttackOnDen_HasMet_LairDoor",
        "RikkaAskedQuest",
        "DEN_General_Event_TriedNudgingBear",
        "DEN_HasMet_SoloParentB",
        "DEN_RitualDruid_HasMet_Left2",
        "GOB_Torturers_HasMet_Goblet",
        "FOR_BugbearLove_State_InterruptedCouple",
        "DEN_AttackOnDen_Servant005_Answered",
        "UND_BroodingSovereign_State_RefusedCircle",
        "DEN_Thieflings_HasMet_Trainee1",
        "UND_DeadInTheWater_CorpseDisposerLeader_HasMet",
        "DEN_Tiefling011_State_Met",
        "DEN_Thieflings_PersuadedPickpocket",
        "GOB_GoblinToast_Event_NoMoreRefills",
        "ORI_Inclusion_Random",
        "PLA_KarlachRecruitment_State_PersuasionSucceeded",
        "DEN_Thieflings_State_WitnessedArgument",
        "COL_TadpolingCentre_HasMet_Yeva",
        "3b911555-52e5-7791-d2ac-44fe62465fa1_Loop3",
        "GOB_RaiderCunning_HasMet",
        "GOB_Eye_HasMet",
        "DEN_AttackOnDen_HasMet_Refugee003",
        "DEN_Weaponsmith_HasMet",
        "34910f06-fac0-085f-b41a-337d0dfad85a_A",
        "ORI_Inclusion_Laezel",
        "GOB_GoblinToast_SecondGoblinToasted",
        "9e2ef14b-1a2f-4edc-3f78-7e3a27967e5c_C",
        "DEN_AttackOnDen_HasMet_ScoutCaptive",
        "PLA_KarlachRecruitmentTollhouse_State_HostilitiesBegan",
        "UND_PetrifiedDrow_Knows_MemoryCrystal",
        "UND_FairyRings_Dead_AskedDrowIdentity",
        "ZevlorRewarded",
        "GOB_PainPriest_Penanced",
        "b618166c-99f4-1c7a-02b7-32f0f0fbe420_LocalA",
        "SCE_TieflingFollowUp_Event_GiveShiningDawn",
        "DEN_AttackOnDen_HasMet_Servant004Victory",
        "DEN_AttackOnDen_HasMet_Mule1",
        "DEN_TieflingScam_HasMet",
        "DEN_AttackOnDen_HasMet_Kid003",
        "UND_FearfulRothe_Event_ConvincedRotheToAttackDuergar",
        "PLA_FlamingFist7_InnBurntDown_HasMet",
        "DEN_AttackOnDen_HasMet_Tiefling003Victory",
        "0d9d0064-babd-6e83-6ea6-5b78afb0413c_B",
        "DEN_GoblinScouts_HasMet_Captive",
        "GLO_Absolute_Knows_Symbol",
        "PLA_ConflictedFlind_Event_MindControl_KillHerself",
        "GLO_SpeakWithDead_Event_QuestionAsked",
        "HAG_Hah_MaskedVictim2_HasMet",
        "DEN_DruidAttack_HasMet_ZenBear",
        "GOB_PainPriest_Event_BadReaction",
        "UND_BrokenLantern_State_TriedArcane",
        "461152ff-16c3-2617-f8af-7ddb5681820b_b",
        "ed70fdfc-3d7b-7753-1171-957f7316fe55_B",
        "SidedTieflings",
        "DEN_GroveConflict_Knows_KaghaRequestedPlayers",
        "PLA_StuckHalfElf_State_PlayerAngered",
        "UND_BroodingSovereign_State_AskedCircle",
        "DEN_AttackOnDen_HasMet_Trainee001Victory",
        "UND_MyconidCircle_State_FirstGreetingDone",
        "6bde1237-aa43-36d3-9e53-ec1092198541_C",
        "UND_DarkLake_State_HostileResolution",
        "c3d825d1-49b8-9ae2-4554-4fc1f55d2eee_LocalA",
        "COL_TadpolingCentre_Event_PurgePods",
        "DEN_ZhentAgent_02_Inclusion_Start",
        "DEN_AttackOnDen_HasMet_ProdigySister",
        "ORI_Shadowheart_Event_DarkJusticiarHint",
        "873bc4e0-3d3c-1eac-903b-e94920fd6306_sawgithyanki",
        "DEN_CampGeneral_RufusHasMet",
        "DEN_Apprentice_HasMet",
        "DEN_General_Mule2_HasMet",
        "DEN_AttackOnDen_HasMet_ApprenticeVictory",
        "98423a2d-7b47-e379-6526-c435773e3cff_B",
        "14e6adcb-c6a8-99e4-1c39-4d3b925590e2_B",
        "DEN_Thieflings_Event_PlayerNotInvolved",
        "HAG_HagLair_Knows_DoorWasAlive",
        "ThankedFreed_Beldron",
        "DEN_AttackOnDen_HasMet_Griefling",
        "4d9f1cb5-200f-c998-657a-8d04f5c93c74_B",
        "DEN_AttackOnDen_HasMet_RitualDruid005",
        "COL_Morgue_HasMet_Us",
        "4b4d2992-abb5-bd1b-9593-feb68eddf682_B",
        "ORI_Karlach_Knows_DammonWorkedInHell",
        "ORI_Inclusion_End_Random",
        "DEN_Squirrel_HasMet",
        "ORI_INCLUSION_HALSIN",
        "DEN_ShadowDruid_State_HadSelfReflection",
        "DEN_Thieflings_Pickpocket1_HasMet",
        "PLA_FlamingFist7_Knows_AskedWhatHappened",
        "DEN_DruidAttack_HasMet_BardAfterAttack",
        "GOB_PainPriest_State_NeedMoreHP",
        "FOR_BugBearLove_Event_OpenDoor",
        "e680129a-9d39-6ffc-3e6d-926daf0d76ff_A",
        "DEN_Thieflings_State_PCSawKidThievesGettingCaught",
        "260f61d5-60df-da35-608b-a9856291b143_PlayerKnowsOrinKilledZevlor",
        "916a75f0-23d8-f05b-449d-d926d69fe782_FailedCheck",
        "SCE_GnomeFollowUp_Wulbren_HasMet",
        "DEN_druidservant_005_HasMet",
        "CHA_Jergal_HasMet",
        "ORI_Inclusion_End_Gale",
        "PLA_ConflictedFlind_Hyena_001_HasMet",
        "StartedAlt",
        "DEN_RaidingParty_Adventurer2_HasMet",
        "GLO_Thieflings_State_PickpocketKidGotHit",
        "GOB_WolfPens_Event_HalsinLeavesGoblinCamp",
        "e6738c9d-060d-c901-b945-4d49ca303d5b_SuccessfullyReadTracks",
        "DEN_GruntingKid_HasMet",
        "SCE_TieflingFollowUp_Umi_HasMet",
        "16193247-ccea-1974-45ec-e8229a7de4ef_B",
        "DEN_TieflingLeader_Quest_GobHuntDeclined",
        "DEN_RaidingParty_Event_GoblinsAppear",
        "DEN_GuardedEntrance_HasMet_Guard1",
        "GOB_PainPriest_Event_FirstHitDone",
        "ORI_Inclusion_End_Laezel",
        "DEN_General_Event_ElevatorBearMoves",
        "DEN_CapturedGoblin_OfferedRevenge",
        "DEN_General_Inclusion_Pickpocket",
        "DEN_RitualDruid_HasMet_Left4",
        "GOB_DrowCommander_HasMet",
        "GLO_Jergal_State_OutOfTomb",
        "DEN_TieflingLeader_State_KaghaResolved",
        "f3afb428-73fc-2e5c-057b-2e0e5a1b2f1c_B",
        "DEN_AttackOnDen_HasMet_Stargazer",
        "DEN_Thieflings_Event_ShookThief",
        "DEN_AttackOnDen_HasMet_Refugee001",
        "b70d5139-9980-efc6-3ba3-fe2eb56ab2e0_B",
        "DEN_DruidAttack_HasMet_PetWolf",
        "26071d89-33af-8eac-3c05-ee8dca91338d_who",
        "DEN_Apprentice_UserShortcut",
        "ReflectedKagha",
        "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionAsked",
        "FOR_GoblinAmbush_GoblinsPacified",
        "932401b1-7763-7fd7-bee1-8731fe62084f_DeadThree",
        "DEN_DruidAttack_HasMet_GrieflingAfterAttack",
        "DEN_GuardedEntrance_State_ClearToPass",
        "GOB_Checkpoint_State_GuidedByCapturedGoblin",
        "DEN_RaidingParty_Event_GoblinRaidFight",
        "ORI_Inclusion_Wyll",
        "RefusedCircle",
        "DEN_TieflingScam_Knows_Scam",
        "DEN_BirdSender_Knows_AskedAboutBird",
        "DEN_DevilishOx_MeetAtDruidsGrove_Incapable",
        "DEN_Thieflings_CaveGuard_002_HasMet",
        "GOB_PainPriest_Knows_PenanceIsPain",
        "6bba3537-3756-eb27-a08a-a8596d765f2e_C",
        "CHA_LaezelRecruitment_Event_LaezelHostile",
        "DEN_GoblinScouts_SavedDruid",
        "ArrivedAtGrove",
        "DEN_GruntingKid_Event_AskedCanTalk",
        "DEN_Apprentice_Event_GiveReward",
        "acc081f3-204a-2f29-a3bb-6d33ff784c39_C",
        "DEN_AttackOnDen_GrieflingFriend_Knows_Kelemvor",
        "GOB_PainPriest_Event_Mercy",
        "c68c5474-226f-4b47-b327-a22274e360a0_B",
        "55452e03-17c6-9a9d-072b-80043381c98b_A",
        "UND_LoneDuergar_Event_WaitingForMainDialog",
        "OrderedBreachInn",
        "COL_Morgue_User_HasMet_Us",
        "DEN_RitualDruid_HasMet_Pacified3",
        "DEN_ShadowDruidRats_Event_RememberedLetter",
        "DEN_DruidAttack_State_PrepAfterDeathOfDruids",
        "PLA_Desire_Event_HasMet",
        "4103e544-e1db-525f-81ec-b5dfa71907d7_WantNereOut",
        "PLA_StuckHalfElf_Event_ToldQuestion",
        "UND_BroodingSovereign_Event_Enlarged",
        "f108995b-14f4-7823-d218-790177a93da8_B",
        "6a98f294-9f4f-d0b0-1cba-706f1cb15009_Local1",
        "GOB_WolfPens_Worg_001_HasMet",
        "DEN_DruidAttack_HasMet_WeaponsmithAfterAttack",
        "GLO_Volo_HasMet",
        "OpenedSarcophagus",
        "Counsellor_RefusedHelp",
        "02455563-e119-58e5-1fe7-eb46fe381d30_A",
        "GOB_GuardUpset_HasMet",
        "GOB_RatRacket_LocalRat_001_HasMet",
        "c5f62c4b-fb04-1505-c35b-63119d96b127_First_Disabled",
        "698f5a3b-6d88-3d9e-ee4f-26d9c1fc5b6b_B",
        "UND_TheDrowNere_State_KilledGnomeSerene",
        "COL_General_Knows_ColonyIsIllithid",
        "GLO_VoloBallad_MetGuardPrison",
        "PLA_ZhentDungeon_Zhent01_HasMet",
        "ORI_Karlach_HasMet_DammonUnavailable",
        "GOB_CheckpointBackup003_HasMet",
        "DEN_TieflingScam_Event_FoundOutLies",
        "UND_ArguingGnomes_Quest_Accepted",
        "DEN_Thieflings_HasMet_Chef"
      ]
    },
    "Haven": {
      "chapter_id": "Act2_Haven",
      "scenario_sequence": [
        "hav_backupleader",
        "hav_lastlightox000",
        "hav_cat",
        "hav_flamingfistcorpse",
        "hav_halsinquest",
        "hav_havenoutcasts",
        "hav_alfiratale",
        "hav_lakesidecombat",
        "hav_siege",
        "hav_vb",
        "hav_cursedfist",
        "hav_daisyad",
        "hav_lastlightox002",
        "hav_takingisobel",
        "hav_marcus",
        "hav_checkpoint",
        "hav_molsdeal",
        "hav_lastlightox001",
        "hav_jaheira",
        "hav_savingprisoners",
        "hav_exitblessingreminder",
        "hav_lonelover",
        "hav_wrootrequest",
        "hav_misc",
        "hav_ngb",
        "hav_devilishox",
        "hav_general",
        "hav_prodigylament",
        "hav_haven",
        "hav_ravengard",
        "hav_ad",
        "hav_pad",
        "hav_enteringhaven",
        "hav_tieflingdismisseshalsin",
        "hav_tieflingsurvivors",
        "hav_harperscouts",
        "hav_isobel",
        "hav_florrick",
        "hav_harperguard",
        "hav_nightsong"
      ],
      "scenario_results": {
        "hav_backupleader": {
          "scenario_name": "hav_backupleader",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "hav_lastlightox000": {
          "scenario_name": "hav_lastlightox000",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "hav_cat": {
          "scenario_name": "hav_cat",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "89",
              "60",
              "63",
              "76",
              "47",
              "10",
              "44",
              "25",
              "61",
              "70",
              "7"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "89",
                "speaker": "His Majesty",
                "text": "*Hiss!*",
                "node_type": "normal",
                "checkflags": [
                  "PETPAL = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "8",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Cat hisses at the player"
              },
              {
                "id": "60",
                "speaker": "Player",
                "text": "Here, kitty kitty.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "61",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "63",
                "speaker": "",
                "text": "True",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "61",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "76",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "61",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Player crouches down on haunches and holds out hand in a 'here kitty kitty' way"
              },
              {
                "id": "47",
                "speaker": "",
                "text": "",
                "node_type": "visualstate",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "61",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "10",
                "speaker": "His Majesty",
                "text": "*Rrreow...*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "61",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: The cat doesn't approach, but meows in a non-threatening (though still wary) way"
              },
              {
                "id": "44",
                "speaker": "Player",
                "text": "BOO!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "61",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "25",
                "speaker": "His Majesty",
                "text": "*RIIIIIIIIAAOW!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "HAV_Cat_HasMet"
                ],
                "goto": "",
                "link": "61",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: The cat lunges out and swipes at the player's foot. Player steps back, but isn't hurt."
              },
              {
                "id": "61",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_Laezel"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "70",
                "speaker": "Lae'zel",
                "text": "Chk. Why would anyone keep such neurotic creatures as pets?",
                "node_type": "normal",
                "checkflags": [
                  "REALLY_GITHYANKI = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "7",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_End_Laezel"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "": "Cat is hanging around Barcus' workshop. Cat is not very friendly and player won't really be able to change the cat into being friendly, only temporarily not-aggro. If the player intimidates the cat, they can convince the cat to leave into the shadowcurse. Might do followup in future but none planned now. If placated, cat will tell player not to trust Isobel."
          }
        },
        "hav_flamingfistcorpse": {
          "scenario_name": "hav_flamingfistcorpse",
          "session_sequence": [
            "PAD_TooHeavy"
          ],
          "paths": {
            "PAD_TooHeavy": [
              "PAD_TooHeavy_0"
            ]
          },
          "node_data": {
            "PAD_TooHeavy": [
              {
                "id": "PAD_TooHeavy_0",
                "speaker": "Player",
                "text": "It won't budge.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_FlamingSpy_Knows_HiddenCorpse = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: tried to shove some rocks in game and they were too heavy"
              }
            ]
          },
          "session_synopses": {
            "PAD_TooHeavy": "The players are trying to disassemble a pile of rocks.Potentially, Marcus has told them about it."
          }
        },
        "hav_halsinquest": {
          "scenario_name": "hav_halsinquest",
          "session_sequence": [
            "PAD_HalsinDeath"
          ],
          "paths": {
            "PAD_HalsinDeath": [
              "PAD_HalsinDeath_0"
            ]
          },
          "node_data": {
            "PAD_HalsinDeath": [
              {
                "id": "PAD_HalsinDeath_0",
                "speaker": "Player",
                "text": "Halsin... he's dead. No chance of lifting the curse now.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_HalsinDeath": "Player reacts to Halsin being killed by shadows while he'd been trying to open a portal to the Shadowfell."
          }
        },
        "hav_havenoutcasts": {
          "scenario_name": "hav_havenoutcasts",
          "session_sequence": [
            "AD_Combat_HarperQuartermaster",
            "AD_Combat_RoofWatcher_Caster",
            "AD_Combat_BarricadeYeller_Ranger"
          ],
          "paths": {
            "AD_Combat_HarperQuartermaster": [
              "AD_Combat_HarperQuartermaster_0"
            ],
            "AD_Combat_RoofWatcher_Caster": [
              "AD_Combat_RoofWatcher_Caster_0"
            ],
            "AD_Combat_BarricadeYeller_Ranger": [
              "AD_Combat_BarricadeYeller_Ranger_0"
            ]
          },
          "node_data": {
            "AD_Combat_HarperQuartermaster": [
              {
                "id": "AD_Combat_HarperQuartermaster_0",
                "speaker": "Quartermaster Talli",
                "text": "Get back in the trash pile where you belong!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Combat_RoofWatcher_Caster": [
              {
                "id": "AD_Combat_RoofWatcher_Caster_0",
                "speaker": "Harper Terradissia",
                "text": "Stay back!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Combat_BarricadeYeller_Ranger": [
              {
                "id": "AD_Combat_BarricadeYeller_Ranger_0",
                "speaker": "Harper Donner",
                "text": "Prepare yourself!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_Combat_HarperQuartermaster": "Combat AD",
            "AD_Combat_RoofWatcher_Caster": "Combat AD",
            "AD_Combat_BarricadeYeller_Ranger": "Combat AD"
          }
        },
        "hav_alfiratale": {
          "scenario_name": "hav_alfiratale",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "hav_lakesidecombat": {
          "scenario_name": "hav_lakesidecombat",
          "session_sequence": [
            "ARENA_Wave1"
          ],
          "paths": {
            "ARENA_Wave1": [
              "ARENA_Wave1_0"
            ]
          },
          "node_data": {
            "ARENA_Wave1": [
              {
                "id": "ARENA_Wave1_0",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "ARENA_Wave1": "Arena Cam for Halsins Lakeside Combat for Wave 1 of enemies spawning"
          }
        },
        "hav_siege": {
          "scenario_name": "hav_siege",
          "session_sequence": [
            "PAD_TentacleAppeared",
            "Outro"
          ],
          "paths": {
            "PAD_TentacleAppeared": [
              "PAD_TentacleAppeared_0"
            ],
            "Outro": [
              "Outro_15",
              "Outro_39",
              "Outro_45",
              "Outro_33",
              "Outro_26",
              "Outro_11",
              "Outro_1"
            ]
          },
          "node_data": {
            "PAD_TentacleAppeared": [
              {
                "id": "PAD_TentacleAppeared_0",
                "speaker": "Player",
                "text": "What in the hells is that?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: a giant tentacle has sprung up out of a fountain in the middle of a fight. Shock and perhaps a little furstration as player now has to fight it."
              }
            ],
            "Outro": [
              {
                "id": "Outro_15",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [
                  "HAV_Siege_Intro_JaheiraAggroToPlayer"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "InternalNodeContext: Player and Jaheira gather in Haven yard after combat. This node is where Jaheira knows player caused the Shadow Siege by killing/kidnapping Isobel and caused everyone to die in Haven."
              },
              {
                "id": "Outro_39",
                "speaker": "Jaheira",
                "text": "It is abominable that you still live - you who has cost us so much. The murderer of light.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: (Cine) Jaheira eyes us with hatred. She’s breathing heavily, exhausted by combat against the shadow creatures. She looks down - but she’s not out.\rNodeContext: Shes exhausted from combat, but her hatred of us keeps her standing."
              },
              {
                "id": "Outro_45",
                "speaker": "Jaheira",
                "text": "These dead need not be buried. Beneath this canopy of darkness, all is one yard of restless graves.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Outro_33",
                "speaker": "Jaheira",
                "text": "You will lie and rot among them.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Fiery, spat at the player"
              },
              {
                "id": "Outro_26",
                "speaker": "Player",
                "text": "You're weak; exhausted. Walk away while you still can.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Outro_11",
                "speaker": "",
                "text": "False",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Outro_1",
                "speaker": "Jaheira",
                "text": "No. To let you live would be beyond cowardice. You sowed these many dead - now I will do the reaping.",
                "node_type": "normal",
                "checkflags": [
                  "76360adc-4d04-946a-e7a3-5509f17b5913_RevealedDarkUrge = False"
                ],
                "setflags": [
                  "FactionHostileToPlayerGroupAfterDialog"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_TentacleAppeared": "SCL Haven: Isobel is kidnapped/killed and shadows engulf the inn, combat starts against the shadows. At some point a huge tentacle emerges from the fountain in the middle of the yard, destroying the fountain. Player character has a PAD comment on the event.",
            "Outro": "After the battle against the shadows is over, we speak with Jaheira again. Either she hates us because she knows we killed Isobel, or she's contemplative in the aftermath of the battle, and we can have her join our camp."
          }
        },
        "hav_vb": {
          "scenario_name": "hav_vb",
          "session_sequence": [
            "ShadowSiege_PlayerEntersCombat"
          ],
          "paths": {
            "ShadowSiege_PlayerEntersCombat": [
              "ShadowSiege_PlayerEntersCombat_0",
              "ShadowSiege_PlayerEntersCombat_1"
            ]
          },
          "node_data": {
            "ShadowSiege_PlayerEntersCombat": [
              {
                "id": "ShadowSiege_PlayerEntersCombat_0",
                "speaker": "Player",
                "text": "It's those damn shadows. Be ready!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: start of combat - high tension situation. [Astarion - realises the shadows are attacking]"
              },
              {
                "id": "ShadowSiege_PlayerEntersCombat_1",
                "speaker": "Player",
                "text": "No hesitation - these people are long dead.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: start of combat - high tension situation."
              }
            ]
          },
          "session_synopses": {
            "ShadowSiege_PlayerEntersCombat": "SCL Haven: Isobel is kidnapped/killed and shadows engulf the inn, combat starts against the shadows. Players find themselves in the middle of it protecting the inn or just because they haven't escaped."
          }
        },
        "hav_cursedfist": {
          "scenario_name": "hav_cursedfist",
          "session_sequence": [
            "PAD_SpottedWrit",
            "AD_CursedFistSinging"
          ],
          "paths": {
            "PAD_SpottedWrit": [
              "PAD_SpottedWrit_0"
            ],
            "AD_CursedFistSinging": [
              "AD_CursedFistSinging_5",
              "AD_CursedFistSinging_3",
              "AD_CursedFistSinging_6"
            ]
          },
          "node_data": {
            "PAD_SpottedWrit": [
              {
                "id": "PAD_SpottedWrit_0",
                "speaker": "Player",
                "text": "What's that sticking out of his pocket?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_CursedFistSinging": [
              {
                "id": "AD_CursedFistSinging_5",
                "speaker": "Art Cullagh",
                "text": "Mm, mm, Thaniel and me are<br>Climb, climb, climbing up a tree and",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "d6df8edb-ac4b-e1d2-794b-6bfd00757cbf_A"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: gently singing this song while sleeping"
              },
              {
                "id": "AD_CursedFistSinging_3",
                "speaker": "Art Cullagh",
                "text": "We, we see what we see and<br>Do just what we please, together,<br>Waiting for the sun, forever.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: gently singing this song while sleeping"
              },
              {
                "id": "AD_CursedFistSinging_6",
                "speaker": "Art Cullagh",
                "text": "We see shadows, they get darker,<br>But our hiding place is brighter.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: gently singing this song while sleeping"
              }
            ]
          },
          "session_synopses": {
            "PAD_SpottedWrit": "Observation on spotting the writ in Art Cullagh's pants. This is needed to direct the player to the House of Healing, which is where they will find his lute.",
            "AD_CursedFistSinging": "Art Cullagh is unconscious after being pulled out of the shadowfell. He is in a deep slumber and quietly sings this to himself. Eerie and breathy."
          }
        },
        "hav_daisyad": {
          "scenario_name": "hav_daisyad",
          "session_sequence": [
            "DiscoveredHaven"
          ],
          "paths": {
            "DiscoveredHaven": [
              "DiscoveredHaven_0"
            ]
          },
          "node_data": {
            "DiscoveredHaven": [
              {
                "id": "DiscoveredHaven_0",
                "speaker": "",
                "text": "This place is protected. You might find allies here, or at least supplies.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "DiscoveredHaven": "DaisyAD plays upon discovering Haven."
          }
        },
        "hav_lastlightox002": {
          "scenario_name": "hav_lastlightox002",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "hav_takingisobel": {
          "scenario_name": "hav_takingisobel",
          "session_sequence": [
            "JaheiraCallToArm",
            "PAD_SpyTransformationClue",
            "AD_BeforeFlamingSpy",
            "AD_ReactingToRoofNoise",
            "Jaheira_AD_ToIsobel",
            "FlamingSpy_Dead",
            "BriefInRoom",
            "AD_FollowUp",
            "AD_SpyRemindsKO",
            "AD_CombatBetrayalReveal"
          ],
          "paths": {
            "JaheiraCallToArm": [
              "JaheiraCallToArm_0"
            ],
            "PAD_SpyTransformationClue": [
              "PAD_SpyTransformationClue_0"
            ],
            "AD_BeforeFlamingSpy": [
              "AD_BeforeFlamingSpy_0"
            ],
            "AD_ReactingToRoofNoise": [
              "AD_ReactingToRoofNoise_0"
            ],
            "Jaheira_AD_ToIsobel": [
              "Jaheira_AD_ToIsobel_0"
            ],
            "FlamingSpy_Dead": [
              "FlamingSpy_Dead_27",
              "FlamingSpy_Dead_28",
              "FlamingSpy_Dead_23",
              "FlamingSpy_Dead_10"
            ],
            "BriefInRoom": [
              "BriefInRoom_160",
              "BriefInRoom_157",
              "BriefInRoom_110"
            ],
            "AD_FollowUp": [
              "AD_FollowUp_0"
            ],
            "AD_SpyRemindsKO": [
              "AD_SpyRemindsKO_0"
            ],
            "AD_CombatBetrayalReveal": [
              "AD_CombatBetrayalReveal_0"
            ]
          },
          "node_data": {
            "JaheiraCallToArm": [
              {
                "id": "JaheiraCallToArm_0",
                "speaker": "Jaheira",
                "text": "To arms! Protect Isobel at all cost!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "CinematicNodeContext: Focus should be on the shoulders up to obscure whether or not Jaheira has a weapon in hand (cannot be guaranteed).\rNodeContext: Shouted during the onset of battle"
              }
            ],
            "PAD_SpyTransformationClue": [
              {
                "id": "PAD_SpyTransformationClue_0",
                "speaker": "Player",
                "text": "Someone - something - shed Flaming Fist armour like a second skin.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_BeforeFlamingSpy": [
              {
                "id": "AD_BeforeFlamingSpy_0",
                "speaker": "Isobel",
                "text": "Moonmaiden, hear me...",
                "node_type": "normal",
                "checkflags": [
                  "HAV_TakingIsobel_State_IsobelInRoom = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: In a trance, melodic-sounding prayer. Edge case if the player clicks on her while she's in prayer."
              }
            ],
            "AD_ReactingToRoofNoise": [
              {
                "id": "AD_ReactingToRoofNoise_0",
                "speaker": "Isobel",
                "text": "Who's stomping around up there?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Jaheira_AD_ToIsobel": [
              {
                "id": "Jaheira_AD_ToIsobel_0",
                "speaker": "Jaheira",
                "text": "Isobel - she cannot fall!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "FlamingSpy_Dead": [
              {
                "id": "FlamingSpy_Dead_27",
                "speaker": "Narrator",
                "text": "*The corpse regards you lifelessly.*",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "FlamingSpy_Dead_28",
                "speaker": "Player",
                "text": "Who are you?",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [
                  "GLO_SpeakWithDead_Event_QuestionAsked"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "FlamingSpy_Dead_23",
                "speaker": "Fist Marcus",
                "text": "Marcus Falgor... raised in... Baldur's Gate...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "FlamingSpy_Dead_10",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ],
            "BriefInRoom": [
              {
                "id": "BriefInRoom_160",
                "speaker": "Isobel",
                "text": "",
                "node_type": "normal",
                "checkflags": [
                  "HAV_Isobel_State_Kneeling",
                  "HAV_TakingIsobel_Event_SpyIsDefeatedInRoom"
                ],
                "setflags": [
                  "GLO_HAV_TakingIsobel_HasMet_BriefInRoom"
                ],
                "goto": "",
                "link": "206",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Isobel kneeling at corpse"
              },
              {
                "id": "BriefInRoom_157",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "206",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Isobel gets up"
              },
              {
                "id": "BriefInRoom_110",
                "speaker": "Isobel",
                "text": "What the hells is this?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "206",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ],
            "AD_FollowUp": [
              {
                "id": "AD_FollowUp_0",
                "speaker": "Jaheira",
                "text": "You! What happened?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_SpyRemindsKO": [
              {
                "id": "AD_SpyRemindsKO_0",
                "speaker": "Fist Marcus",
                "text": "We need the cleric alive.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_CombatBetrayalReveal": [
              {
                "id": "AD_CombatBetrayalReveal_0",
                "speaker": "Isobel",
                "text": "There are traitors among us - Marcus and the True Soul!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Fury in her voice, called out during combat"
              }
            ]
          },
          "session_synopses": {
            "JaheiraCallToArm": "Isobel is being attacked. Jaheira calls people to defend Isobel, as their lives depend on her.This dialog can happen anywhere in Last Light, but mainly close to Isobel's room.",
            "PAD_SpyTransformationClue": "If we go up on the roof above Isobel’s room, we’ll find discarded FF armour and some bloodstains from a transformation of some kind. A successful med check shows someone burst out of their armour (Marcus)",
            "AD_BeforeFlamingSpy": "The player clicks on Isobel before her dialogue with the Flaming Fist spy has been resolved, i.e. it wasn't started, or it was started and interrupted.",
            "AD_ReactingToRoofNoise": "The player is walking on the roof above Isobel's room and VoiceBarking about the Flaming Spy's transformation leftovers. Isobel reacts if she is close enough to hear.",
            "Jaheira_AD_ToIsobel": "Jaheira is trying to get to Isobel after the area has been attacked by winged ghouls.",
            "FlamingSpy_Dead": "SwD for the Flaming Fist Spy Marcus. Which questions is relevant may vary depending on the moment he dies (before the capture happens, during the capture or in Moonrise).",
            "BriefInRoom": "Isobel is in her room re-casting the spell that is protecting the inn. After she spots you, she gives you information about Ketheric and a spell to protect you from the shadowcurse.After Isobel gives this information, she is interrupted by the Absolute-tadpoled Flaming Fist, who attempts to kidnap her.",
            "AD_FollowUp": "|After the ghoul attack (aka inn attack) Jaheira does this AD to catch the player's attention, while walking to them to talk to them. Player is in there not to speak but to allow tag and flag checks|",
            "AD_SpyRemindsKO": "Player sided with Marcus against Isobel. He will remind the player not to kill her during combat.",
            "AD_CombatBetrayalReveal": "Isobel announces player's betral during combat"
          }
        },
        "hav_marcus": {
          "scenario_name": "hav_marcus",
          "session_sequence": [
            "DismissesHalsin"
          ],
          "paths": {
            "DismissesHalsin": [
              "DismissesHalsin_0"
            ]
          },
          "node_data": {
            "DismissesHalsin": [
              {
                "id": "DismissesHalsin_0",
                "speaker": "Narrator",
                "text": "*The Flaming Fist looks past your shoulder; it seems he'd prefer not to speak to you.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "DismissesHalsin": "Narrator line for the situation where Halsin tries to talk to Marcus while marcus is waiting to talk to a True Soul"
          }
        },
        "hav_checkpoint": {
          "scenario_name": "hav_checkpoint",
          "session_sequence": [
            "AD_Combat_Jaheira_000",
            "AD_Combat_Jaheira_002"
          ],
          "paths": {
            "AD_Combat_Jaheira_000": [
              "AD_Combat_Jaheira_000_0"
            ],
            "AD_Combat_Jaheira_002": [
              "AD_Combat_Jaheira_002_0"
            ]
          },
          "node_data": {
            "AD_Combat_Jaheira_000": [
              {
                "id": "AD_Combat_Jaheira_000_0",
                "speaker": "Jaheira",
                "text": "You should have stayed in your tower.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Combat_Jaheira_002": [
              {
                "id": "AD_Combat_Jaheira_002_0",
                "speaker": "Jaheira",
                "text": "You'll make excellent fertiliser.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_Combat_Jaheira_000": "Combat AD",
            "AD_Combat_Jaheira_002": "Combat AD"
          }
        },
        "hav_molsdeal": {
          "scenario_name": "hav_molsdeal",
          "session_sequence": [
            "Lanceboard_ThreeWay",
            "RaphaelWaiting",
            "AD_NoticedStolenBoard"
          ],
          "paths": {
            "Lanceboard_ThreeWay": [
              "Lanceboard_ThreeWay_7",
              "Lanceboard_ThreeWay_49",
              "Lanceboard_ThreeWay_199",
              "Lanceboard_ThreeWay_82",
              "Lanceboard_ThreeWay_179",
              "Lanceboard_ThreeWay_95",
              "Lanceboard_ThreeWay_198",
              "Lanceboard_ThreeWay_193",
              "Lanceboard_ThreeWay_110",
              "Lanceboard_ThreeWay_201",
              "181",
              "NODE_NOT_FOUND"
            ],
            "RaphaelWaiting": [
              "RaphaelWaiting_0"
            ],
            "AD_NoticedStolenBoard": [
              "AD_NoticedStolenBoard_0"
            ]
          },
          "node_data": {
            "Lanceboard_ThreeWay": [
              {
                "id": "Lanceboard_ThreeWay_7",
                "speaker": "Raphael",
                "text": "Your move, Mol.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "181",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Raphael watches in cold amusement as Mol grips one of the pieces, clearly anxious.\rNodeContext: Says the cat to the mouse"
              },
              {
                "id": "Lanceboard_ThreeWay_49",
                "speaker": "Mol",
                "text": "You trapped me. I didn't even want to take this one.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "181",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Stubborn, recalcitrant."
              },
              {
                "id": "Lanceboard_ThreeWay_199",
                "speaker": "Raphael",
                "text": "Calimshan rules, dear. The first piece touched is the first piece moved.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "181",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Deeply patronizing."
              },
              {
                "id": "Lanceboard_ThreeWay_82",
                "speaker": "Mol",
                "text": "That's garbage. No matter where the knight goes, I'm gonna lose it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "181",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Openly frustrated."
              },
              {
                "id": "Lanceboard_ThreeWay_179",
                "speaker": "Raphael",
                "text": "Then make the sacrifice useful. Guard your Mystra, or come for my Cyric.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "181",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Lanceboard_ThreeWay_95",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_Karlach"
                ],
                "goto": "",
                "link": "181",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Lanceboard_ThreeWay_198",
                "speaker": "Karlach",
                "text": "What's going on here?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "181",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Suspicious, happening upon Raphael and Mol (tween crime lord) playing chess together."
              },
              {
                "id": "Lanceboard_ThreeWay_193",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_End_Karlach"
                ],
                "goto": "",
                "link": "181",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Lanceboard_ThreeWay_110",
                "speaker": "Mol",
                "text": "Oh, hey. I remember you. Booked it from the grove before the druids could kick us.",
                "node_type": "normal",
                "checkflags": [
                  "DEN_AttackOnDen_State_DenVictory = False",
                  "GOB_State_LeadersAreDead = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "181",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Not particularly happy to see the player."
              },
              {
                "id": "Lanceboard_ThreeWay_201",
                "speaker": "Mol",
                "text": "Smart. You smart enough for lanceboard? It's my first time playing.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "181",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Mildly sarcastic."
              },
              {
                "id": "181",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ],
            "RaphaelWaiting": [
              {
                "id": "RaphaelWaiting_0",
                "speaker": "Raphael",
                "text": "Sorry, I have an appointment with someone far more interesting than you. We'll speak soon.<br>",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: dismissive"
              }
            ],
            "AD_NoticedStolenBoard": [
              {
                "id": "AD_NoticedStolenBoard_0",
                "speaker": "Mol",
                "text": "Huh. Just put this away a second ago... didn't I?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "Lanceboard_ThreeWay": "The player comes across Mol and Raphael playing a game of lanceboard (Forgotten Realms chess). The devil is clearly beating Mol, but with the player's help, she can win.Cinematic Notes: Mol and Raphael are sitting down throughout this entire scene. Raphael teleports out of his seat at the end and is no longer on screen.",
            "RaphaelWaiting": "",
            "AD_NoticedStolenBoard": "Mol reacts to the player having stolen and put the lanceboard elsewhere."
          }
        },
        "hav_lastlightox001": {
          "scenario_name": "hav_lastlightox001",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "hav_jaheira": {
          "scenario_name": "hav_jaheira",
          "session_sequence": [
            "OutOfPosition",
            "AD_CombatTaunts",
            "AD_Attention"
          ],
          "paths": {
            "OutOfPosition": [
              "OutOfPosition_0"
            ],
            "AD_CombatTaunts": [
              "AD_CombatTaunts_0"
            ],
            "AD_Attention": [
              "AD_Attention_0"
            ]
          },
          "node_data": {
            "OutOfPosition": [
              {
                "id": "OutOfPosition_0",
                "speaker": "Jaheira",
                "text": "Bear with me for a moment, there are better places to talk.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_Jaheira_State_DiscussMarcus = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_CombatTaunts": [
              {
                "id": "AD_CombatTaunts_0",
                "speaker": "Jaheira",
                "text": "Serene she might seem, but nature has fangs!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "d3d3855d-6721-b089-5c1e-d6d255a46fdc_A"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Attention": [
              {
                "id": "AD_Attention_0",
                "speaker": "Jaheira",
                "text": "Don't wander far - we need to talk.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "OutOfPosition": "",
            "AD_CombatTaunts": "Jaheira combat taunts",
            "AD_Attention": "Jaheira draws the player's attention by calling to them."
          }
        },
        "hav_savingprisoners": {
          "scenario_name": "hav_savingprisoners",
          "session_sequence": [
            "AD_LoverInspection",
            "FlamingFist_006",
            "AD_BrotherInspection",
            "AD_ArguingWithFlorrick",
            "AD_WulbrenInspection",
            "FlirtyTiefling",
            "Manip",
            "AD_SisterInspection",
            "AD_FlamingFist_003_InCombat",
            "FlamingFist_001",
            "AD_FlamingFist_001_CouncillorDefeated",
            "FlamingFist_002",
            "AD_Inspection",
            "FlamingFist_004",
            "ArrivalInspector",
            "FlamingFist_005"
          ],
          "paths": {
            "AD_LoverInspection": [
              "AD_LoverInspection_0"
            ],
            "FlamingFist_006": [
              "FlamingFist_006_0"
            ],
            "AD_BrotherInspection": [
              "AD_BrotherInspection_0"
            ],
            "AD_ArguingWithFlorrick": [
              "AD_ArguingWithFlorrick_5",
              "AD_ArguingWithFlorrick_10",
              "AD_ArguingWithFlorrick_8",
              "AD_ArguingWithFlorrick_2"
            ],
            "AD_WulbrenInspection": [
              "AD_WulbrenInspection_0"
            ],
            "FlirtyTiefling": [
              "FlirtyTiefling_0"
            ],
            "Manip": [
              "Manip_3",
              "Manip_14",
              "Manip_7",
              "Manip_16"
            ],
            "AD_SisterInspection": [
              "AD_SisterInspection_0"
            ],
            "AD_FlamingFist_003_InCombat": [
              "AD_FlamingFist_003_InCombat_0"
            ],
            "FlamingFist_001": [
              "FlamingFist_001_0"
            ],
            "AD_FlamingFist_001_CouncillorDefeated": [
              "AD_FlamingFist_001_CouncillorDefeated_0"
            ],
            "FlamingFist_002": [
              "FlamingFist_002_0"
            ],
            "AD_Inspection": [
              "AD_Inspection_0"
            ],
            "FlamingFist_004": [
              "FlamingFist_004_0"
            ],
            "ArrivalInspector": [
              "ArrivalInspector_0"
            ],
            "FlamingFist_005": [
              "FlamingFist_005_0"
            ]
          },
          "node_data": {
            "AD_LoverInspection": [
              {
                "id": "AD_LoverInspection_0",
                "speaker": "Danis",
                "text": "We have to worry about parasites now? Gods.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: nervous"
              }
            ],
            "FlamingFist_006": [
              {
                "id": "FlamingFist_006_0",
                "speaker": "Fist Cyril",
                "text": "I'd offer to help, but with Duke Ravengard missing, we can't spare anyone. I'm sorry.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_SavingPrisoners_FlamingFist_006_Protected_HasMet",
                  "HAV_Mood_State_Protected"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "CinematicNodeContext: <GL> reshoot, last version had almost no movement\rInternalNodeContext: Protected state. Barrier is On, nothing bad happened yet. Met.\rNodeContext: sincere and emotive - you care deeply and are worried for the player's loved ones"
              }
            ],
            "AD_BrotherInspection": [
              {
                "id": "AD_BrotherInspection_0",
                "speaker": "Danis",
                "text": "I would tell you if I had one, I swear it!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: nervous"
              }
            ],
            "AD_ArguingWithFlorrick": [
              {
                "id": "AD_ArguingWithFlorrick_5",
                "speaker": "Manip Vidor",
                "text": "Any help from Jaheira?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "99aa7b78-defd-57bc-eabf-a8aa43a030d9_A"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_ArguingWithFlorrick_10",
                "speaker": "Counsellor Florrick",
                "text": "She wants the same thing we do. To save the city.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_ArguingWithFlorrick_8",
                "speaker": "Manip Vidor",
                "text": "But she doesn't care if the Grand Duke lives or dies.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_ArguingWithFlorrick_2",
                "speaker": "Manip Vidor",
                "text": "I wouldn't go that far. But her focus is on stopping the cult, and I suspect she'd sacrifice anyone to achieve that.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_WulbrenInspection": [
              {
                "id": "AD_WulbrenInspection_0",
                "speaker": "Wulbren Bongle",
                "text": "This is ridiculous - as if I'd let some parasite infect me.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Loathing in his voice at the thought"
              }
            ],
            "FlirtyTiefling": [
              {
                "id": "FlirtyTiefling_0",
                "speaker": "Lakrissa",
                "text": "The light - it's happening. Ketheric is about to get a long overdue arse-kicking - I can feel it.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_FlirtyTiefling_NightsongFreed_HasMet",
                  "HAV_Mood_State_NightsongFreed"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: hopeful and determined"
              }
            ],
            "Manip": [
              {
                "id": "Manip_3",
                "speaker": "Manip Vidor",
                "text": "Heard you're meant to be heading toward the Towers.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_SavingPrisoners_HasMet_Manip = False"
                ],
                "setflags": [
                  "HAV_SavingPrisoners_HasMet_Manip"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Manip_14",
                "speaker": "Player",
                "text": "Doing your job, you mean.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Astarion 1",
                  "Gale 1",
                  "Shadowheart 1",
                  "Lae'zel 1",
                  "Wyll 1",
                  "Karlach 1",
                  "Minthara 1",
                  "Halsin 1"
                ],
                "context": ""
              },
              {
                "id": "Manip_7",
                "speaker": "Manip Vidor",
                "text": "'A good soldier knows when he isn't the man for the job.' So sayeth Florrick.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: With a bit of a bitter edge. He's not super pissed, but isn't happy."
              },
              {
                "id": "Manip_16",
                "speaker": "Manip Vidor",
                "text": "If you find us a way into the Towers, we'll be there, shield to shield. Until then... we wait.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_SisterInspection": [
              {
                "id": "AD_SisterInspection_0",
                "speaker": "Lia",
                "text": "Can we hurry this up? I need a drink. Now.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: annoyed and a little nervous"
              }
            ],
            "AD_FlamingFist_003_InCombat": [
              {
                "id": "AD_FlamingFist_003_InCombat_0",
                "speaker": "Fist Rahir",
                "text": "Stand your ground.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: battle cry - determined and unafraid despite being outnumbered"
              }
            ],
            "FlamingFist_001": [
              {
                "id": "FlamingFist_001_0",
                "speaker": "Fist Thadwick",
                "text": "This is no place for amateurs.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_SavingPrisoners_FlamingFist_001_HasMet_Protected",
                  "HAV_Mood_State_Protected"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: Protected state. Barrier is On, nothing bad happened yet. Met.\rNodeContext: now annoyed that player is talking again"
              }
            ],
            "AD_FlamingFist_001_CouncillorDefeated": [
              {
                "id": "AD_FlamingFist_001_CouncillorDefeated_0",
                "speaker": "Fist Thadwick",
                "text": "The Cousellor's fallen - Fists, don't give up!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "FlamingFist_002": [
              {
                "id": "FlamingFist_002_0",
                "speaker": "Fist Aubree",
                "text": "I've heard the stories about Moonrise. I hope the Duke is all right.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_SavingPrisoners_FlamingFist_002_Hasmet_Protected",
                  "HAV_Mood_State_Protected"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "CinematicNodeContext: <GL> reshoot, last version had almost no movement\rInternalNodeContext: Protected state. Barrier is On, nothing bad happened yet. Met.\rNodeContext: concerned"
              }
            ],
            "AD_Inspection": [
              {
                "id": "AD_Inspection_0",
                "speaker": "Harper Arthus",
                "text": "That's it, this won't take long.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "FlamingFist_004": [
              {
                "id": "FlamingFist_004_0",
                "speaker": "Fist J'ehlar",
                "text": "A hundred years locked away inside a curse - can you imagine?",
                "node_type": "normal",
                "checkflags": [
                  "HAV_SavingPrisoners_FlamingFist_004_HasMet_Protected",
                  "HAV_Mood_State_Protected",
                  "SCL_AncientFist_ItemReturned = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: Protected state. Barrier is On, nothing bad happened yet. Met."
              }
            ],
            "ArrivalInspector": [
              {
                "id": "ArrivalInspector_0",
                "speaker": "Harper Arthus",
                "text": "Keep your distance. Let's not confuse the parasite.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "HAV_SavingPrisoners_HasMet_Inspector"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "FlamingFist_005": [
              {
                "id": "FlamingFist_005_0",
                "speaker": "Fist Gretta",
                "text": "Gods be with you.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_SavingPrisoners_FlamingFist_005_Protected",
                  "HAV_Mood_State_Protected"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: Protected state. Barrier is On, nothing bad happened yet. Met.\rNodeContext: solemn"
              }
            ]
          },
          "session_synopses": {
            "AD_LoverInspection": "Character is under inspection after arriving to HAV from MOO. They need to be checked for a tadpole.",
            "FlamingFist_006": "Flaming Fist Cyril is an elf who feels things deeply. An emotive person, he is positive and tries to see the good in everything.  This dialogue contains several states, including resting, on high alert against ghouls, under attack etc..",
            "AD_BrotherInspection": "Character is under inspection after arriving to HAV from MOO. They need to be checked for a tadpole.",
            "AD_ArguingWithFlorrick": "Florrick and Vidor are talking between themselves about how to proceed. Florrick wants to wait until Mart Cullagh is awake and can tell them more about the shadowcurse. Vidor wants to plan an attack on Moonrise Towers to rescue Grand Duke Ravengard. They aren't at cross purposes, but they don't agree on much.",
            "AD_WulbrenInspection": "Character is under inspection after arriving to HAV from MOO. They need to be checked for a tadpole.",
            "FlirtyTiefling": "Lakrissa's dialogue after her reunion scene with alfira (or potentially this is her only scene if alfira is dead). Lakrissa is usually playful and flirty but she is a but more restrained here. Still smiling but more somber.",
            "Manip": "The Flaming FIst Manip, Vidor, has conflict with Florrick prior to any of these dialogues. He is the sergeant of the FF troops, and believes Florrick is a terrible leader. Player can respond to his idea that he should attack Moonrise.",
            "AD_SisterInspection": "Character is under inspection after arriving to HAV from MOO. They need to be checked for a tadpole.",
            "AD_FlamingFist_003_InCombat": "On turn voice bark.",
            "FlamingFist_001": "Thadwick is a male dwarf and grumpy is his middle name. He's a bit rough and gruff and has little time for the player - an amateur in his eyes. He warms up to him slightly as we progress through the dialogue. This dialogue cover his major states in Haven.",
            "AD_FlamingFist_001_CouncillorDefeated": "On turn voice bark.",
            "FlamingFist_002": "Flaming Fist Aubree is devoted to the Ravengard but also pragmatic. She's unafraid of asking for the player's help and is concerned for Ravengard. Does her best to look at things in a non-judgemental way.",
            "AD_Inspection": "ADs before and after the Harper at the docks inspects the gnomes/tieflings rescued from Moonrise jail. He's affable, but a little wary.",
            "FlamingFist_004": "A mercenary with the Flaming Fist, stuck in Haven with the refugees and one too pleased about it.",
            "ArrivalInspector": "The Harper Inspecter is either looking over a batch of prisoners who've just arrived in Moonrise or has just finished inspecting them and is walking away when the player intercepts him. A gruff and suspicious guard.",
            "FlamingFist_005": "One of the flaming fists in Haven. Resting after an expedition to SCL."
          }
        },
        "hav_exitblessingreminder": {
          "scenario_name": "hav_exitblessingreminder",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "hav_lonelover": {
          "scenario_name": "hav_lonelover",
          "session_sequence": [
            "AD_Promenade",
            "AD_Reunited",
            "Danis"
          ],
          "paths": {
            "AD_Promenade": [
              "AD_Promenade_0",
              "AD_Promenade_6",
              "AD_Promenade_11"
            ],
            "AD_Reunited": [
              "AD_Reunited_0",
              "AD_Reunited_5",
              "AD_Reunited_10"
            ],
            "Danis": [
              "Danis_6",
              "Danis_9"
            ]
          },
          "node_data": {
            "AD_Promenade": [
              {
                "id": "AD_Promenade_0",
                "speaker": "Bex",
                "text": "This place isn't much, but it's home now I'm here with you.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_LoneLover_State_PromenadeAtFountain"
                ],
                "setflags": [
                  "HAV_LoneLover_State_PromenadeAtFountain = False"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Almost apologetic for the run-down place they're staying, but great, warm gladness that Danis is here with her now"
              },
              {
                "id": "AD_Promenade_6",
                "speaker": "Bex",
                "text": "I missed you so much.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Sounds like she might be welling up to cry again"
              },
              {
                "id": "AD_Promenade_11",
                "speaker": "Danis",
                "text": "Please don't start crying again - then I'll cry.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Comforting (and genuinely worried he might also start crying)"
              }
            ],
            "AD_Reunited": [
              {
                "id": "AD_Reunited_0",
                "speaker": "Danis",
                "text": "I can't believe it. To see you again with my own eyes. To hold you...",
                "node_type": "normal",
                "checkflags": [
                  "88c2a54f-df16-19d8-1f97-2c67947bdf74_A"
                ],
                "setflags": [
                  "88c2a54f-df16-19d8-1f97-2c67947bdf74_B"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Increasingly emotional with each sentence, quivering on the brink of (happy) tears on the last"
              },
              {
                "id": "AD_Reunited_5",
                "speaker": "Bex",
                "text": "Don't cry...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Clearly about to cry herself"
              },
              {
                "id": "AD_Reunited_10",
                "speaker": "Danis",
                "text": "You're already crying!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Laughing through tears"
              }
            ],
            "Danis": [
              {
                "id": "Danis_6",
                "speaker": "Danis",
                "text": "Bex isn't easily offended, so gods know what you said to upset her so much.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_LoneLover_State_HatesPlayer"
                ],
                "setflags": [
                  "HAV_LoneLover_HasMet_DanisUpset"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: If the player really offended Bex earlier, Danis reacts. He's still grateful to the player, but wary now."
              },
              {
                "id": "Danis_9",
                "speaker": "Danis",
                "text": "After everything you've done for us, she'll come around eventually, I'm sure.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_Promenade": "Bex and Danis walk around Haven taking in the sights after having been reuinited.",
            "AD_Reunited": "Bex and Danis are finally reunited (and ecstatic to see each other again).",
            "Danis": "Danis' dialog in Haven after his rescue.He has made it safely to Haven after escaping Moonrise Towers and has been reunited with Bex, his partner, if she's alive, or is alone if she's not. If she's alive, the player witnessed a really cute reunion between them, and these dialogues cover Danis' followups to that conversation, as well as versions for if he's alone and for a few states in Haven. Not all states are covered since Danis doesn't care much about Ketheric"
          }
        },
        "hav_wrootrequest": {
          "scenario_name": "hav_wrootrequest",
          "session_sequence": [
            "AD_GnomeAndCat",
            "Gnome002"
          ],
          "paths": {
            "AD_GnomeAndCat": [
              "AD_GnomeAndCat_6",
              "AD_GnomeAndCat_5",
              "AD_GnomeAndCat_11",
              "AD_GnomeAndCat_9"
            ],
            "Gnome002": [
              "Gnome002_0"
            ]
          },
          "node_data": {
            "AD_GnomeAndCat": [
              {
                "id": "AD_GnomeAndCat_6",
                "speaker": "Barcus Wroot",
                "text": "Hmm... perhaps a bit more of this...",
                "node_type": "normal",
                "checkflags": [
                  "95496308-6e34-b8c7-93fb-3b5e56e71f5d_B"
                ],
                "setflags": [
                  "95496308-6e34-b8c7-93fb-3b5e56e71f5d_C"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_GnomeAndCat_5",
                "speaker": "His Majesty",
                "text": "*Mrreow?*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_GnomeAndCat_11",
                "speaker": "Barcus Wroot",
                "text": "Good point. I hadn't thought of that.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_GnomeAndCat_9",
                "speaker": "His Majesty",
                "text": "*Rreow.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Gnome002": [
              {
                "id": "Gnome002_0",
                "speaker": "Nickels",
                "text": "I don't like the sky, it's too big - too empty. Whatever made that light isn't our friend. No chance.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_Mood_State_NightsongFreed"
                ],
                "setflags": [
                  "HAV_WrootRequest_Gnome002_NightsongFreed_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: nervous"
              }
            ]
          },
          "session_synopses": {
            "AD_GnomeAndCat": "Overhead text of Barcus Wroot casually interacting with His Majesty, the local cat.",
            "Gnome002": "This gnome was saved from Moonrise Jail by the players."
          }
        },
        "hav_misc": {
          "scenario_name": "hav_misc",
          "session_sequence": [
            "PAD_MeenlockReaction"
          ],
          "paths": {
            "PAD_MeenlockReaction": [
              "PAD_MeenlockReaction_1",
              "PAD_MeenlockReaction_3"
            ]
          },
          "node_data": {
            "PAD_MeenlockReaction": [
              {
                "id": "PAD_MeenlockReaction_1",
                "speaker": "Player",
                "text": "Careful! Those are meenlocks.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_Misc_State_PassedMeenlockArcanaCheck",
                  "25c1ac70-f65f-4869-8a74-eff5827d9cde"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: a monster has appeared before you - [prn. Mean-lock]"
              },
              {
                "id": "PAD_MeenlockReaction_3",
                "speaker": "Player",
                "text": "Their eyes are made for the dark - fire and light is our friend.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: a monster has appeared before you, trying to warn your fellow player"
              }
            ]
          },
          "session_synopses": {
            "PAD_MeenlockReaction": "This fight occurs in the basement of the last light inn. Meenlocks are clawed fey creatures. If the player passes a check they identify them and their most dangerous aspect, otherwise they simply reccognise  what the meenlocks are and realise they are sensitive to light (light spell or torch for instance). If they fail, they can make note of their sharp claws (for instance.)"
          }
        },
        "hav_ngb": {
          "scenario_name": "hav_ngb",
          "session_sequence": [
            "DouseTorch"
          ],
          "paths": {
            "DouseTorch": [
              "DouseTorch_0"
            ]
          },
          "node_data": {
            "DouseTorch": [
              {
                "id": "DouseTorch_0",
                "speaker": "Narrator",
                "text": "*The denizens of Last Light are fed up with your reckless torch-dousing in the face of the shadow curse.*",
                "node_type": "normal",
                "checkflags": [
                  "GEB_CrimeWarning_3"
                ],
                "setflags": [
                  "TemporaryHostilityAfterDialog"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "DouseTorch": "Darkness causes death in SCL. As such, Haven npcs consider dousing torches as a crime. This crime has one warning."
          }
        },
        "hav_devilishox": {
          "scenario_name": "hav_devilishox",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "hav_general": {
          "scenario_name": "hav_general",
          "session_sequence": [
            "AD_OutsideSignPost"
          ],
          "paths": {
            "AD_OutsideSignPost": [
              "AD_OutsideSignPost_0"
            ]
          },
          "node_data": {
            "AD_OutsideSignPost": [
              {
                "id": "AD_OutsideSignPost_0",
                "speaker": "Narrator",
                "text": "*For a warm bed and full stomach, look no further. Welcome to the Last Light Inn.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: a sign for an inn"
              }
            ]
          },
          "session_synopses": {
            "AD_OutsideSignPost": "This signpost is located just outside of the last ligh inn."
          }
        },
        "hav_prodigylament": {
          "scenario_name": "hav_prodigylament",
          "session_sequence": [
            "AD_AngryBrother",
            "Rolan",
            "AD_RolanReturns",
            "Hologram",
            "Ide",
            "AD_AfterReunion",
            "AD_BrotherWaitingAlone",
            "AD_SiblingsReturn",
            "PAD_HologramReaction",
            "AD_RolanAndKid",
            "Umi",
            "Brother",
            "Sister"
          ],
          "paths": {
            "AD_AngryBrother": [
              "AD_AngryBrother_4",
              "AD_AngryBrother_5",
              "AD_AngryBrother_3"
            ],
            "Rolan": [
              "Rolan_52",
              "Rolan_56",
              "Rolan_37",
              "Rolan_72",
              "Rolan_15",
              "Rolan_6",
              "Rolan_10",
              "Rolan_64",
              "Rolan_18",
              "Rolan_39",
              "Rolan_118",
              "Rolan_71",
              "Rolan_100",
              "Rolan_28",
              "Rolan_85",
              "Rolan_110"
            ],
            "AD_RolanReturns": [
              "AD_RolanReturns_5",
              "AD_RolanReturns_10",
              "AD_RolanReturns_2",
              "AD_RolanReturns_11",
              "AD_RolanReturns_4"
            ],
            "Hologram": [
              "Hologram_1",
              "Hologram_2"
            ],
            "Ide": [
              "Ide_33",
              "Ide_77",
              "Ide_4",
              "Ide_79",
              "Ide_58",
              "Ide_68"
            ],
            "AD_AfterReunion": [
              "AD_AfterReunion_24",
              "AD_AfterReunion_42",
              "AD_AfterReunion_12",
              "AD_AfterReunion_7"
            ],
            "AD_BrotherWaitingAlone": [
              "AD_BrotherWaitingAlone_1",
              "AD_BrotherWaitingAlone_7",
              "AD_BrotherWaitingAlone_5"
            ],
            "AD_SiblingsReturn": [
              "AD_SiblingsReturn_8",
              "AD_SiblingsReturn_0",
              "AD_SiblingsReturn_10",
              "AD_SiblingsReturn_7"
            ],
            "PAD_HologramReaction": [
              "PAD_HologramReaction_0"
            ],
            "AD_RolanAndKid": [
              "AD_RolanAndKid_3",
              "AD_RolanAndKid_6",
              "AD_RolanAndKid_2"
            ],
            "Umi": [
              "Umi_0"
            ],
            "Brother": [
              "Brother_0",
              "Brother_31",
              "Brother_21",
              "Brother_11",
              "Brother_13",
              "Brother_12"
            ],
            "Sister": [
              "Sister_16",
              "Sister_2",
              "Sister_29",
              "Sister_36",
              "Sister_23"
            ]
          },
          "node_data": {
            "AD_AngryBrother": [
              {
                "id": "AD_AngryBrother_4",
                "speaker": "Cal",
                "text": "Lia, I'm so sorry.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "29ddc96b-303b-373d-2b6f-37ae4e8d534b_A"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: upset, grieving his sister"
              },
              {
                "id": "AD_AngryBrother_5",
                "speaker": "Cal",
                "text": "Rolan's right - I should have done more, I should have saved you.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: upset, grieving his sister"
              },
              {
                "id": "AD_AngryBrother_3",
                "speaker": "Cal",
                "text": "I'm worthless.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: upset, grieving his sister"
              }
            ],
            "Rolan": [
              {
                "id": "Rolan_52",
                "speaker": "Rolan",
                "text": "...There's another bottle of Arabellan Dry back there. Put it on the bar, then piss off and leave me alone.",
                "node_type": "normal",
                "checkflags": [
                  "7fd98b6e-11d5-28e0-bc67-bb0925834fa3",
                  "8a4a686d-6c47-411f-a0b3-d79ff33e2922"
                ],
                "setflags": [
                  "HAV_ProdigyLament_HasMet_Rolan",
                  "HAV_ProdigyLament_Event_Intro",
                  "HAV_ProdigyLament_Knows_RolanAlive"
                ],
                "goto": "",
                "link": "87",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Looking at Umi\rNodeContext: Slurring slightly, a little bit drunk and irritable - talking to Ide, a tiefling child behind the bar"
              },
              {
                "id": "Rolan_56",
                "speaker": "Ide",
                "text": "Jaheira said we should serve drinks, but that we shouldn't serve drunks.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "87",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: cheerful, playing the part of a bartender - it's a game to him and this is a line he's learned"
              },
              {
                "id": "Rolan_37",
                "speaker": "Rolan",
                "text": "Jaheira didn't save your ragged little tail from the cultists - I did.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "87",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: venemous - bitter, addressed to Umi"
              },
              {
                "id": "Rolan_72",
                "speaker": "Player",
                "text": "You saved the kid? Sounds like you deserve a drink.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_AlfiraTale_Knows_SavedByRolan = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "87",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Rolan_15",
                "speaker": "Rolan",
                "text": "Oh, it's you. I'd recognise that self-righteous tone anywhere.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "87",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Turns to face player after noticing them, and sneers at them"
              },
              {
                "id": "Rolan_6",
                "speaker": "",
                "text": "",
                "node_type": "alias",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "87",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Rolan_10",
                "speaker": "Rolan",
                "text": "If you're here to save the day again, you're a little late this time.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "25",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Sneering, bitter"
              },
              {
                "id": "Rolan_64",
                "speaker": "Player",
                "text": "What's wrong? Can I help?",
                "node_type": "normal",
                "checkflags": [
                  "HAV_AlfiraTale_Knows_SavedByRolan = False",
                  "HAV_SavingPrisoners_Knows_CapturedTieflings = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "25",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Rolan_18",
                "speaker": "Rolan",
                "text": "Oh, sod off. I'm only here because you 'helped' me and my family.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "25",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Heavy sarcasm on 'helped' - not quite doing airquotes but that's the tone"
              },
              {
                "id": "Rolan_39",
                "speaker": "Rolan",
                "text": "I was ready to cut and run back at the grove, but you had other ideas.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "25",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Rolan_118",
                "speaker": "Rolan",
                "text": "Cal and Lia were taken in by your crap. You convinced them to play hero, and now they're gone.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "HAV_ProdigyLament_State_ToldStory"
                ],
                "goto": "",
                "link": "25",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Rolan_71",
                "speaker": "Player",
                "text": "Do you know where they are?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "HAV_ProdigyLament_Knows_SiblingsInMoonrise"
                ],
                "goto": "",
                "link": "25",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Rolan_100",
                "speaker": "Rolan",
                "text": "Dead for all I know. Or in the cult's tower with the others who were taken.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Rolan_28",
                "speaker": "Player",
                "text": "They're better off dead than in the cult's hands.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Astarion 1",
                  "Lae'zel 1",
                  "Wyll -1",
                  "Shadowheart 1",
                  "Gale -1",
                  "Karlach -1",
                  "Minthara 1",
                  "Halsin -1"
                ],
                "context": ""
              },
              {
                "id": "Rolan_85",
                "speaker": "Rolan",
                "text": "Bullshit. If they're alive, I can save them.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Rolan_110",
                "speaker": "Rolan",
                "text": "You go save the world, or your own arse, or whatever it is you do. I'll fix this.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "CinematicNodeContext: Turns away, back to the bar when he's done talking"
              }
            ],
            "AD_RolanReturns": [
              {
                "id": "AD_RolanReturns_5",
                "speaker": "Rolan",
                "text": "Cal! Thanks the gods.",
                "node_type": "normal",
                "checkflags": [
                  "8a4a686d-6c47-411f-a0b3-d79ff33e2922 = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: exuberant - just returned from a dark place to find your brother Cal, having thought he was lost"
              },
              {
                "id": "AD_RolanReturns_10",
                "speaker": "Cal",
                "text": "Rolan! You're all right!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: calls out when sees b rother across the room"
              },
              {
                "id": "AD_RolanReturns_2",
                "speaker": "Rolan",
                "text": "Of course. Where is Lia?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: cheeky smile, looking around for sister"
              },
              {
                "id": "AD_RolanReturns_11",
                "speaker": "Rolan",
                "text": "Cal - answer me. Where is Lia?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: sees brother's face and fears the worst. Accusatory in worry"
              },
              {
                "id": "AD_RolanReturns_4",
                "speaker": "Cal",
                "text": "I'm so sorry, Rolan.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: upset, trying not to cry"
              }
            ],
            "Hologram": [
              {
                "id": "Hologram_1",
                "speaker": "",
                "text": "Lia, Cal, if you see this... I'm dead. It's nothing to get upset about - it's simply the way life is.",
                "node_type": "normal",
                "checkflags": [
                  "GLO_Prodigy_State_PermaDefeated"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: voice thick with emotion at the thought of never seeing his siblings again, but he's trying to be no nonsense. Doesn't want them to grieve."
              },
              {
                "id": "Hologram_2",
                "speaker": "",
                "text": "Head to Baldur's Gate immediately. You'll both do excellently there, I have no doubt. And thank you for, well, you know.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: voice thick with emotion at the thought of never seeing his siblings again, but he's trying to be no nonsense. Doesn't want them to grieve."
              }
            ],
            "Ide": [
              {
                "id": "Ide_33",
                "speaker": "Ide",
                "text": "If this is about Rolan, go away.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "HAV_ProdigyLament_HasMet_Ide"
                ],
                "goto": "",
                "link": "95",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Looking away from player, avoiding eye contact\rNodeContext: Upset frustrated"
              },
              {
                "id": "Ide_77",
                "speaker": "Player",
                "text": "Ignore Rolan. He's just a grump.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "95",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ide_4",
                "speaker": "Ide",
                "text": "He called me a 'ragged little devil'.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Looks upset.\rNodeContext: Frustrated and upset. Hurt but tryiing not to show it. Could be mistaken for a bit bratty."
              },
              {
                "id": "Ide_79",
                "speaker": "Player",
                "text": "Very observant of him - that's exactly what you are.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Lae'zel -1",
                  "Astarion 1",
                  "Gale -1",
                  "Shadowheart -1",
                  "Wyll -1",
                  "Karlach -1",
                  "Minthara 1",
                  "Halsin -1"
                ],
                "context": ""
              },
              {
                "id": "Ide_58",
                "speaker": "Ide",
                "text": "Yeah, well everyone says you smell like rotting badger, but they're wrong.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Bratty and impetulant. You're about to deliver a sick burn."
              },
              {
                "id": "Ide_68",
                "speaker": "Ide",
                "text": "You smell like crusty toe-jam - look it too. Bye.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "HAV_ProdigyLament_Event_RudeWithIde"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: BUUUURN."
              }
            ],
            "AD_AfterReunion": [
              {
                "id": "AD_AfterReunion_24",
                "speaker": "Lia",
                "text": "You look like shit.",
                "node_type": "normal",
                "checkflags": [
                  "1591cb60-9e65-980a-c49e-69f68b958a1d_A",
                  "25c1ac70-f65f-4869-8a74-eff5827d9cde = False"
                ],
                "setflags": [
                  "1591cb60-9e65-980a-c49e-69f68b958a1d_B"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: to your brother - he's mourning, and genuinely does look like shit - you're trying to sympathise rather than being harsh"
              },
              {
                "id": "AD_AfterReunion_42",
                "speaker": "Rolan",
                "text": "Thanks.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: abrupt, annoyed"
              },
              {
                "id": "AD_AfterReunion_12",
                "speaker": "Lia",
                "text": "You know what I mean.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_AfterReunion_7",
                "speaker": "Rolan",
                "text": "Sorry, I'm just... tired. Of this - of everything.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_BrotherWaitingAlone": [
              {
                "id": "AD_BrotherWaitingAlone_1",
                "speaker": "Cal",
                "text": "How am I going to tell him about Lia?",
                "node_type": "normal",
                "checkflags": [
                  "7cf65f2f-1a29-daa2-940e-1159a8940b4e_B"
                ],
                "setflags": [
                  "7cf65f2f-1a29-daa2-940e-1159a8940b4e_C"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: grieving, wondering how rolan will react"
              },
              {
                "id": "AD_BrotherWaitingAlone_7",
                "speaker": "Cal",
                "text": "'We escaped Moonrise, but things went wrong?'",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: trying to practice what to say to rolan, awkward and hesitant"
              },
              {
                "id": "AD_BrotherWaitingAlone_5",
                "speaker": "Cal",
                "text": "'Lia didn't make it...' Gods, it doesn't sound real.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: grief that his sister is dead hitting him"
              }
            ],
            "AD_SiblingsReturn": [
              {
                "id": "AD_SiblingsReturn_8",
                "speaker": "Lia",
                "text": "Rolan! There you are.",
                "node_type": "normal",
                "checkflags": [
                  "25c1ac70-f65f-4869-8a74-eff5827d9cde = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: calls out to her brother, who is sightly in front of her. Relief"
              },
              {
                "id": "AD_SiblingsReturn_0",
                "speaker": "Rolan",
                "text": "Lia? Wretched gods, where have you been? Where's Cal?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: worried and concern"
              },
              {
                "id": "AD_SiblingsReturn_10",
                "speaker": "Rolan",
                "text": "Lia, answer me. Where is Cal?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: worried and concern. sees the look on siblings face and fears the worst"
              },
              {
                "id": "AD_SiblingsReturn_7",
                "speaker": "Lia",
                "text": "Rolan, I'm sorry.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: upset and defeated"
              }
            ],
            "PAD_HologramReaction": [
              {
                "id": "PAD_HologramReaction_0",
                "speaker": "Player",
                "text": "He'll need help to survive those shadows. Only a fool would face them alone.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_RolanAndKid": [
              {
                "id": "AD_RolanAndKid_3",
                "speaker": "Rolan",
                "text": "Your job is to serve drinks, you little devil. Do it.",
                "node_type": "normal",
                "checkflags": [
                  "ed580a24-9949-7b59-1735-c6db6cda5a6c_B"
                ],
                "setflags": [
                  "ed580a24-9949-7b59-1735-c6db6cda5a6c_B = False",
                  "ed580a24-9949-7b59-1735-c6db6cda5a6c_A = False"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: absolutely hammered drunk and belligerent"
              },
              {
                "id": "AD_RolanAndKid_6",
                "speaker": "Umi",
                "text": "Please stop shouting.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: small voice, trying to stand up to an adult"
              },
              {
                "id": "AD_RolanAndKid_2",
                "speaker": "Rolan",
                "text": "I'M NOT SHOUTING.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: absolutely hammered drunk and belligerent, LOUD"
              }
            ],
            "Umi": [
              {
                "id": "Umi_0",
                "speaker": "Umi",
                "text": "The sky looks so pretty with the light. Whoever it is must be good - they must be.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_Mood_State_NightsongFreed"
                ],
                "setflags": [
                  "HAV_Umi_NightsongFreed_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: awe and hope"
              }
            ],
            "Brother": [
              {
                "id": "Brother_0",
                "speaker": "Cal",
                "text": "When you told me about Rolan, I didn't believe you. But it's true...",
                "node_type": "normal",
                "checkflags": [
                  "HAV_ProdigyLament_Brother_RolanDead_HasMet = False",
                  "GLO_Prodigy_State_ToldSiblingsProdigyDead"
                ],
                "setflags": [
                  "HAV_ProdigyLament_Brother_RolanDead_HasMet"
                ],
                "goto": "",
                "link": "13",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: distant voice, he can't believe what he's just learned"
              },
              {
                "id": "Brother_31",
                "speaker": "Cal",
                "text": "My big brother is dead.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "GLO_Prodigy_State_ToldSiblingsProdigyDead"
                ],
                "goto": "",
                "link": "13",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: distant voice, he can't believe what he's just learned"
              },
              {
                "id": "Brother_21",
                "speaker": "Player",
                "text": "He died as he lived - stupidly.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "28",
                "is_end": false,
                "approval": [
                  "Astarion 1",
                  "Gale -1",
                  "Shadowheart 1",
                  "Lae'zel 1",
                  "Wyll -1",
                  "Karlach -1",
                  "Minthara 1",
                  "Halsin -1"
                ],
                "context": ""
              },
              {
                "id": "Brother_11",
                "speaker": "Cal",
                "text": "Rolan could be stubborn, but he was never malicious. Not like you.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: despite his grief he feels pity for the player."
              },
              {
                "id": "Brother_13",
                "speaker": "Cal",
                "text": "Everyone I've ever loved is dead. I have nothing.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: shellshocked, unable to process what's happened"
              },
              {
                "id": "Brother_12",
                "speaker": "Cal",
                "text": "You won't see me again.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: he's planning to walk into the cursed darkness to die - alone"
              }
            ],
            "Sister": [
              {
                "id": "Sister_16",
                "speaker": "Lia",
                "text": "Now that I'm here, that I'm safe, it's finally sinking in.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_ProdigyLament_Sister_RolanDead_HasMet = False",
                  "GLO_Prodigy_State_ToldSiblingsProdigyDead"
                ],
                "setflags": [
                  "HAV_ProdigyLament_Sister_RolanDead_HasMet"
                ],
                "goto": "",
                "link": "30",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: voice distant, barely processing the news"
              },
              {
                "id": "Sister_2",
                "speaker": "Lia",
                "text": "Rolan is dead.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "30",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: fists curling, quietly angry in her grief"
              },
              {
                "id": "Sister_29",
                "speaker": "Player",
                "text": "He died as he lived - stupidly.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Lae'zel 1",
                  "Astarion 1",
                  "Shadowheart 1",
                  "Gale 1",
                  "Karlach -1",
                  "Wyll -1",
                  "Halsin 1",
                  "Minthara 1"
                ],
                "context": ""
              },
              {
                "id": "Sister_36",
                "speaker": "Lia",
                "text": "You and everyone in this dump can rot for all I damn care. And you will.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: player has been cruel about rolan's death and lia is lashing out in her fury"
              },
              {
                "id": "Sister_23",
                "speaker": "Lia",
                "text": "Just pray we never meet again - you slimy sack of shit.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: player has been cruel about rolan's death and lia is lashing out in her fury"
              }
            ]
          },
          "session_synopses": {
            "AD_AngryBrother": "Lia died in Moonrise. Upon his return to Last Light, Cal and Rolan had a massive argument that the player failed to dispel. Cal, upset, walked away from Rolan and now stands on the balcony. He's upset, grieving, and wishing he had died instead of his sister.",
            "Rolan": "Rolan is an apprentice wizard whose siblings were recently captured by cultists. He's stuck in a tavern in the middle of the cursed lands where they were taken, drinking heavily, blaming himself for their loss. When he sees the players, he turns his frustration onto them - he's only here because they convinced him to stay with the other tieflings who were captured in the first place.Rolan is in fact the only reason any of the tieflings are still alive, having protected them from the traitorous Zevlor, who planned to give them over to the cult. He doesn't feel like a hero though - he feels like a failure.",
            "AD_RolanReturns": "A one off AD that triggers when the siblings return and spot each other in haven. In this version cal and/or lia are waiting in Last light when rolan returns.",
            "Hologram": "Rolan has left a message behind in Haven, for his siblings. This is a small automated hologram that is fixed to the bar counter. It plays a message (that he's gone looking for his siblings or that he's dead) when the player interacts with it.",
            "Ide": "Ide mainly talks about the interaction the player can have with Rolan in his dialog (HAV_ProdigyLament_Rolan), where he berates the kid for not giving him more alcohol. This dialog continues that narrative beat, and players can acquire a book Ide was planning to give Rolan.",
            "AD_AfterReunion": "Cal and/or Lia has been rescued from Moonrise. They have reunited with Rolan and are reminscing/checking up on one another. This occurs after the reunion scene.",
            "AD_BrotherWaitingAlone": "Cal has been rescued from Moonrise towers prison by the player and is now in Last Light Inn. His sister Lia is dead and his brother Rolan is nowhere to be found (but he left a message telling Cal to wait for his return). Cal is talking to himself here. He's nervous, scared for Rolan and grieving Lia.",
            "AD_SiblingsReturn": "A one off AD that occurs when Lia and/or Cal spot Rolan upon entering Last Light after being rescued from Moonrise.",
            "PAD_HologramReaction": "PAD for after players see Rolan's hologram in the Last Light Inn for the first time. They comment on needing to go save Rolan as he won't be able to shadow creatures on his own.",
            "AD_RolanAndKid": "Roland and Umi are standing at the bar. Umi is behind the bar and Roland is badgering Umi to serve him more alcohol. Roland is extremely drunk and belligerent, and Umi is trying to calm him down.",
            "Umi": "Umi is young boy in the Haven. He spends most of his time hunting for valuable items in the Inn. He really looks up to the boss of his crew, Mol. This dialogue covers all his main states in Haven, including isobel and mol's kidnapping, when haven is left unprotected, when it's being attacked etc.",
            "Brother": "Cal has been rescued from Moonrise Towers by the player and is now in Last Light. This dialogue covers multiple states: Rolan is missing, Rolan is dead, Rolan and Cal had a fight (player must pass a persuade to calm the fight, pass and fail states here), and a general state for when cal, lia and rolan are all alive and well and cal is grateful to the player.",
            "Sister": "Lia has been rescued from Moonrise Towers by the player and is now in Last Light. This dialogue covers multiple states: Rolan is missing, Rolan is dead, Rolan and Lia had a fight (player must pass a persuade to calm the fight, pass and fail states here), and a general state for when cal, lia and rolan are all alive and well and Lia is grateful to the player."
          }
        },
        "hav_haven": {
          "scenario_name": "hav_haven",
          "session_sequence": [
            "AD_FlamingSpy_IsobelCombat_002"
          ],
          "paths": {
            "AD_FlamingSpy_IsobelCombat_002": [
              "AD_FlamingSpy_IsobelCombat_002_0"
            ]
          },
          "node_data": {
            "AD_FlamingSpy_IsobelCombat_002": [
              {
                "id": "AD_FlamingSpy_IsobelCombat_002_0",
                "speaker": "Fist Marcus",
                "text": "The General will be pleased if you go quietly.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_FlamingSpy_IsobelCombat_002": "Combat AD"
          }
        },
        "hav_ravengard": {
          "scenario_name": "hav_ravengard",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "hav_ad": {
          "scenario_name": "hav_ad",
          "session_sequence": [
            "Combat_Desire"
          ],
          "paths": {
            "Combat_Desire": [
              "Combat_Desire_0"
            ]
          },
          "node_data": {
            "Combat_Desire": [
              {
                "id": "Combat_Desire_0",
                "speaker": "Counsellor Florrick",
                "text": "Fists! Draw your weapons!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "Combat_Desire": "Combat AD"
          }
        },
        "hav_pad": {
          "scenario_name": "hav_pad",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "hav_enteringhaven": {
          "scenario_name": "hav_enteringhaven",
          "session_sequence": [
            "PAD_Moonshield",
            "TadpoleCheckpoint"
          ],
          "paths": {
            "PAD_Moonshield": [
              "PAD_Moonshield_0"
            ],
            "TadpoleCheckpoint": [
              "TadpoleCheckpoint_87",
              "TadpoleCheckpoint_188",
              "TadpoleCheckpoint_54",
              "TadpoleCheckpoint_196",
              "TadpoleCheckpoint_173",
              "TadpoleCheckpoint_0",
              "TadpoleCheckpoint_66",
              "TadpoleCheckpoint_51",
              "TadpoleCheckpoint_136",
              "TadpoleCheckpoint_52",
              "TadpoleCheckpoint_175",
              "TadpoleCheckpoint_187",
              "TadpoleCheckpoint_250",
              "242",
              "NODE_NOT_FOUND"
            ]
          },
          "node_data": {
            "PAD_Moonshield": [
              {
                "id": "PAD_Moonshield_0",
                "speaker": "Player",
                "text": "No shadows here - something must be keeping it at bay.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "TadpoleCheckpoint": [
              {
                "id": "TadpoleCheckpoint_87",
                "speaker": "Jaheira",
                "text": "",
                "node_type": "normal",
                "checkflags": [
                  "HAV_EnteringHaven_State_FlamingSpyRevealed",
                  "HAV_EnteringHaven_Event_ClawsKilled = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "239",
                "is_end": false,
                "approval": [],
                "context": "InternalNodeContext: Marcus transformed, but player counterspelled his summon."
              },
              {
                "id": "TadpoleCheckpoint_188",
                "speaker": "Jaheira",
                "text": "Be on the alert, Harpers! We haven't seen the last of Marcus yet.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "239",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: a martial order to her squad, who are shaken by witnessing a hideous transformation"
              },
              {
                "id": "TadpoleCheckpoint_54",
                "speaker": "Jaheira",
                "text": "As for you - you exposed a True Soul in our midst. You're no puppet of the Absolute, are you?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "239",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: turns to player, speaking more quietly\rNodeContext: Looks at us anew. Still suspicious, but intrigued too."
              },
              {
                "id": "TadpoleCheckpoint_196",
                "speaker": "Jaheira",
                "text": "How is that possible?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "239",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "TadpoleCheckpoint_173",
                "speaker": "Player",
                "text": "Because of this artefact. (Show Jaheira.)",
                "node_type": "normal",
                "checkflags": [
                  "WIZARD = False"
                ],
                "setflags": [
                  "HAV_EnteringHaven_State_RevealedArtifact"
                ],
                "goto": "",
                "link": "239",
                "is_end": false,
                "approval": [
                  "Wyll 1",
                  "Karlach 1"
                ],
                "context": ""
              },
              {
                "id": "TadpoleCheckpoint_0",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "239",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: | (CINE) The player takes Orpheus from their pocket and presents it to Jaheira who looks on intrigued. There’s a crackle of energy and she reacts to something in her pocket. She takes out the jar again and we see the tadpole flail wildly inside - then the jar explodes and the tadpole drops to the ground dead. There are gasps from the crowd, and several of the Harpers move in to strike us down. |"
              },
              {
                "id": "TadpoleCheckpoint_66",
                "speaker": "Jaheira",
                "text": "What in the hells is that thing?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "239",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "TadpoleCheckpoint_51",
                "speaker": "Player",
                "text": "Tell Jaheira everything you know about the artefact.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "HAV_EnteringHaven_State_RevealedArtifact"
                ],
                "goto": "",
                "link": "239",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "TadpoleCheckpoint_136",
                "speaker": "Jaheira",
                "text": "Congratulations. You've earned yourself the benefit of the doubt.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "HAV_EnteringHaven_State_Entangled = False"
                ],
                "goto": "",
                "link": "239",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "TadpoleCheckpoint_52",
                "speaker": "Jaheira",
                "text": "Hear me, Harpers! All clear, at ease!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "HAV_EnteringHaven_State_GainedAccess"
                ],
                "goto": "",
                "link": "239",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "TadpoleCheckpoint_175",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "239",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: | (CINE) Those Harpers who still had their weapons drawn stow them way. The tension among them dissipates now that Jaheira has cleared us. |"
              },
              {
                "id": "TadpoleCheckpoint_187",
                "speaker": "",
                "text": "",
                "node_type": "visualstate",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "239",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "TadpoleCheckpoint_250",
                "speaker": "Jaheira",
                "text": "I'll not pretend to understand why you, the enigma that you are, suddenly crossed our path, but I'm old and wise enough to recognise a sliver of hope when it crawls out of the dark.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "242",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "242",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ]
          },
          "session_synopses": {
            "PAD_Moonshield": "VB played on the first time the players reach the Moonshield on the Haven bridge. They comment on how it holding back the shodows.",
            "TadpoleCheckpoint": "The main dialog for the Tadpole Checkpoint event. Triggered either by simply entering Haven, or being caught sneaking inside.Jaheira tests us to see if we carry a tadpole - and must be convinced to let us enter once she discovers we do. Mol and Marcus vouching for the player is aliased across both states of the player being entangled and free from vines."
          }
        },
        "hav_tieflingdismisseshalsin": {
          "scenario_name": "hav_tieflingdismisseshalsin",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "hav_tieflingsurvivors": {
          "scenario_name": "hav_tieflingsurvivors",
          "session_sequence": [
            "AD_Mattis",
            "KidsAfterGhoulAttack",
            "AD_PlayerFoundTreasure_MirkonsComment"
          ],
          "paths": {
            "AD_Mattis": [
              "AD_Mattis_0"
            ],
            "KidsAfterGhoulAttack": [
              "KidsAfterGhoulAttack_16",
              "KidsAfterGhoulAttack_17",
              "KidsAfterGhoulAttack_3",
              "KidsAfterGhoulAttack_1",
              "KidsAfterGhoulAttack_11",
              "KidsAfterGhoulAttack_10",
              "KidsAfterGhoulAttack_4",
              "KidsAfterGhoulAttack_5",
              "KidsAfterGhoulAttack_2",
              "KidsAfterGhoulAttack_9"
            ],
            "AD_PlayerFoundTreasure_MirkonsComment": [
              "AD_PlayerFoundTreasure_MirkonsComment_0"
            ]
          },
          "node_data": {
            "AD_Mattis": [
              {
                "id": "AD_Mattis_0",
                "speaker": "Mattis",
                "text": "Premium trinkets and doodahs!",
                "node_type": "normal",
                "checkflags": [
                  "0d4d7cd3-5055-29a4-6bbd-e15fdf434e7a_A = False",
                  "0d4d7cd3-5055-29a4-6bbd-e15fdf434e7a_B = False"
                ],
                "setflags": [
                  "0d4d7cd3-5055-29a4-6bbd-e15fdf434e7a_A",
                  "0d4d7cd3-5055-29a4-6bbd-e15fdf434e7a_B = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Cheerful"
              }
            ],
            "KidsAfterGhoulAttack": [
              {
                "id": "KidsAfterGhoulAttack_16",
                "speaker": "Ide",
                "text": "Mol would do the same for any of us. You know it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Kids are talking amongst themselves. \rNodeContext: Determined. Ide would die for Mol. Arguing everyone should leave and save her."
              },
              {
                "id": "KidsAfterGhoulAttack_17",
                "speaker": "Umi",
                "text": "But how do we get into Moonrise? We can't fight those shadow things.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Kids are talking amongst themselves. \rNodeContext: Afraid. Trying to be the voice of reason."
              },
              {
                "id": "KidsAfterGhoulAttack_3",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "HAV_TieflingSurvivors_Mirkon_StartInclusion"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KidsAfterGhoulAttack_1",
                "speaker": "Mirkon",
                "text": "We could! I beat up those harpies and they're way scarier than shadows.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Kids are talking amongst themselves. \rNodeContext: Surprisingly confident. This is Mirkon's moment to be an adventurer he'd always dreamed. (he didn't actually beat up the harpies)"
              },
              {
                "id": "KidsAfterGhoulAttack_11",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "HAV_TieflingSurvivors_Mirkon_EndInclusion"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KidsAfterGhoulAttack_10",
                "speaker": "Mattis",
                "text": "You know what Mol would hate more than anything? Bad things happening to us.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Kids are talking amongst themselves. \rNodeContext: Trying to be smart and calculated."
              },
              {
                "id": "KidsAfterGhoulAttack_4",
                "speaker": "Mattis",
                "text": "You've seen what's out there. We wouldn't stand a chance.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KidsAfterGhoulAttack_5",
                "speaker": "Player",
                "text": "She's probably dead already.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Karlach -1",
                  "Gale -1",
                  "Wyll -1",
                  "Lae'zel 1",
                  "Astarion 1",
                  "Halsin -1",
                  "Minthara 1"
                ],
                "context": ""
              },
              {
                "id": "KidsAfterGhoulAttack_2",
                "speaker": "Mattis",
                "text": "You don't know what you're talking about - Mol's a survivor.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "HAV_TieflingSurvivors_State_DidNotPromiseToSaveMol"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "KidsAfterGhoulAttack_9",
                "speaker": "Ide",
                "text": "We'll see her again. She's twice the hero you'll ever be.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_PlayerFoundTreasure_MirkonsComment": [
              {
                "id": "AD_PlayerFoundTreasure_MirkonsComment_0",
                "speaker": "Mirkon",
                "text": "I missed that! Awesome.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_Mattis": "AD for Mattis, a cheeky Dodger type character selling trinkets in the Last Light Inn. Mattis is shouting out, trying to draw customers in.",
            "KidsAfterGhoulAttack": "Group dialogs for Tiefling kids when Mol is kidnapped. Ide, Mattis, Umi (and Mirkon, if he survived the harpy attack in the grove) are planning on sneaking out and heading to Moonrise to rescue their 'boss', Mol. The player can offer to go in their place, or encourage them to go (if they go, they die).",
            "AD_PlayerFoundTreasure_MirkonsComment": "AD which Mirkon says if he sees the player finding a treasure which is hidden behind a wall. Excited and child-like."
          }
        },
        "hav_harperscouts": {
          "scenario_name": "hav_harperscouts",
          "session_sequence": [
            "AD_Arrival_Harper_001",
            "Harper_001",
            "AD_Arrival_Harper_003"
          ],
          "paths": {
            "AD_Arrival_Harper_001": [
              "AD_Arrival_Harper_001_0"
            ],
            "Harper_001": [
              "Harper_001_18",
              "Harper_001_55",
              "Harper_001_24",
              "Harper_001_36",
              "Harper_001_13",
              "Harper_001_52",
              "Harper_001_66",
              "Harper_001_23",
              "Harper_001_21"
            ],
            "AD_Arrival_Harper_003": [
              "AD_Arrival_Harper_003_0"
            ]
          },
          "node_data": {
            "AD_Arrival_Harper_001": [
              {
                "id": "AD_Arrival_Harper_001_0",
                "speaker": "Harper Meygan",
                "text": "We made it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Harper_001": [
              {
                "id": "Harper_001_18",
                "speaker": "Harper Meygan",
                "text": "He was joking, this morning. Yonas, I mean.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_General_HarperScout_001_HasMet = False"
                ],
                "setflags": [
                  "HAV_General_HarperScout_001_HasMet"
                ],
                "goto": "",
                "link": "36",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: The player walks up to stand behind Meygan, but she doesn't look at them.\rInternalNodeContext: Protected state. Barrier is On, nothing bad happened yet."
              },
              {
                "id": "Harper_001_55",
                "speaker": "Player",
                "text": "Is he... gone?",
                "node_type": "normal",
                "checkflags": [
                  "SCL_HarperScouts_ShadowCreatures_HasMet = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "11",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Harper_001_24",
                "speaker": "Harper Meygan",
                "text": "There was an ambush in the dark. The shadows dragged him away...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "11",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Harper_001_36",
                "speaker": "Harper Meygan",
                "text": "He was always joking. Said it was good for morale, but he just liked seeing people laugh.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "11",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Small pause before the line."
              },
              {
                "id": "Harper_001_13",
                "speaker": "Harper Meygan",
                "text": "He was a good Harper. A good friend...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "HAV_HarperScouts_Event_SawYonasFuneral"
                ],
                "goto": "",
                "link": "11",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Turns to face player after finishing this line"
              },
              {
                "id": "Harper_001_52",
                "speaker": "",
                "text": "",
                "node_type": "visualstate",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "11",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Harper_001_66",
                "speaker": "Player",
                "text": "I'm sure he'd appreciate your prayers.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "15",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Harper_001_23",
                "speaker": "Harper Meygan",
                "text": "I hope so. They're all I have to give.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Harper_001_21",
                "speaker": "Harper Meygan",
                "text": "Thank you. You're a good person.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Arrival_Harper_003": [
              {
                "id": "AD_Arrival_Harper_003_0",
                "speaker": "Harper Karrow",
                "text": "Wasn't sure we'd see light again.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_Arrival_Harper_001": "Single-shot AD when the Harpers arrive back into Haven from the ambush in the shadow-curse where one of their own, Yonas, is killed by shadow creatures. Relieved but sad.",
            "Harper_001": "Dialogue with Meygan in Last Light. She is standing before an altar, mourning Yonas' death. She might give us something if we give her his sword. Despite changes in the state of the grove, she usually reverts to her normal dialogue/ state of sadness as she was close to Yonas and that's more to the front of her mind than stuff like Ketheric",
            "AD_Arrival_Harper_003": "One-shot Harper AD after arriving back in Haven post the attack on the Harper contingent that leaves Yonas dead. Sad but relieved."
          }
        },
        "hav_isobel": {
          "scenario_name": "hav_isobel",
          "session_sequence": [
            "AD_WithNightsong"
          ],
          "paths": {
            "AD_WithNightsong": [
              "AD_WithNightsong_2",
              "AD_WithNightsong_1"
            ]
          },
          "node_data": {
            "AD_WithNightsong": [
              {
                "id": "AD_WithNightsong_2",
                "speaker": "Isobel",
                "text": "| Isobel AD 2 |",
                "node_type": "normal",
                "checkflags": [
                  "964ddec3-a3fd-b0b5-f98a-4b32e118b6ed_A"
                ],
                "setflags": [
                  "964ddec3-a3fd-b0b5-f98a-4b32e118b6ed_B"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_WithNightsong_1",
                "speaker": "Nightsong",
                "text": "| Nightsong AD 2 |",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_WithNightsong": "Isobel and Nightsong are reunited at the Last Light. This is after their reunion scene, when they are in Isobel's quarters."
          }
        },
        "hav_florrick": {
          "scenario_name": "hav_florrick",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "20",
              "21",
              "11",
              "25",
              "57",
              "88",
              "6",
              "62",
              "86",
              "76",
              "95",
              "70",
              "38",
              "40",
              "12",
              "33"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "20",
                "speaker": "Counsellor Florrick",
                "text": "That eye. In Tymora's name, Wyll? What's happened to you?",
                "node_type": "normal",
                "checkflags": [
                  "HAV_SavingPrisoners_HasMet_Florrick = False",
                  "GLO_Florrick_State_KnowsWyllDevil = False",
                  "8a4a686d-6c47-411f-a0b3-d79ff33e2922 = False",
                  "WYLL_DEVIL",
                  "REALLY_WYLL"
                ],
                "setflags": [
                  "HAV_SavingPrisoners_HasMet_Florrick",
                  "GLO_Florrick_State_KnowsWyllDevil"
                ],
                "goto": "",
                "link": "2",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "21",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "11",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "11",
                "speaker": "Counsellor Florrick",
                "text": "That eye. In Tymora's name, Wyll? What's happened to you?",
                "node_type": "normal",
                "checkflags": [
                  "GLO_Florrick_State_KnowsWyllDevil = False",
                  "WYLL_DEVIL",
                  "REALLY_WYLL"
                ],
                "setflags": [
                  "GLO_Florrick_State_KnowsWyllDevil"
                ],
                "goto": "",
                "link": "88",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Addressed to player\rNodeContext: Notices player suddenly. HAnd to brow in exasperation."
              },
              {
                "id": "25",
                "speaker": "Player",
                "text": "It's my business, Florrick - not yours.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "88",
                "is_end": false,
                "approval": [
                  "Astarion 1",
                  "Gale 1",
                  "Lae'zel 1",
                  "Wyll 1",
                  "Shadowheart 1",
                  "Karlach 1",
                  "Jaheira 1",
                  "Minthara 1",
                  "Halsin 1"
                ],
                "context": ""
              },
              {
                "id": "57",
                "speaker": "Counsellor Florrick",
                "text": "Fine. Gods know I've got enough worries plucking at my nerves.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "88",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "88",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "6",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "6",
                "speaker": "Counsellor Florrick",
                "text": "Gods, please, no. You were supposed to be my wildcard.",
                "node_type": "normal",
                "checkflags": [
                  "332d1f8d-f355-feae-f7fd-2c83a4816bb3_WyllIntervened = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "84",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Addressed to player\rNodeContext: Notices player suddenly. HAnd to brow in exasperation."
              },
              {
                "id": "62",
                "speaker": "Counsellor Florrick",
                "text": "We believe the cultists have taken Duke Ravengard to Moonrise Towers. I don't suppose you've found a way in?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "HAV_Florrick_Event_RavengardInTowers"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "86",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "76",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "76",
                "speaker": "Counsellor Florrick",
                "text": "I don't suppose you've found a way into the Towers?",
                "node_type": "normal",
                "checkflags": [
                  "PLA_Desire_State_ToldFlorrickAboutTowers"
                ],
                "setflags": [
                  "HAV_Florrick_Event_RavengardInTowers"
                ],
                "goto": "",
                "link": "84",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "95",
                "speaker": "Player",
                "text": "What's with the fellow in the cot?",
                "node_type": "normal",
                "checkflags": [
                  "SCL_AncientFist_HasMet = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "70",
                "speaker": "Counsellor Florrick",
                "text": "Isobel cleared this place, and he just... appeared. We think he was staying at the inn when the curse fell - which means he's been trapped inside for a century.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "38",
                "speaker": "Counsellor Florrick",
                "text": "It beggars belief he's alive at all.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "40",
                "speaker": "Counsellor Florrick",
                "text": "Hopefully he'll come 'round. Tell us something useful about getting through the shadows. Right now he seems to have little more to him than a refrain from some song or other.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "12",
                "speaker": "Player",
                "text": "What can you tell me about Isobel?",
                "node_type": "normal",
                "checkflags": [
                  "GLO_HAV_TakingIsobel_HasMet_BriefInRoom = False"
                ],
                "setflags": [
                  "GLO_HAV_TakingIsobel_HeardOfIsobel"
                ],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "33",
                "speaker": "Counsellor Florrick",
                "text": "Cleric of Selûne - she's got a room upstairs if you want to meet her. Just don't interrupt her while she's doing whatever it is that keeps this place shadow-free.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "": "Florrick is with her Flaming Fist troops in Haven. As you approach, they are furiously trying to put a plan together to rescue Ravengard. The curse is one thing, but Ketheric is invincible. They can't just storm the place. And even if they could, they would execute the prisoners if the alarm was raised - including the Grand Duke.Florrick turns to you, incredibly grateful that we have made it so far. She implores you to work with Jaheira for her rescue efforts, but tells you your priority is clear: Duke Ravengard. He must be returned to the city - it will not survive his absence."
          }
        },
        "hav_harperguard": {
          "scenario_name": "hav_harperguard",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "hav_nightsong": {
          "scenario_name": "hav_nightsong",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        }
      },
      "final_flags": [
        "GOB_SpiderNest_State_SpidersHostile",
        "DEN_AttackOnDen_HasMet_Prodigy",
        "DEN_CapturedGoblin_GuardsHasMet",
        "HAV_Umi_NightsongFreed_HasMet",
        "GOB_Checkpoint_Event_MoveToCamp",
        "UND_MyconidRevenge_Event_TakeHead",
        "8a9a14b0-87da-5c78-aa76-7a266de7a786_Phase1",
        "PLA_TavernInvestigation_Knows_AskedStelmane",
        "DEN_AttackOnDen_HasMet_Tiefling010Victory",
        "GLO_Moonrise_Knows_AbsoluteAtGrymforge",
        "COL_Vault_State_HasAccess",
        "CRA_DeadPrisoner_Dead_AskedQuestion",
        "UND_DuergarMutineerFollowUp_Event_Happened",
        "CHA_Outside_Event_DoorGuardConvinced",
        "e0b6dfeb-2923-e0ad-1dc5-2a5d1e055e16_local1",
        "DEN_AttackOnDen_HasMet_GrieflingFriend",
        "DEN_AttackOnDen_HasMet_Tiefling001",
        "GOB_QuartermasterFlimsy_HasMet",
        "HAV_SavingPrisoners_HasMet_Manip",
        "GEN_TransferNPCPayment_2",
        "DEN_AttackOnDen_Event_OpenGateAfterCombat",
        "5e9c4c72-4f56-2646-ce36-88207d2dc33c_KinSaved",
        "95496308-6e34-b8c7-93fb-3b5e56e71f5d_C",
        "GOB_OwlbearCub_Event_InvitedToCamp",
        "PLA_Desire_Knows_RavengardTaken",
        "DEN_DruidServant005_Knows_TalkedAboutLockdown",
        "UND_SocietyOfBrilliance_MindFlayer_State_MindFlayerFeeding",
        "PLA_ConflictedFlind_Event_MindControlDamage_Minor",
        "DEN_AttackOnDen_HasMet_Servant005Victory",
        "PLA_Desire_State_WyllComTrack",
        "CHA_Chapel_Event_OpenedJergalsTomb",
        "UND_DarkLake_State_ClaimedGekhWasDead",
        "DEN_AttackOnDen_Pet004_HasMet",
        "GLO_Player_Knows_MoonlanternExists",
        "GOB_PainPriest_Event_Reward",
        "2da46374-abab-9219-f7ce-2a002cfd72a5_a",
        "DEN_AttackOnDen_Ranged_001_HasMet",
        "GLO_Volo_HasMet_Personally",
        "GOB_PainPriest_State_ReactedToPenance",
        "da38cd0f-efef-6809-231d-26f71308cd07_B",
        "HAV_ProdigyLament_Knows_RolanAlive",
        "DEN_RaidingParty_Event_SkipConfrontation",
        "ORI_INCLUSION_SHADOWHEART",
        "GLO_TadpoledCount6",
        "PLA_TavernInvestigation_Quest_WallCollapsed",
        "PLA_Refugee_002_TollhouseMentioned",
        "DEN_AttackOnDen_HasMet_RobberKid",
        "FOR_PriestsConqueringGod_AlliedPlayer",
        "HAG_GurHunter_Dead_Knows_Hunter",
        "HAV_TieflingSurvivors_State_DidNotPromiseToSaveMol",
        "DEN_AttackOnDen_HasMet_PickpocketVictory",
        "DEN_GuardedEntrance_State_ParentsKnowDeath",
        "GLO_IronhandGnomes_Knows_WulbrenInMoonrise",
        "Den_Thieflings_InterferingGuard_PCGotLore",
        "WLD_FOR_GnomeGoblinsAngry",
        "GOB_Checkpoint_Guard01_HasMet",
        "WLD_UnfortunateGnome_PayPassage",
        "4c78f756-720d-a285-a3e6-8f69a6069abc_Step1",
        "cd4b312f-5a40-b8c1-1ecb-0862c829a479_A",
        "5ebae00c-47d8-736c-6738-4ee56cebbc49_B",
        "GLO_Prodigy_State_ToldSiblingsProdigyDead",
        "DEN_General_YoungLovers_HasMet",
        "GOB_PainPriest_Event_CheckHP",
        "GLO_LiftingTheCurse_State_HalsinRecruitable",
        "GLO_Desire_HasMet",
        "b43d3bc7-f10d-73cc-232e-c1f93cba3ed5_Local2",
        "DEN_AttackOnDen_Pet002_HasMet",
        "FOR_UnfortunateGnome_State_NonCharlatanAccess",
        "UND_MyconidCircle_PlantDuergarHasMet",
        "aa1d4932-8689-5e30-2b17-9b0968663a7a_historysuccess",
        "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_WyllSpoke",
        "GOB_WolfPens_Worg_002_HasMet",
        "PLA_GithChokepoint_State_FailedReadingMap",
        "PLA_ZhentShipment_Agent_002_StartInclusion",
        "GLO_HAV_TakingIsobel_HasMet_BriefInRoom",
        "d2eeb9af-9d20-919f-5bcf-63b09a554a90_A",
        "DEN_ShadowDruid_Event_SetFaithwarden",
        "CRA_DeadPrisoner_Dead_MentionedTadpole",
        "GLO_Absolute_Knows_MoonriseTowers",
        "DEN_Rat_Event_MoveToShack",
        "DEN_DruidAttack_HasMet_Protester3AfterAttack",
        "ORI_Inclusion_End_Karlach",
        "UND_WormWall_State_RecognisedCrawlers",
        "GLO_GithChokepoint_DragonAppear",
        "df3e1892-2ab5-7b69-e57b-a75504e1a8f2_B",
        "10297257-36dd-3799-f681-657656779d4a_TieflingsLaezelAD1",
        "ORI_Inclusion_End_Wyll",
        "DEN_AttackOnDen_HasMet_BackupLeader",
        "GLO_HeadRemoval_Event_HeadToInventory",
        "CHA_Jergal_Event_AttemptedAttack",
        "9b4c05c6-0a79-ea8d-c351-43d6fbb04abc_Story1",
        "GOB_AbsoluteCultistStiff_HasMet",
        "GLO_Shadowcurse_Knows_FromGnome",
        "PLA_StuckHalfElf_Knows_ExplainedDowry",
        "FOR_BugBearLove_Event_MovePlayerInside",
        "DEN_Stargazing_Event_SawDragon",
        "ORI_INCLUSION_ASTARION",
        "FOR_UnfortunateGone_TiedUpHasmet",
        "HAG_Hagspawn_State_JakeBerserk",
        "6cf6ff37-64f7-3ccf-d702-ee2025510422_B",
        "UND_EbonLake_Event_MoveToLake",
        "FOR_SeluneStash_NoticeStashSeal_CommentedOnSeal",
        "GOB_Torturers_Rat_001_HasMet",
        "GOB_Scrying_NoddedOrShrugged",
        "DEN_BirdSender_HasMet_GobLeadersDead",
        "a759296c-5d41-f5b9-7d31-1c70d1e10dc7_Once",
        "8ab0520b-3a8d-822f-1934-336e2d24e0a0_B",
        "d3eb78cf-ff8c-1e7a-7df7-4b6a04226b17_B",
        "DEN_HarpyMeal_Event_OriginCharm3",
        "683cb55e-08b9-c865-78a6-4e047ee62a24_B",
        "GLO_Tadpoled_UsedToday1",
        "GLO_HAV_TakingIsobel_HeardOfIsobel",
        "DEN_Thieflings_Event_PartnerQuestionAsked",
        "HAG_SurrogateMother_HasMet",
        "b2a52f0b-5fa8-d275-f080-0fc8edbe1faf_B",
        "GOB_GoblingKing_Event_HealerPersuasion",
        "UND_DuergarCamp_State_DocksHostile",
        "PLA_ZhentShipment_Agent_001_StartInclusion",
        "57c003e7-0932-6f0c-e655-99025a4abe3a_B",
        "DEN_AttackOnDen_HasMet_TieflingLeader",
        "09983dce-d7d0-c108-506f-dcadc4044b0a_Derryth_SwD_Who",
        "PLA_TavernInvestigation_State_HasMet",
        "ORI_Inclusion_Karlach",
        "UND_BrokenMoonLantern_HasMet",
        "3483cea8-0c11-9432-2421-6b95b9140d95_B",
        "7611fa51-4b1b-3d2c-a8a5-74c04d9db7fa_AnimalHandlingSuccess",
        "UND_DuergarPatroller_03_HasMet",
        "DEN_DruidAttack_HasMet_HideoutLeaderAfterAttack",
        "DEN_TieflingScam_Event_InspectedBox",
        "GnomeAskedHelp",
        "3f665b97-a69e-81c5-68e6-5b931720721e_Part1",
        "CHA_LaezelRecruitment_MindMeld",
        "GLO_ScryingEyes_State_FeltGaze",
        "DEN_GuardedEntrance_HasMet_Guard3",
        "DEN_RaidingParty_Event_KanonOpensGate",
        "DEN_AttackOnDen_HasMet_Wyll",
        "PLA_ConflictedFlind_Knows_Gnolls",
        "GLO_TalkedToVoloAboutAbsolute",
        "UND_MyconidCircle_DwarvenAlchemist_BaelenRestoredHasmet",
        "COL_Barracks_State_InterruptConvinced",
        "GOB_Festivities_Trader_HasMet",
        "DEN_AttackOnDen_HasMet_Tiefling004",
        "ZhentDungeon_AgreedBuy",
        "11d70a18-2aae-47a0-1a18-c486858b1eaf_B",
        "DEN_GruntingKid_Event_DisappearIntoWall",
        "GOB_BattleStations_HasMet_WarDrum",
        "GOB_GoblinJolly_HasMet",
        "UND_MyconidCircle_InjuredGnome_ReportedGrymforgeFate",
        "564fac12-29bd-3abe-d380-0a864e688883_Turn1",
        "COL_TadpolingCentre_MemoryImprint_FirstUse",
        "HAV_TieflingSurvivors_Mirkon_EndInclusion",
        "DEN_Apprentice_HasMet_ReactedToShadowDruids",
        "DEN_CampGeneral_HasMet_Gatekeeper",
        "HAV_WrootRequest_Wulbren_AskedAboutIronhandGnomes",
        "UND_DeadInTheWater_CorpseDisposerCompanion_HasMet",
        "UND_MyconidCircle_MyconidSuspicious_HasMet",
        "DEN_Hideout_State_GivenWarning",
        "PLA_Refugee_002_HasMet",
        "UND_DuergarGuard_AtPier_01_HasMet",
        "DEN_DruidAttack_HasMet_PickpocketTraderAfterAttack",
        "SCE_Jergal_HasMet",
        "DEN_RaidingParty_Event_OpenDenGate",
        "GOB_GoblinKingDead_Event_SaidFugitives",
        "HAV_SavingPrisoners_HasMet_Florrick",
        "HAV_EnteringHaven_State_RevealedArtifact",
        "UND_State_LeaderFreedGnomes",
        "41e56e7f-1722-7350-33dc-aefe523650fe_B",
        "d3d3855d-6721-b089-5c1e-d6d255a46fdc_A",
        "PLA_ZhentDungeon_State_SaidPassword",
        "c3207254-eafb-348b-d327-f690af0e213f_startedattackmove",
        "DEN_AttackOnDen_HasMet_TieflingBard",
        "UND_MyconidCircle_BroodingSovereign_State_InParty",
        "DEN_AttackOnDen_HasMet_Kid004Victory",
        "DEN_Hideout_Event_LeaveCountdown",
        "1493763b-776c-959c-259a-89f34f326e04_A",
        "DEN_AttackOnDen_ZenBear_HasMet",
        "UND_FurnaceSearch_Knows_Xargrim",
        "SCE_TieflingFollowUp_Knows_MolMissingEyepatch",
        "DEN_DevilishOx_State_ArcanaCheckComplete_SwA",
        "HAV_ProdigyLament_Knows_SiblingsInMoonrise",
        "fa6e2ce0-64f3-bfb8-fb47-10f50f02cadf_AbsoluteMentioned",
        "DEN_AttackOnDen_Event_PassedByEntrance",
        "DEN_Thieflings_TieflingGuard11_HasMet",
        "GOB_Trader_Knows_Goods",
        "DEN_AttackOnDen_HasMet_Tiefling005",
        "GOB_GoblinToast_Event_ToastSuccess",
        "COL_Barracks_Mistress_Knows_ThinksPlayerIsThrall",
        "DEN_ZenBear_Helped",
        "FOR_KnifeInMeat_State_KnifeBroken",
        "GOB_Festivities_Goblin001_HasMet",
        "FOR_GnomeGoblin1_HasMet",
        "7cf65f2f-1a29-daa2-940e-1159a8940b4e_C",
        "DEN_TieflingRefugees_Quest_HuntRewardOffered",
        "DEN_RaidingParty_Event_GatekeeperToLever",
        "DEN_DruidAttack_HasMet_ServantGnome",
        "COL_NecroLab_GrandDesignSculpture_HasMet_LaezelInclusion",
        "FOR_GoblinAmbush_Event_StopSpotting",
        "HAV_Cat_HasMet",
        "DEN_AttackOnDen_HasMet_RitualDruid003",
        "ReportedToDerryth_BaelenIsAlive",
        "GOB_Owlbear_HasMet_NotChasing",
        "UND_SocietyOfBrilliance_MindFlayer_HasMet",
        "ba2b225d-e9d4-944d-5b4f-b27dd975c626_A",
        "DEN_AttackOnDenDruidLeader_State_HasMet",
        "6fa2b72d-fde1-4ee3-e1d1-f184232f693d_A",
        "DEN_DruidAttack_HasMet_ParentBAfterAttack",
        "DEN_General_Squirrel_LearnedTerritory",
        "HAG_Hagspawn_Knows_PromisedRaiseHusband",
        "OriginAddToParty",
        "PLA_ZhentShipment_Agent_001_Inclusion_Start",
        "GOB_RaiderStupid_HasMet",
        "83fdf5e9-88b8-19e7-ba8f-ff075d2222ce_PLA_ZhentShipment_Knows_Gnolls",
        "DEN_Apprentice_Event_RevealedTadpole",
        "DEN_Thieflings_Event_HideoutTrespassCrimeResolved",
        "469a1188-028b-0e6b-b595-fa464baa551e_b",
        "GOB_RaiderBold_HasMet",
        "FoundCounsellor",
        "UND_DuergarCamp_State_SidedNone",
        "HAV_WrootRequest_Gnome002_NightsongFreed_HasMet",
        "a0afae3d-53b0-192d-d822-c61da104f979_A",
        "DEN_Apprentice_State_ShadowDruidPath",
        "DEN_AttackOnDen_HasMet_LeaderKidVictory",
        "FOR_Monitor_Event_TakeFood",
        "GOB_GoblinToast_ThirdGoblinToasted",
        "FOR_Monitor_State_TransformToDevil",
        "DEN_Thieflings_HasMet_Guard2",
        "DEN_Thieflings_HasMet_Mol",
        "ORI_Karlach_HasMet",
        "GOB_Festivities_HasMet_Ogre_00",
        "GOB_RatRacket_LocalRat_002_HasMet",
        "ce2b9169-f3e7-e07f-9c58-0fd373d5df9a_PLA_ZhentDungeon_Zhent02_Dead_KnowsZarysisZhentarim",
        "DEN_AttackOnDen_Event_EnemiesAppear",
        "FOR_SchoolOgres_Event_AttemptedFirstSkillCheck",
        "GOB_Checkpoint_State_UsedAlarmOnce",
        "HAV_ProdigyLament_Event_Intro",
        "DEN_GoblinScouts_State_SavedDruid",
        "DEN_AttackOnDen_HasMet_Adventurer2",
        "d6df8edb-ac4b-e1d2-794b-6bfd00757cbf_A",
        "HAV_ProdigyLament_HasMet_Ide",
        "GOB_GoblinToast_Event_IncludeFourthGoblin",
        "15b0a2b9-2b22-50ab-70c0-ab3042def597_GaleCommentTried",
        "DEN_HarpyMeal_InHideout_WasMean",
        "PreventTradeWithPlayer",
        "DEN_GoblinHunt_Event_GiveRewardBag",
        "1bddcc22-dadd-92c9-4186-4e10ebbfee68_CHA_Crypt_Jergal_DontFollow",
        "UND_AdamantineForge_Knows_Adamantine",
        "DEN_AdventurersQuest_Knows_AradinStory",
        "FOR_Bottomless_State_InteractedWithWell",
        "ORI_INCLUSION_MINTHARA",
        "SCE_Debrief_State_PartyDebriefed",
        "DEN_AttackOnDen_HasMet_ChefAndSon",
        "ORI_Inclusion_Astarion",
        "UND_DarkJusticiarsCorpses_Recognized",
        "GLO_Florrick_State_KnowsWyllDevil",
        "GLO_Desire_State_FreedInAct1",
        "DEN_DruidLair_Knows_DruidsAlliance",
        "1591cb60-9e65-980a-c49e-69f68b958a1d_B",
        "GOB_Checkpoint_State_GainedAccess",
        "FOR_UnfortunateGnome_Bargaining",
        "DEN_AttackOnDen_HasMet_ProdigyBrother",
        "UND_Elevator_Event_GotWarning",
        "UND_FearfulRothe_Event_MakeDuergarHostileInDialog",
        "GOB_GuardUpset_State_ConvincedTrueSoul",
        "DEN_CapturedGoblin_State_InTransit",
        "GLO_Thieflings_State_PCShookPickpocketSister",
        "GOB_GEB_TorturedAdventurer_Assault_HasMet",
        "DEN_GroveConflict_Event_StoleIdolAttempt",
        "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_NoFFPresent",
        "29ddc96b-303b-373d-2b6f-37ae4e8d534b_A",
        "DEN_Thieflings_Event_CallGuard",
        "DEN_AdventurersQuest_RaidAdventurerAtCorps_HasMet",
        "UND_FearfulRothe_HasMet_Rothe_001_SpeakWithAnimals",
        "UND_FearfulRothe_State_BefriendedRothe",
        "0d6dbe21-1644-b9bf-8297-dd60d820bd99_B",
        "DEN_GuardedEntrance_HasMet_LiedAboutDeath",
        "FOR_ApothecaryGoblins_Goblin01_HasMet",
        "HAG_AnimalIllusion_Revealed_HasMet1",
        "DEN_TieflingScam_Event_TalkedAboutBox",
        "SCE_Alfira_Event_GaveShiningDawn",
        "UND_Automaton_Knows_AskedPlace",
        "HAV_Florrick_Event_RavengardInTowers",
        "CRA_DeadFisherman2_Dead_WhatDoing",
        "GOB_GoblinToast_Event_IncludeThirdGoblin",
        "DEN_AttackOnDen_HasMet_PickpocketTrader",
        "COL_TadpolingCentre_Knows_IdentifiedDarkUrgePod",
        "GOB_GoblinThroneCheckpoint_Pass",
        "HalsinLeft_KilledLeaders",
        "DEN_AttackOnDen_HasMet_Halsin",
        "c167cdf3-7201-e55c-222f-773c758e1000_IncludedHusband",
        "HAG_HagLair_Victim_001_HasMet",
        "PLA_StuckDwarf_HasMet_FoundWife",
        "GOB_SpiderNest_State_SpidersChill",
        "PLA_Tavern_Knows_DukeInTavern",
        "ORI_INCLUSION_KARLACH",
        "PLA_ZhentDungeon_State_AgentFreed",
        "UND_FurnaceSearch_Event_DuergarMentionsForge",
        "GLO_Moonrise_Knows_GoblinsCapturedADuke",
        "DEN_DruidLair_Knows_FoundingGrove",
        "FOR_Monitor_HasMet_Dinner",
        "AskedCircle",
        "03b6aa2e-e805-3a51-6bdb-d92f0b0da84a_UND_MyconidCircle_ServantHookHorror_01_RecognisedMonster",
        "DEN_GuardedEntrance_HasMet_Protester1",
        "SCE_Minthara_HasMet",
        "ToldAboutTadpole",
        "DEN_DruidAttack_HasMet_Tiefling010AfterAttack",
        "f3f236b2-37a1-a0a2-5855-184ead7b1286_C",
        "GOB_DrowCommander_State_Hostile",
        "UND_ArguingGnomes_Event_LearnedAboutPhilomeen",
        "UND_PetrifiedDrow_Knows_WizardIsDhourn",
        "ORI_Inclusion_End_ShadowHeart",
        "ORI_Shadowheart_Knows_SeenTempleVista",
        "FOR_BugBearLove_Event_CoupleHostile",
        "HAG_AnimalIllusion_Narrator",
        "DEN_Thieflings_State_DoneChase",
        "UND_ElevatorGuard002_HasMet",
        "ThankedFreed_BeldronThulla",
        "ORI_INCLUSION_MINSC",
        "DEN_Thieflings_Knows_PlayerRobbed",
        "DEN_ShadowDruid_HasMet_Opposed",
        "GLO_TadpoledCount1",
        "HAV_ProdigyLament_Brother_RolanDead_HasMet",
        "DEN_DruidAttack_HasMet_ExcitedBoar",
        "3b2ae6b6-ca7e-d905-0430-128078b3119f_B",
        "720e85fb-cc00-b81a-efff-343a04ca221e_A",
        "DEN_DevilishOx_MeetAtDruidsGrove_HasMet_SwA",
        "UND_ClericPetGrave_HasMet",
        "99aa7b78-defd-57bc-eabf-a8aa43a030d9_A",
        "UND_MyconidCircle_DirectToSovereign_HasMet",
        "UND_GnomeWorkerLumpy_HasmetRescued",
        "DEN_GroveConflict_Quest_Learnt3LeadersTwoNames",
        "d97f72ff-8fb1-8a4c-f169-89751bd6e125_b",
        "ORI_INCLUSION_RANDOM",
        "HAG_Well_Event_DrinkWell",
        "a7407f82-add0-9f6d-e4e6-78b9c39195a6_C",
        "HAV_SavingPrisoners_HasMet_Inspector",
        "ORI_INCLUSION_WYLL",
        "4118b185-9468-2295-93f3-9d6eafd8fb8a_Second_Disabled",
        "FOR_GoblinAmbush_State_DrowAutoPass",
        "DEN_TieflingLeader_Quest_GobHuntResponded",
        "GLO_Halsin_Event_TalkedWithDruidLeader",
        "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionRefused",
        "HAV_ProdigyLament_State_ToldStory",
        "ORI_Inclusion_Gale",
        "DEN_RitualDruid_HasMet_Left5",
        "PLA_Desire_Quest_TriedForceDoor",
        "HAV_ProdigyLament_Event_RudeWithIde",
        "DEN_Thieflings_Pickpocket1_PCIsNotAChump",
        "DEN_AttackOnDen_HasMet_Refugee002",
        "fb0e13b6-cc68-d496-51c2-4594f4f5bf40_TauntHer",
        "182bb613-b70c-5e7c-b3ea-ea14e02d1fab_C",
        "GOB_PainPriest_Event_PickScourge",
        "DEN_GroveConflict_Knows_HeardAboutRitual",
        "d0423454-cc51-ae8e-5096-cffd1aac9f75_A",
        "FOR_BugBearLove_Knows_Lovemaking",
        "ORI_INCLUSION_LAEZEL",
        "DEN_DruidAttack_HasMet_SonOfChefAfterAttack",
        "HAG_HagLair_TalkingDoor_HasMet",
        "ORI_Inclusion_ShadowHeart",
        "HAV_TieflingSurvivors_Mirkon_StartInclusion",
        "1ea9e483-36a9-82b1-852f-b901ec25552a_a",
        "DEN_Prodigy_HasMet",
        "PLA_ZhentShipment_State_TalkedAfterKilledGnolls",
        "551618bc-83c9-52cc-0ca7-37c224446cf7_Local1",
        "GOB_Bravado_State_Goblin3Hasmet",
        "SCE_GnomeFollowUp_HasMet_WulbrenAlive",
        "HAV_LiftingTheCurse_Knows_SeekingBreath",
        "SCE_TieflingFollowUp_Ide_HasMet",
        "FOR_BottomlessWell_InteractWithWell_Knows_LookedDown",
        "ORI_INCLUSION_GALE",
        "DEN_GuardedEntrance_HasMet_Parents",
        "GOB_GoblinToast_Event_IncludeSecondGoblin",
        "ca797aab-5a73-7ec5-edb7-022122573b39_B",
        "HAV_ProdigyLament_Sister_RolanDead_HasMet",
        "DEN_AttackOnDen_Event_HeftyTieflingQuip",
        "COL_Vault_Event_Start",
        "HAV_ProdigyLament_HasMet_Rolan",
        "GOB_WolfPens_Event_HalsinLeftParty",
        "FactionHostileToPlayerGroupAfterDialog",
        "ORI_Laezel_Quest_FoundZorru",
        "GOB_GoblinPriest_Event_FreedFromChains",
        "PLA_StuckHalfElf_Knows_MentionedDowry",
        "21e0890e-7019-66a3-1956-125405f96d7c_A",
        "DEN_DruidAttack_HasMet_DruidOpposedAfterAttack",
        "FOR_PriestOfTheConqueringGod_Cultists_Knows_Mission",
        "DEN_Apprentice_Event_RemoveBirdExhaustion",
        "DEN_CampGeneral_PCGotLore",
        "SpokeToBrothers",
        "5f09c70a-153e-77e8-731c-5c532e635809_B",
        "DEN_DruidAttack_HasMet_GatekeeperAfterAttack",
        "LearnedGroveSituation",
        "DEN_RaidingParty_Event_UnsheatheForFight",
        "ReachedWife",
        "SCE_BackupLeader_HasMet",
        "GOB_Festivities_BugbearSleeper_00_HasMet",
        "GLO_TadpoleIntro_NPC",
        "DEN_Thieflings_Knows_KidsThieves",
        "DEN_ShadowDruidLeaderPostGoblins_State_HasMet",
        "DEN_GroveConflict_Knows_LeaderNameKing",
        "SCE_TieflingFollowUp_Knows_MeanAboutMol",
        "TemporaryHostilityAfterDialog",
        "0884581d-9f92-0a34-9440-6a54c0813bbe_ProceedToSecondStage",
        "DEN_Prodigy_HasMet_Brother",
        "GLO_Absolute_Knows_TrueSoul",
        "UND_GnomeForeman_UnfortunateGnome_InclusionStart",
        "DEN_WeepingTree_HasMet_Bear",
        "PLA_ZhentDungeon_Dog_03_HasMet",
        "GOB_DrowCommander_Knows_DrowLeader",
        "ORI_Shadowheart_State_IdolHint",
        "ea88dfe9-ff39-9b98-ae03-48d7fdf2708e_A",
        "DEN_AttackOnDen_HasMet_Refugee004Victory",
        "ORI_Inclusion_End_Astarion",
        "OrderedKillDruids",
        "DEN_DevilishOx_MeetAtDruidsGrove_State_Peaceful",
        "DEN_AttackOnDen_HasMet_RitualDruid002",
        "PLA_StuckHalfElf_StartInclusion",
        "DEN_Thieflings_Pickpocket2_HasMet",
        "GOB_Checkpoint_Event_WarnedAtCliff",
        "PLA_ZhentShipment_State_Talked",
        "RefusedHelpBrothers1",
        "GOB_PainPriest_Event_ReactToMocking",
        "DEN_DruidLair_Knows_RuneAppearance",
        "GLO_Hag_KnowsAboutSurrogate",
        "81f2a55d-d317-761f-f6a0-fe97ad6d5288_C",
        "UND_DuergarCamp_Knows_NereIsTrapped",
        "DEN_SenderBird_Event_TakeOff",
        "FOR_GnomeGoblinsPacified",
        "DEN_DruidAttack_HasMet_ChefAfterAttack",
        "ParentLied",
        "7256657b-1386-989f-0262-c6530e03a9fb_AskedWhy",
        "DEN_General_Inclusion_End_Pickpocket",
        "DEN_WeepingTree_Bear_Upset",
        "UND_TheDrowNere_Mutiny_InclusionStart_GnomeSilly",
        "bde7a4f1-933f-f6ce-4a3e-4b1f29f83704_B",
        "UND_TheDrowNere_Event_HadMindMeld",
        "57c003e7-0932-6f0c-e655-99025a4abe3a_A",
        "DEN_YoungLovers_State_MetPlayer",
        "5310a408-76a3-3498-cc26-ae866871188b_Third_Disabled",
        "HAV_General_HarperScout_001_HasMet",
        "7ffcf0de-e30b-ef58-fcc5-8d3a1482fa59_b",
        "GLO_Absolute_Knows_GoblinsWorship",
        "DEN_Weaponsmith_Knows_Elturel",
        "DEN_ShadowDruid_Event_ReactionDone",
        "CHA_Crypt_Event_JergalAppears",
        "PLA_ZhentDungeon_Zhent05_HasMet",
        "DEN_TieflingLeader_HasMet_ReactToDruidAttack",
        "ORI_Laezel_State_StartedTieflingsSceneAtCage",
        "DEN_BirdSender_HasMet",
        "UND_MyconidCircle_DeepRothe_BaelenAteShroom_Hasmet",
        "GOB_BattleStations_Event_ToStation",
        "DEN_AttackOnDen_HasMet_Trainer",
        "GOB_GoblinHeretic_FreeToGo",
        "GOB_GoblinThroneCheckpoint_State_NonCharlatanAccess",
        "1c74b01f-5dcf-8107-b384-204d341ed9d5_OnlyOnce",
        "DEN_Thieflings_State_MessedWithMolsKids",
        "PLA_Refugee_001_HasMet",
        "UND_MyconidCircle_State_GainedAccess",
        "HAV_EnteringHaven_State_GainedAccess",
        "DEN_DruidAttack_HasMet_ParentAAfterAttack",
        "GOB_Checkpoint_State_GoblinsToldLeaders",
        "UND_DuergarCamp_Mutineers_HasMet",
        "LearnedDukeMissingCounsellor",
        "SCE_JergalDebrief_Event_WhyHere",
        "94cd662c-844b-4dcc-ffdc-0b9a8da32bcc_BarcusSpokeUp",
        "DEN_AttackOnDen_HasMet_LairDoor",
        "RikkaAskedQuest",
        "DEN_General_Event_TriedNudgingBear",
        "DEN_HasMet_SoloParentB",
        "DEN_RitualDruid_HasMet_Left2",
        "GOB_Torturers_HasMet_Goblet",
        "FOR_BugbearLove_State_InterruptedCouple",
        "DEN_AttackOnDen_Servant005_Answered",
        "UND_BroodingSovereign_State_RefusedCircle",
        "DEN_Thieflings_HasMet_Trainee1",
        "UND_DeadInTheWater_CorpseDisposerLeader_HasMet",
        "DEN_Tiefling011_State_Met",
        "DEN_Thieflings_PersuadedPickpocket",
        "GOB_GoblinToast_Event_NoMoreRefills",
        "ORI_Inclusion_Random",
        "PLA_KarlachRecruitment_State_PersuasionSucceeded",
        "DEN_Thieflings_State_WitnessedArgument",
        "COL_TadpolingCentre_HasMet_Yeva",
        "3b911555-52e5-7791-d2ac-44fe62465fa1_Loop3",
        "GOB_RaiderCunning_HasMet",
        "GOB_Eye_HasMet",
        "DEN_AttackOnDen_HasMet_Refugee003",
        "DEN_Weaponsmith_HasMet",
        "34910f06-fac0-085f-b41a-337d0dfad85a_A",
        "ORI_Inclusion_Laezel",
        "GOB_GoblinToast_SecondGoblinToasted",
        "9e2ef14b-1a2f-4edc-3f78-7e3a27967e5c_C",
        "DEN_AttackOnDen_HasMet_ScoutCaptive",
        "PLA_KarlachRecruitmentTollhouse_State_HostilitiesBegan",
        "UND_PetrifiedDrow_Knows_MemoryCrystal",
        "UND_FairyRings_Dead_AskedDrowIdentity",
        "ZevlorRewarded",
        "GOB_PainPriest_Penanced",
        "b618166c-99f4-1c7a-02b7-32f0f0fbe420_LocalA",
        "SCE_TieflingFollowUp_Event_GiveShiningDawn",
        "DEN_AttackOnDen_HasMet_Servant004Victory",
        "DEN_AttackOnDen_HasMet_Mule1",
        "DEN_TieflingScam_HasMet",
        "DEN_AttackOnDen_HasMet_Kid003",
        "UND_FearfulRothe_Event_ConvincedRotheToAttackDuergar",
        "PLA_FlamingFist7_InnBurntDown_HasMet",
        "DEN_AttackOnDen_HasMet_Tiefling003Victory",
        "0d9d0064-babd-6e83-6ea6-5b78afb0413c_B",
        "DEN_GoblinScouts_HasMet_Captive",
        "GLO_Absolute_Knows_Symbol",
        "PLA_ConflictedFlind_Event_MindControl_KillHerself",
        "GLO_SpeakWithDead_Event_QuestionAsked",
        "HAG_Hah_MaskedVictim2_HasMet",
        "DEN_DruidAttack_HasMet_ZenBear",
        "GOB_PainPriest_Event_BadReaction",
        "UND_BrokenLantern_State_TriedArcane",
        "461152ff-16c3-2617-f8af-7ddb5681820b_b",
        "ed70fdfc-3d7b-7753-1171-957f7316fe55_B",
        "SidedTieflings",
        "DEN_GroveConflict_Knows_KaghaRequestedPlayers",
        "PLA_StuckHalfElf_State_PlayerAngered",
        "UND_BroodingSovereign_State_AskedCircle",
        "DEN_AttackOnDen_HasMet_Trainee001Victory",
        "UND_MyconidCircle_State_FirstGreetingDone",
        "6bde1237-aa43-36d3-9e53-ec1092198541_C",
        "UND_DarkLake_State_HostileResolution",
        "c3d825d1-49b8-9ae2-4554-4fc1f55d2eee_LocalA",
        "COL_TadpolingCentre_Event_PurgePods",
        "DEN_ZhentAgent_02_Inclusion_Start",
        "DEN_AttackOnDen_HasMet_ProdigySister",
        "HAV_HarperScouts_Event_SawYonasFuneral",
        "ORI_Shadowheart_Event_DarkJusticiarHint",
        "873bc4e0-3d3c-1eac-903b-e94920fd6306_sawgithyanki",
        "DEN_CampGeneral_RufusHasMet",
        "DEN_Apprentice_HasMet",
        "DEN_General_Mule2_HasMet",
        "0d4d7cd3-5055-29a4-6bbd-e15fdf434e7a_A",
        "DEN_AttackOnDen_HasMet_ApprenticeVictory",
        "98423a2d-7b47-e379-6526-c435773e3cff_B",
        "14e6adcb-c6a8-99e4-1c39-4d3b925590e2_B",
        "DEN_Thieflings_Event_PlayerNotInvolved",
        "HAG_HagLair_Knows_DoorWasAlive",
        "ThankedFreed_Beldron",
        "DEN_AttackOnDen_HasMet_Griefling",
        "4d9f1cb5-200f-c998-657a-8d04f5c93c74_B",
        "DEN_AttackOnDen_HasMet_RitualDruid005",
        "COL_Morgue_HasMet_Us",
        "4b4d2992-abb5-bd1b-9593-feb68eddf682_B",
        "ORI_Karlach_Knows_DammonWorkedInHell",
        "ORI_Inclusion_End_Random",
        "DEN_Squirrel_HasMet",
        "ORI_INCLUSION_HALSIN",
        "DEN_ShadowDruid_State_HadSelfReflection",
        "DEN_Thieflings_Pickpocket1_HasMet",
        "PLA_FlamingFist7_Knows_AskedWhatHappened",
        "DEN_DruidAttack_HasMet_BardAfterAttack",
        "GOB_PainPriest_State_NeedMoreHP",
        "FOR_BugBearLove_Event_OpenDoor",
        "e680129a-9d39-6ffc-3e6d-926daf0d76ff_A",
        "DEN_Thieflings_State_PCSawKidThievesGettingCaught",
        "260f61d5-60df-da35-608b-a9856291b143_PlayerKnowsOrinKilledZevlor",
        "916a75f0-23d8-f05b-449d-d926d69fe782_FailedCheck",
        "SCE_GnomeFollowUp_Wulbren_HasMet",
        "DEN_druidservant_005_HasMet",
        "CHA_Jergal_HasMet",
        "ORI_Inclusion_End_Gale",
        "PLA_ConflictedFlind_Hyena_001_HasMet",
        "StartedAlt",
        "DEN_RaidingParty_Adventurer2_HasMet",
        "GLO_Thieflings_State_PickpocketKidGotHit",
        "GOB_WolfPens_Event_HalsinLeavesGoblinCamp",
        "e6738c9d-060d-c901-b945-4d49ca303d5b_SuccessfullyReadTracks",
        "DEN_GruntingKid_HasMet",
        "SCE_TieflingFollowUp_Umi_HasMet",
        "16193247-ccea-1974-45ec-e8229a7de4ef_B",
        "DEN_TieflingLeader_Quest_GobHuntDeclined",
        "DEN_RaidingParty_Event_GoblinsAppear",
        "DEN_GuardedEntrance_HasMet_Guard1",
        "GOB_PainPriest_Event_FirstHitDone",
        "ORI_Inclusion_End_Laezel",
        "88c2a54f-df16-19d8-1f97-2c67947bdf74_B",
        "DEN_General_Event_ElevatorBearMoves",
        "DEN_CapturedGoblin_OfferedRevenge",
        "DEN_General_Inclusion_Pickpocket",
        "DEN_RitualDruid_HasMet_Left4",
        "GOB_DrowCommander_HasMet",
        "GLO_Jergal_State_OutOfTomb",
        "DEN_TieflingLeader_State_KaghaResolved",
        "f3afb428-73fc-2e5c-057b-2e0e5a1b2f1c_B",
        "DEN_AttackOnDen_HasMet_Stargazer",
        "DEN_Thieflings_Event_ShookThief",
        "DEN_AttackOnDen_HasMet_Refugee001",
        "b70d5139-9980-efc6-3ba3-fe2eb56ab2e0_B",
        "HAV_LoneLover_HasMet_DanisUpset",
        "DEN_DruidAttack_HasMet_PetWolf",
        "26071d89-33af-8eac-3c05-ee8dca91338d_who",
        "DEN_Apprentice_UserShortcut",
        "ReflectedKagha",
        "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionAsked",
        "FOR_GoblinAmbush_GoblinsPacified",
        "932401b1-7763-7fd7-bee1-8731fe62084f_DeadThree",
        "DEN_DruidAttack_HasMet_GrieflingAfterAttack",
        "DEN_GuardedEntrance_State_ClearToPass",
        "GOB_Checkpoint_State_GuidedByCapturedGoblin",
        "DEN_RaidingParty_Event_GoblinRaidFight",
        "ORI_Inclusion_Wyll",
        "RefusedCircle",
        "DEN_TieflingScam_Knows_Scam",
        "964ddec3-a3fd-b0b5-f98a-4b32e118b6ed_B",
        "DEN_BirdSender_Knows_AskedAboutBird",
        "DEN_DevilishOx_MeetAtDruidsGrove_Incapable",
        "DEN_Thieflings_CaveGuard_002_HasMet",
        "GOB_PainPriest_Knows_PenanceIsPain",
        "6bba3537-3756-eb27-a08a-a8596d765f2e_C",
        "CHA_LaezelRecruitment_Event_LaezelHostile",
        "DEN_GoblinScouts_SavedDruid",
        "ArrivedAtGrove",
        "DEN_GruntingKid_Event_AskedCanTalk",
        "DEN_Apprentice_Event_GiveReward",
        "acc081f3-204a-2f29-a3bb-6d33ff784c39_C",
        "DEN_AttackOnDen_GrieflingFriend_Knows_Kelemvor",
        "GOB_PainPriest_Event_Mercy",
        "c68c5474-226f-4b47-b327-a22274e360a0_B",
        "55452e03-17c6-9a9d-072b-80043381c98b_A",
        "UND_LoneDuergar_Event_WaitingForMainDialog",
        "OrderedBreachInn",
        "COL_Morgue_User_HasMet_Us",
        "DEN_RitualDruid_HasMet_Pacified3",
        "DEN_ShadowDruidRats_Event_RememberedLetter",
        "DEN_DruidAttack_State_PrepAfterDeathOfDruids",
        "PLA_Desire_Event_HasMet",
        "4103e544-e1db-525f-81ec-b5dfa71907d7_WantNereOut",
        "PLA_StuckHalfElf_Event_ToldQuestion",
        "UND_BroodingSovereign_Event_Enlarged",
        "f108995b-14f4-7823-d218-790177a93da8_B",
        "6a98f294-9f4f-d0b0-1cba-706f1cb15009_Local1",
        "GOB_WolfPens_Worg_001_HasMet",
        "DEN_DruidAttack_HasMet_WeaponsmithAfterAttack",
        "GLO_Volo_HasMet",
        "OpenedSarcophagus",
        "Counsellor_RefusedHelp",
        "02455563-e119-58e5-1fe7-eb46fe381d30_A",
        "GOB_GuardUpset_HasMet",
        "GOB_RatRacket_LocalRat_001_HasMet",
        "c5f62c4b-fb04-1505-c35b-63119d96b127_First_Disabled",
        "698f5a3b-6d88-3d9e-ee4f-26d9c1fc5b6b_B",
        "UND_TheDrowNere_State_KilledGnomeSerene",
        "COL_General_Knows_ColonyIsIllithid",
        "GLO_VoloBallad_MetGuardPrison",
        "PLA_ZhentDungeon_Zhent01_HasMet",
        "ORI_Karlach_HasMet_DammonUnavailable",
        "GOB_CheckpointBackup003_HasMet",
        "DEN_TieflingScam_Event_FoundOutLies",
        "UND_ArguingGnomes_Quest_Accepted",
        "DEN_Thieflings_HasMet_Chef"
      ]
    },
    "MoonriseTowers": {
      "chapter_id": "Act2_MoonriseTowers",
      "scenario_sequence": [
        "moo_traproom",
        "moo_executioner",
        "moo_balthazarlab",
        "moo_kethericschambers",
        "moo_zrellbriefing",
        "moo_assault",
        "moo_audience",
        "hav_minthara",
        "moo_drider",
        "moo_kethetic",
        "moo_kethericroom",
        "moo_throneroom",
        "moo_nightsongdeath",
        "moo_docks",
        "moo_ngb",
        "moo_bazentranceguard",
        "moo_balthazarssecrets",
        "bhvr_wrld",
        "moo_necromancersroom",
        "moo_jailbreak",
        "moo_hiddentreasure",
        "moo_upperfloor",
        "moo_executionthrone",
        "moo_isobelroom",
        "moo_crime",
        "moo_flyingghoul",
        "moo_ketherichound",
        "moo_kitchenfight",
        "moo_dridercaravan",
        "moo_misc",
        "moo_necromancerlab",
        "geb_moo",
        "moo_entrancecheckpoint",
        "moo_kitchen",
        "moo_guardroom",
        "moo_apostleentry",
        "moo_library",
        "moo_walltentacle",
        "moo_prison",
        "moo_catbusiness",
        "moo_jailbreak_all_approval_traversals",
        "moo_ketheric",
        "moo_warehouse",
        "moo_bazaar",
        "moo_monkamulet",
        "moo_infernalvendor",
        "moo_outcast",
        "moo_oubliette",
        "moo_execution",
        "moo_bugbearvendor",
        "moo_mintharafate",
        "moo_alarm"
      ],
      "scenario_results": {
        "moo_traproom": {
          "scenario_name": "moo_traproom",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "moo_executioner": {
          "scenario_name": "moo_executioner",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "moo_balthazarlab": {
          "scenario_name": "moo_balthazarlab",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "moo_kethericschambers": {
          "scenario_name": "moo_kethericschambers",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "moo_zrellbriefing": {
          "scenario_name": "moo_zrellbriefing",
          "session_sequence": [
            "AD_WithGuard001"
          ],
          "paths": {
            "AD_WithGuard001": [
              "AD_WithGuard001_2",
              "AD_WithGuard001_4",
              "AD_WithGuard001_0",
              "AD_WithGuard001_12",
              "AD_WithGuard001_1",
              "AD_WithGuard001_7"
            ]
          },
          "node_data": {
            "AD_WithGuard001": [
              {
                "id": "AD_WithGuard001_2",
                "speaker": "Zealot Bennel",
                "text": "All quiet, Disciple.",
                "node_type": "normal",
                "checkflags": [
                  "e6aef01a-0468-5046-e519-b9b624c704dc_A"
                ],
                "setflags": [
                  "e6aef01a-0468-5046-e519-b9b624c704dc_B"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_WithGuard001_4",
                "speaker": "Disciple Z'rell",
                "text": "All quiet? Do you suppose the Absolute's enemies are resting, soldier?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Suddenly cutting, questioning - poking at her underling's complacency."
              },
              {
                "id": "AD_WithGuard001_0",
                "speaker": "Zealot Bennel",
                "text": "I - no, Disciple.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Taken aback at her ferocity"
              },
              {
                "id": "AD_WithGuard001_12",
                "speaker": "Disciple Z'rell",
                "text": "Perhaps you cannot find them - root them out - because they are your allies? Hm?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Doubling down, demanding answers"
              },
              {
                "id": "AD_WithGuard001_1",
                "speaker": "Zealot Bennel",
                "text": "I - no, mistress! I  would never -",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Close to pleading - is cut off by Z'rell at the end."
              },
              {
                "id": "AD_WithGuard001_7",
                "speaker": "Disciple Z'rell",
                "text": "Oh, relax and let me have my fun. This paperwork grows tedious.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Chuckling, suddenly breaking tension. A cruel boss mocking an underling for 'not taking a joke'."
              }
            ]
          },
          "session_synopses": {
            "AD_WithGuard001": "A patrolling guard stops and reports to Z'rell."
          }
        },
        "moo_assault": {
          "scenario_name": "moo_assault",
          "session_sequence": [
            "AD_GuardJumper",
            "AD_AccessCultistCombat",
            "AD_JaheiraSolo",
            "HavenOutcasts_HarperQuartermaster",
            "HavenOutcasts_DockGuard_Ranger",
            "Jaheira_TopOfTowerBackup",
            "Executioner",
            "CrestfallenHound_SwA",
            "KethericLeaving",
            "AssaultHarper_001",
            "HavenOutcasts_DockGuard_Left_Ranger",
            "FirstKethericInterruption",
            "AssaultFlamingFist_001",
            "DarkUrgeButlerReminder",
            "AssaultFlamingFist_002",
            "AssaultHarper_003",
            "PAD_ReadyToMeetKetheric",
            "DaisyAD_FollowKetheric",
            "Jaheira_Following",
            "AssaultHarper_002",
            "JaheiraThroneRoomOrders",
            "AssaultFlamingFist_003",
            "PAD_AfterKethericCombat",
            "AD_PrisonWarden",
            "AD_ZrellCombat",
            "TentaclelessJump",
            "AD_GuardObserver",
            "AD_ZrellTaunt",
            "AD_BarnabusCombat",
            "Jaheira",
            "AD_JaheiraMoveForward",
            "AssaultHarper_004"
          ],
          "paths": {
            "AD_GuardJumper": [
              "AD_GuardJumper_0"
            ],
            "AD_AccessCultistCombat": [
              "AD_AccessCultistCombat_0"
            ],
            "AD_JaheiraSolo": [
              "AD_JaheiraSolo_0"
            ],
            "HavenOutcasts_HarperQuartermaster": [
              "HavenOutcasts_HarperQuartermaster_3",
              "HavenOutcasts_HarperQuartermaster_6",
              "HavenOutcasts_HarperQuartermaster_2",
              "HavenOutcasts_HarperQuartermaster_4",
              "HavenOutcasts_HarperQuartermaster_5"
            ],
            "HavenOutcasts_DockGuard_Ranger": [
              "HavenOutcasts_DockGuard_Ranger_0"
            ],
            "Jaheira_TopOfTowerBackup": [
              "Jaheira_TopOfTowerBackup_0"
            ],
            "Executioner": [
              "Executioner_38",
              "Executioner_32",
              "Executioner_25",
              "Executioner_43",
              "Executioner_42",
              "36",
              "NODE_NOT_FOUND"
            ],
            "CrestfallenHound_SwA": [
              "CrestfallenHound_SwA_1",
              "CrestfallenHound_SwA_2"
            ],
            "KethericLeaving": [
              "KethericLeaving_0"
            ],
            "AssaultHarper_001": [
              "AssaultHarper_001_0"
            ],
            "HavenOutcasts_DockGuard_Left_Ranger": [
              "HavenOutcasts_DockGuard_Left_Ranger_0"
            ],
            "FirstKethericInterruption": [
              "FirstKethericInterruption_2",
              "FirstKethericInterruption_13",
              "FirstKethericInterruption_7",
              "FirstKethericInterruption_4",
              "FirstKethericInterruption_6"
            ],
            "AssaultFlamingFist_001": [
              "AssaultFlamingFist_001_0"
            ],
            "DarkUrgeButlerReminder": [
              "DarkUrgeButlerReminder_2",
              "DarkUrgeButlerReminder_3"
            ],
            "AssaultFlamingFist_002": [
              "AssaultFlamingFist_002_0"
            ],
            "AssaultHarper_003": [
              "AssaultHarper_003_0"
            ],
            "PAD_ReadyToMeetKetheric": [
              "PAD_ReadyToMeetKetheric_0"
            ],
            "DaisyAD_FollowKetheric": [
              "DaisyAD_FollowKetheric_0"
            ],
            "Jaheira_Following": [
              "Jaheira_Following_5",
              "Jaheira_Following_7",
              "Jaheira_Following_6"
            ],
            "AssaultHarper_002": [
              "AssaultHarper_002_0"
            ],
            "JaheiraThroneRoomOrders": [
              "JaheiraThroneRoomOrders_0"
            ],
            "AssaultFlamingFist_003": [
              "AssaultFlamingFist_003_0"
            ],
            "PAD_AfterKethericCombat": [
              "PAD_AfterKethericCombat_0"
            ],
            "AD_PrisonWarden": [
              "AD_PrisonWarden_0"
            ],
            "AD_ZrellCombat": [
              "AD_ZrellCombat_0"
            ],
            "TentaclelessJump": [
              "TentaclelessJump_2",
              "TentaclelessJump_0",
              "TentaclelessJump_12",
              "TentaclelessJump_5",
              "TentaclelessJump_9"
            ],
            "AD_GuardObserver": [
              "AD_GuardObserver_0"
            ],
            "AD_ZrellTaunt": [
              "AD_ZrellTaunt_0"
            ],
            "AD_BarnabusCombat": [
              "AD_BarnabusCombat_0"
            ],
            "Jaheira": [
              "Jaheira_102",
              "Jaheira_51",
              "Jaheira_73",
              "Jaheira_46",
              "Jaheira_6",
              "Jaheira_26",
              "Jaheira_97",
              "Jaheira_99"
            ],
            "AD_JaheiraMoveForward": [
              "AD_JaheiraMoveForward_0"
            ],
            "AssaultHarper_004": [
              "AssaultHarper_004_0"
            ]
          },
          "node_data": {
            "AD_GuardJumper": [
              {
                "id": "AD_GuardJumper_0",
                "speaker": "Acolyte Marls",
                "text": "Can't believe you'd betray the Absolute. Idiot.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_AccessCultistCombat": [
              {
                "id": "AD_AccessCultistCombat_0",
                "speaker": "Radija",
                "text": "You'll die before you reach my lord. Perhaps then you will be obedient.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Grim, angry. Promising to kill us and resurrect us as a more obedient slave."
              }
            ],
            "AD_JaheiraSolo": [
              {
                "id": "AD_JaheiraSolo_0",
                "speaker": "Jaheira",
                "text": "Here we stand in the lion's den, but the lions are you and I.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Assault_State_MainFloorEnemiesDefeated",
                  "a63e4af2-6edc-188a-efdf-b9ffc5460fc5_LOCAL_A"
                ],
                "setflags": [
                  "a63e4af2-6edc-188a-efdf-b9ffc5460fc5_LOCAL_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Defiant"
              }
            ],
            "HavenOutcasts_HarperQuartermaster": [
              {
                "id": "HavenOutcasts_HarperQuartermaster_3",
                "speaker": "Quartermaster Talli",
                "text": "It's a grim task, picking provisions from the dead.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_Assault_HasMet_HarperQuartermaster"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HavenOutcasts_HarperQuartermaster_6",
                "speaker": "Quartermaster Talli",
                "text": "But the way I hear it, the fighting's not done yet. You need to resupply?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HavenOutcasts_HarperQuartermaster_2",
                "speaker": "Player",
                "text": "Trade.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HavenOutcasts_HarperQuartermaster_4",
                "speaker": "",
                "text": "",
                "node_type": "trade",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HavenOutcasts_HarperQuartermaster_5",
                "speaker": "Quartermaster Talli",
                "text": "Lady light your way.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Blessing - as absent as saying 'god bless', not overly pious"
              }
            ],
            "HavenOutcasts_DockGuard_Ranger": [
              {
                "id": "HavenOutcasts_DockGuard_Ranger_0",
                "speaker": "Harper Naysa",
                "text": "You fight as well as any Harper. Careful, or Jaheira might have to keep you.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Assault_HavenOutcasts_DockGuard_Ranger_ThroneRoomDefeated_HasMet",
                  "MOO_Assault_State_ThroneRoomDefeated"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Wry, a little breathless. Lull in battle."
              }
            ],
            "Jaheira_TopOfTowerBackup": [
              {
                "id": "Jaheira_TopOfTowerBackup_0",
                "speaker": "Jaheira",
                "text": "It's all up to you now. Ketheric awaits.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Executioner": [
              {
                "id": "Executioner_38",
                "speaker": "Disciple Z'rell",
                "text": "You dare show yourself here, after all you've done?",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Executioner_Knows_BalthazarIsMissing"
                ],
                "setflags": [],
                "goto": "",
                "link": "13",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: impressed to have seen a legendary hero (Jaheira) up close and personal - really wants to kill said hero"
              },
              {
                "id": "Executioner_32",
                "speaker": "Disciple Z'rell",
                "text": "ls::TranslatedStringRepository::s_HandleUnknown",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "13",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Executioner_25",
                "speaker": "Disciple Z'rell",
                "text": "You have betrayed me, you have betrayed General Thorm - you have betrayed our god!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "13",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: building fury, peaking on final phrase"
              },
              {
                "id": "Executioner_43",
                "speaker": "Disciple Z'rell",
                "text": "And for what? That little firefly buzzing around overhead? I'll crush you first, then her - and in death, you will all serve the Absolute.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Executioner_42",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "36",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "36",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ],
            "CrestfallenHound_SwA": [
              {
                "id": "CrestfallenHound_SwA_1",
                "speaker": "Squire",
                "text": "That scent - the Selûnite magic on your skin - it fills this place.",
                "node_type": "normal",
                "checkflags": [
                  "PETPAL"
                ],
                "setflags": [
                  "MOO_Assault_HasMet_KethericHound"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "CrestfallenHound_SwA_2",
                "speaker": "Squire",
                "text": "It fills my head with things I miss. I cannot remember them, but I do miss them.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Sadly - thinking of a past life, barely remembered"
              }
            ],
            "KethericLeaving": [
              {
                "id": "KethericLeaving_0",
                "speaker": "Narrator",
                "text": "|The tentacle \"picks up\" Ketheric.|",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: The tentacle \"picks up\" Nightsong and Ketheric. (TBD edge-case: Nightsong's body is not on the roof anymore or is in an inventory)"
              }
            ],
            "AssaultHarper_001": [
              {
                "id": "AssaultHarper_001_0",
                "speaker": "Harper Lanni",
                "text": "Onwards. Ketheric can't hide from us now!",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Assault_AssaultHarper_001_ThroneRoomDefeated_HasMet = False",
                  "MOO_Assault_State_ThroneRoomDefeated"
                ],
                "setflags": [
                  "MOO_Assault_AssaultHarper_001_ThroneRoomDefeated_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: A lull in battle - fervent, caught up in the moment"
              }
            ],
            "HavenOutcasts_DockGuard_Left_Ranger": [
              {
                "id": "HavenOutcasts_DockGuard_Left_Ranger_0",
                "speaker": "Harper Lymn",
                "text": "The false god creeps. The city must wake.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Assault_HavenOutcasts_DockGuard_Left_Ranger_SCE_HasMet",
                  "SCE_Epilogue_State_HasStarted"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Referencing the fact that we need to get to the city."
              }
            ],
            "FirstKethericInterruption": [
              {
                "id": "FirstKethericInterruption_2",
                "speaker": "Ketheric Thorm",
                "text": "Enough. My Lord beckons me.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "4",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Ketheric staggers, weakened. Nightsong spreads her wings and lifts off the ground, preparing for a final blow\rNodeContext: Ragged breathing, hunched over in terrible shape"
              },
              {
                "id": "FirstKethericInterruption_13",
                "speaker": "Ketheric Thorm",
                "text": "You must return to your prison. And my daughter must be reclaimed.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Isobel_State_AtMoonrise = False",
                  "HAV_Isobel_State_IsDead = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: At the sound of 'my daughter' Nigthsong is distracted and looks in concern - she doesn't know Isobel is alive.\rInternalNodeContext: to Nightsong"
              },
              {
                "id": "FirstKethericInterruption_7",
                "speaker": "Nightsong",
                "text": "Your daughter - Isobel?!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Nightsong is shocked; just then, Ketheric gestures with his arm, \rNodeContext: At first, trying to understand what ketheric means. Incredulous - only thing that could have stopped her mid-rampage was hearing the name of the lover she thought dead"
              },
              {
                "id": "FirstKethericInterruption_4",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: The tentacle BURSTS through a wall beside Ketheric"
              },
              {
                "id": "FirstKethericInterruption_6",
                "speaker": "Ketheric Thorm",
                "text": "You will fall as sure as she. This has only begun.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "CinematicNodeContext: The tentacle slaps Nightsong from the sky, then zaps Ketheric and Nightsong down into the colony, leaving a crevice through which the player can follow.\rInternalNodeContext: to player"
              }
            ],
            "AssaultFlamingFist_001": [
              {
                "id": "AssaultFlamingFist_001_0",
                "speaker": "Fist Nipawa",
                "text": "Watching gods. These poor bastards actually die believing.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Assault_AssaultFlamingFist_001_ThroneRoomDefeated_HasMet = False",
                  "MOO_Assault_State_ThroneRoomDefeated"
                ],
                "setflags": [
                  "MOO_Assault_AssaultFlamingFist_001_ThroneRoomDefeated_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Vague disbelief, regret - they're killing people who believe in a nonsense god."
              }
            ],
            "DarkUrgeButlerReminder": [
              {
                "id": "DarkUrgeButlerReminder_2",
                "speaker": "Sceleritas Fel",
                "text": "That was rather rude, wasn't it? To assume I am content to be killed by one of low breeding.",
                "node_type": "normal",
                "checkflags": [
                  "ORI_DarkUrge_State_ButlerKiller"
                ],
                "setflags": [
                  "ORI_DarkUrge_State_ButlerKiller = False",
                  "ORI_DarkUrge_Knows_ButlerDiedReaction"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "DarkUrgeButlerReminder_3",
                "speaker": "Sceleritas Fel",
                "text": "I want you to go away, and think about what you did.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AssaultFlamingFist_002": [
              {
                "id": "AssaultFlamingFist_002_0",
                "speaker": "Fist Helena",
                "text": "Come on. Plenty more to do yet.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Assault_AssaultFlamingFist_002_HasMet = False",
                  "MOO_Assault_State_ThroneRoomDefeated"
                ],
                "setflags": [
                  "MOO_Assault_AssaultFlamingFist_002_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Heat of battle, focused and not really interested in conversation."
              }
            ],
            "AssaultHarper_003": [
              {
                "id": "AssaultHarper_003_0",
                "speaker": "Harper Lilineth",
                "text": "This place... stinks of blood and fear. That is all the Absolute offers.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Assault_AssaultHarper_003_ThroneRoomDefeated_HasMet = False",
                  "MOO_Assault_State_ThroneRoomDefeated"
                ],
                "setflags": [
                  "MOO_Assault_AssaultHarper_003_ThroneRoomDefeated_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Disgust and scorn for the Absolute."
              }
            ],
            "PAD_ReadyToMeetKetheric": [
              {
                "id": "PAD_ReadyToMeetKetheric_0",
                "speaker": "Player",
                "text": "Ketheric Thorm is waiting for us. Are we ready?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "DaisyAD_FollowKetheric": [
              {
                "id": "DaisyAD_FollowKetheric_0",
                "speaker": "",
                "text": "That tentacle was colossal. The same creature we encountered before. We must follow where it went.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_WallTentacle_Daisy_Interacted"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: with awe and fear"
              }
            ],
            "Jaheira_Following": [
              {
                "id": "Jaheira_Following_5",
                "speaker": "Jaheira",
                "text": "Our host is at the top of the tower. Rude to keep him waiting, no?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Jaheira_Following_7",
                "speaker": "Player",
                "text": "What's our strategy?",
                "node_type": "normal",
                "checkflags": [
                  "200aa519-5963-3b2d-3396-d1dcbb013702_AskedStrategy = False"
                ],
                "setflags": [
                  "200aa519-5963-3b2d-3396-d1dcbb013702_AskedStrategy"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Jaheira_Following_6",
                "speaker": "Jaheira",
                "text": "It is I who follows you. But, if I must venture some advice... this is the simple part. Ketheric dies, or we do. And the Sword Coast with us.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ],
            "AssaultHarper_002": [
              {
                "id": "AssaultHarper_002_0",
                "speaker": "Harper Grenywald",
                "text": "This place is all dark corners. Stay sharp, eh?",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Assault_AssaultHarper_002_ThroneRoomDefeated_HasMet = False",
                  "MOO_Assault_State_ThroneRoomDefeated"
                ],
                "setflags": [
                  "MOO_Assault_AssaultHarper_002_ThroneRoomDefeated_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Tense, in the heart of the enemy's tower."
              }
            ],
            "JaheiraThroneRoomOrders": [
              {
                "id": "JaheiraThroneRoomOrders_0",
                "speaker": "Jaheira",
                "text": "Patrol this floor, Harpers. Watch the doors and watch the windows. Nothing enters or exits these rooms alive.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AssaultFlamingFist_003": [
              {
                "id": "AssaultFlamingFist_003_0",
                "speaker": "Fist Rhed",
                "text": "Upwards!",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Assault_AssaultFlamingFist_003_ThroneRoomDefeated_HasMet = False",
                  "MOO_Assault_State_ThroneRoomDefeated"
                ],
                "setflags": [
                  "MOO_Assault_AssaultFlamingFist_003_ThroneRoomDefeated_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Fiercely intent, mid-battle"
              }
            ],
            "PAD_AfterKethericCombat": [
              {
                "id": "PAD_AfterKethericCombat_0",
                "speaker": "Player",
                "text": "That thing came from below. We need to find out where it took Ketheric.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_PrisonWarden": [
              {
                "id": "AD_PrisonWarden_0",
                "speaker": "The Warden",
                "text": "I'll smear your entrails on these walls. In Her name!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_ZrellCombat": [
              {
                "id": "AD_ZrellCombat_0",
                "speaker": "Disciple Z'rell",
                "text": "I'll strip your bones clean.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "TentaclelessJump": [
              {
                "id": "TentaclelessJump_2",
                "speaker": "Narrator",
                "text": "",
                "node_type": "normal",
                "checkflags": [
                  "Debug_Teleport_MOO_Colony"
                ],
                "setflags": [
                  "Debug_Teleport_MOO_Colony = False"
                ],
                "goto": "",
                "link": "0",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "TentaclelessJump_0",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Black screen and noise of player sliding - then HEAVY THUD. Fade in to find party standing, dusting themselves off."
              },
              {
                "id": "TentaclelessJump_12",
                "speaker": "",
                "text": "This is an illithid colony.",
                "node_type": "normal",
                "checkflags": [
                  "COL_General_Knows_ColonyIsIllithid = False"
                ],
                "setflags": [
                  "COL_General_Knows_ColonyIsIllithid"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Shots of eerie organic architecture."
              },
              {
                "id": "TentaclelessJump_5",
                "speaker": "",
                "text": "This must be where they harvest the tadpoles. We're close to the source of the infections.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Shots of eerie organic architecture."
              },
              {
                "id": "TentaclelessJump_9",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "CinematicNodeContext: Player standing, facing down long dark tunnel ahead."
              }
            ],
            "AD_GuardObserver": [
              {
                "id": "AD_GuardObserver_0",
                "speaker": "Zealot Arden",
                "text": "Come at me - come on, then!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: intentionally weird\rNodeContext: high on the possibility of battle"
              }
            ],
            "AD_ZrellTaunt": [
              {
                "id": "AD_ZrellTaunt_0",
                "speaker": "Disciple Z'rell",
                "text": "Make your move!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "7cd519b5-df41-47c0-1d53-6c315224e489_A"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_BarnabusCombat": [
              {
                "id": "AD_BarnabusCombat_0",
                "speaker": "'Barnabus'",
                "text": "*Howl.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Jaheira": [
              {
                "id": "Jaheira_102",
                "speaker": "Jaheira",
                "text": "You fight well - with skill and purpose.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Assault_State_ThroneRoomDefeated",
                  "MOO_Assault_State_BazaarDefeated"
                ],
                "setflags": [
                  "440db1a3-14ad-8127-a14b-c445049225db_HasMetInTower"
                ],
                "goto": "",
                "link": "125",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Jaheira_51",
                "speaker": "Jaheira",
                "text": "I'll hold this floor to ensure no one can escape the tower. You must press on, and find Ketheric Thorm.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "125",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Jaheira_73",
                "speaker": "Player",
                "text": "Actually, Jaheira, why don't you join me?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "125",
                "is_end": false,
                "approval": [
                  "Karlach 5"
                ],
                "context": ""
              },
              {
                "id": "Jaheira_46",
                "speaker": "Jaheira",
                "text": "Good question.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Jaheira_6",
                "speaker": "Jaheira",
                "text": "I can't quite put my finger on why I trust you, but I do: the same instinct through which I know a wolf will bite, or allow itself to be petted.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Jaheira_26",
                "speaker": "Jaheira",
                "text": "You'll bite. But not me. Not as long as we run in the same pack.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Jaheira_97",
                "speaker": "Player",
                "text": "Better we fight separately.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Karlach -5"
                ],
                "context": ""
              },
              {
                "id": "Jaheira_99",
                "speaker": "Jaheira",
                "text": "Different packs then. As you wish. Just get the job done.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_JaheiraMoveForward": [
              {
                "id": "AD_JaheiraMoveForward_0",
                "speaker": "Jaheira",
                "text": "Hold every exit - let none escape to warn the army of our assault.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Assault_State_FlamingFistSupport",
                  "MOO_Assault_State_AllActiveHarpersDefeated",
                  "MOO_Assault_State_AllActiveFlamingFistDefeated = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AssaultHarper_004": [
              {
                "id": "AssaultHarper_004_0",
                "speaker": "Harper Olys",
                "text": "Gods above, the tadpoles. I think I saw one crawl out of a corpse.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Assault_AssaultHarper_004_ThroneRoomDefeated_HasMet = False",
                  "MOO_Assault_State_ThroneRoomDefeated"
                ],
                "setflags": [
                  "MOO_Assault_AssaultHarper_004_ThroneRoomDefeated_HasMet = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Hint of nausea - very much a rookie"
              }
            ]
          },
          "session_synopses": {
            "AD_GuardJumper": "During the assault on Moonrise. If the player \"fixed\" the dock jumpers mind, his combat AD will be a bit garbled.",
            "AD_AccessCultistCombat": "She is the last line of defence to the roof of the tower during the assault on Moonrise. She yells this on her turn during combat.",
            "AD_JaheiraSolo": "Jaheira is outside Moonrise Towers, talking to herself contemplating her next steps to assault the tower (if Florrick is available, a different AD plays). Once the main floor has been cleared of enemies, she makes comments about the tower and the assault.(Triggers regardless of if Florrick is present).",
            "HavenOutcasts_HarperQuartermaster": "If Florrick is present during the assault, the Harper Quartermaster will be present as well to provide trade to the player. They are not invloved in the combat, but will move into the tower once things are cleared.",
            "HavenOutcasts_DockGuard_Ranger": "Naysa is one of the Harpers who fights beside you at Moonrise.",
            "Jaheira_TopOfTowerBackup": "Cover all for top-of-tower Jaheira",
            "Executioner": "Zrell 'greets' the player inside the Tower along with the rest of the Monnrise offencive force during the assault on Moonrise. Nightsong might be alive or dead.This is a stand-off - she's protecting the tower, and the players are attacking. Z'rell is confident that she'll put the players and their allies down here, and shows no fear.",
            "CrestfallenHound_SwA": "If Ketherics Hound smelled Isobel's blessing on the player, she will move into Isobels room and not participate in the combat ongoing throughout the tower, as she is lost in vague feelings and hazy memories of a life past.",
            "KethericLeaving": "During the boss fight on the rooftop, a tentacle teleports Ketheric away",
            "AssaultHarper_001": "A soldier fighting alongside us during Assault on Moonrise. Lines for before, during, and after the battle.",
            "HavenOutcasts_DockGuard_Left_Ranger": "Lymn is one of the Harpers who fights with us at Moonrise.She speaks in a unique cadence because Common is her Seventh language. She is focused on feelings and impressions.",
            "FirstKethericInterruption": "When Ketheric is at low health, this cinematic trigges. Ketheric transports himself into the colony, taking Nightsong with him if she's present.",
            "AssaultFlamingFist_001": "A soldier fighting alongside us during Assault on Moonrise. Lines for before, during, and after the battle.",
            "DarkUrgeButlerReminder": "The player has never spoken to Isobel before starting the assault on Moonrise. The Butler appears in front of the player on the bridge to Moonrise to remind the Dark Urge player that they must kill Isobel if they want to please Bhaal.",
            "AssaultFlamingFist_002": "A soldier fighting alongside us during Assault on Moonrise. Lines for before, during, and after the battle.",
            "AssaultHarper_003": "A soldier fighting alongside us during Assault on Moonrise. Lines for before, during, and after the battle.",
            "PAD_ReadyToMeetKetheric": "Players won the fight near the door that leads to the roof for the showdown with Ketheric. With this PAD we both confirm that and pre-warn player that the next fight is tough and better to restock",
            "DaisyAD_FollowKetheric": "Top of the tower, after fight with Ketheric and seeing the giant tentacle.",
            "Jaheira_Following": "Jaheira's follower dialogue for Moonrise when she's actively accompanying the player.",
            "AssaultHarper_002": "A soldier fighting alongside us during Assault on Moonrise. Lines for before, during, and after the battle.",
            "JaheiraThroneRoomOrders": "Jaheira has arrived inside the Moonrise Towers throne room after clearing the out all the enemies. If there are any Harpers alive, Jaheira will give them orders to patrol around the tower.",
            "AssaultFlamingFist_003": "A soldier fighting alongside us during Assault on Moonrise. Lines for before, during, and after the battle.",
            "PAD_AfterKethericCombat": "After attacking Ketheric on the Moonrise Rooftop, a tentacle tears through one of the towers and provides a hole that leads down into the mind flayer Colony. The party must follow Ketheric down there to continue the main quest, and this PAD should hint at that.",
            "AD_PrisonWarden": "Combat AD when the player is assaulting Moonrise tower. The prison warden has is defending the throne room.",
            "AD_ZrellCombat": "The player has entered combat with Z'rell during the assault on Moonrise (freed Nightsong).",
            "TentaclelessJump": "Roof teleport, Assault on Moonrise path",
            "AD_GuardObserver": "Played at the start of combat at the player if they went to the docks during the assault on Moonrise.",
            "AD_ZrellTaunt": "The Harpers and/or Flaming Fist have moved into the main entrance of Moonrise, but have not started battle yet. She yells to them, taunting them and waiting for them to initiate the combat (by the player).Will only play if either Jaheira or Florrick are there, otherwise this AD will not trigger",
            "AD_BarnabusCombat": "A combat AD that plays on Barnabus' turn during the Moonrise Assault. If the player freed them, they are allied with them and will call back to that. Otherwise, he will do a generic combat AD.",
            "Jaheira": "Jaheira lead the harpers to Moonrise after Nightsong was freed. As the player arrives to Moonrise, she greets them and can follow the player for the assault, If she doesn't follow, she will still join combat and move into the tower, in which the player has another oppertunity to have her follow them to fight Ketheric. Once Ketheric flees she will move up to the roof to offer recruitment.",
            "AD_JaheiraMoveForward": "Jaheira yells to her Harpers and Flaming Fist to hold the main floor of Moonrise after the player has cleared the enemies during the assault. This is the last push before confronting Ketheric on the roof.",
            "AssaultHarper_004": "A soldier fighting alongside us during Assault on Moonrise. Lines for before, during, and after the battle."
          }
        },
        "moo_audience": {
          "scenario_name": "moo_audience",
          "session_sequence": [
            "Ketheric",
            "AD_MumblingSul",
            "RoofCultist"
          ],
          "paths": {
            "Ketheric": [
              "Ketheric_24",
              "Ketheric_108",
              "Ketheric_110",
              "Ketheric_35",
              "Ketheric_87",
              "Ketheric_16",
              "Ketheric_34",
              "Ketheric_96",
              "Ketheric_60",
              "Ketheric_125",
              "Ketheric_66",
              "Ketheric_52",
              "Ketheric_51",
              "Ketheric_74",
              "Ketheric_109",
              "Ketheric_63",
              "Ketheric_86",
              "Ketheric_116"
            ],
            "AD_MumblingSul": [
              "AD_MumblingSul_0"
            ],
            "RoofCultist": [
              "RoofCultist_1",
              "RoofCultist_9",
              "RoofCultist_5",
              "RoofCultist_10"
            ]
          },
          "node_data": {
            "Ketheric": [
              {
                "id": "Ketheric_24",
                "speaker": "Ketheric Thorm",
                "text": "I'll tell you a story, True Soul. About a man who sold himself piece by piece.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_Isobel_State_IsDead"
                ],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_108",
                "speaker": "Ketheric Thorm",
                "text": "He had... everything. A wonderful wife. A brilliant daughter. They lived not far from here.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_110",
                "speaker": "Ketheric Thorm",
                "text": "His wife died too young. Grief tore through their home like a thief, snatching away the scent of her hair, the rustle of her skirts. But the man did not break.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_35",
                "speaker": "Ketheric Thorm",
                "text": "He could not break. His daughter needed him whole, after all.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_87",
                "speaker": "Ketheric Thorm",
                "text": "She grew up - grew strong. Challenged him. Filled his heart with such joy it supplanted all sorrow.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_16",
                "speaker": "Ketheric Thorm",
                "text": "When she was killed, the man... he tried to remain whole, but it wasn't possible. Do you understand?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_34",
                "speaker": "Player",
                "text": "So the man fell to pieces.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_96",
                "speaker": "Ketheric Thorm",
                "text": "The pain was unbearable. All-consuming. He decided he'd do anything for reprieve.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_60",
                "speaker": "Ketheric Thorm",
                "text": "First, he sold himself to the goddess of loss. But the pain did not subside, no matter his obscene feats of devotion.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_125",
                "speaker": "Ketheric Thorm",
                "text": "Then a new god came - a god who promised the man something wonderful: his daughter. Her life returned. Imagine it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_66",
                "speaker": "Ketheric Thorm",
                "text": "He would have to give everything: his body and soul entire. He did not hesitate. Not for a moment.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_52",
                "speaker": "Ketheric Thorm",
                "text": "And the new god did as promised. The man's brilliant, beautiful daughter came back. She was whole - she was alive. But she despised the pitiful wretch her father had become.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_51",
                "speaker": "Ketheric Thorm",
                "text": "Her hatred he could bear, perhaps, as long as she had another chance to live.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_74",
                "speaker": "Ketheric Thorm",
                "text": "Everything I've done, everything I have built, has been to give Isobel that chance. And you, True Soul - you have squandered it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_109",
                "speaker": "Player",
                "text": "You brought her back once. Do it again.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_63",
                "speaker": "Ketheric Thorm",
                "text": "I can. I will. But it is not without cost. Who will pay this time, True Soul?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Ketheric_86",
                "speaker": "Ketheric Thorm",
                "text": "I have no mercy left in me - but it is for the Absolute to decide your fate.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "GLO_Ketheric_State_AngryAtPlayer"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Almost sarcastic, like a very annoyed child talking to their parent"
              },
              {
                "id": "Ketheric_116",
                "speaker": "Ketheric Thorm",
                "text": "Kneel at the altar. Now.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_Audience_State_KethericToldToKneelAtAltar"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_MumblingSul": [
              {
                "id": "AD_MumblingSul_0",
                "speaker": "Pilgrim Sul",
                "text": "Cleric of the moon, alas! Too soon for the Chosen.",
                "node_type": "normal",
                "checkflags": [
                  "b83032a9-f599-fdff-c180-c2d1f267bdb4_A"
                ],
                "setflags": [
                  "b83032a9-f599-fdff-c180-c2d1f267bdb4_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "RoofCultist": [
              {
                "id": "RoofCultist_1",
                "speaker": "Susdera",
                "text": "You have already been told.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Audience_HasMet_TrespassRoofCultist"
                ],
                "setflags": [],
                "goto": "",
                "link": "2",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "RoofCultist_9",
                "speaker": "Susdera",
                "text": "You will turn around. Should the General learn you breached his private chapel, he will not be so merciful.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "2",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: The fact that we might refuse doesn't even enter her mind"
              },
              {
                "id": "RoofCultist_5",
                "speaker": "Player",
                "text": "Do not come between a True Soul and the Absolute.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "2",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "RoofCultist_10",
                "speaker": "Susdera",
                "text": "Do you think yourself so important, True Soul? Until Z'rell says otherwise, you are beneath the Absolute's notice.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Amused - we don't even know how little we are in her eyes"
              }
            ]
          },
          "session_synopses": {
            "Ketheric": "Evil route. Captured Nightsong",
            "AD_MumblingSul": "Sul acts as wine servent to Ketheric. He speaks in riddles, he mind clearly filled by the fog of the Elder Brain, boarderline thrall.",
            "RoofCultist": "Cultist is on the roof, so the player meets them only if they have access to the roof through the Audience path (the 'evil' path, completing Z'rell's Tasks). They greet the player to the roof (the chapel)"
          }
        },
        "hav_minthara": {
          "scenario_name": "hav_minthara",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "0",
              "1"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "0",
                "speaker": "Duke Ulder Ravengard",
                "text": "| I'm not welcome here, but it's safe for now. Thank you. |",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "HAV_Minthara_Hasmet"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "1",
                "speaker": "Duke Ulder Ravengard",
                "text": "| Once we leave this place, I'll make my way to your camp. |",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "": ""
          }
        },
        "moo_drider": {
          "scenario_name": "moo_drider",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "moo_kethetic": {
          "scenario_name": "moo_kethetic",
          "session_sequence": [
            "DaisyAD_AttackImmortal",
            "DaisyAD_AttackImmortalRepeated"
          ],
          "paths": {
            "DaisyAD_AttackImmortal": [
              "DaisyAD_AttackImmortal_0"
            ],
            "DaisyAD_AttackImmortalRepeated": [
              "DaisyAD_AttackImmortalRepeated_0"
            ]
          },
          "node_data": {
            "DaisyAD_AttackImmortal": [
              {
                "id": "DaisyAD_AttackImmortal_0",
                "speaker": "",
                "text": "He cannot die - we must find what gives him his invulnerability before we strike!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "DaisyAD_AttackImmortalRepeated": [
              {
                "id": "DaisyAD_AttackImmortalRepeated_0",
                "speaker": "",
                "text": "It won't work - not until we find out what is keeping him from death!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "DaisyAD_AttackImmortal": "If player inflicts combat with immortal Ketheric Daisy urges to fallback and solve the problem of invulnerability first",
            "DaisyAD_AttackImmortalRepeated": "If player inflicts combat with immortal Ketheric Daisy urges to fallback and solve the problem of invulnerability first"
          }
        },
        "moo_kethericroom": {
          "scenario_name": "moo_kethericroom",
          "session_sequence": [
            "AD_Minthara_EnteredKethericRoom"
          ],
          "paths": {
            "AD_Minthara_EnteredKethericRoom": [
              "AD_Minthara_EnteredKethericRoom_0"
            ]
          },
          "node_data": {
            "AD_Minthara_EnteredKethericRoom": [
              {
                "id": "AD_Minthara_EnteredKethericRoom_0",
                "speaker": "Nightwarden Minthara",
                "text": "This is where the great General Thorm rests his bones? We should ransack it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_Minthara_EnteredKethericRoom": ""
          }
        },
        "moo_throneroom": {
          "scenario_name": "moo_throneroom",
          "session_sequence": [
            "AD_Minthara_ThroneRoomEntered"
          ],
          "paths": {
            "AD_Minthara_ThroneRoomEntered": [
              "AD_Minthara_ThroneRoomEntered_0"
            ]
          },
          "node_data": {
            "AD_Minthara_ThroneRoomEntered": [
              {
                "id": "AD_Minthara_ThroneRoomEntered_0",
                "speaker": "Nightwarden Minthara",
                "text": "I'll never forget how Ketheric humiliated me here.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_Minthara_ThroneRoomEntered": ""
          }
        },
        "moo_nightsongdeath": {
          "scenario_name": "moo_nightsongdeath",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "moo_docks": {
          "scenario_name": "moo_docks",
          "session_sequence": [
            "GuardObserver",
            "AD_Minthara_AtDocks",
            "GuardJumper",
            "AD_JumperGreeting",
            "AD_ObserverFishing",
            "AD_Patroller000Witness",
            "GuardPatroller001",
            "Checkpoint"
          ],
          "paths": {
            "GuardObserver": [
              "GuardObserver_33",
              "GuardObserver_20",
              "GuardObserver_30",
              "GuardObserver_5",
              "GuardObserver_29",
              "GuardObserver_11"
            ],
            "AD_Minthara_AtDocks": [
              "AD_Minthara_AtDocks_0"
            ],
            "GuardJumper": [
              "GuardJumper_35",
              "GuardJumper_51",
              "GuardJumper_39",
              "GuardJumper_76",
              "GuardJumper_67"
            ],
            "AD_JumperGreeting": [
              "AD_JumperGreeting_0"
            ],
            "AD_ObserverFishing": [
              "AD_ObserverFishing_0"
            ],
            "AD_Patroller000Witness": [
              "AD_Patroller000Witness_0"
            ],
            "GuardPatroller001": [
              "GuardPatroller001_0"
            ],
            "Checkpoint": [
              "Checkpoint_20",
              "Checkpoint_37",
              "Checkpoint_42",
              "Checkpoint_50"
            ]
          },
          "node_data": {
            "GuardObserver": [
              {
                "id": "GuardObserver_33",
                "speaker": "Zealot Arden",
                "text": "Stand clear of the cargo!",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Docks_HasMet_DockObserver = False"
                ],
                "setflags": [
                  "MOO_Docks_HasMet_DockObserver"
                ],
                "goto": "",
                "link": "29",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "GuardObserver_20",
                "speaker": "Zealot Arden",
                "text": "...Eh, respectfully, True Soul.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "29",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "GuardObserver_30",
                "speaker": "Player",
                "text": "What's so important about these boxes?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "GuardObserver_5",
                "speaker": "Zealot Arden",
                "text": "They're not to be opened until they reach the city. The Absolute smiles on them that follow orders.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "GuardObserver_29",
                "speaker": "Zealot Arden",
                "text": "And I don't plan on being a guard for long, True Soul.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "GuardObserver_11",
                "speaker": "Player",
                "text": "Leave.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Minthara_AtDocks": [
              {
                "id": "AD_Minthara_AtDocks_0",
                "speaker": "Nightwarden Minthara",
                "text": "Shipments of parasites, bound for Baldur's Gate. Half the city may be infected already.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "GuardJumper": [
              {
                "id": "GuardJumper_35",
                "speaker": "Acolyte Marls",
                "text": "I'm afraid you missed the ship, True Soul.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Docks_HasMet_DockJumper = False"
                ],
                "setflags": [
                  "MOO_Docks_HasMet_DockJumper"
                ],
                "goto": "",
                "link": "77",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Friendly - speaking to an equal (he believes)"
              },
              {
                "id": "GuardJumper_51",
                "speaker": "Acolyte Marls",
                "text": "But there'll be another along soon enough. We're already stacking the cargo.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "77",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: gestures nondescriptly at nearby crates"
              },
              {
                "id": "GuardJumper_39",
                "speaker": "Player",
                "text": "Where are the ships heading?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "77",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "GuardJumper_76",
                "speaker": "Acolyte Marls",
                "text": "Baldur's Gate. The army marches overland, but we've sent some friends ahead to smooth the way.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "77",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Hint of pride"
              },
              {
                "id": "GuardJumper_67",
                "speaker": "Player",
                "text": "Leave.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_JumperGreeting": [
              {
                "id": "AD_JumperGreeting_0",
                "speaker": "Acolyte Marls",
                "text": "Enjoy the view. Feels like it'd stretch all the way to the Sea of Swords on a clear day. If this place ever gets a clear day.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_ObserverFishing": [
              {
                "id": "AD_ObserverFishing_0",
                "speaker": "Zealot Arden",
                "text": "Must've found some booze among the supplies. Idiot.",
                "node_type": "normal",
                "checkflags": [
                  "73cbf53d-6017-fdd5-a96a-9cae574a1bd9_A"
                ],
                "setflags": [
                  "73cbf53d-6017-fdd5-a96a-9cae574a1bd9_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Irritated, speaking to comrade who's just jumped into the water and sank"
              }
            ],
            "AD_Patroller000Witness": [
              {
                "id": "AD_Patroller000Witness_0",
                "speaker": "Zealot Renan",
                "text": "Did he just...?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: hesitant, incredulous"
              }
            ],
            "GuardPatroller001": [
              {
                "id": "GuardPatroller001_0",
                "speaker": "Adept Bel",
                "text": "By your leave, True Soul.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Docks_HasMet_Patroller001TadpolePowers",
                  "MOO_Docks_State_GuardWitnessTrueSoul"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Nervous of us, wants to get back to patrolling"
              }
            ],
            "Checkpoint": [
              {
                "id": "Checkpoint_20",
                "speaker": "Zealot Krizt",
                "text": "You - halt!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "18",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: With cool superiority"
              },
              {
                "id": "Checkpoint_37",
                "speaker": "Narrator",
                "text": "*Her thoughts invade your own, hunting for recognition. Your parasite offers it, readily.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "18",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Checkpoint_42",
                "speaker": "Zealot Krizt",
                "text": "True Soul. A pleasure. What news from the field?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "48",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Checkpoint_50",
                "speaker": "Player",
                "text": "Great news: your imminent death.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "FactionHostileToPlayerGroupAfterDialog"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "GuardObserver": "Guard is watching operations at Moonrise Docks. If the other guard jumped into the water, the player can use it to send this last guard away so they can examine the cargo.",
            "AD_Minthara_AtDocks": "",
            "GuardJumper": "An Absolute guard protecting crates at the dock. The crates contain tadpoles, intended to infect the citizens of Baldur's Gate. The guard doesn't know this, and if we force the knowledge on him his mind breaks.",
            "AD_JumperGreeting": "Acolyte Marls, who stands guard of the cargo at the docks, greets the player as they first pass by the docks at Moonrise.",
            "AD_ObserverFishing": "The Dock Guard Observer is standing peering over the dock where one of his subordinates just jumped into the water for apparently no reason. All lines are low grumbling, as if spoken to the dead man.",
            "AD_Patroller000Witness": "DockPatroller_000 witness DockJumper jumping into the water.",
            "GuardPatroller001": "An Absolute guard protecting crates at the dock.",
            "Checkpoint": "The guard mindmelds with player, senses their tadpole, and gladly lets them into the towers, telling them to report to Disciple Z'rell (Zuh-rELL)."
          }
        },
        "moo_ngb": {
          "scenario_name": "moo_ngb",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "moo_bazentranceguard": {
          "scenario_name": "moo_bazentranceguard",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "moo_balthazarssecrets": {
          "scenario_name": "moo_balthazarssecrets",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "bhvr_wrld": {
          "scenario_name": "bhvr_wrld",
          "session_sequence": [
            "MOO_Kansif_ReadingBook"
          ],
          "paths": {
            "MOO_Kansif_ReadingBook": [
              "MOO_Kansif_ReadingBook_0"
            ]
          },
          "node_data": {
            "MOO_Kansif_ReadingBook": [
              {
                "id": "MOO_Kansif_ReadingBook_0",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "MOO_Kansif_ReadingBook": ""
          }
        },
        "moo_necromancersroom": {
          "scenario_name": "moo_necromancersroom",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "moo_jailbreak": {
          "scenario_name": "moo_jailbreak",
          "session_sequence": [
            "PAD_ApproachingPrisoners",
            "AD_FlirtyTiefling",
            "AD_TieflingsFreed",
            "AD_TieflingInspection",
            "AD_GnomesInJail",
            "ProdigyBrother",
            "AD_ProdigiesInJail",
            "AD_WardenInspection",
            "AD_ToolRefused",
            "AD_WaitingForGnomes",
            "Guard_004",
            "GnomePrisoner_002",
            "Boat",
            "ProdigySister",
            "AD_ProdigySister",
            "AD_WardenChase",
            "Wulbren",
            "Warden",
            "AD_ProdigyBrother",
            "AD_TieflingLover",
            "AD_Wulbren",
            "GnomePrisoner_001",
            "AD_GoToTieflings"
          ],
          "paths": {
            "PAD_ApproachingPrisoners": [
              "PAD_ApproachingPrisoners_0",
              "PAD_ApproachingPrisoners_1"
            ],
            "AD_FlirtyTiefling": [
              "AD_FlirtyTiefling_1"
            ],
            "AD_TieflingsFreed": [
              "AD_TieflingsFreed_0"
            ],
            "AD_TieflingInspection": [
              "AD_TieflingInspection_17",
              "AD_TieflingInspection_3",
              "AD_TieflingInspection_16",
              "AD_TieflingInspection_9"
            ],
            "AD_GnomesInJail": [
              "AD_GnomesInJail_2",
              "AD_GnomesInJail_4",
              "AD_GnomesInJail_5",
              "AD_GnomesInJail_10",
              "AD_GnomesInJail_8"
            ],
            "ProdigyBrother": [
              "ProdigyBrother_0"
            ],
            "AD_ProdigiesInJail": [
              "AD_ProdigiesInJail_5",
              "AD_ProdigiesInJail_12",
              "AD_ProdigiesInJail_11",
              "AD_ProdigiesInJail_3"
            ],
            "AD_WardenInspection": [
              "AD_WardenInspection_10",
              "AD_WardenInspection_8",
              "AD_WardenInspection_12",
              "AD_WardenInspection_3",
              "AD_WardenInspection_1"
            ],
            "AD_ToolRefused": [
              "AD_ToolRefused_0"
            ],
            "AD_WaitingForGnomes": [
              "AD_WaitingForGnomes_0"
            ],
            "Guard_004": [
              "Guard_004_0"
            ],
            "GnomePrisoner_002": [
              "GnomePrisoner_002_0"
            ],
            "Boat": [
              "Boat_101",
              "Boat_0",
              "Boat_32",
              "Boat_15",
              "Boat_6",
              "Boat_93",
              "51",
              "NODE_NOT_FOUND"
            ],
            "ProdigySister": [
              "ProdigySister_47",
              "ProdigySister_12",
              "ProdigySister_23",
              "ProdigySister_110"
            ],
            "AD_ProdigySister": [
              "AD_ProdigySister_3"
            ],
            "AD_WardenChase": [
              "AD_WardenChase_0"
            ],
            "Wulbren": [
              "Wulbren_134",
              "Wulbren_43",
              "Wulbren_161",
              "Wulbren_211",
              "Wulbren_236",
              "Wulbren_22",
              "Wulbren_41",
              "Wulbren_36",
              "Wulbren_58",
              "Wulbren_32",
              "Wulbren_62",
              "Wulbren_26",
              "Wulbren_185",
              "Wulbren_151",
              "Wulbren_83",
              "Wulbren_4",
              "Wulbren_201"
            ],
            "Warden": [
              "Warden_35",
              "Warden_158",
              "Warden_101",
              "Warden_1",
              "Warden_103"
            ],
            "AD_ProdigyBrother": [
              "AD_ProdigyBrother_1"
            ],
            "AD_TieflingLover": [
              "AD_TieflingLover_0"
            ],
            "AD_Wulbren": [
              "AD_Wulbren_0"
            ],
            "GnomePrisoner_001": [
              "GnomePrisoner_001_1"
            ],
            "AD_GoToTieflings": [
              "AD_GoToTieflings_0"
            ]
          },
          "node_data": {
            "PAD_ApproachingPrisoners": [
              {
                "id": "PAD_ApproachingPrisoners_0",
                "speaker": "Player",
                "text": "Prisoners. I doubt they'll last long in here.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PAD_ApproachingPrisoners_1",
                "speaker": "Player",
                "text": "Careful. One wrong move and we'll be behind bars with them.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_FlirtyTiefling": [
              {
                "id": "AD_FlirtyTiefling_1",
                "speaker": "Lakrissa",
                "text": "Go, go!",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Jailbreak_State_BoatReady",
                  "d7a346d3-3876-7ab2-4b3a-f12103c2b096_H",
                  "MOO_Jailbreak_Event_ADPrepareBoatCombat"
                ],
                "setflags": [
                  "MOO_Jailbreak_Event_ForceBoatLeave",
                  "d7a346d3-3876-7ab2-4b3a-f12103c2b096_H = False",
                  "MOO_Jailbreak_Event_ADPrepareBoatCombat = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: leaving without the player, broken hearted and filled with regret"
              }
            ],
            "AD_TieflingsFreed": [
              {
                "id": "AD_TieflingsFreed_0",
                "speaker": "Wulbren Bongle",
                "text": "Follow or die, tieflings!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: yelling with authority and confidence"
              }
            ],
            "AD_TieflingInspection": [
              {
                "id": "AD_TieflingInspection_17",
                "speaker": "The Warden",
                "text": "Few survive Disciple Balthazar's experiments. This is your chance to submit to the Absolute - to find peace.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "4466a73c-607a-4a7e-c1e5-94d549e8f23d_A"
                ],
                "goto": "",
                "link": "12",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: this is, in a strange way, the warden trying to be comforting, even if it comes across cruel"
              },
              {
                "id": "AD_TieflingInspection_3",
                "speaker": "Danis",
                "text": "Leave me alone. Please.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: tried of being afraid"
              },
              {
                "id": "AD_TieflingInspection_16",
                "speaker": "The Warden",
                "text": "I am far gentler than Disciple Balthazar. You wish to live? Grow a spine.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: rubbing salt in the wound"
              },
              {
                "id": "AD_TieflingInspection_9",
                "speaker": "The Warden",
                "text": "Or, if you're very lucky, perhaps he will split you open and sew in a new one.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: a venemous smile at her cruel words"
              }
            ],
            "AD_GnomesInJail": [
              {
                "id": "AD_GnomesInJail_2",
                "speaker": "Nimble",
                "text": "We should leave - and soon.",
                "node_type": "normal",
                "checkflags": [
                  "74d25b24-618f-3f38-da72-8fbb9f6a8385_B"
                ],
                "setflags": [
                  "74d25b24-618f-3f38-da72-8fbb9f6a8385_A = False",
                  "74d25b24-618f-3f38-da72-8fbb9f6a8385_B = False"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: scared and a little frantic"
              },
              {
                "id": "AD_GnomesInJail_4",
                "speaker": "Wulbren Bongle",
                "text": "That is the plan, Nickels.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: sarcasm and condescending"
              },
              {
                "id": "AD_GnomesInJail_5",
                "speaker": "Nickels",
                "text": "There's something evil here. Below, down, down... argh!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: scared and panicked, noise of pain at 'argh'. Clutches head briefly"
              },
              {
                "id": "AD_GnomesInJail_10",
                "speaker": "Nimble",
                "text": "Breathe - I've got you.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: comforting her friend"
              },
              {
                "id": "AD_GnomesInJail_8",
                "speaker": "Wulbren Bongle",
                "text": "Unless this 'evil' can get us out of here, I don't want to hear about it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: doesn't really give a shit his comrade is scrared - focused on himself and the plan"
              }
            ],
            "ProdigyBrother": [
              {
                "id": "ProdigyBrother_0",
                "speaker": "Cal",
                "text": "Don't talk to us. You're just making it worse.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Jailbreak_HasMet_AngrySister",
                  "MOO_Jailbreak_HasMet_ProdigyBrother"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: player has refused to help you - furious"
              }
            ],
            "AD_ProdigiesInJail": [
              {
                "id": "AD_ProdigiesInJail_5",
                "speaker": "Cal",
                "text": "I can't believe Rolan is gone. Gods, just saying it out loud...",
                "node_type": "normal",
                "checkflags": [
                  "GLO_Prodigy_State_ToldSiblingsProdigyDead",
                  "3174fc37-851b-0494-321e-b606f7e43901_A"
                ],
                "setflags": [
                  "3174fc37-851b-0494-321e-b606f7e43901_B"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: frantic, looking through the bars, panicked"
              },
              {
                "id": "AD_ProdigiesInJail_12",
                "speaker": "Lia",
                "text": "Let's focus on escaping, all right?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: gently practical"
              },
              {
                "id": "AD_ProdigiesInJail_11",
                "speaker": "Lia",
                "text": "We'll give Rolan the send off he deserves - when we're both safe.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: gently practical"
              },
              {
                "id": "AD_ProdigiesInJail_3",
                "speaker": "Cal",
                "text": "You're right. Let's... let's talk about something else.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: heartbroken, but knows lia is right"
              }
            ],
            "AD_WardenInspection": [
              {
                "id": "AD_WardenInspection_10",
                "speaker": "The Warden",
                "text": "All comfortable, I hope?",
                "node_type": "normal",
                "checkflags": [
                  "25c1ac70-f65f-4869-8a74-eff5827d9cde"
                ],
                "setflags": [
                  "c9e1ff2a-01e2-abdb-b98e-2d4a35b3c7dc_A"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: smirking as she speaks to her prisoners - cruel"
              },
              {
                "id": "AD_WardenInspection_8",
                "speaker": "Wulbren Bongle",
                "text": "Delightful accommodation. You spoil us, Warden.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: sarcasm - knows he shouldn't sass the warden but can't help himself"
              },
              {
                "id": "AD_WardenInspection_12",
                "speaker": "The Warden",
                "text": "Keep that wit - you'll need it, little Wulbren.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: taunting a prisoner with a cold, cruel smile"
              },
              {
                "id": "AD_WardenInspection_3",
                "speaker": "Wulbren Bongle",
                "text": "The hells you call me?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: losing his temper at the warden"
              },
              {
                "id": "AD_WardenInspection_1",
                "speaker": "The Warden",
                "text": "There it is. You act bold, but there is a weak, temperamental child beneath the mask. I see it. I see you.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: satisfied grin as she taunts a prisoner with a cold, cruel smile"
              }
            ],
            "AD_ToolRefused": [
              {
                "id": "AD_ToolRefused_0",
                "speaker": "Wulbren Bongle",
                "text": "Gaerdal help me - how about a club? A hammer? Hurry!",
                "node_type": "normal",
                "checkflags": [
                  "100f38ef-e9bb-ae9b-0804-f82a335fb3c9_B"
                ],
                "setflags": [
                  "100f38ef-e9bb-ae9b-0804-f82a335fb3c9_A = False",
                  "100f38ef-e9bb-ae9b-0804-f82a335fb3c9_B = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: on the brink of losing his temper, trying to sound authorative but he really just wants to call the player an idiot"
              }
            ],
            "AD_WaitingForGnomes": [
              {
                "id": "AD_WaitingForGnomes_0",
                "speaker": "Lakrissa",
                "text": "Shh. Not a word - the gnomes are on their way.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Quiet, hushed, determined (about to escape the prison)"
              }
            ],
            "Guard_004": [
              {
                "id": "Guard_004_0",
                "speaker": "Zealot Nadi",
                "text": "Don't speak to the prisoners. The Absolute forbids it.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Jailbreak_HasMet_Guard004 = False"
                ],
                "setflags": [
                  "MOO_Jailbreak_HasMet_Guard004"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "GnomePrisoner_002": [
              {
                "id": "GnomePrisoner_002_0",
                "speaker": "Nickels",
                "text": "Nimble said to close my eyes. But I can hear it - the stone is screaming.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Jailbreak_HasMet_Gnome003AtBoat",
                  "MOO_Jailbreak_State_Escaping",
                  "MOO_Jailbreak_State_BoatEscape"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: terrified"
              }
            ],
            "Boat": [
              {
                "id": "Boat_101",
                "speaker": "Wulbren Bongle",
                "text": "Boat's good to go - all that's left is to ship off.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Jailbreak_State_BoatLeader"
                ],
                "setflags": [],
                "goto": "",
                "link": "1",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: tense but relieved - they've made it to the boat and are about to flee moonrise"
              },
              {
                "id": "Boat_0",
                "speaker": "Wulbren Bongle",
                "text": "My plan, for now, is to hide out on the water. Unless you have a better idea?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "30d43adb-dcaf-c0f3-d432-af96a1c2e1ea_spoketowulbren"
                ],
                "goto": "",
                "link": "1",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Boat_32",
                "speaker": "Player",
                "text": "If I were you, I'd stay on the water. But it's your call.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_Jailbreak_Event_BoatLeavesWithoutPlayers"
                ],
                "goto": "",
                "link": "93",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Boat_15",
                "speaker": "Danis",
                "text": "True - anywhere is better than here.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: worried but trying to be confident"
              },
              {
                "id": "Boat_6",
                "speaker": "Danis",
                "text": "But I can't leave without saying this - something big is going on in Moonrise. I heard whispers of something - an army. Do what you have to here, and then leave. Soon.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: worried for player"
              },
              {
                "id": "Boat_93",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "51",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "51",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ],
            "ProdigySister": [
              {
                "id": "ProdigySister_47",
                "speaker": "Lia",
                "text": "Let me guess - 'The Absolute is the only way.'? Don't bother.",
                "node_type": "normal",
                "checkflags": [
                  "8a4a686d-6c47-411f-a0b3-d79ff33e2922"
                ],
                "setflags": [
                  "MOO_Jailbreak_HasMet_ProdigySister",
                  "MOO_Jailbreak_Event_ProdigyIntro"
                ],
                "goto": "",
                "link": "113",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: disgust - assumes player is a traitor"
              },
              {
                "id": "ProdigySister_12",
                "speaker": "Lia",
                "text": "Why don't you and Zevlor take a long walk off a short cliff?",
                "node_type": "normal",
                "checkflags": [
                  "DEN_TieflingLeader_State_PermaDefeated = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "113",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: disgust - assumes player is a traitor"
              },
              {
                "id": "ProdigySister_23",
                "speaker": "Player",
                "text": "This isn't my problem.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_Jailbreak_HasMet_AngrySister"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Astarion 1",
                  "Gale -1",
                  "Lae'zel 1",
                  "Shadowheart 1",
                  "Wyll -1",
                  "Karlach 1",
                  "Minthara 1",
                  "Halsin -1"
                ],
                "context": ""
              },
              {
                "id": "ProdigySister_110",
                "speaker": "Lia",
                "text": "Why are you even here? Go run and play with Zev, yeah?",
                "node_type": "normal",
                "checkflags": [
                  "DEN_TieflingLeader_State_PermaDefeated = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: disgusted with player"
              }
            ],
            "AD_ProdigySister": [
              {
                "id": "AD_ProdigySister_3",
                "speaker": "Lia",
                "text": "Let's not push our luck any further - we should move.",
                "node_type": "normal",
                "checkflags": [
                  "0276d317-8b34-66e2-48e2-6b9d69d6830b_E",
                  "MOO_Jailbreak_Event_ADWaitingForBoat"
                ],
                "setflags": [
                  "0276d317-8b34-66e2-48e2-6b9d69d6830b_F",
                  "MOO_Jailbreak_Event_ADWaitingForBoat = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: tense  - waiting by the boat and safe for now, but that could change at a moment's notice"
              }
            ],
            "AD_WardenChase": [
              {
                "id": "AD_WardenChase_0",
                "speaker": "The Warden",
                "text": "The prisoners are escaping! All arms to me - NOW.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Roaring with authority and fury"
              }
            ],
            "Wulbren": [
              {
                "id": "Wulbren_134",
                "speaker": "Wulbren Bongle",
                "text": "Nimble! Check for gaps, cracks - anything to leverage the rock.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_Jailbreak_HasMet_Wulbren",
                  "MOO_Jailbreak_Knows_GnomeEscape"
                ],
                "goto": "",
                "link": "249",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Back to the player, speaking to the gnomes\rNodeContext: determined and confident - used to giving orders and having them followed a she plans his escape"
              },
              {
                "id": "Wulbren_43",
                "speaker": "Wulbren Bongle",
                "text": "Nickels: tools - get creative. This rock is basalt - it'll crack with enough pressure.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "249",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: determined and confident - used to giving orders and having them followed a she plans his escape"
              },
              {
                "id": "Wulbren_161",
                "speaker": "Wulbren Bongle",
                "text": "Ah! Don't mind us, True Soul. The back wall is weak - we're working to brace it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "249",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Turns and sees the player. Surpise Ah! And then rallies himself, trying to turn the situation to his advantage\rNodeContext: Surprise on Ah! sees player, assumes they are the bad guy. Confidently rallies himself and tries to turn the situation to his advantage."
              },
              {
                "id": "Wulbren_211",
                "speaker": "",
                "text": "",
                "node_type": "visualstate",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "249",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Wulbren_236",
                "speaker": "Player",
                "text": "You're clearly planning an escape.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "249",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Wulbren_22",
                "speaker": "Wulbren Bongle",
                "text": "I wouldn't be so foolish as to think I could escape the Absolute.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "249",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: player says he's planning an escape. He casually denies it but is also trying to probe the player"
              },
              {
                "id": "Wulbren_41",
                "speaker": "Wulbren Bongle",
                "text": "The Warden has eyes everywhere. And ears.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "249",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: trying to see who's side the player is on"
              },
              {
                "id": "Wulbren_36",
                "speaker": "Player",
                "text": "What if I were here to help you escape?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "249",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Wulbren_58",
                "speaker": "Wulbren Bongle",
                "text": "Huh. And why would you be so inclined?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "249",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: A beat - wulbren is suspicious of the player but part of him wants to believe the player"
              },
              {
                "id": "Wulbren_32",
                "speaker": "Player",
                "text": "My mind is my own - the Absolute has no control over me.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "4",
                "is_end": false,
                "approval": [
                  "Gale 1",
                  "Lae'zel 1",
                  "Astarion 1",
                  "Shadowheart 1",
                  "Wyll 1",
                  "Karlach 1",
                  "Halsin 1",
                  "Minthara 1"
                ],
                "context": ""
              },
              {
                "id": "Wulbren_62",
                "speaker": "",
                "text": "True",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "4",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Wulbren_26",
                "speaker": "Wulbren Bongle",
                "text": "The Absolute thinks she's got you by the scruff of the neck, but it's the other way round, isn't it?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "4",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: a beat and then a slow smile - the player has impressed wulbren"
              },
              {
                "id": "Wulbren_185",
                "speaker": "Wulbren Bongle",
                "text": "I reckon you and I were meant to meet - I'm Wulbren.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "4",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Wulbren_151",
                "speaker": "Player",
                "text": "I'm [GEN_PlayerName_c11eee1e-7815-6143-7233-f2427799fa53] - pleasure to meet you.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "4",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Wulbren_83",
                "speaker": "Wulbren Bongle",
                "text": "We've a plan - but all the determination in the world is nothing without the right equipment.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: determined, confident - with the player on his side his plan can work"
              },
              {
                "id": "Wulbren_4",
                "speaker": "Wulbren Bongle",
                "text": "We need tools. That headcase of a Warden robbed ours, but anything that breaks rock will do - even if it's not Ironhand quality.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_Jailbreak_Knows_ToolsNeeded"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: determined, confident - with the player on his side his plan can work"
              },
              {
                "id": "Wulbren_201",
                "speaker": "Wulbren Bongle",
                "text": "Whatever you find, throw it through the bars. But for the love of Gaerdal make sure a guard doesn't see you - or we're both done for.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: determined, confident - with the player on his side his plan can work"
              }
            ],
            "Warden": [
              {
                "id": "Warden_35",
                "speaker": "The Warden",
                "text": "You spark of the familiar. Do I know you, True Soul?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_Jailbreak_HasMet_Warden"
                ],
                "goto": "",
                "link": "53",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Looking over the player with a curious glance"
              },
              {
                "id": "Warden_158",
                "speaker": "The Warden",
                "text": "Hm. Perhaps not - your face is rather bland.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "53",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: not impressed"
              },
              {
                "id": "Warden_101",
                "speaker": "The Warden",
                "text": "Regardless, know this - I am the Warden. The prisoners are my charges, and I answer to Disciple Balthazar himself. Stay on my good side.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: gravitas and pride."
              },
              {
                "id": "Warden_1",
                "speaker": "Player",
                "text": "Your face is pretty bland too.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Lae'zel 1",
                  "Gale 1",
                  "Astarion 1",
                  "Shadowheart 1",
                  "Wyll 1",
                  "Karlach 1",
                  "Minthara 1",
                  "Halsin 1"
                ],
                "context": ""
              },
              {
                "id": "Warden_103",
                "speaker": "The Warden",
                "text": "My face might be bland, but yours? It is now carved into my memory - forever.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ],
            "AD_ProdigyBrother": [
              {
                "id": "AD_ProdigyBrother_1",
                "speaker": "Cal",
                "text": "I can't stand this place. What's the hold up?",
                "node_type": "normal",
                "checkflags": [
                  "HAV_ProdigyLament_Event_ToldDeadSiblings",
                  "8f847adf-7b8a-3551-cfc0-4ea0c66a999a_E",
                  "MOO_Jailbreak_Event_ADWaitingForBoat"
                ],
                "setflags": [
                  "8f847adf-7b8a-3551-cfc0-4ea0c66a999a_F",
                  "MOO_Jailbreak_Event_ADWaitingForBoat = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: quiet and tense  - waiting by the boat and safe for now, but that could change at a moment's notice"
              }
            ],
            "AD_TieflingLover": [
              {
                "id": "AD_TieflingLover_0",
                "speaker": "Danis",
                "text": "We don't have time. Get to the boat, or we leave!",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Jailbreak_State_BoatReady",
                  "MOO_Jailbreak_Event_ADPrepareBoatCombat"
                ],
                "setflags": [
                  "4951b7ce-8495-b2c8-badc-beaff0e3d807_H",
                  "MOO_Jailbreak_Event_ADPrepareBoatCombat = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: calling out to the player, who is in combat. Wants to leave on the boat and now"
              }
            ],
            "AD_Wulbren": [
              {
                "id": "AD_Wulbren_0",
                "speaker": "Wulbren Bongle",
                "text": "Blasted chains - keep the bastards off me!",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Jailbreak_Event_ADPrepareBoatCombat"
                ],
                "setflags": [
                  "MOO_Jailbreak_Event_ADPrepareBoatCombat = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: gritted teeth, trying to break the chains that have tied up the boat. Trying not to panic"
              }
            ],
            "GnomePrisoner_001": [
              {
                "id": "GnomePrisoner_001_1",
                "speaker": "Nimble",
                "text": "Wulbren is the one you want, not I.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Jailbreak_HasMet_Gnome001"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: dedicated and servile"
              }
            ],
            "AD_GoToTieflings": [
              {
                "id": "AD_GoToTieflings_0",
                "speaker": "Wulbren Bongle",
                "text": "Break the wall and go - if the tieflings can't keep up, it's their problem.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_Jailbreak_Event_SaveTieflings"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: running through the prison, brisk tone, he's annoyed he has to free the tieflings"
              }
            ]
          },
          "session_synopses": {
            "PAD_ApproachingPrisoners": "Quick VB about the prisoners and the fate that awaits them. This is mainly used to draw attention to them as the players explore the prison area.",
            "AD_FlirtyTiefling": "Collection of solo ADs used by character during the Jailbreak escape in Moonrise Towers.",
            "AD_TieflingsFreed": "Wulbren has just bust down the back wall of a prison to very surprised tieflings, who he barks this out at.",
            "AD_TieflingInspection": "Warden has an exchange with the tieflings in Jail.",
            "AD_GnomesInJail": "The gnomes are in jail and discussing their predicament. Wulbren is taking charge and nickles and nimble are doing their best to help.",
            "ProdigyBrother": "Cal is the brother of Lia and Rolan. He was ambushed along with the other tieflings and taken to Moonrise. His brother Rolan is at Last light inn. He is afraid but trying to be strong for the other tieflings, and is determined to save his sister.",
            "AD_ProdigiesInJail": "AD between Cal and Lia in Moonris prison. They are exhausted and being held by murderous cultists of the Absolute.",
            "AD_WardenInspection": "Warden heard the gnomes are up to no good and goes verify by herself. The warden stands outside their cell and essentially taunts them - she thinks they are worthless and will die in the cell.",
            "AD_ToolRefused": "Wulbren has asked the player to get 'tools'. Player has to throw the tool to him in the cell. In this instance, player has thrown something to him he can't use.",
            "AD_WaitingForGnomes": "Tieflings will wait for the gnomes to rescue them if the gnome have tools and their back wall is broken down whilst the tieflings are still in their cells.Their out of combat behaviour has them huddle close to their own wall, hoping for rescue.If combat starts, they give in and start smacking the wall as well.",
            "Guard_004": "Nadi doesn't enjoy being a prison guard but considers it her duty. She tries to reassure the player.",
            "GnomePrisoner_002": "Nickles is a savant who has an incredible ability to read the earth and stone around him, but is nervous and quite fearful as a person. He is easily frightened. He is imprisoned in moonrise and in the following lines escapes by boat (which he hates)/fights his way out/ and has a general greeting.",
            "Boat": "After Wulbren instigates the escape any escaping prisoners try to make it to the boat and flee Moonrise. This dialogue covers the case in which the boat leaves without the player or joins them in the escape.",
            "ProdigySister": "This is lia's main dialogue in moonrise towers. She's been taken captive (along with her brother cal) - she doesn't know if her other brother rolan is alive or dead. Lia is brave and used to being in tough situations, but she's terrified for herself anf her brother (and trying to mask it with anger). Her main dialogue occurs with her in a cell and speaking to the player on the other side of the bars. There are additional branches for when she's in one cell and the player was arrested an in the cell next to her.",
            "AD_ProdigySister": "Collection of solo ADs used by character during the Jailbreak escape in Moonrise Towers. This is a high stress and tense situation as this character tries to flee murderous cultists.",
            "AD_WardenChase": "Warden runs out of her post to go after the prisoners.",
            "Wulbren": "Wulbren is the leader of the Ironhand Gnomes. He is currently imprisoned in moonrise towers. He has the lazy charm of arrogant and the determination and cunning of the leader of a revolution. In this dialogue he offers you the main quest - to free him and the tieflings from the prison. He can speak to you through the bars - either with the player in prison, OR with the player speaking to them from the outside. NOTE: Wulbren pushes hard to charm the player and make them think they're friends. He keeps the friendly and charming mask on tight (dropping it only when he insults the player). We can have the lightest touch of menace in this dialogue, a hint that he's holding something back or that there is more to this than it seems, but it should be a light touch. He is friendly and charming here (the mask will drop back at Haven when he is rescued).",
            "Warden": "The Warden is a devout follower of the Absolute with an iron will, but also a sense of mischief. When the player approaches, she sees it as an opportunity to play with the player a little bit - like a cat with a mouse.",
            "AD_ProdigyBrother": "Collection of solo ADs used by character during the Jailbreak escape in Moonrise Towers.",
            "AD_TieflingLover": "Collection of solo ADs used by character during the Jailbreak escape in Moonrise Towers.",
            "AD_Wulbren": "Collection of solo ADs used by character during the Jailbreak escape in Moonrise Towers.",
            "GnomePrisoner_001": "Nimble is a devout and loyal follower of Wulbren (and a bit of a lickarse). He's dedicated to the ironhand gnomes but does not give a crap about anyone else. He is imprisoned in moonrise towers in these lines/fighting his way out/fleeing by boat.",
            "AD_GoToTieflings": "Wulbren on the way to free the tieflings."
          }
        },
        "moo_hiddentreasure": {
          "scenario_name": "moo_hiddentreasure",
          "session_sequence": [
            "PAD_MapMarker"
          ],
          "paths": {
            "PAD_MapMarker": [
              "PAD_MapMarker_0"
            ]
          },
          "node_data": {
            "PAD_MapMarker": [
              {
                "id": "PAD_MapMarker_0",
                "speaker": "Player",
                "text": "Someone's marked a spot at the base of Moonrise Towers. Worth a look.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_MapMarker": "In the cursed town, players find a map of Moonrise marked with treasure."
          }
        },
        "moo_upperfloor": {
          "scenario_name": "moo_upperfloor",
          "session_sequence": [
            "TrespassWarning"
          ],
          "paths": {
            "TrespassWarning": [
              "TrespassWarning_30",
              "TrespassWarning_38",
              "TrespassWarning_29",
              "TrespassWarning_6",
              "TrespassWarning_23",
              "TrespassWarning_4"
            ]
          },
          "node_data": {
            "TrespassWarning": [
              {
                "id": "TrespassWarning_30",
                "speaker": "Zealot Klen",
                "text": "Halt. I know neither your stride nor your bearing.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "40",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "TrespassWarning_38",
                "speaker": "Zealot Klen",
                "text": "Disciples may enter. All others are to be culled, by the General's decree.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "40",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "TrespassWarning_29",
                "speaker": "Narrator",
                "text": "*A strange symbol glows, marked on their flesh, and something within you stirs in response.*",
                "node_type": "normal",
                "checkflags": [
                  "GLO_TadpoleIntro_NPC = False"
                ],
                "setflags": [
                  "GLO_TadpoleIntro_NPC"
                ],
                "goto": "",
                "link": "40",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Symbol on NPC glows\rInternalNodeContext: Delete if you are talking to a companion."
              },
              {
                "id": "TrespassWarning_6",
                "speaker": "Player",
                "text": "I work for the General. Perhaps he should hear of your insolence.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "40",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "TrespassWarning_23",
                "speaker": "",
                "text": "False",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "TrespassWarning_4",
                "speaker": "Zealot Klen",
                "text": "I know my orders. For the Absolute.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "FactionHostileToIndivPlayerAfterDialog"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Gearing up to attack"
              }
            ]
          },
          "session_synopses": {
            "TrespassWarning": "A guard questions intruding players on the upper floor of Moonrise Tower"
          }
        },
        "moo_executionthrone": {
          "scenario_name": "moo_executionthrone",
          "session_sequence": [
            "PAD_Use"
          ],
          "paths": {
            "PAD_Use": [
              "PAD_Use_2",
              "PAD_Use_1",
              "PAD_Use_0"
            ]
          },
          "node_data": {
            "PAD_Use": [
              {
                "id": "PAD_Use_2",
                "speaker": "Narrator",
                "text": "*From this seat, Ketheric defied gods and raised an army for the Absolute.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Grand shot of Ketheric's hall over the player's shoulder."
              },
              {
                "id": "PAD_Use_1",
                "speaker": "Narrator",
                "text": "*It is not particularly comfortable.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Shot of player shifting"
              },
              {
                "id": "PAD_Use_0",
                "speaker": "Player",
                "text": "Don't get used to it. One taste of regal power might have you craving more.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_Use": "The player sits on Ketherics throne. They feel powerful, though their companions are not convinced. ."
          }
        },
        "moo_isobelroom": {
          "scenario_name": "moo_isobelroom",
          "session_sequence": [
            "AD_MelodiaThorm"
          ],
          "paths": {
            "AD_MelodiaThorm": [
              "AD_MelodiaThorm_0"
            ]
          },
          "node_data": {
            "AD_MelodiaThorm": [
              {
                "id": "AD_MelodiaThorm_0",
                "speaker": "Narrator",
                "text": "*Melodia Thorm, loving mother, beloved wife. Her light will never be forgotten.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_MelodiaThorm": "Bust of Melodia Thorm in Isobel's Room in Moonrise"
          }
        },
        "moo_crime": {
          "scenario_name": "moo_crime",
          "session_sequence": [
            "LoneUnwelcomeTowerVisitorApproach"
          ],
          "paths": {
            "LoneUnwelcomeTowerVisitorApproach": [
              "LoneUnwelcomeTowerVisitorApproach_4",
              "LoneUnwelcomeTowerVisitorApproach_7",
              "LoneUnwelcomeTowerVisitorApproach_2"
            ]
          },
          "node_data": {
            "LoneUnwelcomeTowerVisitorApproach": [
              {
                "id": "LoneUnwelcomeTowerVisitorApproach_4",
                "speaker": "Narrator",
                "text": "*The cult know you live, but believe you to be a thrall, with your mind erased. Best not be seen here without one of your tadpoled companions.*",
                "node_type": "normal",
                "checkflags": [
                  "REALLY_MINTHARA"
                ],
                "setflags": [],
                "goto": "",
                "link": "7",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "LoneUnwelcomeTowerVisitorApproach_7",
                "speaker": "Player",
                "text": "Prepare to push onwards into Moonrise, whatever the risk.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "LoneUnwelcomeTowerVisitorApproach_2",
                "speaker": "Narrator",
                "text": "*Steel yourself, and venture forth.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "LoneUnwelcomeTowerVisitorApproach": ""
          }
        },
        "moo_flyingghoul": {
          "scenario_name": "moo_flyingghoul",
          "session_sequence": [
            "AD_Hungry"
          ],
          "paths": {
            "AD_Hungry": [
              "AD_Hungry_7",
              "AD_Hungry_8",
              "AD_Hungry_1",
              "AD_Hungry_3"
            ]
          },
          "node_data": {
            "AD_Hungry": [
              {
                "id": "AD_Hungry_7",
                "speaker": "Winged Horror",
                "text": "Why foot-flesh?",
                "node_type": "normal",
                "checkflags": [
                  "375a6f59-375f-f5eb-5f42-60de2dc6aa6b_B = False"
                ],
                "setflags": [
                  "375a6f59-375f-f5eb-5f42-60de2dc6aa6b_B"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_Hungry_8",
                "speaker": "Winged Horror",
                "text": "Hrnng, chewy. Best flesh.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_Hungry_1",
                "speaker": "Winged Horror",
                "text": "But... it is all full of little bones.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_Hungry_3",
                "speaker": "Winged Horror",
                "text": "Yes, good crunch! And sooo salty, too.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_Hungry": "There are three winged ghouls on the upper exterior of Moonrise. They are slightly more intellegent then the wingless ghouls near the Moonrise entrance and the two groups have beef with eachother, They crave fresh meat and don't think much of anything else."
          }
        },
        "moo_ketherichound": {
          "scenario_name": "moo_ketherichound",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "moo_kitchenfight": {
          "scenario_name": "moo_kitchenfight",
          "session_sequence": [
            "GnollMaster",
            "MasterGrieving",
            "AD_FoodPrepComment"
          ],
          "paths": {
            "GnollMaster": [
              "GnollMaster_26",
              "GnollMaster_24",
              "GnollMaster_4",
              "GnollMaster_63",
              "GnollMaster_9"
            ],
            "MasterGrieving": [
              "MasterGrieving_0"
            ],
            "AD_FoodPrepComment": [
              "AD_FoodPrepComment_5",
              "AD_FoodPrepComment_4",
              "AD_FoodPrepComment_2"
            ]
          },
          "node_data": {
            "GnollMaster": [
              {
                "id": "GnollMaster_26",
                "speaker": "Linsella",
                "text": "A moment, True Soul.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_KitchenFight_HasMet_GnollMaster"
                ],
                "goto": "",
                "link": "1",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Mid-conversation with a gnoll, holds up hand to us as we approach"
              },
              {
                "id": "GnollMaster_24",
                "speaker": "Linsella",
                "text": "You use a spoon to stir the soup, Barnabus. Forget the axe, my darling.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "1",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Kindly - speaking to a favourite child that is none too bright"
              },
              {
                "id": "GnollMaster_4",
                "speaker": "'Barnabus'",
                "text": "*Soft hoot.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "1",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Gnoll tilts its head and nods.\rNodeContext: Gnolls make hyena noises - this is a soft sound of acknowledgement/comprehension. Tilting its head and nodding."
              },
              {
                "id": "GnollMaster_63",
                "speaker": "Linsella",
                "text": "Now! How can I help you?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "1",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Turns back to us\rNodeContext: Chipper, friendly"
              },
              {
                "id": "GnollMaster_9",
                "speaker": "Player",
                "text": "Leave.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_KitchenFight_State_SeenPower = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "MasterGrieving": [
              {
                "id": "MasterGrieving_0",
                "speaker": "Linsella",
                "text": "Poor Barnabus. I'll have to find another favourite.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Genuinely sad. Her favourite 'pet' gnoll died."
              }
            ],
            "AD_FoodPrepComment": [
              {
                "id": "AD_FoodPrepComment_5",
                "speaker": "'Tomelia'",
                "text": "*Yip.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "ae02eeb5-f7ff-1acd-f876-094b74795d0f_A = False",
                  "ae02eeb5-f7ff-1acd-f876-094b74795d0f_B = False"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_FoodPrepComment_4",
                "speaker": "Linsella",
                "text": "I still see some bone in there, my love - remember that we don't all have teeth as big as yours.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Kindly, but softly chiding"
              },
              {
                "id": "AD_FoodPrepComment_2",
                "speaker": "'Tomelia'",
                "text": "*Whine.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "GnollMaster": "A True Soul oversees some gnolls in the kitchen. They're uncharacteristically quiet, and she explains that the Absolute has given her the ability to 'bring out the good' in then. In truth she is simply dominating them - she'll demonstrate by forcing the gnoll to perform tricks, but we can subvert her power and let the gnoll kill her.",
            "MasterGrieving": "",
            "AD_FoodPrepComment": "Tomelia the Gnoll is cooking a meal under the mind control of Linsella, the Gnoll Master. She provides some feedback and encouragement as the gnoll brings her food creation. Gnoll sounds are no VO, SFX only."
          }
        },
        "moo_dridercaravan": {
          "scenario_name": "moo_dridercaravan",
          "session_sequence": [
            "AD_GoingForBreak"
          ],
          "paths": {
            "AD_GoingForBreak": [
              "AD_GoingForBreak_3",
              "AD_GoingForBreak_2",
              "AD_GoingForBreak_1",
              "AD_GoingForBreak_0"
            ]
          },
          "node_data": {
            "AD_GoingForBreak": [
              {
                "id": "AD_GoingForBreak_3",
                "speaker": "Sharp-Eye Lora",
                "text": "Ah. You survived this run.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Just finished a dangerous patrol - spoken to a friend as if pleasantly surprised (a joke)"
              },
              {
                "id": "AD_GoingForBreak_2",
                "speaker": "Warrior Gronag",
                "text": "You and all.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Responding as if pleasantly surprised his friend survived."
              },
              {
                "id": "AD_GoingForBreak_1",
                "speaker": "Sharp-Eye Lora",
                "text": "Drink?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Raised eyebrow to friend - this is what they always do"
              },
              {
                "id": "AD_GoingForBreak_0",
                "speaker": "Warrior Gronag",
                "text": "Drink.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: A confirmation in response to \"Drink?\" from a friend."
              }
            ]
          },
          "session_synopses": {
            "AD_GoingForBreak": "|Goblins just finished their escort job with the drider caravan. They deserve some rest.|"
          }
        },
        "moo_misc": {
          "scenario_name": "moo_misc",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "moo_necromancerlab": {
          "scenario_name": "moo_necromancerlab",
          "session_sequence": [
            "AD_DUBackgroundBook"
          ],
          "paths": {
            "AD_DUBackgroundBook": [
              "AD_DUBackgroundBook_0"
            ]
          },
          "node_data": {
            "AD_DUBackgroundBook": [
              {
                "id": "AD_DUBackgroundBook_0",
                "speaker": "",
                "text": "Tendays of dissections of a still-living victim.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_DUBackgroundBook": "Dark Urge reads S_MOO_NecromancerLab_DUBackgroundBook_f19e7958-819d-473e-bed3-5aa5fb4101a3"
          }
        },
        "geb_moo": {
          "scenario_name": "geb_moo",
          "session_sequence": [
            "Jailbreak_AD_SpottedMissingPrisoners",
            "General_SpottedUnwelcomeVisitors"
          ],
          "paths": {
            "Jailbreak_AD_SpottedMissingPrisoners": [
              "Jailbreak_AD_SpottedMissingPrisoners_0"
            ],
            "General_SpottedUnwelcomeVisitors": [
              "General_SpottedUnwelcomeVisitors_0"
            ]
          },
          "node_data": {
            "Jailbreak_AD_SpottedMissingPrisoners": [
              {
                "id": "Jailbreak_AD_SpottedMissingPrisoners_0",
                "speaker": "",
                "text": "Get the Warden - the prisoners have escaped!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Panic"
              }
            ],
            "General_SpottedUnwelcomeVisitors": [
              {
                "id": "General_SpottedUnwelcomeVisitors_0",
                "speaker": "Narrator",
                "text": "*You're not welcome in Moonrise, and your presence hasn't gone unnoticed. Time to fight... or flee.*",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Crimes_State_UnwelcomeVisitorAccompanied = False"
                ],
                "setflags": [
                  "FactionHostileToPlayerGroupAfterDialog"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "Jailbreak_AD_SpottedMissingPrisoners": "This fires when a guard notices that the prisoners in Moonrise Towers are missing from their cells.",
            "General_SpottedUnwelcomeVisitors": ""
          }
        },
        "moo_entrancecheckpoint": {
          "scenario_name": "moo_entrancecheckpoint",
          "session_sequence": [
            "Guard2",
            "",
            "AD_Guards"
          ],
          "paths": {
            "Guard2": [
              "Guard2_0"
            ],
            "": [
              "27",
              "44",
              "47",
              "53",
              "50",
              "58",
              "35"
            ],
            "AD_Guards": [
              "AD_Guards_7",
              "AD_Guards_8",
              "AD_Guards_1",
              "AD_Guards_0"
            ]
          },
          "node_data": {
            "Guard2": [
              {
                "id": "Guard2_0",
                "speaker": "Adept Merim",
                "text": "Plenty of supplies if you're running low, True Soul.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_EntranceCheckpoint_Guard2_HasMet_AllowedIn = False"
                ],
                "setflags": [
                  "MOO_EntranceCheckpoint_Guard2_HasMet_AllowedIn"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Gruff greeting"
              }
            ],
            "": [
              {
                "id": "27",
                "speaker": "Zealot Malik",
                "text": "That's far enough.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "44",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: With cool superiority"
              },
              {
                "id": "44",
                "speaker": "Narrator",
                "text": "*His thoughts invade your own, probing for purchase. Your parasite purrs in recognition.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "1",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "47",
                "speaker": "Zealot Malik",
                "text": "Ah, one blessed like myself. What news, True Soul?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "52",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "53",
                "speaker": "Player",
                "text": "Great news: I'm here to take your head.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Karlach 1",
                  "Lae'zel 1",
                  "Minthara 1"
                ],
                "context": ""
              },
              {
                "id": "50",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "58",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "58",
                "speaker": "Zealot Malik",
                "text": "Did you hear that, sister?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Getting ready to fight, so sinister edge."
              },
              {
                "id": "35",
                "speaker": "Adept Merim",
                "text": "Did I ever.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "FactionHostileToPlayerGroupAfterDialog"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Combat is about to start - should have that edge"
              }
            ],
            "AD_Guards": [
              {
                "id": "AD_Guards_7",
                "speaker": "Zealot Malik",
                "text": "I hear we march come first light.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_Guards_8",
                "speaker": "Adept Merim",
                "text": "There is no light here.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_Guards_1",
                "speaker": "Zealot Malik",
                "text": "I was speaking figuratively.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_Guards_0",
                "speaker": "Adept Merim",
                "text": "I'd prefer you to speak sense.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "Guard2": "Guard who stops you at the entrance to Moonrise Towers.",
            "": "In this dialogue the player attempts to enter moonrise WITHOUT the drider. The guard mindmelds with player, senses their tadpole, and gladly lets them into the towers, telling them to report to Disciple Z'rell (Zuh-rELL).",
            "AD_Guards": "The two guards at Moonrise entrance kill time wile on duty."
          }
        },
        "moo_kitchen": {
          "scenario_name": "moo_kitchen",
          "session_sequence": [
            "AD_Gnoll01"
          ],
          "paths": {
            "AD_Gnoll01": [
              "AD_Gnoll01_0"
            ]
          },
          "node_data": {
            "AD_Gnoll01": [
              {
                "id": "AD_Gnoll01_0",
                "speaker": "'Barnabus'",
                "text": "*Chitter*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "CinematicNodeContext: [REUSE] GNOLL_Rig_SCENE_PLA_ConflictedFlind_Cackle_01\nGNOLL_M_NKD_Head_A_Rig_SCENE_PLA_ConflictedFlind_Cackle_01\n\nThis cackle might not fit the chitter, and so might not need a custom anim."
              }
            ]
          },
          "session_synopses": {
            "AD_Gnoll01": "A gnoll in the kitchen of Moonrise Tower"
          }
        },
        "moo_guardroom": {
          "scenario_name": "moo_guardroom",
          "session_sequence": [
            "Guard02"
          ],
          "paths": {
            "Guard02": [
              "Guard02_1",
              "Guard02_0"
            ]
          },
          "node_data": {
            "Guard02": [
              {
                "id": "Guard02_1",
                "speaker": "Zealot Iogar",
                "text": "You'd find better lodgings out in the war camp, True Soul.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_GuardRoom_HasMet_Guard02 = False"
                ],
                "setflags": [
                  "MOO_GuardRoom_HasMet_Guard02"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Guard02_0",
                "speaker": "Zealot Iogar",
                "text": "I know we're all one under the Absolute, but you do not want to bunk with an ogre.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Emphatic - this guard has seen things"
              }
            ]
          },
          "session_synopses": {
            "Guard02": "A guard in the guard room of Moonrise Tower. They're growing accustomed to living and fighting alongside monstrous races."
          }
        },
        "moo_apostleentry": {
          "scenario_name": "moo_apostleentry",
          "session_sequence": [
            "PAD_Ritual"
          ],
          "paths": {
            "PAD_Ritual": [
              "PAD_Ritual_0"
            ]
          },
          "node_data": {
            "PAD_Ritual": [
              {
                "id": "PAD_Ritual_0",
                "speaker": "Player",
                "text": "Ketheric's been studying something called the Apostle... but of which god?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_Ritual": "The party finds a text in Ketheric’s chamber that hints at his connection to Myrkul and his ‘apostle’ form. A successful religion check references death or divinity - not explicitly calling out Myrkul by name."
          }
        },
        "moo_library": {
          "scenario_name": "moo_library",
          "session_sequence": [
            "AD_Minthara_EnteredLibrary"
          ],
          "paths": {
            "AD_Minthara_EnteredLibrary": [
              "AD_Minthara_EnteredLibrary_0"
            ]
          },
          "node_data": {
            "AD_Minthara_EnteredLibrary": [
              {
                "id": "AD_Minthara_EnteredLibrary_0",
                "speaker": "Nightwarden Minthara",
                "text": "Security is tight here. Z'rell made this library her command post.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_Minthara_EnteredLibrary": ""
          }
        },
        "moo_walltentacle": {
          "scenario_name": "moo_walltentacle",
          "session_sequence": [
            "AD_GuardsInterrupt"
          ],
          "paths": {
            "AD_GuardsInterrupt": [
              "AD_GuardsInterrupt_0",
              "AD_GuardsInterrupt_7",
              "AD_GuardsInterrupt_4"
            ]
          },
          "node_data": {
            "AD_GuardsInterrupt": [
              {
                "id": "AD_GuardsInterrupt_0",
                "speaker": "Mig",
                "text": "Monster lives in this tower. Something big.",
                "node_type": "normal",
                "checkflags": [
                  "0e791991-068a-3008-e14c-d70ae36d240f_A"
                ],
                "setflags": [
                  "0e791991-068a-3008-e14c-d70ae36d240f_B"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Ominous"
              },
              {
                "id": "AD_GuardsInterrupt_7",
                "speaker": "Acolyte Kimmeral",
                "text": "You're the biggest thing here. Nothing to be afraid of, lass.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Trying to be comforting"
              },
              {
                "id": "AD_GuardsInterrupt_4",
                "speaker": "Mig",
                "text": "Not afraid. Hungry.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_GuardsInterrupt": "Mig the Ogre says she hears things in the walls. The other two guards on duty beside her are unconvinced - one irritated, the other sympathetic but skeptical"
          }
        },
        "moo_prison": {
          "scenario_name": "moo_prison",
          "session_sequence": [
            "AD_CellPlaque5",
            "AD_CellPlaque3",
            "AD_Minthara_EnteredPrisonArea"
          ],
          "paths": {
            "AD_CellPlaque5": [
              "AD_CellPlaque5_0"
            ],
            "AD_CellPlaque3": [
              "AD_CellPlaque3_0"
            ],
            "AD_Minthara_EnteredPrisonArea": [
              "AD_Minthara_EnteredPrisonArea_0"
            ]
          },
          "node_data": {
            "AD_CellPlaque5": [
              {
                "id": "AD_CellPlaque5_0",
                "speaker": "Narrator",
                "text": "Cell Five",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_CellPlaque3": [
              {
                "id": "AD_CellPlaque3_0",
                "speaker": "Narrator",
                "text": "Cell Three",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Minthara_EnteredPrisonArea": [
              {
                "id": "AD_Minthara_EnteredPrisonArea_0",
                "speaker": "Nightwarden Minthara",
                "text": "Few escape these cells. It's only thanks to you that I did.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_CellPlaque5": "",
            "AD_CellPlaque3": "",
            "AD_Minthara_EnteredPrisonArea": ""
          }
        },
        "moo_catbusiness": {
          "scenario_name": "moo_catbusiness",
          "session_sequence": [
            "AD_CrimeReaction"
          ],
          "paths": {
            "AD_CrimeReaction": [
              "AD_CrimeReaction_0"
            ]
          },
          "node_data": {
            "AD_CrimeReaction": [
              {
                "id": "AD_CrimeReaction_0",
                "speaker": "Steelclaw",
                "text": "*Hiss.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_CrimeReaction": ""
          }
        },
        "moo_jailbreak_all_approval_traversals": {
          "error": "'metadata'"
        },
        "moo_ketheric": {
          "scenario_name": "moo_ketheric",
          "session_sequence": [
            "PAD_AstarionsComment"
          ],
          "paths": {
            "PAD_AstarionsComment": [
              "PAD_AstarionsComment_0",
              "PAD_AstarionsComment_1"
            ]
          },
          "node_data": {
            "PAD_AstarionsComment": [
              {
                "id": "PAD_AstarionsComment_0",
                "speaker": "Astarion",
                "text": "Finally. Time to see the one controlling these parasites.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PAD_AstarionsComment_1",
                "speaker": "Astarion",
                "text": "Maybe they can be controlled just as easily.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_AstarionsComment": "Astarion's comment after we finish talking to Ketheric and he told us to kneel at the altar."
          }
        },
        "moo_warehouse": {
          "scenario_name": "moo_warehouse",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "moo_bazaar": {
          "scenario_name": "moo_bazaar",
          "session_sequence": [
            "PAD_SharranObservation",
            "Zhent02",
            "BazEntranceGuard",
            "AD_BugbearThrow",
            "BazaarStander_006",
            "BazaarStander_007",
            "Guard01",
            "Bystander01",
            "Bystander00",
            "Guard00",
            "AD_GoblinsListening",
            "AD_BazEntranceGuard_002",
            "AD_Minthara_BazaarEntry",
            "Bystander02",
            "AD_GoblinsAfterExecution",
            "AD_ZhentarimCrew",
            "BazaarStander_005",
            "Zhent01",
            "Bystander04"
          ],
          "paths": {
            "PAD_SharranObservation": [
              "PAD_SharranObservation_0"
            ],
            "Zhent02": [
              "Zhent02_0"
            ],
            "BazEntranceGuard": [
              "BazEntranceGuard_0",
              "BazEntranceGuard_8",
              "BazEntranceGuard_21",
              "BazEntranceGuard_10",
              "BazEntranceGuard_19"
            ],
            "AD_BugbearThrow": [
              "AD_BugbearThrow_0"
            ],
            "BazaarStander_006": [
              "BazaarStander_006_0"
            ],
            "BazaarStander_007": [
              "BazaarStander_007_0"
            ],
            "Guard01": [
              "Guard01_0"
            ],
            "Bystander01": [
              "Bystander01_0",
              "Bystander01_1"
            ],
            "Bystander00": [
              "Bystander00_0"
            ],
            "Guard00": [
              "Guard00_5",
              "Guard00_9",
              "Guard00_1",
              "Guard00_4"
            ],
            "AD_GoblinsListening": [
              "AD_GoblinsListening_0",
              "AD_GoblinsListening_6",
              "AD_GoblinsListening_4"
            ],
            "AD_BazEntranceGuard_002": [
              "AD_BazEntranceGuard_002_0"
            ],
            "AD_Minthara_BazaarEntry": [
              "AD_Minthara_BazaarEntry_0"
            ],
            "Bystander02": [
              "Bystander02_0"
            ],
            "AD_GoblinsAfterExecution": [
              "AD_GoblinsAfterExecution_2",
              "AD_GoblinsAfterExecution_4",
              "AD_GoblinsAfterExecution_8",
              "AD_GoblinsAfterExecution_1"
            ],
            "AD_ZhentarimCrew": [
              "AD_ZhentarimCrew_8",
              "AD_ZhentarimCrew_6",
              "AD_ZhentarimCrew_7",
              "AD_ZhentarimCrew_2"
            ],
            "BazaarStander_005": [
              "BazaarStander_005_0"
            ],
            "Zhent01": [
              "Zhent01_0"
            ],
            "Bystander04": [
              "Bystander04_0"
            ]
          },
          "node_data": {
            "PAD_SharranObservation": [
              {
                "id": "PAD_SharranObservation_0",
                "speaker": "Shadowheart",
                "text": "There is nothing Sharran about this man. He has betrayed the Dark Lady.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Quiet anger and disgust."
              }
            ],
            "Zhent02": [
              {
                "id": "Zhent02_0",
                "speaker": "Yerle",
                "text": "Ain't looking to convert, True Soul. Gods mind their mess, I mind mine.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Bazaar_HasMet_Zhent02"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Respectful but flat refusal - most Absolutists want to convert others, and she's pre-empting it."
              }
            ],
            "BazEntranceGuard": [
              {
                "id": "BazEntranceGuard_0",
                "speaker": "Acolyte Belub",
                "text": "Each pack of 'recruits' they bring in is worse than the last.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Bazaar_State_TalkedAboutPilgrims = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "7",
                "is_end": false,
                "approval": [],
                "context": "InternalNodeContext: Belub is not impressed by the new pilgrims who have shown up to join the Absolutes cause."
              },
              {
                "id": "BazEntranceGuard_8",
                "speaker": "Acolyte Belub",
                "text": "Can't trust them to sweep the stables, let alone swing a sword.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "BazEntranceGuard_21",
                "speaker": "Player",
                "text": "Then get rid of them. The undeserving should be purged.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_Bazaar_State_TalkedAboutPilgrims",
                  "MOO_Bazaar_State_PilgrimsToTown"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "BazEntranceGuard_10",
                "speaker": "Acolyte Belub",
                "text": "I-  yeah. Yeah, they're dead weight. Not real believers like us.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Slowly coming around to an opinion"
              },
              {
                "id": "BazEntranceGuard_19",
                "speaker": "Acolyte Belub",
                "text": "Thank you, True Soul. In Her name!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_BugbearThrow": [
              {
                "id": "AD_BugbearThrow_0",
                "speaker": "Lann Tarv",
                "text": "I could hit a pixie from a hundred paces.",
                "node_type": "normal",
                "checkflags": [
                  "fd9ed69f-475f-def2-bae0-25065ccc4143_A"
                ],
                "setflags": [
                  "fd9ed69f-475f-def2-bae0-25065ccc4143_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: congratulating himself on a well-thrown axe, while practicing"
              }
            ],
            "BazaarStander_006": [
              {
                "id": "BazaarStander_006_0",
                "speaker": "Pilgrim Nalira",
                "text": "The prisoners below are gone, True Soul. I cannot understand why they would flee Her mercy.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Bazaar_BazaarStander_006_JailbreakSuccess_HasMet = False",
                  "MOO_MutuallyExclusive_State_JailbreakSuccess"
                ],
                "setflags": [
                  "MOO_Bazaar_BazaarStander_006_JailbreakSuccess_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: The prisoners successfully escaped from Moonrise's dungeons (perhaps all, perhaps only one)\rNodeContext: Confused, hurt - prisoners in the cell escaped - she saw them as heathens her church was trying to 'save'"
              }
            ],
            "BazaarStander_007": [
              {
                "id": "BazaarStander_007_0",
                "speaker": "Pilgrim Taima",
                "text": "I hear you've been summoned for an audience with Her. You will return changed, I'm sure of it.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Audience_State_Ready"
                ],
                "setflags": [
                  "MOO_Bazaar_BazaarStander_007_AudienceReady_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: The player has kidnapped Isobel and helped return Nightsong and Balthazar to Moonrise. The army of the Absolute is ready to march.\rNodeContext: Wishing us well - we're about to get our 'reward'"
              }
            ],
            "Guard01": [
              {
                "id": "Guard01_0",
                "speaker": "Adept Furek",
                "text": "You should go through the main hall. Witnessing the General's justice is an honour.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Bazaar_HasMet_Guard01_BeforeExecution",
                  "MOO_Execution_Event_KethericLeaves = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Bystander01": [
              {
                "id": "Bystander01_0",
                "speaker": "Brawler Weneg",
                "text": "Heard a rumour some do-gooder stopped a horde of Absolutists from getting their hands on a load of druids in some grove.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Bazaar_HasMet_Bystander01 = False",
                  "DEN_AttackOnDen_State_DenVictory"
                ],
                "setflags": [
                  "MOO_Bazaar_HasMet_Bystander01"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Bystander01_1",
                "speaker": "Brawler Weneg",
                "text": "Whoever it was better pray the General doesn't smoke 'em out. Be a bloodbath, so it would.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Bystander00": [
              {
                "id": "Bystander00_0",
                "speaker": "Brawler Orik",
                "text": "You're the best True Soul I ever met.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Bazaar_Bystander00_GoblinsReleased_Hasmet",
                  "MOO_Execution_Event_ReleasedGoblins"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Guard00": [
              {
                "id": "Guard00_5",
                "speaker": "Adept Dorikel",
                "text": "I saw it, True Soul. The army. They're nearly ready. It's nearly time.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Bazaar_HasMet_Guard00 = False"
                ],
                "setflags": [
                  "MOO_Bazaar_HasMet_Guard00"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Guard00_9",
                "speaker": "Player",
                "text": "Which army do you mean?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Guard00_1",
                "speaker": "Adept Dorikel",
                "text": "Us. We are so many. And we are marching to Baldur's Gate, as soon as the Absolute gives word.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Guard00_4",
                "speaker": "Adept Dorikel",
                "text": "I've never been to battle. I've never been to war. But I feel so... calm. Ready.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_GoblinsListening": [
              {
                "id": "AD_GoblinsListening_0",
                "speaker": "Brawler Weneg",
                "text": "Enough! Just leave the bloody True Souls to their business.",
                "node_type": "normal",
                "checkflags": [
                  "c69edf86-a729-aaf0-24b7-3606b44b35a3_B"
                ],
                "setflags": [
                  "c69edf86-a729-aaf0-24b7-3606b44b35a3_A = False",
                  "c69edf86-a729-aaf0-24b7-3606b44b35a3_B = False"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_GoblinsListening_6",
                "speaker": "Brawler Wim",
                "text": "And what's to say that couldn't be us? They say the General rewards them as serve him well.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_GoblinsListening_4",
                "speaker": "Brawler Orik",
                "text": "And what about them who hang around his door like a bad smell?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_BazEntranceGuard_002": [
              {
                "id": "AD_BazEntranceGuard_002_0",
                "speaker": "Zealot Brinn",
                "text": "Another True Soul. The Disciple will want to see you - through the main doors.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Minthara_BazaarEntry": [
              {
                "id": "AD_Minthara_BazaarEntry_0",
                "speaker": "Nightwarden Minthara",
                "text": "Converts, pilgrims, mercenaries. They all seek power, but will find only death.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Bystander02": [
              {
                "id": "Bystander02_0",
                "speaker": "Brawler Wim",
                "text": "We ought to head out now - burn everything between here and the city.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Bazaar_Bystander02_PostKetheric_HasMet",
                  "MOO_Execution_Event_KethericLeaves"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_GoblinsAfterExecution": [
              {
                "id": "AD_GoblinsAfterExecution_2",
                "speaker": "Brawler Orik",
                "text": "This ain't what we was promised. The Absolute's our god.",
                "node_type": "normal",
                "checkflags": [
                  "a2fa1f0f-b9b5-f8bf-bf27-b11194b8502f_A"
                ],
                "setflags": [
                  "a2fa1f0f-b9b5-f8bf-bf27-b11194b8502f_B"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Bitter, been quietly seething on this for a while"
              },
              {
                "id": "AD_GoblinsAfterExecution_4",
                "speaker": "Brawler Wim",
                "text": "She belongs to everyone, git. That's the point.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Hushing a friend who's saying things that might get them killed"
              },
              {
                "id": "AD_GoblinsAfterExecution_8",
                "speaker": "Brawler Weneg",
                "text": "We're all friends, right? All one under the Absolute.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Said with a meaningful tone, overrding the doubts/concerns of his comrade who's speaking blasphemy"
              },
              {
                "id": "AD_GoblinsAfterExecution_1",
                "speaker": "Brawler Orik",
                "text": "Don't bloody feel like it, all of a sudden.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: muttered to self."
              }
            ],
            "AD_ZhentarimCrew": [
              {
                "id": "AD_ZhentarimCrew_8",
                "speaker": "Roah Moonglow",
                "text": "Smile, Yerle. We're among friends.",
                "node_type": "normal",
                "checkflags": [
                  "cb7a0736-07d5-cc1e-8bab-2e1f7c2a32ca_B"
                ],
                "setflags": [
                  "cb7a0736-07d5-cc1e-8bab-2e1f7c2a32ca_A = False",
                  "cb7a0736-07d5-cc1e-8bab-2e1f7c2a32ca_B = False"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Half-mocking, half-prodding. Her dour bodyguards are looking around at cultists suspiciously"
              },
              {
                "id": "AD_ZhentarimCrew_6",
                "speaker": "Yerle",
                "text": "Too damn friendly, you ask me. Gods-fearing folk ought to be more... fearful.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: The cultists bother her - they're too friendly, too faithful. It's not right."
              },
              {
                "id": "AD_ZhentarimCrew_7",
                "speaker": "Roah Moonglow",
                "text": "Why not join this Absolute, see what all the fuss is about?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Smirking"
              },
              {
                "id": "AD_ZhentarimCrew_2",
                "speaker": "Yerle",
                "text": "...I'll stick with the monster I know, thanks.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Wry, knows she's being mocked  - she's referring to her boss, who she knows is tougher than any cultist of the Absolute"
              }
            ],
            "BazaarStander_005": [
              {
                "id": "BazaarStander_005_0",
                "speaker": "Pilgrim Farimorn",
                "text": "Blessings, True Soul. We're to march soon - thanks to you.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Audience_State_Ready"
                ],
                "setflags": [
                  "MOO_Bazaar_BazaarStander_005_AudienceReay_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: The player has kidnapped Isobel and helped return Nightsong and Balthazar to Moonrise. The army of the Absolute is ready to march.\rNodeContext: Awed by you"
              }
            ],
            "Zhent01": [
              {
                "id": "Zhent01_0",
                "speaker": "Erna",
                "text": "You trying to get me in trouble?",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Bazaar_HasMet_Zhent01"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Smiling but fobbing us off."
              }
            ],
            "Bystander04": [
              {
                "id": "Bystander04_0",
                "speaker": "Pilgrim Iong",
                "text": "The Disciple has returned upstairs but... perhaps she'll still see me.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Bazaar_Bystander04_PostKetheric_HasMet = False"
                ],
                "setflags": [
                  "MOO_Bazaar_Bystander04_PostKetheric_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Wants to go, psyching himself up a bit. Now he has his chance and he's a bit scared"
              }
            ]
          },
          "session_synopses": {
            "PAD_SharranObservation": "Shadowheart notices that Ketheric is no longer a Sharran",
            "Zhent02": "A Zhentarim agent guarding Roah Moonglow. She's looking around at the growing power of the church and feeling wary of it.",
            "BazEntranceGuard": "Standing at the entrance of Moonrise Tower, the guard is keeping eye on all the fresh blood seeking audience with the Absolute. The player can influence the guard to send the pilgrims to their death in Town, or to take a chance on them and send them as fodder to colony. Either way the pilgrims will have a bad time.",
            "AD_BugbearThrow": "The bugbear vendor in Moonrise spends his time throwing an axe at a target. He is quite full of himself and proud of his strength.",
            "BazaarStander_006": "A novice of the church of the Absolute, by turns praying to herself or speaking to us, who she sees as a leading follower of her god",
            "BazaarStander_007": "This novice has joined the church in the hopes of being elevated to True Soul. She's not here for personal gain, but seeking an actual religious experience - one she believes we've already been blessed to have.",
            "Guard01": "A guard watching the alarm system on the ground floor of Moonrise Tower. He love and respects authority, and enjoys the thought of failure being punished.",
            "Bystander01": "A goblin on the floor of Moonrise Towers, chatting absently while being a bystander. His commentary changes depending on how the player handled the grove.",
            "Bystander00": "A goblin on the floor of Moonrise Towers, chatting absently while being a bystander. This one is worried about the other goblins that were sent to the execution room.",
            "Guard00": "A guard watching the alarm system on the ground floor of Moonrise Tower. He's brusque to anyone who approaches.",
            "AD_GoblinsListening": "The Bazaar Goblins are listening into the execution, worried about their own necks.",
            "AD_BazEntranceGuard_002": "The guard points the player towards the execution room after they first enter the tower.",
            "AD_Minthara_BazaarEntry": "",
            "Bystander02": "A goblin on the floor of Moonrise Towers, chatting absently while being a bystander.",
            "AD_GoblinsAfterExecution": "The Bazaar Goblins talk among themselves after the execution scene.",
            "AD_ZhentarimCrew": "Inside Moonrise Towers, the Zhentarim Guards and Merchant are making a deal with a rising cult. These are their idle exchanges.",
            "BazaarStander_005": "A supplicant who has just arrived at the seat of his religion. He  survived a harrowing journey through cursed lands - his family did not, and he is trying to rationalise that, becoming all the more fanaticin the process.",
            "Zhent01": "A Zhentarim agent guarding a trader from her organisation.",
            "Bystander04": "This human is waiting to speak to Z'rell. A big tough guy but is full  of hope that the Absolute will be proud of him. Should have a faint air of a stalker."
          }
        },
        "moo_monkamulet": {
          "scenario_name": "moo_monkamulet",
          "session_sequence": [
            "AD_PrisonComment"
          ],
          "paths": {
            "AD_PrisonComment": [
              "AD_PrisonComment_0"
            ]
          },
          "node_data": {
            "AD_PrisonComment": [
              {
                "id": "AD_PrisonComment_0",
                "speaker": "Sentient Amulet",
                "text": "Hohohoooo! Conditions most grim, courtesy of Ketheric Thorm.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: As mad as always!"
              }
            ]
          },
          "session_synopses": {
            "AD_PrisonComment": "The spirit in the amulet comments on the prison in Moonrise Towers"
          }
        },
        "moo_infernalvendor": {
          "scenario_name": "moo_infernalvendor",
          "session_sequence": [
            "",
            "PAD_FeelingSick"
          ],
          "paths": {
            "": [
              "73",
              "130",
              "34",
              "42",
              "114",
              "100",
              "31",
              "105",
              "47",
              "26",
              "42",
              "114",
              "100",
              "31",
              "36",
              "125",
              "64",
              "25"
            ],
            "PAD_FeelingSick": [
              "PAD_FeelingSick_0"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "73",
                "speaker": "",
                "text": "",
                "node_type": "alias",
                "checkflags": [
                  "MOO_InfernalVendor_State_ConsentedLowHealth"
                ],
                "setflags": [
                  "MOO_InfernalVendor_Event_SellingBlood"
                ],
                "goto": "",
                "link": "0",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "130",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "34",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "42",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "42",
                "speaker": "Araj Oblodra",
                "text": "Should you be interested, I have a particular offer I'd like to make.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "99",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Taking a moment to size us up to see if she wants to offer us this deal - resolves she does"
              },
              {
                "id": "114",
                "speaker": "Player",
                "text": "Let's hear about this special offer of yours.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_InfernalVendor_State_AskedAboutDeals = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "44",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "100",
                "speaker": "Araj Oblodra",
                "text": "Put plainly - I'd like your blood. A vial of True Soul's blood, specifically.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "44",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Satisfied - we're getting on to the topic she cares most about. States her strange request plainly."
              },
              {
                "id": "31",
                "speaker": "Araj Oblodra",
                "text": "With one drop, I can brew a rather potent potion for you. The rest, I keep for myself.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_InfernalVendor_State_AskedAboutDeals"
                ],
                "goto": "",
                "link": "44",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Pleasant - this is of course a perfectly normal thing to offer"
              },
              {
                "id": "105",
                "speaker": "Player",
                "text": "Never mind. I'm not interested.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "47",
                "speaker": "Araj Oblodra",
                "text": "Very well. If there's anything else you need, let me know.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "26",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "42",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "42",
                "speaker": "Araj Oblodra",
                "text": "Should you be interested, I have a particular offer I'd like to make.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "99",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Taking a moment to size us up to see if she wants to offer us this deal - resolves she does"
              },
              {
                "id": "114",
                "speaker": "Player",
                "text": "Let's hear about this special offer of yours.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_InfernalVendor_State_AskedAboutDeals = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "44",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "100",
                "speaker": "Araj Oblodra",
                "text": "Put plainly - I'd like your blood. A vial of True Soul's blood, specifically.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "44",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Satisfied - we're getting on to the topic she cares most about. States her strange request plainly."
              },
              {
                "id": "31",
                "speaker": "Araj Oblodra",
                "text": "With one drop, I can brew a rather potent potion for you. The rest, I keep for myself.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_InfernalVendor_State_AskedAboutDeals"
                ],
                "goto": "",
                "link": "44",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Pleasant - this is of course a perfectly normal thing to offer"
              },
              {
                "id": "36",
                "speaker": "Player",
                "text": "All right. Let's do it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "29",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "125",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "MOO_InfernalVendor_Event_SellingBlood"
                ],
                "goto": "",
                "link": "29",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "64",
                "speaker": "Araj Oblodra",
                "text": "Ah, well... if you don't mind me saying, you don't look entirely well.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_InfernalVendor_State_HasEnoughHealth = False"
                ],
                "setflags": [
                  "MOO_InfernalVendor_State_ConsentedLowHealth"
                ],
                "goto": "",
                "link": "25",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: We've agreed to let her draw blood, but our health is too low. She's trying to tell us we look terrible, but politely"
              },
              {
                "id": "25",
                "speaker": "Araj Oblodra",
                "text": "Rest and return. I'll feel better buying your blood when I know you can actually spare it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_FeelingSick": [
              {
                "id": "PAD_FeelingSick_0",
                "speaker": "Player",
                "text": "Ugh. That potion... did not go down well.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Feeling ill"
              }
            ]
          },
          "session_synopses": {
            "": "A merchant selling in the bazaar on the ground floor of Moonrise Tower. She is very interested in illithid-tainted blood from each race, which when traded grants a different kind of potion as a reward. The player can also learn her house's origins - and the fact that she's here to research the illithids.For nodes marked as OOM AND COM are in their own dialog fileFor nodes not marked as OOM or COM the dialog will have these speakers:1. Araj2. Group_Players (that might include Astarion since the default dialog and AOM version are pretty much the same).",
            "PAD_FeelingSick": "The player has given blood to the Infernal Vendor to make a unique potion. Once this potion is used, the player who gave the blood will feel sick after long rest (applying a debuff).The potion's effect depends on the player, but the debuff is universal."
          }
        },
        "moo_outcast": {
          "scenario_name": "moo_outcast",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "moo_oubliette": {
          "scenario_name": "moo_oubliette",
          "session_sequence": [
            "PAD_Entry",
            "PAD_ColonyComment",
            "CorpseMembranes_Dead"
          ],
          "paths": {
            "PAD_Entry": [
              "PAD_Entry_0"
            ],
            "PAD_ColonyComment": [
              "PAD_ColonyComment_0"
            ],
            "CorpseMembranes_Dead": [
              "CorpseMembranes_Dead_26",
              "CorpseMembranes_Dead_27",
              "CorpseMembranes_Dead_24",
              "CorpseMembranes_Dead_10"
            ]
          },
          "node_data": {
            "PAD_Entry": [
              {
                "id": "PAD_Entry_0",
                "speaker": "Player",
                "text": "Every bit as disgusting as the first time.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Oubliette_State_HasEntered"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_ColonyComment": [
              {
                "id": "PAD_ColonyComment_0",
                "speaker": "Player",
                "text": "Look - there's something on the other side. No way through from here though.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "CorpseMembranes_Dead": [
              {
                "id": "CorpseMembranes_Dead_26",
                "speaker": "Narrator",
                "text": "*The corpse regards you lifelessly.*",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "CorpseMembranes_Dead_27",
                "speaker": "Player",
                "text": "Who are you?",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [
                  "GLO_SpeakWithDead_Event_QuestionAsked"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "CorpseMembranes_Dead_24",
                "speaker": "Goblin",
                "text": "Vermit... True Soul...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "CorpseMembranes_Dead_10",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_Entry": "A PAD reacting to arriving in the bloodbath section of the Oubliette. This will also trigger a second time if the player leaves the Oubliette area and re-enters the bloodbath section.",
            "PAD_ColonyComment": "Party reacts to seeing the Colony through the blood aquarium window that separates the Oubliette from the Colony Morgue. The intention here is to strongly imply that we cannot get into the Colony from the Oubliette.",
            "CorpseMembranes_Dead": "The Speak With Dead dialog for the corpse hidden behind the mind flayer membranes in the bloodbath section of the Oubliette. This corpse is currently a goblin, but its race and backstory can be changed at the writer's behest."
          }
        },
        "moo_execution": {
          "scenario_name": "moo_execution",
          "session_sequence": [
            "AD_MintharaPlea",
            "Guard_003",
            "Guard_002",
            "AD_DarraPlea",
            "Guard_004",
            "AD_SazzaPlea",
            "AD_GoblinsInCombat",
            "",
            "Guard_001",
            "AD_DrennPlea"
          ],
          "paths": {
            "AD_MintharaPlea": [
              "AD_MintharaPlea_0"
            ],
            "Guard_003": [
              "Guard_003_0"
            ],
            "Guard_002": [
              "Guard_002_0"
            ],
            "AD_DarraPlea": [
              "AD_DarraPlea_0"
            ],
            "Guard_004": [
              "Guard_004_0"
            ],
            "AD_SazzaPlea": [
              "AD_SazzaPlea_0"
            ],
            "AD_GoblinsInCombat": [
              "AD_GoblinsInCombat_0"
            ],
            "": [
              "297",
              "291",
              "221",
              "46",
              "73",
              "283",
              "88",
              "36",
              "261",
              "349",
              "78",
              "214",
              "100",
              "335",
              "336",
              "64",
              "10",
              "349",
              "78",
              "125",
              "81",
              "94"
            ],
            "Guard_001": [
              "Guard_001_0"
            ],
            "AD_DrennPlea": [
              "AD_DrennPlea_0"
            ]
          },
          "node_data": {
            "AD_MintharaPlea": [
              {
                "id": "AD_MintharaPlea_0",
                "speaker": "Nightwarden Minthara",
                "text": "I await your judgement, General.",
                "node_type": "normal",
                "checkflags": [
                  "d66f886c-c9bb-0221-2536-0749f5162225_B"
                ],
                "setflags": [
                  "d66f886c-c9bb-0221-2536-0749f5162225_B = False",
                  "d66f886c-c9bb-0221-2536-0749f5162225_A = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: defiant, confident"
              }
            ],
            "Guard_003": [
              {
                "id": "Guard_003_0",
                "speaker": "Zealot Falla",
                "text": "In Her name, Her design.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Execution_Guard_003_Hasmet"
                ],
                "setflags": [
                  "MOO_Execution_Guard_003_Hasmet = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: General fallback nodes where none of the above apply. Almost ALWAYS comes after Execution state (directly above)\rNodeContext: a blessing / saying in their church"
              }
            ],
            "Guard_002": [
              {
                "id": "Guard_002_0",
                "speaker": "Zealot Niram",
                "text": "To the city, True Soul! The waiting's done.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Execution_Guard_002_Hasmet = False",
                  "MOO_Audience_State_Ready"
                ],
                "setflags": [
                  "MOO_Execution_Guard_002_Hasmet"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: The player has kidnapped Isobel and helped return Nightsong and Balthazar to Moonrise. The army of the Absolute is ready to march.\rNodeContext: Quietly fanatic - can't wait to march"
              }
            ],
            "AD_DarraPlea": [
              {
                "id": "AD_DarraPlea_0",
                "speaker": "Darra",
                "text": "Spare us!",
                "node_type": "normal",
                "checkflags": [
                  "5a06a8ed-94c6-2f89-1294-63be32905562_B"
                ],
                "setflags": [
                  "5a06a8ed-94c6-2f89-1294-63be32905562_B = False",
                  "5a06a8ed-94c6-2f89-1294-63be32905562_A = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: a plea to nobody in particular"
              }
            ],
            "Guard_004": [
              {
                "id": "Guard_004_0",
                "speaker": "Zealot Munish",
                "text": "All things in Her design.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Execution_Guard_004_Hasmet",
                  "MOO_Necromancer_State_AtMoonrise"
                ],
                "setflags": [
                  "MOO_Execution_Guard_004_Hasmet = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: The player has helped Balthazar (and this Nightsong) return to Moonrise. He's down in the Colony.\rNodeContext: Blessing"
              }
            ],
            "AD_SazzaPlea": [
              {
                "id": "AD_SazzaPlea_0",
                "speaker": "Sazza",
                "text": "I didn't survive mad druids and hungry spiders to die here.",
                "node_type": "normal",
                "checkflags": [
                  "e7931ff2-b371-33f2-96e1-9b3bb157f2ad_B"
                ],
                "setflags": [
                  "e7931ff2-b371-33f2-96e1-9b3bb157f2ad_B = False",
                  "e7931ff2-b371-33f2-96e1-9b3bb157f2ad_A = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Muttering anxiously"
              }
            ],
            "AD_GoblinsInCombat": [
              {
                "id": "AD_GoblinsInCombat_0",
                "speaker": "Darra",
                "text": "I won't go easy, if that's what yeh think.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: The drow that was controlling your actions just died and you're about to run away"
              }
            ],
            "": [
              {
                "id": "297",
                "speaker": "Fezzerk",
                "text": "We did as we was told, General! Followed every order -",
                "node_type": "normal",
                "checkflags": [
                  "FOR_GOBLINTRIBE"
                ],
                "setflags": [],
                "goto": "",
                "link": "291",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "291",
                "speaker": "Disciple Z'rell",
                "text": "The facts suggest otherwise. You were ordered to retrieve the artefact - you failed to do so.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_Execution_Knows_Executioner"
                ],
                "goto": "",
                "link": "343",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "221",
                "speaker": "Drenn",
                "text": "Take it up with Minthara. She's the one who -",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "46",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "46",
                "speaker": "Disciple Z'rell",
                "text": "Enough!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "343",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Via mind meld\rNodeContext: Via mind meld"
              },
              {
                "id": "73",
                "speaker": "Narrator",
                "text": "*A blast of mental energy washes over you, filling the room. Your tadpole squirms, urging you to obey.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "343",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Mindmeld"
              },
              {
                "id": "283",
                "speaker": "Disciple Z'rell",
                "text": "You failed to retrieve the artefact. You failed to protect your True Soul. You do not deserve to live.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "343",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "88",
                "speaker": "Player",
                "text": "Attack.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Execution_State_PlayerWantedToAttack = False"
                ],
                "setflags": [
                  "MOO_Execution_State_PlayerWantedToAttack"
                ],
                "goto": "",
                "link": "10",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "36",
                "speaker": "",
                "text": "",
                "node_type": "alias",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_Random"
                ],
                "goto": "",
                "link": "10",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "261",
                "speaker": "",
                "text": "",
                "node_type": "alias",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "349",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "349",
                "speaker": "Narrator",
                "text": "*You're standing in the lion's den, facing a legendary general, his guards, and who knows what eldritch powers. Just in case you needed a reminder.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "78",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: The player is about to attack someone that's probably going to absolutely crush them, and we're reminding them it might not be a great idea"
              },
              {
                "id": "78",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_End_Random"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "214",
                "speaker": "Player",
                "text": "Hold back.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "100",
                "speaker": "Disciple Z'rell",
                "text": "Well, True Soul? What about the goblins?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "335",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "336",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "336",
                "speaker": "Disciple Z'rell",
                "text": "Enough! True Soul - tell the General how the goblins served our cause.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "86",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "64",
                "speaker": "Player",
                "text": "Attack the half-orc and the general.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Execution_State_PlayerWantedToAttack = False"
                ],
                "setflags": [
                  "MOO_Execution_State_PlayerWantedToAttack"
                ],
                "goto": "",
                "link": "78",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "10",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_Random"
                ],
                "goto": "",
                "link": "78",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "349",
                "speaker": "Narrator",
                "text": "*You're standing in the lion's den, facing a legendary general, his guards, and who knows what eldritch powers. Just in case you needed a reminder.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "78",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: The player is about to attack someone that's probably going to absolutely crush them, and we're reminding them it might not be a great idea"
              },
              {
                "id": "78",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_End_Random"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "125",
                "speaker": "Player",
                "text": "Attack!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "81",
                "speaker": "Disciple Z'rell",
                "text": "You blasphemous little wretch!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: furious, directed at player"
              },
              {
                "id": "94",
                "speaker": "Ketheric Thorm",
                "text": "How amusing. Take care of them, Z'rell.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_MoonriseTower_State_Outcast"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ],
            "Guard_001": [
              {
                "id": "Guard_001_0",
                "speaker": "Adept Mola",
                "text": "The General's advisor is back. Anyone left in the cells better start praying.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_MutuallyExclusive_State_BalthazarReturn"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: The player has helped Balthazar (and this Nightsong) return to Moonrise. He's down in the Colony.\rNodeContext: Almost pities the  prisoners - the man he speaks of loves toying with prisoners"
              }
            ],
            "AD_DrennPlea": [
              {
                "id": "AD_DrennPlea_0",
                "speaker": "Drenn",
                "text": "This don't look good.",
                "node_type": "normal",
                "checkflags": [
                  "980064a4-7e24-54d6-7bd0-c56efd01bfcd_B"
                ],
                "setflags": [
                  "980064a4-7e24-54d6-7bd0-c56efd01bfcd_A = False",
                  "980064a4-7e24-54d6-7bd0-c56efd01bfcd_B = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: muttering anxiously"
              }
            ]
          },
          "session_synopses": {
            "AD_MintharaPlea": "Minthara is pleading for her life before Ketheric at the MOO Execution scene.These are played as interjections after Ketheric finishes his own AD.",
            "Guard_003": "Female Human. Guard and Absolute cultist.",
            "Guard_002": "Male Drow. Guard and Absolute cultist.",
            "AD_DarraPlea": "Goblins are pleading for their lives before Ketheric at the MOO Execution scene.These are played as interjections after Ketheric finishes his own AD.",
            "Guard_004": "Male Half Orc. Guard and Absolute cultist.",
            "AD_SazzaPlea": "Goblins are pleading for their lives before Ketheric at the MOO Execution scene.These are played as interjections after Ketheric finishes his own AD.",
            "AD_GoblinsInCombat": "The goblins have just been attacked by the player - they know the player is probably going to kill then.",
            "": "When we arrive in Moonrise towers, we almost immediately stumble upon a drow True Soul executing three goblins. Critpath.",
            "Guard_001": "Female Half-orc guard, a magic user and Absolute cultist.",
            "AD_DrennPlea": "Goblins are pleading for their lives before Ketheric at the MOO Execution scene.These are played as interjections after Ketheric finishes his own AD."
          }
        },
        "moo_bugbearvendor": {
          "scenario_name": "moo_bugbearvendor",
          "session_sequence": [
            "",
            "AD_Combat"
          ],
          "paths": {
            "": [
              "63",
              "68",
              "50",
              "122",
              "12",
              "81"
            ],
            "AD_Combat": [
              "AD_Combat_0"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "63",
                "speaker": "",
                "text": "",
                "node_type": "alias",
                "checkflags": [
                  "MOO_BugBearVendor_HasMet_BazBugBear = False",
                  "MOO_BugBearVendor_State_FoundMotive"
                ],
                "setflags": [],
                "goto": "",
                "link": "82",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "68",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "50",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "50",
                "speaker": "Lann Tarv",
                "text": "If you have coin, then show it.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_BugBearVendor_HasMet_BazBugBear = False"
                ],
                "setflags": [
                  "MOO_BugBearVendor_HasMet_BazBugBear"
                ],
                "goto": "",
                "link": "22",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: suspicious, weighing up the person he's greeting"
              },
              {
                "id": "122",
                "speaker": "Player",
                "text": "You'll never peddle your wares with that attitude.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_BugBearVendor_State_FoundMotive = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "81",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "12",
                "speaker": "Lann Tarv",
                "text": "I do not peddle. I put weapons in worthy hands.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: proud"
              },
              {
                "id": "81",
                "speaker": "Lann Tarv",
                "text": "The Absolute needs warriors for Her crusade. But I see only weaklings in this place.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "MOO_BugBearVendor_State_FoundMotive"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Faintly disgusted - he looks around and sees typically 'non-monstrous' races - the kind his people usually prey on"
              }
            ],
            "AD_Combat": [
              {
                "id": "AD_Combat_0",
                "speaker": "Lann Tarv",
                "text": "A little fun at last.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Entering combat with relish - he was extremely bored"
              }
            ]
          },
          "session_synopses": {
            "": "A merchant selling in the bazaar on the ground floor of Moonrise Tower. He is a passionate bugbear who believes only the strongest should enjoy the Absolute's spoils. Players can earn his respect for a discount.",
            "AD_Combat": "Bugbear vendor yells at the player when entering combat. If at least one of the players had impressed him, he wil look forward to the challange of fighting them. If they failed to impresse him, he will taunt them. If not of the players attempted to impress him, he will be existed for the bloodshed regardless."
          }
        },
        "moo_mintharafate": {
          "scenario_name": "moo_mintharafate",
          "session_sequence": [
            "AD_TorturersPostTorture",
            "AD_TorturersBeforeTorture",
            "Escaped",
            "AD_Torture"
          ],
          "paths": {
            "AD_TorturersPostTorture": [
              "AD_TorturersPostTorture_2",
              "AD_TorturersPostTorture_16",
              "AD_TorturersPostTorture_0"
            ],
            "AD_TorturersBeforeTorture": [
              "AD_TorturersBeforeTorture_2",
              "AD_TorturersBeforeTorture_10",
              "AD_TorturersBeforeTorture_0"
            ],
            "Escaped": [
              "Escaped_11",
              "Escaped_6",
              "Escaped_3",
              "Escaped_9",
              "Escaped_2",
              "Escaped_0",
              "Escaped_8",
              "Escaped_5"
            ],
            "AD_Torture": [
              "AD_Torture_0",
              "AD_Torture_2",
              "AD_Torture_7"
            ]
          },
          "node_data": {
            "AD_TorturersPostTorture": [
              {
                "id": "AD_TorturersPostTorture_2",
                "speaker": "Questioner Jasin",
                "text": "Soon, we will be in Baldur's Gate. What say you to that, sister?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "8916beac-0385-3df9-de07-8be3cc6752a7_A"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_TorturersPostTorture_16",
                "speaker": "Questioner Sumera",
                "text": "A whole city in service of the Absolute - it will be glorious.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_TorturersPostTorture_0",
                "speaker": "Questioner Jasin",
                "text": "And so many minds for us to break.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_TorturersBeforeTorture": [
              {
                "id": "AD_TorturersBeforeTorture_2",
                "speaker": "Questioner Jasin",
                "text": "The General has descended from his chapel.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "94cd0a22-c842-d9f3-8121-f8ac16410656_A"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_TorturersBeforeTorture_10",
                "speaker": "Questioner Sumera",
                "text": "To mete out the Absolute's justice, I hear.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_TorturersBeforeTorture_0",
                "speaker": "Questioner Jasin",
                "text": "I wish we could go upstairs to watch.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Escaped": [
              {
                "id": "Escaped_11",
                "speaker": "Nightwarden Minthara",
                "text": "I last left Moonrise as a commander in the Absolute's army, obeying the voice of a god. I thought I had found a home... and a purpose.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "15",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Looking up at the tower we just escaped, speaking with general disgust"
              },
              {
                "id": "Escaped_6",
                "speaker": "Nightwarden Minthara",
                "text": "Now I leave as an exile. But you risked your life to rescue me - for that, I am grateful.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "15",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Escaped_3",
                "speaker": "Narrator",
                "text": "*The artefact connects with her, pulling your minds together, and showing her all that you have seen.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "15",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Escaped_9",
                "speaker": "Narrator",
                "text": "*The Prism, your dream visitor, the protection that keeps you from obeying the Absolute, and becoming illithid. She knows it all in a moment.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "15",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Escaped_2",
                "speaker": "Narrator",
                "text": "*Her mind reels, but is no longer clouded. She accepts the truth... she has no choice.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "15",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Escaped_0",
                "speaker": "Nightwarden Minthara",
                "text": "There is much we must discuss. Do you have a safe place to camp nearby?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "15",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Escaped_8",
                "speaker": "Player",
                "text": "Tell her where to find your camp.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "ORI_MintharaRecuitment_Event_InvitedToCamp",
                  "MOO_MintharaFate_Event_LeavesForCamp"
                ],
                "goto": "",
                "link": "15",
                "is_end": false,
                "approval": [
                  "Astarion 1",
                  "Lae'zel 1",
                  "Gale 1",
                  "Shadowheart 1",
                  "Karlach 1",
                  "Minthara 5"
                ],
                "context": ""
              },
              {
                "id": "Escaped_5",
                "speaker": "Nightwarden Minthara",
                "text": "Goodbye for now. I will see you soon.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Sunny and charming"
              }
            ],
            "AD_Torture": [
              {
                "id": "AD_Torture_0",
                "speaker": "Nightwarden Minthara",
                "text": "Queen of Spiders, I beseech of you the strength to destroy my foes.",
                "node_type": "normal",
                "checkflags": [
                  "421668a5-7b68-9e8b-977b-522b4a071156_A"
                ],
                "setflags": [
                  "421668a5-7b68-9e8b-977b-522b4a071156_B"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: quiet, subdued prayer"
              },
              {
                "id": "AD_Torture_2",
                "speaker": "Questioner Sumera",
                "text": "Lolth cannot hear you. She has forsaken you.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_Torture_7",
                "speaker": "Questioner Jasin",
                "text": "There are no gods left to you, Minthara. You are alone.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_TorturersPostTorture": "Torture scene with Minthara and her torturers is over. This dialog holds two variants, the variant where Minthara is present, therefore she's been pacified mentally and is now an obedient soldier. The other variant is the one where players take over and make the torturers leave by faking that Minthara's pacified.",
            "AD_TorturersBeforeTorture": "Torturers are waiting in their room. Minthara may or may never arrive depending on story permutations. They discuss about work regardless.",
            "Escaped": "Minthara has escaped Moonrise with the players. She is grateful and offers to move to the player camp.",
            "AD_Torture": "Torturers are breaking Minthara."
          }
        },
        "moo_alarm": {
          "scenario_name": "moo_alarm",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        }
      },
      "final_flags": [
        "GOB_SpiderNest_State_SpidersHostile",
        "DEN_AttackOnDen_HasMet_Prodigy",
        "DEN_CapturedGoblin_GuardsHasMet",
        "HAV_Umi_NightsongFreed_HasMet",
        "GOB_Checkpoint_Event_MoveToCamp",
        "UND_MyconidRevenge_Event_TakeHead",
        "8a9a14b0-87da-5c78-aa76-7a266de7a786_Phase1",
        "PLA_TavernInvestigation_Knows_AskedStelmane",
        "DEN_AttackOnDen_HasMet_Tiefling010Victory",
        "GLO_Moonrise_Knows_AbsoluteAtGrymforge",
        "COL_Vault_State_HasAccess",
        "CRA_DeadPrisoner_Dead_AskedQuestion",
        "UND_DuergarMutineerFollowUp_Event_Happened",
        "CHA_Outside_Event_DoorGuardConvinced",
        "e0b6dfeb-2923-e0ad-1dc5-2a5d1e055e16_local1",
        "DEN_AttackOnDen_HasMet_GrieflingFriend",
        "DEN_AttackOnDen_HasMet_Tiefling001",
        "GOB_QuartermasterFlimsy_HasMet",
        "HAV_SavingPrisoners_HasMet_Manip",
        "GEN_TransferNPCPayment_2",
        "DEN_AttackOnDen_Event_OpenGateAfterCombat",
        "5e9c4c72-4f56-2646-ce36-88207d2dc33c_KinSaved",
        "95496308-6e34-b8c7-93fb-3b5e56e71f5d_C",
        "GOB_OwlbearCub_Event_InvitedToCamp",
        "MOO_Docks_HasMet_DockObserver",
        "MOO_Jailbreak_HasMet_Guard004",
        "PLA_Desire_Knows_RavengardTaken",
        "DEN_DruidServant005_Knows_TalkedAboutLockdown",
        "UND_SocietyOfBrilliance_MindFlayer_State_MindFlayerFeeding",
        "PLA_ConflictedFlind_Event_MindControlDamage_Minor",
        "DEN_AttackOnDen_HasMet_Servant005Victory",
        "PLA_Desire_State_WyllComTrack",
        "CHA_Chapel_Event_OpenedJergalsTomb",
        "UND_DarkLake_State_ClaimedGekhWasDead",
        "DEN_AttackOnDen_Pet004_HasMet",
        "GLO_Player_Knows_MoonlanternExists",
        "GOB_PainPriest_Event_Reward",
        "2da46374-abab-9219-f7ce-2a002cfd72a5_a",
        "DEN_AttackOnDen_Ranged_001_HasMet",
        "GLO_Volo_HasMet_Personally",
        "GOB_PainPriest_State_ReactedToPenance",
        "8916beac-0385-3df9-de07-8be3cc6752a7_A",
        "da38cd0f-efef-6809-231d-26f71308cd07_B",
        "HAV_ProdigyLament_Knows_RolanAlive",
        "DEN_RaidingParty_Event_SkipConfrontation",
        "ORI_INCLUSION_SHADOWHEART",
        "GLO_TadpoledCount6",
        "PLA_TavernInvestigation_Quest_WallCollapsed",
        "PLA_Refugee_002_TollhouseMentioned",
        "DEN_AttackOnDen_HasMet_RobberKid",
        "FOR_PriestsConqueringGod_AlliedPlayer",
        "HAG_GurHunter_Dead_Knows_Hunter",
        "HAV_TieflingSurvivors_State_DidNotPromiseToSaveMol",
        "DEN_AttackOnDen_HasMet_PickpocketVictory",
        "DEN_GuardedEntrance_State_ParentsKnowDeath",
        "ORI_MintharaRecuitment_Event_InvitedToCamp",
        "FactionHostileToIndivPlayerAfterDialog",
        "GLO_IronhandGnomes_Knows_WulbrenInMoonrise",
        "WLD_FOR_GnomeGoblinsAngry",
        "Den_Thieflings_InterferingGuard_PCGotLore",
        "MOO_KitchenFight_HasMet_GnollMaster",
        "GOB_Checkpoint_Guard01_HasMet",
        "WLD_UnfortunateGnome_PayPassage",
        "4c78f756-720d-a285-a3e6-8f69a6069abc_Step1",
        "cd4b312f-5a40-b8c1-1ecb-0862c829a479_A",
        "5ebae00c-47d8-736c-6738-4ee56cebbc49_B",
        "GLO_Prodigy_State_ToldSiblingsProdigyDead",
        "MOO_Jailbreak_Event_ProdigyIntro",
        "DEN_General_YoungLovers_HasMet",
        "GOB_PainPriest_Event_CheckHP",
        "GLO_LiftingTheCurse_State_HalsinRecruitable",
        "GLO_Desire_HasMet",
        "b43d3bc7-f10d-73cc-232e-c1f93cba3ed5_Local2",
        "DEN_AttackOnDen_Pet002_HasMet",
        "FOR_UnfortunateGnome_State_NonCharlatanAccess",
        "UND_MyconidCircle_PlantDuergarHasMet",
        "aa1d4932-8689-5e30-2b17-9b0968663a7a_historysuccess",
        "MOO_Execution_Knows_Executioner",
        "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_WyllSpoke",
        "GOB_WolfPens_Worg_002_HasMet",
        "PLA_GithChokepoint_State_FailedReadingMap",
        "PLA_ZhentShipment_Agent_002_StartInclusion",
        "GLO_HAV_TakingIsobel_HasMet_BriefInRoom",
        "4951b7ce-8495-b2c8-badc-beaff0e3d807_H",
        "d2eeb9af-9d20-919f-5bcf-63b09a554a90_A",
        "DEN_ShadowDruid_Event_SetFaithwarden",
        "73cbf53d-6017-fdd5-a96a-9cae574a1bd9_B",
        "CRA_DeadPrisoner_Dead_MentionedTadpole",
        "GLO_Absolute_Knows_MoonriseTowers",
        "DEN_Rat_Event_MoveToShack",
        "DEN_DruidAttack_HasMet_Protester3AfterAttack",
        "ORI_Inclusion_End_Karlach",
        "UND_WormWall_State_RecognisedCrawlers",
        "GLO_GithChokepoint_DragonAppear",
        "df3e1892-2ab5-7b69-e57b-a75504e1a8f2_B",
        "10297257-36dd-3799-f681-657656779d4a_TieflingsLaezelAD1",
        "ORI_Inclusion_End_Wyll",
        "DEN_AttackOnDen_HasMet_BackupLeader",
        "GLO_HeadRemoval_Event_HeadToInventory",
        "CHA_Jergal_Event_AttemptedAttack",
        "9b4c05c6-0a79-ea8d-c351-43d6fbb04abc_Story1",
        "GOB_AbsoluteCultistStiff_HasMet",
        "GLO_Shadowcurse_Knows_FromGnome",
        "PLA_StuckHalfElf_Knows_ExplainedDowry",
        "FOR_BugBearLove_Event_MovePlayerInside",
        "DEN_Stargazing_Event_SawDragon",
        "ORI_INCLUSION_ASTARION",
        "FOR_UnfortunateGone_TiedUpHasmet",
        "HAG_Hagspawn_State_JakeBerserk",
        "6cf6ff37-64f7-3ccf-d702-ee2025510422_B",
        "UND_EbonLake_Event_MoveToLake",
        "FOR_SeluneStash_NoticeStashSeal_CommentedOnSeal",
        "GOB_Torturers_Rat_001_HasMet",
        "GOB_Scrying_NoddedOrShrugged",
        "DEN_BirdSender_HasMet_GobLeadersDead",
        "a759296c-5d41-f5b9-7d31-1c70d1e10dc7_Once",
        "8ab0520b-3a8d-822f-1934-336e2d24e0a0_B",
        "d3eb78cf-ff8c-1e7a-7df7-4b6a04226b17_B",
        "DEN_HarpyMeal_Event_OriginCharm3",
        "683cb55e-08b9-c865-78a6-4e047ee62a24_B",
        "GLO_Tadpoled_UsedToday1",
        "GLO_HAV_TakingIsobel_HeardOfIsobel",
        "DEN_Thieflings_Event_PartnerQuestionAsked",
        "HAG_SurrogateMother_HasMet",
        "b83032a9-f599-fdff-c180-c2d1f267bdb4_B",
        "421668a5-7b68-9e8b-977b-522b4a071156_B",
        "b2a52f0b-5fa8-d275-f080-0fc8edbe1faf_B",
        "GOB_GoblingKing_Event_HealerPersuasion",
        "UND_DuergarCamp_State_DocksHostile",
        "PLA_ZhentShipment_Agent_001_StartInclusion",
        "57c003e7-0932-6f0c-e655-99025a4abe3a_B",
        "DEN_AttackOnDen_HasMet_TieflingLeader",
        "09983dce-d7d0-c108-506f-dcadc4044b0a_Derryth_SwD_Who",
        "PLA_TavernInvestigation_State_HasMet",
        "ORI_Inclusion_Karlach",
        "UND_BrokenMoonLantern_HasMet",
        "3483cea8-0c11-9432-2421-6b95b9140d95_B",
        "7611fa51-4b1b-3d2c-a8a5-74c04d9db7fa_AnimalHandlingSuccess",
        "UND_DuergarPatroller_03_HasMet",
        "DEN_DruidAttack_HasMet_HideoutLeaderAfterAttack",
        "DEN_TieflingScam_Event_InspectedBox",
        "GnomeAskedHelp",
        "3f665b97-a69e-81c5-68e6-5b931720721e_Part1",
        "CHA_LaezelRecruitment_MindMeld",
        "MOO_Bazaar_BazaarStander_006_JailbreakSuccess_HasMet",
        "94cd0a22-c842-d9f3-8121-f8ac16410656_A",
        "GLO_ScryingEyes_State_FeltGaze",
        "DEN_GuardedEntrance_HasMet_Guard3",
        "DEN_RaidingParty_Event_KanonOpensGate",
        "MOO_Jailbreak_HasMet_Warden",
        "DEN_AttackOnDen_HasMet_Wyll",
        "PLA_ConflictedFlind_Knows_Gnolls",
        "GLO_TalkedToVoloAboutAbsolute",
        "UND_MyconidCircle_DwarvenAlchemist_BaelenRestoredHasmet",
        "COL_Barracks_State_InterruptConvinced",
        "GOB_Festivities_Trader_HasMet",
        "DEN_AttackOnDen_HasMet_Tiefling004",
        "ZhentDungeon_AgreedBuy",
        "11d70a18-2aae-47a0-1a18-c486858b1eaf_B",
        "DEN_GruntingKid_Event_DisappearIntoWall",
        "GOB_BattleStations_HasMet_WarDrum",
        "GOB_GoblinJolly_HasMet",
        "UND_MyconidCircle_InjuredGnome_ReportedGrymforgeFate",
        "564fac12-29bd-3abe-d380-0a864e688883_Turn1",
        "COL_TadpolingCentre_MemoryImprint_FirstUse",
        "HAV_TieflingSurvivors_Mirkon_EndInclusion",
        "DEN_Apprentice_HasMet_ReactedToShadowDruids",
        "DEN_CampGeneral_HasMet_Gatekeeper",
        "HAV_WrootRequest_Wulbren_AskedAboutIronhandGnomes",
        "UND_DeadInTheWater_CorpseDisposerCompanion_HasMet",
        "UND_MyconidCircle_MyconidSuspicious_HasMet",
        "MOO_Jailbreak_Knows_ToolsNeeded",
        "DEN_Hideout_State_GivenWarning",
        "PLA_Refugee_002_HasMet",
        "UND_DuergarGuard_AtPier_01_HasMet",
        "DEN_DruidAttack_HasMet_PickpocketTraderAfterAttack",
        "SCE_Jergal_HasMet",
        "DEN_RaidingParty_Event_OpenDenGate",
        "GOB_GoblinKingDead_Event_SaidFugitives",
        "HAV_SavingPrisoners_HasMet_Florrick",
        "HAV_EnteringHaven_State_RevealedArtifact",
        "UND_State_LeaderFreedGnomes",
        "41e56e7f-1722-7350-33dc-aefe523650fe_B",
        "d3d3855d-6721-b089-5c1e-d6d255a46fdc_A",
        "PLA_ZhentDungeon_State_SaidPassword",
        "c3207254-eafb-348b-d327-f690af0e213f_startedattackmove",
        "DEN_AttackOnDen_HasMet_TieflingBard",
        "UND_MyconidCircle_BroodingSovereign_State_InParty",
        "DEN_AttackOnDen_HasMet_Kid004Victory",
        "DEN_Hideout_Event_LeaveCountdown",
        "1493763b-776c-959c-259a-89f34f326e04_A",
        "UND_FurnaceSearch_Knows_Xargrim",
        "HAV_ProdigyLament_Knows_SiblingsInMoonrise",
        "DEN_AttackOnDen_ZenBear_HasMet",
        "SCE_TieflingFollowUp_Knows_MolMissingEyepatch",
        "DEN_DevilishOx_State_ArcanaCheckComplete_SwA",
        "fa6e2ce0-64f3-bfb8-fb47-10f50f02cadf_AbsoluteMentioned",
        "MOO_Bazaar_HasMet_Bystander01",
        "DEN_AttackOnDen_Event_PassedByEntrance",
        "DEN_Thieflings_TieflingGuard11_HasMet",
        "GOB_Trader_Knows_Goods",
        "DEN_AttackOnDen_HasMet_Tiefling005",
        "GOB_GoblinToast_Event_ToastSuccess",
        "COL_Barracks_Mistress_Knows_ThinksPlayerIsThrall",
        "c9e1ff2a-01e2-abdb-b98e-2d4a35b3c7dc_A",
        "DEN_ZenBear_Helped",
        "MOO_GuardRoom_HasMet_Guard02",
        "FOR_KnifeInMeat_State_KnifeBroken",
        "GOB_Festivities_Goblin001_HasMet",
        "FOR_GnomeGoblin1_HasMet",
        "7cf65f2f-1a29-daa2-940e-1159a8940b4e_C",
        "DEN_TieflingRefugees_Quest_HuntRewardOffered",
        "DEN_RaidingParty_Event_GatekeeperToLever",
        "DEN_DruidAttack_HasMet_ServantGnome",
        "COL_NecroLab_GrandDesignSculpture_HasMet_LaezelInclusion",
        "FOR_GoblinAmbush_Event_StopSpotting",
        "HAV_Cat_HasMet",
        "DEN_AttackOnDen_HasMet_RitualDruid003",
        "ReportedToDerryth_BaelenIsAlive",
        "GOB_Owlbear_HasMet_NotChasing",
        "UND_SocietyOfBrilliance_MindFlayer_HasMet",
        "ba2b225d-e9d4-944d-5b4f-b27dd975c626_A",
        "DEN_AttackOnDenDruidLeader_State_HasMet",
        "6fa2b72d-fde1-4ee3-e1d1-f184232f693d_A",
        "DEN_DruidAttack_HasMet_ParentBAfterAttack",
        "DEN_General_Squirrel_LearnedTerritory",
        "HAG_Hagspawn_Knows_PromisedRaiseHusband",
        "MOO_Assault_HasMet_KethericHound",
        "OriginAddToParty",
        "PLA_ZhentShipment_Agent_001_Inclusion_Start",
        "GOB_RaiderStupid_HasMet",
        "83fdf5e9-88b8-19e7-ba8f-ff075d2222ce_PLA_ZhentShipment_Knows_Gnolls",
        "DEN_Apprentice_Event_RevealedTadpole",
        "DEN_Thieflings_Event_HideoutTrespassCrimeResolved",
        "469a1188-028b-0e6b-b595-fa464baa551e_b",
        "GOB_RaiderBold_HasMet",
        "FoundCounsellor",
        "UND_DuergarCamp_State_SidedNone",
        "HAV_WrootRequest_Gnome002_NightsongFreed_HasMet",
        "a0afae3d-53b0-192d-d822-c61da104f979_A",
        "8f847adf-7b8a-3551-cfc0-4ea0c66a999a_F",
        "DEN_Apprentice_State_ShadowDruidPath",
        "DEN_AttackOnDen_HasMet_LeaderKidVictory",
        "FOR_Monitor_Event_TakeFood",
        "GOB_GoblinToast_ThirdGoblinToasted",
        "FOR_Monitor_State_TransformToDevil",
        "DEN_Thieflings_HasMet_Guard2",
        "DEN_Thieflings_HasMet_Mol",
        "ORI_Karlach_HasMet",
        "MOO_Execution_State_PlayerWantedToAttack",
        "GOB_Festivities_HasMet_Ogre_00",
        "GOB_RatRacket_LocalRat_002_HasMet",
        "4466a73c-607a-4a7e-c1e5-94d549e8f23d_A",
        "ce2b9169-f3e7-e07f-9c58-0fd373d5df9a_PLA_ZhentDungeon_Zhent02_Dead_KnowsZarysisZhentarim",
        "HAV_Minthara_Hasmet",
        "MOO_Jailbreak_Knows_GnomeEscape",
        "DEN_AttackOnDen_Event_EnemiesAppear",
        "FOR_SchoolOgres_Event_AttemptedFirstSkillCheck",
        "GOB_Checkpoint_State_UsedAlarmOnce",
        "HAV_ProdigyLament_Event_Intro",
        "DEN_GoblinScouts_State_SavedDruid",
        "DEN_AttackOnDen_HasMet_Adventurer2",
        "d6df8edb-ac4b-e1d2-794b-6bfd00757cbf_A",
        "MOO_Assault_AssaultFlamingFist_003_ThroneRoomDefeated_HasMet",
        "HAV_ProdigyLament_HasMet_Ide",
        "GOB_GoblinToast_Event_IncludeFourthGoblin",
        "15b0a2b9-2b22-50ab-70c0-ab3042def597_GaleCommentTried",
        "DEN_HarpyMeal_InHideout_WasMean",
        "PreventTradeWithPlayer",
        "DEN_GoblinHunt_Event_GiveRewardBag",
        "1bddcc22-dadd-92c9-4186-4e10ebbfee68_CHA_Crypt_Jergal_DontFollow",
        "UND_AdamantineForge_Knows_Adamantine",
        "DEN_AdventurersQuest_Knows_AradinStory",
        "FOR_Bottomless_State_InteractedWithWell",
        "ORI_INCLUSION_MINTHARA",
        "SCE_Debrief_State_PartyDebriefed",
        "MOO_Jailbreak_HasMet_Wulbren",
        "DEN_AttackOnDen_HasMet_ChefAndSon",
        "ORI_Inclusion_Astarion",
        "UND_DarkJusticiarsCorpses_Recognized",
        "fd9ed69f-475f-def2-bae0-25065ccc4143_B",
        "GLO_Florrick_State_KnowsWyllDevil",
        "GLO_Desire_State_FreedInAct1",
        "MOO_MoonriseTower_State_Outcast",
        "DEN_DruidLair_Knows_DruidsAlliance",
        "1591cb60-9e65-980a-c49e-69f68b958a1d_B",
        "GOB_Checkpoint_State_GainedAccess",
        "FOR_UnfortunateGnome_Bargaining",
        "DEN_AttackOnDen_HasMet_ProdigyBrother",
        "UND_Elevator_Event_GotWarning",
        "UND_FearfulRothe_Event_MakeDuergarHostileInDialog",
        "GOB_GuardUpset_State_ConvincedTrueSoul",
        "DEN_CapturedGoblin_State_InTransit",
        "GLO_Thieflings_State_PCShookPickpocketSister",
        "GOB_GEB_TorturedAdventurer_Assault_HasMet",
        "DEN_GroveConflict_Event_StoleIdolAttempt",
        "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_NoFFPresent",
        "29ddc96b-303b-373d-2b6f-37ae4e8d534b_A",
        "DEN_Thieflings_Event_CallGuard",
        "DEN_AdventurersQuest_RaidAdventurerAtCorps_HasMet",
        "UND_FearfulRothe_HasMet_Rothe_001_SpeakWithAnimals",
        "UND_FearfulRothe_State_BefriendedRothe",
        "0d6dbe21-1644-b9bf-8297-dd60d820bd99_B",
        "DEN_GuardedEntrance_HasMet_LiedAboutDeath",
        "FOR_ApothecaryGoblins_Goblin01_HasMet",
        "HAG_AnimalIllusion_Revealed_HasMet1",
        "DEN_TieflingScam_Event_TalkedAboutBox",
        "SCE_Alfira_Event_GaveShiningDawn",
        "0276d317-8b34-66e2-48e2-6b9d69d6830b_F",
        "UND_Automaton_Knows_AskedPlace",
        "HAV_Florrick_Event_RavengardInTowers",
        "CRA_DeadFisherman2_Dead_WhatDoing",
        "GOB_GoblinToast_Event_IncludeThirdGoblin",
        "DEN_AttackOnDen_HasMet_PickpocketTrader",
        "COL_TadpolingCentre_Knows_IdentifiedDarkUrgePod",
        "GOB_GoblinThroneCheckpoint_Pass",
        "HalsinLeft_KilledLeaders",
        "DEN_AttackOnDen_HasMet_Halsin",
        "c167cdf3-7201-e55c-222f-773c758e1000_IncludedHusband",
        "HAG_HagLair_Victim_001_HasMet",
        "MOO_Audience_State_KethericToldToKneelAtAltar",
        "PLA_StuckDwarf_HasMet_FoundWife",
        "GOB_SpiderNest_State_SpidersChill",
        "PLA_Tavern_Knows_DukeInTavern",
        "ORI_INCLUSION_KARLACH",
        "PLA_ZhentDungeon_State_AgentFreed",
        "UND_FurnaceSearch_Event_DuergarMentionsForge",
        "GLO_Moonrise_Knows_GoblinsCapturedADuke",
        "DEN_DruidLair_Knows_FoundingGrove",
        "FOR_Monitor_HasMet_Dinner",
        "AskedCircle",
        "03b6aa2e-e805-3a51-6bdb-d92f0b0da84a_UND_MyconidCircle_ServantHookHorror_01_RecognisedMonster",
        "DEN_GuardedEntrance_HasMet_Protester1",
        "SCE_Minthara_HasMet",
        "MOO_Assault_AssaultHarper_002_ThroneRoomDefeated_HasMet",
        "ToldAboutTadpole",
        "DEN_DruidAttack_HasMet_Tiefling010AfterAttack",
        "f3f236b2-37a1-a0a2-5855-184ead7b1286_C",
        "GOB_DrowCommander_State_Hostile",
        "UND_ArguingGnomes_Event_LearnedAboutPhilomeen",
        "UND_PetrifiedDrow_Knows_WizardIsDhourn",
        "MOO_InfernalVendor_State_ConsentedLowHealth",
        "ORI_Inclusion_End_ShadowHeart",
        "MOO_Assault_HasMet_HarperQuartermaster",
        "ORI_Shadowheart_Knows_SeenTempleVista",
        "FOR_BugBearLove_Event_CoupleHostile",
        "HAG_AnimalIllusion_Narrator",
        "DEN_Thieflings_State_DoneChase",
        "UND_ElevatorGuard002_HasMet",
        "ThankedFreed_BeldronThulla",
        "ORI_INCLUSION_MINSC",
        "DEN_Thieflings_Knows_PlayerRobbed",
        "DEN_ShadowDruid_HasMet_Opposed",
        "GLO_TadpoledCount1",
        "HAV_ProdigyLament_Brother_RolanDead_HasMet",
        "DEN_DruidAttack_HasMet_ExcitedBoar",
        "3b2ae6b6-ca7e-d905-0430-128078b3119f_B",
        "720e85fb-cc00-b81a-efff-343a04ca221e_A",
        "DEN_DevilishOx_MeetAtDruidsGrove_HasMet_SwA",
        "UND_ClericPetGrave_HasMet",
        "99aa7b78-defd-57bc-eabf-a8aa43a030d9_A",
        "UND_MyconidCircle_DirectToSovereign_HasMet",
        "UND_GnomeWorkerLumpy_HasmetRescued",
        "DEN_GroveConflict_Quest_Learnt3LeadersTwoNames",
        "d97f72ff-8fb1-8a4c-f169-89751bd6e125_b",
        "ORI_INCLUSION_RANDOM",
        "HAG_Well_Event_DrinkWell",
        "a7407f82-add0-9f6d-e4e6-78b9c39195a6_C",
        "HAV_SavingPrisoners_HasMet_Inspector",
        "ORI_INCLUSION_WYLL",
        "4118b185-9468-2295-93f3-9d6eafd8fb8a_Second_Disabled",
        "FOR_GoblinAmbush_State_DrowAutoPass",
        "DEN_TieflingLeader_Quest_GobHuntResponded",
        "GLO_Halsin_Event_TalkedWithDruidLeader",
        "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionRefused",
        "HAV_ProdigyLament_State_ToldStory",
        "ORI_Inclusion_Gale",
        "DEN_RitualDruid_HasMet_Left5",
        "PLA_Desire_Quest_TriedForceDoor",
        "HAV_ProdigyLament_Event_RudeWithIde",
        "DEN_Thieflings_Pickpocket1_PCIsNotAChump",
        "MOO_InfernalVendor_State_AskedAboutDeals",
        "MOO_Jailbreak_Event_SaveTieflings",
        "DEN_AttackOnDen_HasMet_Refugee002",
        "fb0e13b6-cc68-d496-51c2-4594f4f5bf40_TauntHer",
        "182bb613-b70c-5e7c-b3ea-ea14e02d1fab_C",
        "GOB_PainPriest_Event_PickScourge",
        "DEN_GroveConflict_Knows_HeardAboutRitual",
        "d0423454-cc51-ae8e-5096-cffd1aac9f75_A",
        "FOR_BugBearLove_Knows_Lovemaking",
        "MOO_Assault_AssaultHarper_001_ThroneRoomDefeated_HasMet",
        "ORI_INCLUSION_LAEZEL",
        "DEN_DruidAttack_HasMet_SonOfChefAfterAttack",
        "HAG_HagLair_TalkingDoor_HasMet",
        "ORI_Inclusion_ShadowHeart",
        "HAV_TieflingSurvivors_Mirkon_StartInclusion",
        "1ea9e483-36a9-82b1-852f-b901ec25552a_a",
        "DEN_Prodigy_HasMet",
        "PLA_ZhentShipment_State_TalkedAfterKilledGnolls",
        "551618bc-83c9-52cc-0ca7-37c224446cf7_Local1",
        "GOB_Bravado_State_Goblin3Hasmet",
        "MOO_Docks_HasMet_DockJumper",
        "SCE_GnomeFollowUp_HasMet_WulbrenAlive",
        "HAV_LiftingTheCurse_Knows_SeekingBreath",
        "SCE_TieflingFollowUp_Ide_HasMet",
        "FOR_BottomlessWell_InteractWithWell_Knows_LookedDown",
        "ORI_INCLUSION_GALE",
        "DEN_GuardedEntrance_HasMet_Parents",
        "GOB_GoblinToast_Event_IncludeSecondGoblin",
        "ca797aab-5a73-7ec5-edb7-022122573b39_B",
        "HAV_ProdigyLament_Sister_RolanDead_HasMet",
        "DEN_AttackOnDen_Event_HeftyTieflingQuip",
        "COL_Vault_Event_Start",
        "HAV_ProdigyLament_HasMet_Rolan",
        "MOO_InfernalVendor_Event_SellingBlood",
        "GOB_WolfPens_Event_HalsinLeftParty",
        "FactionHostileToPlayerGroupAfterDialog",
        "MOO_Jailbreak_HasMet_ProdigySister",
        "ORI_Laezel_Quest_FoundZorru",
        "GOB_GoblinPriest_Event_FreedFromChains",
        "PLA_StuckHalfElf_Knows_MentionedDowry",
        "0e791991-068a-3008-e14c-d70ae36d240f_B",
        "21e0890e-7019-66a3-1956-125405f96d7c_A",
        "a63e4af2-6edc-188a-efdf-b9ffc5460fc5_LOCAL_B",
        "DEN_DruidAttack_HasMet_DruidOpposedAfterAttack",
        "FOR_PriestOfTheConqueringGod_Cultists_Knows_Mission",
        "DEN_Apprentice_Event_RemoveBirdExhaustion",
        "DEN_CampGeneral_PCGotLore",
        "SpokeToBrothers",
        "5f09c70a-153e-77e8-731c-5c532e635809_B",
        "DEN_DruidAttack_HasMet_GatekeeperAfterAttack",
        "LearnedGroveSituation",
        "DEN_RaidingParty_Event_UnsheatheForFight",
        "ReachedWife",
        "SCE_BackupLeader_HasMet",
        "GOB_Festivities_BugbearSleeper_00_HasMet",
        "GLO_TadpoleIntro_NPC",
        "DEN_Thieflings_Knows_KidsThieves",
        "30d43adb-dcaf-c0f3-d432-af96a1c2e1ea_spoketowulbren",
        "MOO_Execution_Guard_002_Hasmet",
        "DEN_ShadowDruidLeaderPostGoblins_State_HasMet",
        "DEN_GroveConflict_Knows_LeaderNameKing",
        "SCE_TieflingFollowUp_Knows_MeanAboutMol",
        "TemporaryHostilityAfterDialog",
        "0884581d-9f92-0a34-9440-6a54c0813bbe_ProceedToSecondStage",
        "DEN_Prodigy_HasMet_Brother",
        "GLO_Absolute_Knows_TrueSoul",
        "440db1a3-14ad-8127-a14b-c445049225db_HasMetInTower",
        "UND_GnomeForeman_UnfortunateGnome_InclusionStart",
        "DEN_WeepingTree_HasMet_Bear",
        "PLA_ZhentDungeon_Dog_03_HasMet",
        "GOB_DrowCommander_Knows_DrowLeader",
        "ORI_Shadowheart_State_IdolHint",
        "ea88dfe9-ff39-9b98-ae03-48d7fdf2708e_A",
        "DEN_AttackOnDen_HasMet_Refugee004Victory",
        "ORI_Inclusion_End_Astarion",
        "OrderedKillDruids",
        "DEN_DevilishOx_MeetAtDruidsGrove_State_Peaceful",
        "DEN_AttackOnDen_HasMet_RitualDruid002",
        "PLA_StuckHalfElf_StartInclusion",
        "DEN_Thieflings_Pickpocket2_HasMet",
        "375a6f59-375f-f5eb-5f42-60de2dc6aa6b_B",
        "GOB_Checkpoint_Event_WarnedAtCliff",
        "PLA_ZhentShipment_State_Talked",
        "RefusedHelpBrothers1",
        "GOB_PainPriest_Event_ReactToMocking",
        "DEN_DruidLair_Knows_RuneAppearance",
        "GLO_Hag_KnowsAboutSurrogate",
        "MOO_Jailbreak_Event_ForceBoatLeave",
        "MOO_Assault_AssaultFlamingFist_002_HasMet",
        "81f2a55d-d317-761f-f6a0-fe97ad6d5288_C",
        "UND_DuergarCamp_Knows_NereIsTrapped",
        "DEN_SenderBird_Event_TakeOff",
        "FOR_GnomeGoblinsPacified",
        "DEN_DruidAttack_HasMet_ChefAfterAttack",
        "ParentLied",
        "7256657b-1386-989f-0262-c6530e03a9fb_AskedWhy",
        "DEN_General_Inclusion_End_Pickpocket",
        "DEN_WeepingTree_Bear_Upset",
        "UND_TheDrowNere_Mutiny_InclusionStart_GnomeSilly",
        "bde7a4f1-933f-f6ce-4a3e-4b1f29f83704_B",
        "UND_TheDrowNere_Event_HadMindMeld",
        "57c003e7-0932-6f0c-e655-99025a4abe3a_A",
        "DEN_YoungLovers_State_MetPlayer",
        "5310a408-76a3-3498-cc26-ae866871188b_Third_Disabled",
        "HAV_General_HarperScout_001_HasMet",
        "7ffcf0de-e30b-ef58-fcc5-8d3a1482fa59_b",
        "GLO_Absolute_Knows_GoblinsWorship",
        "DEN_Weaponsmith_Knows_Elturel",
        "DEN_ShadowDruid_Event_ReactionDone",
        "CHA_Crypt_Event_JergalAppears",
        "PLA_ZhentDungeon_Zhent05_HasMet",
        "DEN_TieflingLeader_HasMet_ReactToDruidAttack",
        "ORI_Laezel_State_StartedTieflingsSceneAtCage",
        "DEN_BirdSender_HasMet",
        "UND_MyconidCircle_DeepRothe_BaelenAteShroom_Hasmet",
        "GOB_BattleStations_Event_ToStation",
        "DEN_AttackOnDen_HasMet_Trainer",
        "GOB_GoblinHeretic_FreeToGo",
        "GOB_GoblinThroneCheckpoint_State_NonCharlatanAccess",
        "1c74b01f-5dcf-8107-b384-204d341ed9d5_OnlyOnce",
        "DEN_Thieflings_State_MessedWithMolsKids",
        "PLA_Refugee_001_HasMet",
        "UND_MyconidCircle_State_GainedAccess",
        "HAV_EnteringHaven_State_GainedAccess",
        "DEN_DruidAttack_HasMet_ParentAAfterAttack",
        "GOB_Checkpoint_State_GoblinsToldLeaders",
        "UND_DuergarCamp_Mutineers_HasMet",
        "LearnedDukeMissingCounsellor",
        "MOO_MintharaFate_Event_LeavesForCamp",
        "SCE_JergalDebrief_Event_WhyHere",
        "94cd662c-844b-4dcc-ffdc-0b9a8da32bcc_BarcusSpokeUp",
        "DEN_AttackOnDen_HasMet_LairDoor",
        "RikkaAskedQuest",
        "MOO_Bazaar_State_PilgrimsToTown",
        "DEN_General_Event_TriedNudgingBear",
        "DEN_HasMet_SoloParentB",
        "DEN_RitualDruid_HasMet_Left2",
        "GOB_Torturers_HasMet_Goblet",
        "FOR_BugbearLove_State_InterruptedCouple",
        "DEN_AttackOnDen_Servant005_Answered",
        "UND_BroodingSovereign_State_RefusedCircle",
        "DEN_Thieflings_HasMet_Trainee1",
        "UND_DeadInTheWater_CorpseDisposerLeader_HasMet",
        "MOO_Assault_AssaultHarper_003_ThroneRoomDefeated_HasMet",
        "DEN_Tiefling011_State_Met",
        "DEN_Thieflings_PersuadedPickpocket",
        "GOB_GoblinToast_Event_NoMoreRefills",
        "ORI_Inclusion_Random",
        "MOO_Bazaar_HasMet_Guard00",
        "PLA_KarlachRecruitment_State_PersuasionSucceeded",
        "DEN_Thieflings_State_WitnessedArgument",
        "200aa519-5963-3b2d-3396-d1dcbb013702_AskedStrategy",
        "COL_TadpolingCentre_HasMet_Yeva",
        "3b911555-52e5-7791-d2ac-44fe62465fa1_Loop3",
        "MOO_Assault_AssaultFlamingFist_001_ThroneRoomDefeated_HasMet",
        "GOB_RaiderCunning_HasMet",
        "GOB_Eye_HasMet",
        "DEN_AttackOnDen_HasMet_Refugee003",
        "DEN_Weaponsmith_HasMet",
        "34910f06-fac0-085f-b41a-337d0dfad85a_A",
        "ORI_Inclusion_Laezel",
        "GOB_GoblinToast_SecondGoblinToasted",
        "9e2ef14b-1a2f-4edc-3f78-7e3a27967e5c_C",
        "DEN_AttackOnDen_HasMet_ScoutCaptive",
        "PLA_KarlachRecruitmentTollhouse_State_HostilitiesBegan",
        "UND_PetrifiedDrow_Knows_MemoryCrystal",
        "UND_FairyRings_Dead_AskedDrowIdentity",
        "ZevlorRewarded",
        "GOB_PainPriest_Penanced",
        "b618166c-99f4-1c7a-02b7-32f0f0fbe420_LocalA",
        "SCE_TieflingFollowUp_Event_GiveShiningDawn",
        "DEN_AttackOnDen_HasMet_Servant004Victory",
        "DEN_AttackOnDen_HasMet_Mule1",
        "DEN_TieflingScam_HasMet",
        "DEN_AttackOnDen_HasMet_Kid003",
        "UND_FearfulRothe_Event_ConvincedRotheToAttackDuergar",
        "MOO_BugBearVendor_State_FoundMotive",
        "PLA_FlamingFist7_InnBurntDown_HasMet",
        "DEN_AttackOnDen_HasMet_Tiefling003Victory",
        "0d9d0064-babd-6e83-6ea6-5b78afb0413c_B",
        "DEN_GoblinScouts_HasMet_Captive",
        "GLO_Absolute_Knows_Symbol",
        "PLA_ConflictedFlind_Event_MindControl_KillHerself",
        "GLO_SpeakWithDead_Event_QuestionAsked",
        "HAG_Hah_MaskedVictim2_HasMet",
        "DEN_DruidAttack_HasMet_ZenBear",
        "GOB_PainPriest_Event_BadReaction",
        "UND_BrokenLantern_State_TriedArcane",
        "461152ff-16c3-2617-f8af-7ddb5681820b_b",
        "ed70fdfc-3d7b-7753-1171-957f7316fe55_B",
        "MOO_EntranceCheckpoint_Guard2_HasMet_AllowedIn",
        "MOO_Bazaar_Bystander04_PostKetheric_HasMet",
        "SidedTieflings",
        "DEN_GroveConflict_Knows_KaghaRequestedPlayers",
        "PLA_StuckHalfElf_State_PlayerAngered",
        "UND_BroodingSovereign_State_AskedCircle",
        "DEN_AttackOnDen_HasMet_Trainee001Victory",
        "UND_MyconidCircle_State_FirstGreetingDone",
        "6bde1237-aa43-36d3-9e53-ec1092198541_C",
        "UND_DarkLake_State_HostileResolution",
        "c3d825d1-49b8-9ae2-4554-4fc1f55d2eee_LocalA",
        "COL_TadpolingCentre_Event_PurgePods",
        "DEN_ZhentAgent_02_Inclusion_Start",
        "DEN_AttackOnDen_HasMet_ProdigySister",
        "HAV_HarperScouts_Event_SawYonasFuneral",
        "ORI_Shadowheart_Event_DarkJusticiarHint",
        "873bc4e0-3d3c-1eac-903b-e94920fd6306_sawgithyanki",
        "DEN_CampGeneral_RufusHasMet",
        "DEN_Apprentice_HasMet",
        "DEN_General_Mule2_HasMet",
        "0d4d7cd3-5055-29a4-6bbd-e15fdf434e7a_A",
        "DEN_AttackOnDen_HasMet_ApprenticeVictory",
        "MOO_Bazaar_State_TalkedAboutPilgrims",
        "98423a2d-7b47-e379-6526-c435773e3cff_B",
        "14e6adcb-c6a8-99e4-1c39-4d3b925590e2_B",
        "DEN_Thieflings_Event_PlayerNotInvolved",
        "HAG_HagLair_Knows_DoorWasAlive",
        "ThankedFreed_Beldron",
        "e6aef01a-0468-5046-e519-b9b624c704dc_B",
        "DEN_AttackOnDen_HasMet_Griefling",
        "4d9f1cb5-200f-c998-657a-8d04f5c93c74_B",
        "DEN_AttackOnDen_HasMet_RitualDruid005",
        "COL_Morgue_HasMet_Us",
        "4b4d2992-abb5-bd1b-9593-feb68eddf682_B",
        "GLO_Ketheric_State_AngryAtPlayer",
        "ORI_Karlach_Knows_DammonWorkedInHell",
        "ORI_Inclusion_End_Random",
        "DEN_Squirrel_HasMet",
        "ORI_INCLUSION_HALSIN",
        "DEN_ShadowDruid_State_HadSelfReflection",
        "DEN_Thieflings_Pickpocket1_HasMet",
        "PLA_FlamingFist7_Knows_AskedWhatHappened",
        "DEN_DruidAttack_HasMet_BardAfterAttack",
        "GOB_PainPriest_State_NeedMoreHP",
        "FOR_BugBearLove_Event_OpenDoor",
        "e680129a-9d39-6ffc-3e6d-926daf0d76ff_A",
        "DEN_Thieflings_State_PCSawKidThievesGettingCaught",
        "260f61d5-60df-da35-608b-a9856291b143_PlayerKnowsOrinKilledZevlor",
        "916a75f0-23d8-f05b-449d-d926d69fe782_FailedCheck",
        "MOO_Jailbreak_HasMet_AngrySister",
        "SCE_GnomeFollowUp_Wulbren_HasMet",
        "DEN_druidservant_005_HasMet",
        "CHA_Jergal_HasMet",
        "ORI_Inclusion_End_Gale",
        "PLA_ConflictedFlind_Hyena_001_HasMet",
        "StartedAlt",
        "DEN_RaidingParty_Adventurer2_HasMet",
        "GLO_Thieflings_State_PickpocketKidGotHit",
        "GOB_WolfPens_Event_HalsinLeavesGoblinCamp",
        "e6738c9d-060d-c901-b945-4d49ca303d5b_SuccessfullyReadTracks",
        "DEN_GruntingKid_HasMet",
        "SCE_TieflingFollowUp_Umi_HasMet",
        "16193247-ccea-1974-45ec-e8229a7de4ef_B",
        "DEN_TieflingLeader_Quest_GobHuntDeclined",
        "DEN_RaidingParty_Event_GoblinsAppear",
        "DEN_GuardedEntrance_HasMet_Guard1",
        "GOB_PainPriest_Event_FirstHitDone",
        "ORI_Inclusion_End_Laezel",
        "88c2a54f-df16-19d8-1f97-2c67947bdf74_B",
        "DEN_General_Event_ElevatorBearMoves",
        "DEN_CapturedGoblin_OfferedRevenge",
        "DEN_General_Inclusion_Pickpocket",
        "DEN_RitualDruid_HasMet_Left4",
        "GOB_DrowCommander_HasMet",
        "GLO_Jergal_State_OutOfTomb",
        "DEN_TieflingLeader_State_KaghaResolved",
        "f3afb428-73fc-2e5c-057b-2e0e5a1b2f1c_B",
        "DEN_AttackOnDen_HasMet_Stargazer",
        "DEN_Thieflings_Event_ShookThief",
        "DEN_AttackOnDen_HasMet_Refugee001",
        "b70d5139-9980-efc6-3ba3-fe2eb56ab2e0_B",
        "HAV_LoneLover_HasMet_DanisUpset",
        "DEN_DruidAttack_HasMet_PetWolf",
        "26071d89-33af-8eac-3c05-ee8dca91338d_who",
        "DEN_Apprentice_UserShortcut",
        "ReflectedKagha",
        "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionAsked",
        "FOR_GoblinAmbush_GoblinsPacified",
        "MOO_Bazaar_BazaarStander_007_AudienceReady_HasMet",
        "MOO_BugBearVendor_HasMet_BazBugBear",
        "932401b1-7763-7fd7-bee1-8731fe62084f_DeadThree",
        "DEN_DruidAttack_HasMet_GrieflingAfterAttack",
        "DEN_GuardedEntrance_State_ClearToPass",
        "GOB_Checkpoint_State_GuidedByCapturedGoblin",
        "DEN_RaidingParty_Event_GoblinRaidFight",
        "ORI_Inclusion_Wyll",
        "RefusedCircle",
        "DEN_TieflingScam_Knows_Scam",
        "964ddec3-a3fd-b0b5-f98a-4b32e118b6ed_B",
        "3174fc37-851b-0494-321e-b606f7e43901_B",
        "DEN_BirdSender_Knows_AskedAboutBird",
        "DEN_DevilishOx_MeetAtDruidsGrove_Incapable",
        "DEN_Thieflings_CaveGuard_002_HasMet",
        "GOB_PainPriest_Knows_PenanceIsPain",
        "6bba3537-3756-eb27-a08a-a8596d765f2e_C",
        "MOO_Bazaar_BazaarStander_005_AudienceReay_HasMet",
        "CHA_LaezelRecruitment_Event_LaezelHostile",
        "DEN_GoblinScouts_SavedDruid",
        "ArrivedAtGrove",
        "DEN_GruntingKid_Event_AskedCanTalk",
        "DEN_Apprentice_Event_GiveReward",
        "acc081f3-204a-2f29-a3bb-6d33ff784c39_C",
        "DEN_AttackOnDen_GrieflingFriend_Knows_Kelemvor",
        "GOB_PainPriest_Event_Mercy",
        "c68c5474-226f-4b47-b327-a22274e360a0_B",
        "a2fa1f0f-b9b5-f8bf-bf27-b11194b8502f_B",
        "ORI_DarkUrge_Knows_ButlerDiedReaction",
        "55452e03-17c6-9a9d-072b-80043381c98b_A",
        "UND_LoneDuergar_Event_WaitingForMainDialog",
        "OrderedBreachInn",
        "COL_Morgue_User_HasMet_Us",
        "DEN_RitualDruid_HasMet_Pacified3",
        "DEN_ShadowDruidRats_Event_RememberedLetter",
        "DEN_DruidAttack_State_PrepAfterDeathOfDruids",
        "PLA_Desire_Event_HasMet",
        "4103e544-e1db-525f-81ec-b5dfa71907d7_WantNereOut",
        "PLA_StuckHalfElf_Event_ToldQuestion",
        "UND_BroodingSovereign_Event_Enlarged",
        "f108995b-14f4-7823-d218-790177a93da8_B",
        "6a98f294-9f4f-d0b0-1cba-706f1cb15009_Local1",
        "GOB_WolfPens_Worg_001_HasMet",
        "MOO_Jailbreak_Event_BoatLeavesWithoutPlayers",
        "DEN_DruidAttack_HasMet_WeaponsmithAfterAttack",
        "GLO_Volo_HasMet",
        "OpenedSarcophagus",
        "Counsellor_RefusedHelp",
        "02455563-e119-58e5-1fe7-eb46fe381d30_A",
        "GOB_GuardUpset_HasMet",
        "GOB_RatRacket_LocalRat_001_HasMet",
        "c5f62c4b-fb04-1505-c35b-63119d96b127_First_Disabled",
        "698f5a3b-6d88-3d9e-ee4f-26d9c1fc5b6b_B",
        "UND_TheDrowNere_State_KilledGnomeSerene",
        "COL_General_Knows_ColonyIsIllithid",
        "GLO_VoloBallad_MetGuardPrison",
        "PLA_ZhentDungeon_Zhent01_HasMet",
        "7cd519b5-df41-47c0-1d53-6c315224e489_A",
        "ORI_Karlach_HasMet_DammonUnavailable",
        "GOB_CheckpointBackup003_HasMet",
        "DEN_TieflingScam_Event_FoundOutLies",
        "UND_ArguingGnomes_Quest_Accepted",
        "DEN_Thieflings_HasMet_Chef"
      ]
    },
    "Shadowland": {
      "chapter_id": "Act2_Shadowland",
      "scenario_sequence": [
        "scl_halsin",
        "scl_entrypoint",
        "scl_skepticalrobber",
        "scl_servantoftheraven",
        "scl_harpersduty",
        "scl_githcreche",
        "scl_monkamulet",
        "scl_signpost",
        "scl_deaddruid",
        "scl_siegeremains",
        "moo_balthazarlab",
        "scl_entrypointgoblin",
        "scl_hyena",
        "scl_misc",
        "scl_prodigy",
        "scl_ruinedbattlefield",
        "scl_plunderedcaravan",
        "scl_karlach",
        "scl_harperscouts",
        "scl_shadowheart",
        "scl_shadowbirds",
        "scl_oliversdiary",
        "scl_minthara",
        "scl_ad",
        "scl_pickedupseluneidol",
        "scl_shadowcurse",
        "scl_graveyard",
        "scl_pixie",
        "scl_olivershadow",
        "scl_harperscout",
        "scl_deadcursedanimal",
        "scl_pixiebell",
        "scl_mastiffpoachers",
        "scl_crossroads",
        "scl_dridercaravan",
        "scl_general",
        "scl_drider"
      ],
      "scenario_results": {
        "scl_halsin": {
          "scenario_name": "scl_halsin",
          "session_sequence": [
            "StayInSCL"
          ],
          "paths": {
            "StayInSCL": [
              "StayInSCL_1",
              "StayInSCL_3",
              "StayInSCL_7",
              "StayInSCL_0"
            ]
          },
          "node_data": {
            "StayInSCL": [
              {
                "id": "StayInSCL_1",
                "speaker": "Halsin",
                "text": "I cannot venture back with you - now that I am in a position to fight the curse, I must stay here and see it through.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Some urgency. Halsin doesn't want to backtrack to previous regions while he's close to achieving his goals."
              },
              {
                "id": "StayInSCL_3",
                "speaker": "Player",
                "text": "What if I need you by my side?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "StayInSCL_7",
                "speaker": "Halsin",
                "text": "If you truly need to retread your steps, then you will have little need for me there. You are more formidable than anything that lies in our wake.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Complimentary/'don't sell yourself short'"
              },
              {
                "id": "StayInSCL_0",
                "speaker": "Halsin",
                "text": "I must continue to investigate the curse - this may be my last chance. I shall await your return when you are ready to continue.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Imploring"
              }
            ]
          },
          "session_synopses": {
            "StayInSCL": "Halsin tells the player his business is in SCL now and he will not leave."
          }
        },
        "scl_entrypoint": {
          "scenario_name": "scl_entrypoint",
          "session_sequence": [
            "PAD_Curse",
            "DaisyAD_ReachTowers"
          ],
          "paths": {
            "PAD_Curse": [
              "PAD_Curse_0"
            ],
            "DaisyAD_ReachTowers": [
              "DaisyAD_ReachTowers_0",
              "DaisyAD_ReachTowers_1"
            ]
          },
          "node_data": {
            "PAD_Curse": [
              {
                "id": "PAD_Curse_0",
                "speaker": "Player",
                "text": "The shadows are draining me - I can't just walk through them like before.",
                "node_type": "normal",
                "checkflags": [
                  "5b1ec9d1-cec5-2107-d929-f1af9c05d5d9_A",
                  "REALLY_SHADOWHEART",
                  "SHADOWHEART_ENEMYOFSHARPATH"
                ],
                "setflags": [
                  "5b1ec9d1-cec5-2107-d929-f1af9c05d5d9_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "DaisyAD_ReachTowers": [
              {
                "id": "DaisyAD_ReachTowers_0",
                "speaker": "",
                "text": "We are approaching the Absolute. A telepathic storm is surging all around us.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "DaisyAD_ReachTowers_1",
                "speaker": "",
                "text": "And the eye of the storm lies above that tower.<br>",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_Curse": "Players are affected by the shadow curse for the first time. They start to lose health, and can feel the darkness starting to suck their life away.",
            "DaisyAD_ReachTowers": "DaisyAD that plays on entering SCL from either entry point."
          }
        },
        "scl_skepticalrobber": {
          "scenario_name": "scl_skepticalrobber",
          "session_sequence": [
            "PAD_FoundFootprints",
            "AD_ReadTombstone"
          ],
          "paths": {
            "PAD_FoundFootprints": [
              "PAD_FoundFootprints_0"
            ],
            "AD_ReadTombstone": [
              "AD_ReadTombstone_0"
            ]
          },
          "node_data": {
            "PAD_FoundFootprints": [
              {
                "id": "PAD_FoundFootprints_0",
                "speaker": "Player",
                "text": "Paw prints? Where do they lead?<br>",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_ReadTombstone": [
              {
                "id": "AD_ReadTombstone_0",
                "speaker": "Narrator",
                "text": "*'Ellie May'? You've seen this name before.*",
                "node_type": "normal",
                "checkflags": [
                  "SCL_SkepticalRobber_State_TombstoneVariation"
                ],
                "setflags": [
                  "SCL_SkepticalRobber_State_TombstoneVariation = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: Plays only the first time you interact with the grave after reading the robber's note, if you haven't found the ring yet.\rNodeContext: player has seen the name in a letter before"
              }
            ]
          },
          "session_synopses": {
            "PAD_FoundFootprints": "This PAD occurs when the player approaches a set of tracks near a ledge. If the player jumps down, they will find a burrow with a ring inside.",
            "AD_ReadTombstone": "When the player reads the tombstone, they make out the name of the woman buried there. This is connected to the skeptical robber situation."
          }
        },
        "scl_servantoftheraven": {
          "scenario_name": "scl_servantoftheraven",
          "session_sequence": [
            "Raven",
            "ShadarKai",
            "AD_TakingTurn_002_Combat",
            "AD_Idle"
          ],
          "paths": {
            "Raven": [
              "Raven_21",
              "Raven_5",
              "Raven_6",
              "Raven_0"
            ],
            "ShadarKai": [
              "ShadarKai_81",
              "ShadarKai_65",
              "ShadarKai_39",
              "ShadarKai_29",
              "38",
              "NODE_NOT_FOUND"
            ],
            "AD_TakingTurn_002_Combat": [
              "AD_TakingTurn_002_Combat_0"
            ],
            "AD_Idle": [
              "AD_Idle_10",
              "AD_Idle_13",
              "AD_Idle_11",
              "AD_Idle_9"
            ]
          },
          "node_data": {
            "Raven": [
              {
                "id": "Raven_21",
                "speaker": "Raven",
                "text": "Everyone hates you.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_ServantOfTheRaven_Raven_HasMet_SWA = False",
                  "PETPAL"
                ],
                "setflags": [
                  "SCL_ServantOfTheRaven_Raven_HasMet_SWA"
                ],
                "goto": "",
                "link": "10",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: boiting and vicious"
              },
              {
                "id": "Raven_5",
                "speaker": "Player",
                "text": "I am friend to all, little raven. There is no need to be cruel.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "10",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Raven_6",
                "speaker": "Raven",
                "text": "You think the creatures of the realm owe you something just because you never shut up.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: biting and vicious, she's incredibly cruel"
              },
              {
                "id": "Raven_0",
                "speaker": "Raven",
                "text": "They whisper about you, you know. Call you stupid and ignorant. They wish you were dead! Hah!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: gearing up, delighting in ripping the player a new one. Maniacal laugh at the end"
              }
            ],
            "ShadarKai": [
              {
                "id": "ShadarKai_81",
                "speaker": "He Who Was",
                "text": "Where lies your guilt?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCL_ServantOfTheRAven_Servant_HasMet"
                ],
                "goto": "",
                "link": "38",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Using SWD on the corpse of a dwarf. \rNodeContext: Shadar-Kai speaks in a cold, calculated tone."
              },
              {
                "id": "ShadarKai_65",
                "speaker": "Madeline",
                "text": "The... Waning Moon...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "38",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Corpse Collapses\rNodeContext: Speak with dead style"
              },
              {
                "id": "ShadarKai_39",
                "speaker": "Player",
                "text": "What's going on here?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "38",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ShadarKai_29",
                "speaker": "He Who Was",
                "text": "You walk in the darkness, unafraid? How curious.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "38",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "38",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ],
            "AD_TakingTurn_002_Combat": [
              {
                "id": "AD_TakingTurn_002_Combat_0",
                "speaker": "He Who Was",
                "text": "Embrace the darkness.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Idle": [
              {
                "id": "AD_Idle_10",
                "speaker": "Raven",
                "text": "*Caw.*",
                "node_type": "normal",
                "checkflags": [
                  "3a47baed-8459-4629-40aa-893d83a8d0b2_B"
                ],
                "setflags": [
                  "3a47baed-8459-4629-40aa-893d83a8d0b2_C"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_Idle_13",
                "speaker": "He Who Was",
                "text": "We will leave soon enough.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: annoyed and cold"
              },
              {
                "id": "AD_Idle_11",
                "speaker": "Raven",
                "text": "LEAVE.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: this is a raven mimicking human speech (look it up on youtube, it's cool and freaky!). Emotionaless and freaky. A loud bark."
              },
              {
                "id": "AD_Idle_9",
                "speaker": "He Who Was",
                "text": "No. Not until we've dealt with Madeline.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Cold and cruel"
              }
            ]
          },
          "session_synopses": {
            "Raven": "You talk to a Raven in the shadow-cursed lands. Part of the Servant of the Raven booster.",
            "ShadarKai": "You talk to a shadar-kai from the shadowfell. He tasks you with collecting memories from the dead.",
            "AD_TakingTurn_002_Combat": "Combat ADs for the Shadar Kai. Says one line at the start orf each of his turns.",
            "AD_Idle": "An idle AD playing from time to time after the ritual. This gives hints that He Who Was and the raven are not actually supposed to be in the shadowlands."
          }
        },
        "scl_harpersduty": {
          "scenario_name": "scl_harpersduty",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "scl_githcreche": {
          "scenario_name": "scl_githcreche",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "scl_monkamulet": {
          "scenario_name": "scl_monkamulet",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "scl_signpost": {
          "scenario_name": "scl_signpost",
          "session_sequence": [
            "AD_BeforeTown"
          ],
          "paths": {
            "AD_BeforeTown": [
              "AD_BeforeTown_0"
            ]
          },
          "node_data": {
            "AD_BeforeTown": [
              {
                "id": "AD_BeforeTown_0",
                "speaker": "Narrator",
                "text": "*North - Last Light Inn<br>South - Reithwin Town*<br>",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_BeforeTown": "Signpost between last light and town"
          }
        },
        "scl_deaddruid": {
          "scenario_name": "scl_deaddruid",
          "session_sequence": [
            "PAD_ReadResearch"
          ],
          "paths": {
            "PAD_ReadResearch": [
              "PAD_ReadResearch_0"
            ]
          },
          "node_data": {
            "PAD_ReadResearch": [
              {
                "id": "PAD_ReadResearch_0",
                "speaker": "Player",
                "text": "Research on the nature of the shadow curse. Good to know.<br>",
                "node_type": "normal",
                "checkflags": [
                  "SCL_DeadDruid_State_PassedNatureCheck"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_ReadResearch": "The player reads the journal of a dead druid in SCL. The druid was researching the Shadowcurse to see if it was spreading. After reading the journal the player rolls a Nature check to parse the notes"
          }
        },
        "scl_siegeremains": {
          "scenario_name": "scl_siegeremains",
          "session_sequence": [
            "AD_HistoryCheck"
          ],
          "paths": {
            "AD_HistoryCheck": [
              "AD_HistoryCheck_0"
            ]
          },
          "node_data": {
            "AD_HistoryCheck": [
              {
                "id": "AD_HistoryCheck_0",
                "speaker": "Player",
                "text": "Pickets, ballistas, siege engines... a little old-fashioned, too. A hundred years? More?",
                "node_type": "normal",
                "checkflags": [
                  "SCL_SiegeRemains_State_PassedHistoryCheck"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_HistoryCheck": "Player comments on old siege equiment in SCL"
          }
        },
        "moo_balthazarlab": {
          "scenario_name": "moo_balthazarlab",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "scl_entrypointgoblin": {
          "scenario_name": "scl_entrypointgoblin",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "scl_hyena": {
          "scenario_name": "scl_hyena",
          "session_sequence": [
            "AD_CaravanLeaves"
          ],
          "paths": {
            "AD_CaravanLeaves": [
              "AD_CaravanLeaves_1",
              "AD_CaravanLeaves_0"
            ]
          },
          "node_data": {
            "AD_CaravanLeaves": [
              {
                "id": "AD_CaravanLeaves_1",
                "speaker": "Hyena",
                "text": "*Whimper.*",
                "node_type": "normal",
                "checkflags": [
                  "SCL_EntryPoint_State_HyenaStaysAtCheckpoint"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_CaravanLeaves_0",
                "speaker": "Warrior Gronag",
                "text": "Shut your hole!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: angry - yelling at a hyena to be quiet"
              }
            ]
          },
          "session_synopses": {
            "AD_CaravanLeaves": "Hyena runs away and goblin reacts to it."
          }
        },
        "scl_misc": {
          "scenario_name": "scl_misc",
          "session_sequence": [
            "PAD_DeadDruids"
          ],
          "paths": {
            "PAD_DeadDruids": [
              "PAD_DeadDruids_0"
            ]
          },
          "node_data": {
            "PAD_DeadDruids": [
              {
                "id": "PAD_DeadDruids_0",
                "speaker": "Player",
                "text": "There was a battle here once - a large one.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_DeadDruids": "Party comments on the remains of the battle with Ketheric from 100 years ago.Halsin in particular comments on how the forces from the Emerald Grove were here."
          }
        },
        "scl_prodigy": {
          "scenario_name": "scl_prodigy",
          "session_sequence": [
            "PAD_FoundRolan"
          ],
          "paths": {
            "PAD_FoundRolan": [
              "PAD_FoundRolan_0"
            ]
          },
          "node_data": {
            "PAD_FoundRolan": [
              {
                "id": "PAD_FoundRolan_0",
                "speaker": "Player",
                "text": "Is that Rolan? I thought he had better sense than this.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_FoundRolan": "Voice Bark that plays when the party stumbles across Rolan in the Shadowlands, after he leaves the Last Light Inn looking for his siblings.Characters are surprised to find Rolan out here, but worried for his safety."
          }
        },
        "scl_ruinedbattlefield": {
          "scenario_name": "scl_ruinedbattlefield",
          "session_sequence": [
            "AD_EmeraldEnclaveFallen"
          ],
          "paths": {
            "AD_EmeraldEnclaveFallen": [
              "AD_EmeraldEnclaveFallen_0"
            ]
          },
          "node_data": {
            "AD_EmeraldEnclaveFallen": [
              {
                "id": "AD_EmeraldEnclaveFallen_0",
                "speaker": "Narrator",
                "text": "*Fallen members of the Emerald Enclave. Casualties in the war against Ketheric Thorm, years past.*",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SCL_Ketheric_State_PlayerKnowsKethericHistory"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_EmeraldEnclaveFallen": "There are number of pile of fallen withered skeletons in greenish armors of Emerald Enclave.They are remains from the past war with Ketheric and his Justiciars"
          }
        },
        "scl_plunderedcaravan": {
          "scenario_name": "scl_plunderedcaravan",
          "session_sequence": [
            "PAD_InvestigatedKidnapping"
          ],
          "paths": {
            "PAD_InvestigatedKidnapping": [
              "PAD_InvestigatedKidnapping_0"
            ]
          },
          "node_data": {
            "PAD_InvestigatedKidnapping": [
              {
                "id": "PAD_InvestigatedKidnapping_0",
                "speaker": "Player",
                "text": "A bad way to go.<br>",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Commenting on the aftermath of a skirmish - some dead refugees like about."
              }
            ]
          },
          "session_synopses": {
            "PAD_InvestigatedKidnapping": "The player finds the location where Zevlor kidnapped the tiefling refugees. A successful Investigation check reveals information about what happened at the scene"
          }
        },
        "scl_karlach": {
          "scenario_name": "scl_karlach",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "scl_harperscouts": {
          "scenario_name": "scl_harperscouts",
          "session_sequence": [
            "AD_HarperScout_003_Combat",
            "Dead_HarperScout_000",
            "ShadowCreatures",
            "AD_HarperScout_000_LeaveWarning",
            "AD_HarperScout_000_WrongWarning"
          ],
          "paths": {
            "AD_HarperScout_003_Combat": [
              "AD_HarperScout_003_Combat_0"
            ],
            "Dead_HarperScout_000": [
              "Dead_HarperScout_000_16",
              "Dead_HarperScout_000_17",
              "Dead_HarperScout_000_13",
              "Dead_HarperScout_000_6"
            ],
            "ShadowCreatures": [
              "ShadowCreatures_21",
              "ShadowCreatures_40",
              "ShadowCreatures_78",
              "ShadowCreatures_2",
              "ShadowCreatures_28",
              "32",
              "NODE_NOT_FOUND"
            ],
            "AD_HarperScout_000_LeaveWarning": [
              "AD_HarperScout_000_LeaveWarning_0"
            ],
            "AD_HarperScout_000_WrongWarning": [
              "AD_HarperScout_000_WrongWarning_0"
            ]
          },
          "node_data": {
            "AD_HarperScout_003_Combat": [
              {
                "id": "AD_HarperScout_003_Combat_0",
                "speaker": "Harper Karrow",
                "text": "Yonas, no! What are you doing?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Dead_HarperScout_000": [
              {
                "id": "Dead_HarperScout_000_16",
                "speaker": "Narrator",
                "text": "*The corpse regards you lifelessly.*",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Dead_HarperScout_000_17",
                "speaker": "Player",
                "text": "What's your name?",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [
                  "GLO_SpeakWithDead_Event_QuestionAsked"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Dead_HarperScout_000_13",
                "speaker": "Harper Lassandra",
                "text": "Lassandra...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Dead_HarperScout_000_6",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowCreatures": [
              {
                "id": "ShadowCreatures_21",
                "speaker": "Harper Lassandra",
                "text": "Stay together! Keep to the light!",
                "node_type": "normal",
                "checkflags": [
                  "SCL_HarperScouts_State_EnteredAbove = False"
                ],
                "setflags": [
                  "SCL_HarperScouts_ShadowCreatures_HasMet"
                ],
                "goto": "",
                "link": "8",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: From off-screen, as the player picks their way carefully through the dark, twisted terrain."
              },
              {
                "id": "ShadowCreatures_40",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "8",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: In the darkness nearby, burning torches grow near, silhouetting a small knot of armed figures moving in a tight huddle. The player moves closer. A dead branch snaps underfoot, startling one of the figures - Lassandra, a wide-eyed young woman wearing half-plate under a blue cloak. She brandishes a torch and sword."
              },
              {
                "id": "ShadowCreatures_78",
                "speaker": "Harper Lassandra",
                "text": "Stop - who's there?!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "8",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Yonas (Harper 3) is moving wide of the group, an arrow notched to his bow, eyes fixed on the player. He's straying further from the Harpers' torches, walking along a sharp incline where road falls away, toeing the line between shadow and light."
              },
              {
                "id": "ShadowCreatures_2",
                "speaker": "Player",
                "text": "My name is [GEN_PlayerName_c11eee1e-7815-6143-7233-f2427799fa53]. Who are you?",
                "node_type": "normal",
                "checkflags": [
                  "FIGHTER = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "32",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ShadowCreatures_28",
                "speaker": "Harper Lassandra",
                "text": "First, come closer. Hands up.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "32",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: *Lassandra keeps her weapon raised. The male harper (Harper 3) inches around, arrow notched, to get a better angle on the player.*\rNodeContext: Suspicious"
              },
              {
                "id": "32",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ],
            "AD_HarperScout_000_LeaveWarning": [
              {
                "id": "AD_HarperScout_000_LeaveWarning_0",
                "speaker": "Harper Lassandra",
                "text": "You're leaving?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCL_HarperScouts_State_PlayerTriedToLeave"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_HarperScout_000_WrongWarning": [
              {
                "id": "AD_HarperScout_000_WrongWarning_0",
                "speaker": "Harper Lassandra",
                "text": "That's not the way - come back!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_HarperScout_003_Combat": "Combat AD for Harper Karrow in SCL",
            "Dead_HarperScout_000": "Speak with dead dialogue with Lassandra, a harper scout. The player can ask her corpse, who she is, what she was doing etc, possibly learning of Last Light, a nearby refuge against shadow curse.",
            "ShadowCreatures": "The player encounters a group of Harper scouts shortly after entering the Shadow-cursed lands. After being challenged by the scouts, they're forced to join sides as they're attacked by shadow creatures.",
            "AD_HarperScout_000_LeaveWarning": "After saving the Harper Scouts from the Shadow creatures in SCL, the player tries to leave without telling the Harpers they're ready to go.",
            "AD_HarperScout_000_WrongWarning": "After saving them from shadow creatures, the Harper Scouts are guiding the player through SCL to Last Light.This AD plays if the player goes in the wrong direction."
          }
        },
        "scl_shadowheart": {
          "scenario_name": "scl_shadowheart",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "scl_shadowbirds": {
          "scenario_name": "scl_shadowbirds",
          "session_sequence": [
            "PAD_Approach"
          ],
          "paths": {
            "PAD_Approach": [
              "PAD_Approach_0"
            ]
          },
          "node_data": {
            "PAD_Approach": [
              {
                "id": "PAD_Approach_0",
                "speaker": "Player",
                "text": "A dead bird. What happened to it?",
                "node_type": "normal",
                "checkflags": [
                  "SCL_ShadowBird_State_Identified = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Reacting to coming across a dead bird in the shadow-cursed lands."
              }
            ]
          },
          "session_synopses": {
            "PAD_Approach": "A player encounters a dead bird."
          }
        },
        "scl_oliversdiary": {
          "scenario_name": "scl_oliversdiary",
          "session_sequence": [
            "PAD_HideAndSeek",
            "OliverShadow",
            "AD_CreepyNoises",
            "AD_OliverDeathScream"
          ],
          "paths": {
            "PAD_HideAndSeek": [
              "PAD_HideAndSeek_0"
            ],
            "OliverShadow": [
              "OliverShadow_74",
              "OliverShadow_100",
              "OliverShadow_69",
              "OliverShadow_12",
              "OliverShadow_142",
              "OliverShadow_76"
            ],
            "AD_CreepyNoises": [
              "AD_CreepyNoises_0"
            ],
            "AD_OliverDeathScream": [
              "AD_OliverDeathScream_0"
            ]
          },
          "node_data": {
            "PAD_HideAndSeek": [
              {
                "id": "PAD_HideAndSeek_0",
                "speaker": "Player",
                "text": "Where'd that child go? Or... whatever it is.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Stumped, looking for Oliver Found Oliver (a little shadow/phantom boy they're playing hide and seek with)"
              }
            ],
            "OliverShadow": [
              {
                "id": "OliverShadow_74",
                "speaker": "Oliver",
                "text": "You weren't supposed to find me. You weren't supposed to win.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_OliversDiary_State_StartedHideAndSeek",
                  "SCL_OliversDiary_State_FoundOliver"
                ],
                "setflags": [],
                "goto": "",
                "link": "12",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: More confused than angry, like the impossible has happened."
              },
              {
                "id": "OliverShadow_100",
                "speaker": "Player",
                "text": "Don't be a sore loser.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "12",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "OliverShadow_69",
                "speaker": "Oliver",
                "text": "You're not my mummy or my daddy - don't tell me what to do.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "OliverShadow_12",
                "speaker": "Oliver",
                "text": "Let's play another game - I deserve a chance to even the score.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "OliverShadow_142",
                "speaker": "Player",
                "text": "Let's play.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "OliverShadow_76",
                "speaker": "Oliver",
                "text": "Try to find me again - but my family will be looking for you at the same time, so don't get caught!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCL_OliversDiary_State_SecondRound"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [
                  "Gale 1",
                  "Shadowheart 1",
                  "Wyll 1",
                  "Karlach 1",
                  "Halsin -1"
                ],
                "context": "NodeContext: Excited"
              }
            ],
            "AD_CreepyNoises": [
              {
                "id": "AD_CreepyNoises_0",
                "speaker": "Oliver",
                "text": "Someone's coming. Someone new. Maybe they want to play.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Hushed anticipation. Little giggle at the end."
              }
            ],
            "AD_OliverDeathScream": [
              {
                "id": "AD_OliverDeathScream_0",
                "speaker": "Oliver",
                "text": "Mummy! Daddy! Betsy! No - don't leave me!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Distraught cry"
              }
            ]
          },
          "session_synopses": {
            "PAD_HideAndSeek": "AD played when the player finds or fails to find Oliver during hide & seek.",
            "OliverShadow": "Dialog with Oliver, the shadow-child in the Shadowcursed Lands. Oliver wishes for the player to be his playmate, and engages in a game of hide and seek. Oliver seems to be a soul trapped by the curse for a 100 years, but the player will gradually realise over the course of the act that he is in fact a shadow version of Thaniel, the spirit of the land. Oliver possesses Thaniel's heart, and the curse cannot be lifted until it is returned. Oliver does not want to do this - he's made his own little 'family' using cursed beings in the area. If the player challenges him about Thaniel, Oliver will flee towards the town square, where a final confrontation will take place.",
            "AD_CreepyNoises": "As the player approaches the abandoned house, they hear strange noises from inside, as if someone still lived there.",
            "AD_OliverDeathScream": "Death-scream of Oliver in the Oliver's Diary booster."
          }
        },
        "scl_minthara": {
          "scenario_name": "scl_minthara",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "scl_ad": {
          "scenario_name": "scl_ad",
          "session_sequence": [
            "ShadowMemory4",
            "ShadowMemory20",
            "ShadowMemory8",
            "ShadowMemory16",
            "Entrance_Plaque3",
            "ShadowMemory17",
            "ShadowMemory9",
            "ShadowMemory21",
            "ShadowMemory5",
            "ShadowMemory10",
            "ShadowMemory2",
            "ShadowMemory26",
            "ShadowMemory30",
            "ShadowMemory31",
            "ShadowMemory27",
            "ShadowMemory3",
            "ShadowMemory11",
            "ShadowMemory28",
            "ShadowMemory12",
            "ShadowMemory32",
            "ShadowMemory24",
            "ShadowMemory1",
            "ShadowMemory25",
            "ShadowMemory33",
            "ShadowMemory13",
            "ShadowMemory29",
            "ShadowMemory22",
            "ShadowMemory6",
            "Entrance_Plaque1"
          ],
          "paths": {
            "ShadowMemory4": [
              "ShadowMemory4_0"
            ],
            "ShadowMemory20": [
              "ShadowMemory20_0"
            ],
            "ShadowMemory8": [
              "ShadowMemory8_0"
            ],
            "ShadowMemory16": [
              "ShadowMemory16_0"
            ],
            "Entrance_Plaque3": [
              "Entrance_Plaque3_0"
            ],
            "ShadowMemory17": [
              "ShadowMemory17_0"
            ],
            "ShadowMemory9": [
              "ShadowMemory9_0"
            ],
            "ShadowMemory21": [
              "ShadowMemory21_0"
            ],
            "ShadowMemory5": [
              "ShadowMemory5_0"
            ],
            "ShadowMemory10": [
              "ShadowMemory10_0"
            ],
            "ShadowMemory2": [
              "ShadowMemory2_0"
            ],
            "ShadowMemory26": [
              "ShadowMemory26_0"
            ],
            "ShadowMemory30": [
              "ShadowMemory30_0"
            ],
            "ShadowMemory31": [
              "ShadowMemory31_0"
            ],
            "ShadowMemory27": [
              "ShadowMemory27_0"
            ],
            "ShadowMemory3": [
              "ShadowMemory3_0"
            ],
            "ShadowMemory11": [
              "ShadowMemory11_0"
            ],
            "ShadowMemory28": [
              "ShadowMemory28_0"
            ],
            "ShadowMemory12": [
              "ShadowMemory12_0"
            ],
            "ShadowMemory32": [
              "ShadowMemory32_0"
            ],
            "ShadowMemory24": [
              "ShadowMemory24_0"
            ],
            "ShadowMemory1": [
              "ShadowMemory1_0"
            ],
            "ShadowMemory25": [
              "ShadowMemory25_0"
            ],
            "ShadowMemory33": [
              "ShadowMemory33_0"
            ],
            "ShadowMemory13": [
              "ShadowMemory13_0"
            ],
            "ShadowMemory29": [
              "ShadowMemory29_0"
            ],
            "ShadowMemory22": [
              "ShadowMemory22_0"
            ],
            "ShadowMemory6": [
              "ShadowMemory6_0"
            ],
            "Entrance_Plaque1": [
              "Entrance_Plaque1_0"
            ]
          },
          "node_data": {
            "ShadowMemory4": [
              {
                "id": "ShadowMemory4_0",
                "speaker": "Narrator",
                "text": "*You sense a fading echo of the person who once was. A dockhand. He did not ask for this.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory20": [
              {
                "id": "ShadowMemory20_0",
                "speaker": "Narrator",
                "text": "*A distant memory of a man stretching his back with a groan. Another day of hauling masonry blocks done...*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory8": [
              {
                "id": "ShadowMemory8_0",
                "speaker": "Narrator",
                "text": "*She was a healer, trying to aid the wounded in the battle against the Sharrans. But there were so many...*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory16": [
              {
                "id": "ShadowMemory16_0",
                "speaker": "Narrator",
                "text": "*You sense a matriarch's flush of pride - she will soon be a grandmother, and the child will bear her name. Muldred.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Mull-dread"
              }
            ],
            "Entrance_Plaque3": [
              {
                "id": "Entrance_Plaque3_0",
                "speaker": "Narrator",
                "text": "*We offer ourselves to the darkness, that blessed Shar may give us her mercy.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory17": [
              {
                "id": "ShadowMemory17_0",
                "speaker": "Narrator",
                "text": "*Callused hands work a hammer and chisel around a massive slab of rock. Months from now, a face will take shape.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory9": [
              {
                "id": "ShadowMemory9_0",
                "speaker": "Narrator",
                "text": "*You see a man stalking slowly through the woods, bow half-drawn. If he bags a deer, the whole family will be kept fed all winter...*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory21": [
              {
                "id": "ShadowMemory21_0",
                "speaker": "Narrator",
                "text": "*You can almost taste the sour ale that once clung to this soul's breath. He was insensible when the shadows came for him.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory5": [
              {
                "id": "ShadowMemory5_0",
                "speaker": "Narrator",
                "text": "*You glimpse a young Harper on the eve of battle against Thorm, long ago. He and his comrades toast each other in Last Light...*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory10": [
              {
                "id": "ShadowMemory10_0",
                "speaker": "Narrator",
                "text": "*In her former life, this girl played in the nearby woods. She was always the best at climbing trees.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory2": [
              {
                "id": "ShadowMemory2_0",
                "speaker": "Narrator",
                "text": "*You can almost feel the heat from the forge. This one was once a blacksmith.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory26": [
              {
                "id": "ShadowMemory26_0",
                "speaker": "Narrator",
                "text": "*You sense a faded memory of marching in an army against Ketheric Thorm. Victory seemed possible then.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory30": [
              {
                "id": "ShadowMemory30_0",
                "speaker": "Narrator",
                "text": "*An echo of the past shows a man hunched over a ledger, quill in hand. Tolls collected on the Risen Road, destined for Moonrise.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory31": [
              {
                "id": "ShadowMemory31_0",
                "speaker": "Narrator",
                "text": "*You see a man drain his tankard in an inn as he listens to a Flaming Fist play the lute. He's better than his uniform might suggest.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory27": [
              {
                "id": "ShadowMemory27_0",
                "speaker": "Narrator",
                "text": "*You can almost smell the hops and barley for yourself. This man's family always complained that his clothing reeked after work at the brewery.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory3": [
              {
                "id": "ShadowMemory3_0",
                "speaker": "Narrator",
                "text": "*Desperate prayers to Selûne, echoing from the past. They did not save him.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory11": [
              {
                "id": "ShadowMemory11_0",
                "speaker": "Narrator",
                "text": "*You see an older woman, on her knees, scrubbing the floor of an inn. The patrons made a mess of things again the night before.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory28": [
              {
                "id": "ShadowMemory28_0",
                "speaker": "Narrator",
                "text": "*You hear the heavy thud of a butcher's cleaver on his block, as he divides his meagre fare for those waiting. Never enough to go around.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory12": [
              {
                "id": "ShadowMemory12_0",
                "speaker": "Narrator",
                "text": "*He had dreams of boarding a ship in Baldur's Gate, and seeing the world. But then the darkness came.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory32": [
              {
                "id": "ShadowMemory32_0",
                "speaker": "Narrator",
                "text": "*An older man turns his head away in shame. His neighbours would not renounce Selûne - now they hang in the town square.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory24": [
              {
                "id": "ShadowMemory24_0",
                "speaker": "Narrator",
                "text": "*A strange feeling of resentment comes to you. A travelling merchant, sick of this route. Sick of the tolls eating away his profits.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory1": [
              {
                "id": "ShadowMemory1_0",
                "speaker": "Narrator",
                "text": "*A faded memory of a boy and girl sharing their first kiss. Your own heart almost flutters in tune with theirs.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory25": [
              {
                "id": "ShadowMemory25_0",
                "speaker": "Narrator",
                "text": "*You see an old boot, balanced upside down on a cobbler's knee, as he taps the final nail into the new sole. Good as new.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory33": [
              {
                "id": "ShadowMemory33_0",
                "speaker": "Narrator",
                "text": "*You feel a rush of outrage. This woman worshipped Shar to the end - so why does the Nightsinger's curse not spare her...?*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory13": [
              {
                "id": "ShadowMemory13_0",
                "speaker": "Narrator",
                "text": "*You sense a young woman, gazing at Moonrise Towers in awe. Perhaps one day she will get to gaze out from atop it, she hopes.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory29": [
              {
                "id": "ShadowMemory29_0",
                "speaker": "Narrator",
                "text": "*You see a mother sitting by her child's bedside, listening to his sickly breathing as he sleeps.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory22": [
              {
                "id": "ShadowMemory22_0",
                "speaker": "Narrator",
                "text": "*A happy, faded memory comes to you. A woman walking along a beach, holding hands with her husband-to-be.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ShadowMemory6": [
              {
                "id": "ShadowMemory6_0",
                "speaker": "Narrator",
                "text": "*Thoughts of baby names. She did not wish for her first born to be named after her mother-in-law. Muldred. Ugh.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Mull-dread"
              }
            ],
            "Entrance_Plaque1": [
              {
                "id": "Entrance_Plaque1_0",
                "speaker": "Narrator",
                "text": "*We offer our prayers to the Dark Lady, whose comfort and grace heals all.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "ShadowMemory4": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory20": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory8": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory16": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "Entrance_Plaque3": "Vertical clickable scripture/plaque in the exit/enrance to the Underdark near the Elevator",
            "ShadowMemory17": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory9": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory21": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory5": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory10": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory2": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory26": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory30": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory31": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory27": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory3": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory11": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory28": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory12": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory32": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory24": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory1": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory25": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory33": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory13": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory29": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory22": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "ShadowMemory6": "Narrator - echo of the former life of a shadow creature that died in combat. Ghostly impression of the person they once were.",
            "Entrance_Plaque1": "rounded clickable plaque in the exit/enrance to the Underdark right next to the Elevator"
          }
        },
        "scl_pickedupseluneidol": {
          "scenario_name": "scl_pickedupseluneidol",
          "session_sequence": [
            "PAD"
          ],
          "paths": {
            "PAD": [
              "PAD_0"
            ]
          },
          "node_data": {
            "PAD": [
              {
                "id": "PAD_0",
                "speaker": "Player",
                "text": "Good craftsmanship wasted on Selûne. Maybe it can be repurposed somehow.",
                "node_type": "normal",
                "checkflags": [
                  "ShadowHeart_InParty_Knows_SharWorshipper",
                  "SCL_State_PickedUpSeluneIdol"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: SH picks up a Selûne idol. SH is known to be a Shar worshipper\rNodeContext: Unimpressed"
              }
            ]
          },
          "session_synopses": {
            "PAD": "ShadowHeart reacting on picking up \"Selune Idol\"Location: SCL -> ShadowlandsShe reacts both when she picks up the idol or when another character does that."
          }
        },
        "scl_shadowcurse": {
          "scenario_name": "scl_shadowcurse",
          "session_sequence": [
            "PAD_ShadowheartResistant"
          ],
          "paths": {
            "PAD_ShadowheartResistant": [
              "PAD_ShadowheartResistant_0"
            ]
          },
          "node_data": {
            "PAD_ShadowheartResistant": [
              {
                "id": "PAD_ShadowheartResistant_0",
                "speaker": "Shadowheart",
                "text": "I can feel the shadows' power here... but they don't seem to be harming me?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "ORI_Shadowheart_Knows_CurseResistant",
                  "ORI_Shadowheart_Event_DarkJusticiarHint"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Some confusion. She seems to have resistance in a shadow-cursed environment  that's affecting all others."
              }
            ]
          },
          "session_synopses": {
            "PAD_ShadowheartResistant": "Shadowheart comments on how she is resistant to the first layer of the curse."
          }
        },
        "scl_graveyard": {
          "scenario_name": "scl_graveyard",
          "session_sequence": [
            "VB_DirtpileGas",
            "VB_Debilitated"
          ],
          "paths": {
            "VB_DirtpileGas": [
              "VB_DirtpileGas_0"
            ],
            "VB_Debilitated": [
              "VB_Debilitated_0"
            ]
          },
          "node_data": {
            "VB_DirtpileGas": [
              {
                "id": "VB_DirtpileGas_0",
                "speaker": "Player",
                "text": "Argh! This air is foul with rot. Better be careful...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "VB_Debilitated": [
              {
                "id": "VB_Debilitated_0",
                "speaker": "Player",
                "text": "This place... I feel chilled to the marrow.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "VB_DirtpileGas": "",
            "VB_Debilitated": ""
          }
        },
        "scl_pixie": {
          "scenario_name": "scl_pixie",
          "session_sequence": [
            "AD_AsksForHelp",
            "PAD_ReactionToPixie"
          ],
          "paths": {
            "AD_AsksForHelp": [
              "AD_AsksForHelp_0"
            ],
            "PAD_ReactionToPixie": [
              "PAD_ReactionToPixie_1",
              "PAD_ReactionToPixie_0"
            ]
          },
          "node_data": {
            "AD_AsksForHelp": [
              {
                "id": "AD_AsksForHelp_0",
                "speaker": "",
                "text": "Won't you help me? Set me free?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_ReactionToPixie": [
              {
                "id": "PAD_ReactionToPixie_1",
                "speaker": "Player",
                "text": "Hmm, a pixie. Curious little thing.",
                "node_type": "normal",
                "checkflags": [
                  "25c1ac70-f65f-4869-8a74-eff5827d9cde"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PAD_ReactionToPixie_0",
                "speaker": "Player",
                "text": "Not what I expected to run into in a place like this.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_AsksForHelp": "AD of the pixie in the moonlantern before the player has picked up the item. Pixie is in Disney mode here.",
            "PAD_ReactionToPixie": "Players react to the pixie inside the lantern. 2-speaker and solo speaker versions. Added reactivity depending on if the pixie was angered during the previous scene (SCL_Pixie_InsideLantern)"
          }
        },
        "scl_olivershadow": {
          "scenario_name": "scl_olivershadow",
          "session_sequence": [
            "PAD_FlowersAtHouse",
            "AD_AfterHideAndSeek",
            "Acceptance",
            "AD_Dome50PercentHP",
            "AD_Dome25PercentHP",
            "AD_FriendsSummoned",
            "AD_SummoningPlush"
          ],
          "paths": {
            "PAD_FlowersAtHouse": [
              "PAD_FlowersAtHouse_0"
            ],
            "AD_AfterHideAndSeek": [
              "AD_AfterHideAndSeek_0"
            ],
            "Acceptance": [
              "Acceptance_12",
              "Acceptance_33",
              "Acceptance_35",
              "Acceptance_58",
              "Acceptance_24",
              "Acceptance_1",
              "Acceptance_23",
              "Acceptance_19",
              "Acceptance_47",
              "Acceptance_57",
              "45",
              "NODE_NOT_FOUND"
            ],
            "AD_Dome50PercentHP": [
              "AD_Dome50PercentHP_0"
            ],
            "AD_Dome25PercentHP": [
              "AD_Dome25PercentHP_0"
            ],
            "AD_FriendsSummoned": [
              "AD_FriendsSummoned_0"
            ],
            "AD_SummoningPlush": [
              "AD_SummoningPlush_0"
            ]
          },
          "node_data": {
            "PAD_FlowersAtHouse": [
              {
                "id": "PAD_FlowersAtHouse_0",
                "speaker": "Player",
                "text": "Flowers blooming in shadow. This is the sign Halsin mentioned.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_LiftingTheCurse_Knows_SeekingBreath",
                  "REALLY_HALSIN = False"
                ],
                "setflags": [
                  "SCL_LiftingTheCurse_Event_SpottedFlowers"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_AfterHideAndSeek": [
              {
                "id": "AD_AfterHideAndSeek_0",
                "speaker": "Oliver",
                "text": "You were good. But just you wait - I'll get better.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_OliversDiary_State_FoundAgain",
                  "8baf8087-81b0-de5d-3efa-f74769a625f4_A"
                ],
                "setflags": [
                  "8baf8087-81b0-de5d-3efa-f74769a625f4_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: A little miffed at losing/considering ways to improve his hide & seek game"
              }
            ],
            "Acceptance": [
              {
                "id": "Acceptance_12",
                "speaker": "",
                "text": "",
                "node_type": "alias",
                "checkflags": [
                  "SCL_LiftingTheCurse_State_NightdomeDestroyed"
                ],
                "setflags": [],
                "goto": "",
                "link": "Acceptance_60",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Acceptance_33",
                "speaker": "Oliver",
                "text": "I'm not leaving - you can't make me!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "34",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Acceptance_35",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "GLO_Inclusion_Halsin"
                ],
                "goto": "",
                "link": "34",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Acceptance_58",
                "speaker": "Halsin",
                "text": "Be gentle. He's much more than a child, but he doesn't truly know that.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "34",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Discreet, advisory. Doesn't want to upset Oliver any more than he already is."
              },
              {
                "id": "Acceptance_24",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "GLO_Inclusion_End_Halsin"
                ],
                "goto": "",
                "link": "34",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Acceptance_1",
                "speaker": "Player",
                "text": "People are dying for the sake of your fun, kid.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "45",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Acceptance_23",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "GLO_Inclusion_Halsin"
                ],
                "goto": "",
                "link": "45",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Acceptance_19",
                "speaker": "Halsin",
                "text": "I said gentle.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "45",
                "is_end": false,
                "approval": [
                  "Halsin -1"
                ],
                "context": "NodeContext: Disapproving. We said something unnecessarily harsh to Oliver"
              },
              {
                "id": "Acceptance_47",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "GLO_Inclusion_End_Halsin"
                ],
                "goto": "",
                "link": "45",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Acceptance_57",
                "speaker": "Oliver",
                "text": "Nobody dies here. They always come back to play with me, just a little different each time.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "45",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "45",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ],
            "AD_Dome50PercentHP": [
              {
                "id": "AD_Dome50PercentHP_0",
                "speaker": "Oliver",
                "text": "You're spoiling my fun! Stop it right now, or you'll be sorry!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Angry (player is attacking a magic dome shielding Oliver, reducing its integrity by 50%)"
              }
            ],
            "AD_Dome25PercentHP": [
              {
                "id": "AD_Dome25PercentHP_0",
                "speaker": "Oliver",
                "text": "Why are you doing this? All I wanted to do was play!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Angry (player has reduced a magic dome shielding Oliver to 25% integrity)"
              }
            ],
            "AD_FriendsSummoned": [
              {
                "id": "AD_FriendsSummoned_0",
                "speaker": "Oliver",
                "text": "I'll make my own fun if I have to - and my own friends.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Defiant/threatening/slightly bratty"
              }
            ],
            "AD_SummoningPlush": [
              {
                "id": "AD_SummoningPlush_0",
                "speaker": "Oliver",
                "text": "We're not done playing yet.",
                "node_type": "normal",
                "checkflags": [
                  "8f819d41-e936-8042-1935-56de252d6c7f_A"
                ],
                "setflags": [
                  "8f819d41-e936-8042-1935-56de252d6c7f_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: he's summoning toys to fight the players - malicious, but playful"
              }
            ]
          },
          "session_synopses": {
            "PAD_FlowersAtHouse": "PAD commenting on the unusual fact that flowers are growing around Olver's House despite it being in the Shadowcurse.",
            "AD_AfterHideAndSeek": "After playing with Oliver hide and seek for two times he will stay at his house. Depending on how the player did, he'll be left thinking about new ideas on how to improve his hide and seek abilities or happy because they didn't find him without alerting/killing the shadows.",
            "Acceptance": "Dialog with Oliver, in which the player confronts him and convinces him to rejoin Thaniel, his other half. so that the shadow curse can be lifted. Oliver will always return to Thaniel after this dialogue, but the player can be harsh or gentle in how they do so.",
            "AD_Dome50PercentHP": "This AD happens when you damage nightdome and bring it below 50%.",
            "AD_Dome25PercentHP": "This AD happens when you damage nightdome and bring it below 25%.",
            "AD_FriendsSummoned": "Spoken by Oliver as he summons more creatures to his defence while the player tries to seize him.",
            "AD_SummoningPlush": "AD that Oliver plays when he summons his Plush during the fight at the plaza in Shadow Cursed Town"
          }
        },
        "scl_harperscout": {
          "scenario_name": "scl_harperscout",
          "session_sequence": [
            "000_AD_CombatStarts",
            "000_AD_TakesMoonlantern"
          ],
          "paths": {
            "000_AD_CombatStarts": [
              "000_AD_CombatStarts_0"
            ],
            "000_AD_TakesMoonlantern": [
              "000_AD_TakesMoonlantern_0"
            ]
          },
          "node_data": {
            "000_AD_CombatStarts": [
              {
                "id": "000_AD_CombatStarts_0",
                "speaker": "Harper Lassandra",
                "text": "That's them! Kill the drider - take the Moonlantern!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "000_AD_TakesMoonlantern": [
              {
                "id": "000_AD_TakesMoonlantern_0",
                "speaker": "Harper Lassandra",
                "text": "The Moonlantern's ours! Let's finish this and go home.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "000_AD_CombatStarts": "Start ambush combat with Harper Lassandra present",
            "000_AD_TakesMoonlantern": "Harper takes the moolantern from the harper."
          }
        },
        "scl_deadcursedanimal": {
          "scenario_name": "scl_deadcursedanimal",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "scl_pixiebell": {
          "scenario_name": "scl_pixiebell",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "10",
              "1",
              "4",
              "8",
              "5",
              "3"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "10",
                "speaker": "",
                "text": "Dongity ding, you ruin everything.",
                "node_type": "normal",
                "checkflags": [
                  "GLO_PixieBell_HasMet"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Sing-song assholishly"
              },
              {
                "id": "1",
                "speaker": "",
                "text": "Anything you wanna say?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "4",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "8",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "8",
                "speaker": "",
                "text": "You look like you want to say the magic words. Like they're right on the tip of your lips...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "5",
                "speaker": "Player",
                "text": "Snurl.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Karlach 1"
                ],
                "context": ""
              },
              {
                "id": "3",
                "speaker": "",
                "text": "Don't you snurl at me, you nasty cow!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "GLO_PixieBell_Event_TransformsIntoDeepRothe"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "": "When you ring the pixie's bell, she poofs into existence and asks you aobut some 'magic words'. Depending on how you respond, she'll give a curse or a blessing"
          }
        },
        "scl_mastiffpoachers": {
          "scenario_name": "scl_mastiffpoachers",
          "session_sequence": [
            "PAD_TouchedTorches_WithGale"
          ],
          "paths": {
            "PAD_TouchedTorches_WithGale": [
              "PAD_TouchedTorches_WithGale_4",
              "PAD_TouchedTorches_WithGale_7",
              "PAD_TouchedTorches_WithGale_6",
              "PAD_TouchedTorches_WithGale_2",
              "PAD_TouchedTorches_WithGale_5"
            ]
          },
          "node_data": {
            "PAD_TouchedTorches_WithGale": [
              {
                "id": "PAD_TouchedTorches_WithGale_4",
                "speaker": "Player",
                "text": "That's odd. The flame won't go out.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PAD_TouchedTorches_WithGale_7",
                "speaker": "Player",
                "text": "",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PAD_TouchedTorches_WithGale_6",
                "speaker": "",
                "text": "True",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PAD_TouchedTorches_WithGale_2",
                "speaker": "Player",
                "text": "Ah - a Continual Flame. Nothing can douse it, near as I can tell.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCL_MastiffPoachers_Knows_ContinualFlame"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PAD_TouchedTorches_WithGale_5",
                "speaker": "Gale",
                "text": "Spot on!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_TouchedTorches_WithGale": "Party remarks on torches they cannot extinguish."
          }
        },
        "scl_crossroads": {
          "scenario_name": "scl_crossroads",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "scl_dridercaravan": {
          "scenario_name": "scl_dridercaravan",
          "session_sequence": [
            "AD_HalfOrcs_AtTower",
            "AD_Goblins_AtTower",
            "HalfOrcCaster_Checkpoint",
            "GoblinRanger_Dead"
          ],
          "paths": {
            "AD_HalfOrcs_AtTower": [
              "AD_HalfOrcs_AtTower_4",
              "AD_HalfOrcs_AtTower_1",
              "AD_HalfOrcs_AtTower_2",
              "AD_HalfOrcs_AtTower_5"
            ],
            "AD_Goblins_AtTower": [
              "AD_Goblins_AtTower_0"
            ],
            "HalfOrcCaster_Checkpoint": [
              "HalfOrcCaster_Checkpoint_1",
              "HalfOrcCaster_Checkpoint_9",
              "HalfOrcCaster_Checkpoint_13",
              "HalfOrcCaster_Checkpoint_7",
              "HalfOrcCaster_Checkpoint_8",
              "HalfOrcCaster_Checkpoint_11"
            ],
            "GoblinRanger_Dead": [
              "GoblinRanger_Dead_23",
              "GoblinRanger_Dead_24",
              "GoblinRanger_Dead_21",
              "GoblinRanger_Dead_9"
            ]
          },
          "node_data": {
            "AD_HalfOrcs_AtTower": [
              {
                "id": "AD_HalfOrcs_AtTower_4",
                "speaker": "Kansif",
                "text": "Remember to show respect. Anyone here could be a True Soul.",
                "node_type": "normal",
                "checkflags": [
                  "6d32676a-ac06-3f94-8377-35a6aed97492_A"
                ],
                "setflags": [
                  "6d32676a-ac06-3f94-8377-35a6aed97492_B"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_HalfOrcs_AtTower_1",
                "speaker": "Bedi",
                "text": "I can... feel them. True Souls - it's like they send out ripples.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_HalfOrcs_AtTower_2",
                "speaker": "Kansif",
                "text": "Aye. They're Her vessels. You can feel the strength of their faith, like a tickle at the back of your mind, whenever they approach.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_HalfOrcs_AtTower_5",
                "speaker": "Kansif",
                "text": "And if you don't show respect, you'll feel their faith like a fist to your gut.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Goblins_AtTower": [
              {
                "id": "AD_Goblins_AtTower_0",
                "speaker": "Brawler Vez",
                "text": "Wonder if there's dancing down in the war camp. Feelin' frisky.",
                "node_type": "normal",
                "checkflags": [
                  "711fda6a-05e2-6677-b067-9b1c710e0cdb_A"
                ],
                "setflags": [
                  "711fda6a-05e2-6677-b067-9b1c710e0cdb_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Despite the playful phrase, makes it sound threatening."
              }
            ],
            "HalfOrcCaster_Checkpoint": [
              {
                "id": "HalfOrcCaster_Checkpoint_1",
                "speaker": "Kansif",
                "text": "Hold there! One step closer and -",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "10",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HalfOrcCaster_Checkpoint_9",
                "speaker": "Kansif",
                "text": "True Soul - forgive me, I did not see you in the dark.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "10",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HalfOrcCaster_Checkpoint_13",
                "speaker": "Player",
                "text": "I could kill you for speaking to me like that.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "10",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HalfOrcCaster_Checkpoint_7",
                "speaker": "Kansif",
                "text": "If it was the Absolute's will.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HalfOrcCaster_Checkpoint_8",
                "speaker": "Kansif",
                "text": "But you had best wait until we get to Moonrise. Otherwise you might be missing a guide through the darkness.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HalfOrcCaster_Checkpoint_11",
                "speaker": "Kansif",
                "text": "Speak to me if you are ready to leave. Until then - welcome to the shadow curse.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCL_EntryPoint_Event_GainedAccessToCaravanCampFromDialog"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "GoblinRanger_Dead": [
              {
                "id": "GoblinRanger_Dead_23",
                "speaker": "Narrator",
                "text": "*The corpse regards you lifelessly.*",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "GoblinRanger_Dead_24",
                "speaker": "Player",
                "text": "Who are you?",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [
                  "GLO_SpeakWithDead_Event_QuestionAsked"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "GoblinRanger_Dead_21",
                "speaker": "Sharp-Eye Lora",
                "text": "Lora... tracker... hunter...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "GoblinRanger_Dead_9",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_HalfOrcs_AtTower": "Half orcs after arriving at Moonrise Towers with the Drider's caravan. Kansif is the solemn leaderm, the other half orc is a relatively new recruit and doesn't guard his tongue too well.",
            "AD_Goblins_AtTower": "Goblins relaxing at Moonrise Towers after arriving with the Drider's caravan.",
            "HalfOrcCaster_Checkpoint": "",
            "GoblinRanger_Dead": "Speak with dead dialog with goblin ranger from the caravan. Only available if at the start of SCL Minthara is dead."
          }
        },
        "scl_general": {
          "scenario_name": "scl_general",
          "session_sequence": [
            "PAD_HalsinBridge"
          ],
          "paths": {
            "PAD_HalsinBridge": [
              "PAD_HalsinBridge_0"
            ]
          },
          "node_data": {
            "PAD_HalsinBridge": [
              {
                "id": "PAD_HalsinBridge_0",
                "speaker": "Halsin",
                "text": "This town - I remember it too well. Much druid and Harper blood was spilled in taking it... only to lose it again.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Grim. Bad memories"
              }
            ]
          },
          "session_synopses": {
            "PAD_HalsinBridge": "Halsin remembers his previous battle in SCL"
          }
        },
        "scl_drider": {
          "scenario_name": "scl_drider",
          "session_sequence": [
            "Harper_Melee_000_AD_DriderDies",
            "Harper_Ranger_000_AD_LassandraDies",
            "Caravan_AD_HalfOrcCaster",
            "ThanksAfterAmbush",
            "HarperRanger_001_AfterAmbush",
            "AD_HarpersAfterAmbush",
            "AD_HarpersReachAmbushHouse",
            "Harper_Melee_000_AD_LassandraDies",
            "PlayersAmbush",
            "Caravan_AD_Hyena",
            "HarperCaster_000",
            "CaravanStart",
            "HarperScout_PreparingForAmbush",
            "AD_AllHarpersWaitingAtAmbush",
            "CINE_CaravanIntro",
            "HarperMelee_000_AfterAmbush",
            "WaitingDuringEscort",
            "Harper_Melee_000_AD_TakesMoonlantern",
            "AtTower",
            "AD_Harper_Melee_000",
            "HarperRanger_000_AfterAmbush",
            "Caravan_AD_HalfOrcAndGoblinAtCheckpoint",
            "Caravan_HalfOrcMelee_AtTower",
            "Caravan_HalfOrcMelee",
            "HarpersAndPlayersAmbush",
            "AD_DroppedLantern",
            "AD_CombatStarts",
            "PAD_BacktrackedToCaravanCheckpoint",
            "AD_Harper_Caster_000",
            "Caravan_GoblinRanger_AtTower",
            "HarpersAtInn",
            "AD_EscortInterrupted",
            "Caravan_GoblinMelee_000_AtTower",
            "AD_HarpersPreparingBeforeAmbush",
            "Caravan_AD_MeleeAndRangerGoblinsAtCheckpoint",
            "Dead",
            "Caravan_GoblinMelee_001_AtTower",
            "AD_KillsSomeone",
            "Caravan_HalfOrcCaster_AtTower",
            "AD_Harper_Ranger_000",
            "AD_Warning",
            "Caravan_HalfOrcCaster",
            "AD_HarpersReachTree",
            "AD_AfterAmbush",
            "AD_PlayerTakesMoonlantern",
            "AD_ArriveToTollHouse",
            "HarperMelee_000",
            "AD_CaravanConflict",
            "Caravan_GoblinRanger",
            "AD_AfterTollhouse",
            "Caravan_GoblinMelee_000",
            "AD_HarpersMoveTowardsAmbush",
            "HarperNarrator_AfterAmbush",
            "HarperCaster_000_AfterAmbush",
            "AD_Harpers_AtInn_AfterAmbush",
            "AD_BeforeAmbush",
            "Harper_Melee_000_AD_CombatStarts"
          ],
          "paths": {
            "Harper_Melee_000_AD_DriderDies": [
              "Harper_Melee_000_AD_DriderDies_0"
            ],
            "Harper_Ranger_000_AD_LassandraDies": [
              "Harper_Ranger_000_AD_LassandraDies_0"
            ],
            "Caravan_AD_HalfOrcCaster": [
              "Caravan_AD_HalfOrcCaster_0"
            ],
            "ThanksAfterAmbush": [
              "ThanksAfterAmbush_42",
              "ThanksAfterAmbush_13",
              "ThanksAfterAmbush_12",
              "ThanksAfterAmbush_39",
              "ThanksAfterAmbush_45",
              "ThanksAfterAmbush_17",
              "ThanksAfterAmbush_54",
              "ThanksAfterAmbush_71",
              "ThanksAfterAmbush_61"
            ],
            "HarperRanger_001_AfterAmbush": [
              "HarperRanger_001_AfterAmbush_48",
              "HarperRanger_001_AfterAmbush_74",
              "HarperRanger_001_AfterAmbush_88",
              "HarperRanger_001_AfterAmbush_12",
              "HarperRanger_001_AfterAmbush_83",
              "HarperRanger_001_AfterAmbush_11",
              "HarperRanger_001_AfterAmbush_23",
              "HarperRanger_001_AfterAmbush_86",
              "HarperRanger_001_AfterAmbush_17",
              "HarperRanger_001_AfterAmbush_18",
              "HarperRanger_001_AfterAmbush_33",
              "HarperRanger_001_AfterAmbush_63",
              "HarperRanger_001_AfterAmbush_81",
              "HarperRanger_001_AfterAmbush_58",
              "HarperRanger_001_AfterAmbush_69",
              "HarperRanger_001_AfterAmbush_25",
              "HarperRanger_001_AfterAmbush_50",
              "HarperRanger_001_AfterAmbush_73",
              "HarperRanger_001_AfterAmbush_82"
            ],
            "AD_HarpersAfterAmbush": [
              "AD_HarpersAfterAmbush_10",
              "AD_HarpersAfterAmbush_4",
              "AD_HarpersAfterAmbush_11",
              "AD_HarpersAfterAmbush_5"
            ],
            "AD_HarpersReachAmbushHouse": [
              "AD_HarpersReachAmbushHouse_0"
            ],
            "Harper_Melee_000_AD_LassandraDies": [
              "Harper_Melee_000_AD_LassandraDies_0"
            ],
            "PlayersAmbush": [
              "PlayersAmbush_60",
              "PlayersAmbush_68",
              "PlayersAmbush_71",
              "PlayersAmbush_70",
              "PlayersAmbush_99",
              "PlayersAmbush_62",
              "PlayersAmbush_90",
              "PlayersAmbush_65",
              "PlayersAmbush_12",
              "PlayersAmbush_80",
              "PlayersAmbush_43",
              "PlayersAmbush_39",
              "PlayersAmbush_83",
              "PlayersAmbush_87",
              "PlayersAmbush_73",
              "PlayersAmbush_52"
            ],
            "Caravan_AD_Hyena": [
              "Caravan_AD_Hyena_2",
              "Caravan_AD_Hyena_0"
            ],
            "HarperCaster_000": [
              "HarperCaster_000_24",
              "HarperCaster_000_18",
              "HarperCaster_000_19",
              "HarperCaster_000_14",
              "HarperCaster_000_25",
              "HarperCaster_000_23",
              "HarperCaster_000_2",
              "HarperCaster_000_8"
            ],
            "CaravanStart": [
              "CaravanStart_153",
              "CaravanStart_56",
              "CaravanStart_100",
              "CaravanStart_116",
              "CaravanStart_91",
              "CaravanStart_17",
              "CaravanStart_48",
              "CaravanStart_53",
              "CaravanStart_34",
              "CaravanStart_114",
              "CaravanStart_9",
              "CaravanStart_102"
            ],
            "HarperScout_PreparingForAmbush": [
              "HarperScout_PreparingForAmbush_1",
              "HarperScout_PreparingForAmbush_19",
              "HarperScout_PreparingForAmbush_4",
              "HarperScout_PreparingForAmbush_8",
              "HarperScout_PreparingForAmbush_11",
              "HarperScout_PreparingForAmbush_21"
            ],
            "AD_AllHarpersWaitingAtAmbush": [
              "AD_AllHarpersWaitingAtAmbush_1",
              "AD_AllHarpersWaitingAtAmbush_2",
              "AD_AllHarpersWaitingAtAmbush_0"
            ],
            "CINE_CaravanIntro": [
              "CINE_CaravanIntro_0",
              "CINE_CaravanIntro_1"
            ],
            "HarperMelee_000_AfterAmbush": [
              "HarperMelee_000_AfterAmbush_20",
              "HarperMelee_000_AfterAmbush_80",
              "HarperMelee_000_AfterAmbush_30",
              "HarperMelee_000_AfterAmbush_3",
              "HarperMelee_000_AfterAmbush_2",
              "HarperMelee_000_AfterAmbush_57",
              "HarperMelee_000_AfterAmbush_68",
              "HarperMelee_000_AfterAmbush_40",
              "HarperMelee_000_AfterAmbush_14",
              "HarperMelee_000_AfterAmbush_13",
              "HarperMelee_000_AfterAmbush_59",
              "HarperMelee_000_AfterAmbush_31"
            ],
            "WaitingDuringEscort": [
              "WaitingDuringEscort_4",
              "WaitingDuringEscort_1",
              "WaitingDuringEscort_2"
            ],
            "Harper_Melee_000_AD_TakesMoonlantern": [
              "Harper_Melee_000_AD_TakesMoonlantern_0"
            ],
            "AtTower": [
              "AtTower_4",
              "AtTower_0"
            ],
            "AD_Harper_Melee_000": [
              "AD_Harper_Melee_000_0"
            ],
            "HarperRanger_000_AfterAmbush": [
              "HarperRanger_000_AfterAmbush_4",
              "HarperRanger_000_AfterAmbush_1"
            ],
            "Caravan_AD_HalfOrcAndGoblinAtCheckpoint": [
              "Caravan_AD_HalfOrcAndGoblinAtCheckpoint_8",
              "Caravan_AD_HalfOrcAndGoblinAtCheckpoint_0",
              "Caravan_AD_HalfOrcAndGoblinAtCheckpoint_3"
            ],
            "Caravan_HalfOrcMelee_AtTower": [
              "Caravan_HalfOrcMelee_AtTower_0"
            ],
            "Caravan_HalfOrcMelee": [
              "Caravan_HalfOrcMelee_0"
            ],
            "HarpersAndPlayersAmbush": [
              "HarpersAndPlayersAmbush_69",
              "HarpersAndPlayersAmbush_16",
              "40",
              "NODE_NOT_FOUND"
            ],
            "AD_DroppedLantern": [
              "AD_DroppedLantern_0"
            ],
            "AD_CombatStarts": [
              "AD_CombatStarts_0"
            ],
            "PAD_BacktrackedToCaravanCheckpoint": [
              "PAD_BacktrackedToCaravanCheckpoint_0",
              "PAD_BacktrackedToCaravanCheckpoint_2"
            ],
            "AD_Harper_Caster_000": [
              "AD_Harper_Caster_000_0"
            ],
            "Caravan_GoblinRanger_AtTower": [
              "Caravan_GoblinRanger_AtTower_0"
            ],
            "HarpersAtInn": [
              "HarpersAtInn_57",
              "HarpersAtInn_34",
              "HarpersAtInn_32",
              "HarpersAtInn_64",
              "HarpersAtInn_14",
              "16",
              "NODE_NOT_FOUND"
            ],
            "AD_EscortInterrupted": [
              "AD_EscortInterrupted_0"
            ],
            "Caravan_GoblinMelee_000_AtTower": [
              "Caravan_GoblinMelee_000_AtTower_0"
            ],
            "AD_HarpersPreparingBeforeAmbush": [
              "AD_HarpersPreparingBeforeAmbush_12",
              "AD_HarpersPreparingBeforeAmbush_2",
              "AD_HarpersPreparingBeforeAmbush_7",
              "AD_HarpersPreparingBeforeAmbush_5"
            ],
            "Caravan_AD_MeleeAndRangerGoblinsAtCheckpoint": [
              "Caravan_AD_MeleeAndRangerGoblinsAtCheckpoint_6",
              "Caravan_AD_MeleeAndRangerGoblinsAtCheckpoint_4",
              "Caravan_AD_MeleeAndRangerGoblinsAtCheckpoint_5"
            ],
            "Dead": [
              "Dead_22",
              "Dead_23",
              "Dead_19",
              "Dead_8"
            ],
            "Caravan_GoblinMelee_001_AtTower": [
              "Caravan_GoblinMelee_001_AtTower_0"
            ],
            "AD_KillsSomeone": [
              "AD_KillsSomeone_0"
            ],
            "Caravan_HalfOrcCaster_AtTower": [
              "Caravan_HalfOrcCaster_AtTower_0"
            ],
            "AD_Harper_Ranger_000": [
              "AD_Harper_Ranger_000_0"
            ],
            "AD_Warning": [
              "AD_Warning_0",
              "AD_Warning_4"
            ],
            "Caravan_HalfOrcCaster": [
              "Caravan_HalfOrcCaster_35",
              "Caravan_HalfOrcCaster_14",
              "Caravan_HalfOrcCaster_96",
              "Caravan_HalfOrcCaster_9",
              "Caravan_HalfOrcCaster_102",
              "Caravan_HalfOrcCaster_52",
              "20",
              "NODE_NOT_FOUND"
            ],
            "AD_HarpersReachTree": [
              "AD_HarpersReachTree_0"
            ],
            "AD_AfterAmbush": [
              "AD_AfterAmbush_0"
            ],
            "AD_PlayerTakesMoonlantern": [
              "AD_PlayerTakesMoonlantern_0"
            ],
            "AD_ArriveToTollHouse": [
              "AD_ArriveToTollHouse_1",
              "AD_ArriveToTollHouse_0"
            ],
            "HarperMelee_000": [
              "HarperMelee_000_9",
              "HarperMelee_000_5"
            ],
            "AD_CaravanConflict": [
              "AD_CaravanConflict_0",
              "AD_CaravanConflict_1"
            ],
            "Caravan_GoblinRanger": [
              "Caravan_GoblinRanger_0"
            ],
            "AD_AfterTollhouse": [
              "AD_AfterTollhouse_1",
              "AD_AfterTollhouse_0",
              "AD_AfterTollhouse_2"
            ],
            "Caravan_GoblinMelee_000": [
              "Caravan_GoblinMelee_000_0"
            ],
            "AD_HarpersMoveTowardsAmbush": [
              "AD_HarpersMoveTowardsAmbush_0"
            ],
            "HarperNarrator_AfterAmbush": [
              "HarperNarrator_AfterAmbush_35",
              "HarperNarrator_AfterAmbush_18",
              "HarperNarrator_AfterAmbush_19",
              "HarperNarrator_AfterAmbush_6",
              "HarperNarrator_AfterAmbush_23",
              "HarperNarrator_AfterAmbush_11"
            ],
            "HarperCaster_000_AfterAmbush": [
              "HarperCaster_000_AfterAmbush_0",
              "HarperCaster_000_AfterAmbush_1"
            ],
            "AD_Harpers_AtInn_AfterAmbush": [
              "AD_Harpers_AtInn_AfterAmbush_13",
              "AD_Harpers_AtInn_AfterAmbush_12",
              "AD_Harpers_AtInn_AfterAmbush_1",
              "AD_Harpers_AtInn_AfterAmbush_6"
            ],
            "AD_BeforeAmbush": [
              "AD_BeforeAmbush_2",
              "AD_BeforeAmbush_0",
              "AD_BeforeAmbush_1"
            ],
            "Harper_Melee_000_AD_CombatStarts": [
              "Harper_Melee_000_AD_CombatStarts_0"
            ]
          },
          "node_data": {
            "Harper_Melee_000_AD_DriderDies": [
              {
                "id": "Harper_Melee_000_AD_DriderDies_0",
                "speaker": "Harper Branthos",
                "text": "Big and ugly's down - grab the lantern!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Harper_Ranger_000_AD_LassandraDies": [
              {
                "id": "Harper_Ranger_000_AD_LassandraDies_0",
                "speaker": "Harper Manus",
                "text": "No! Lassandra!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Caravan_AD_HalfOrcCaster": [
              {
                "id": "Caravan_AD_HalfOrcCaster_0",
                "speaker": "Kansif",
                "text": "You will die here - the Absolute wills it so!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ThanksAfterAmbush": [
              {
                "id": "ThanksAfterAmbush_42",
                "speaker": "Kar'niss",
                "text": "And what of the strange little turncoat, Majesty? Should we spare them?",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_State_AfterAmbushSituationDefused = False",
                  "SCL_Drider_State_StartedAmbushQuestWithHarpers"
                ],
                "setflags": [],
                "goto": "",
                "link": "50",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ThanksAfterAmbush_13",
                "speaker": "Narrator",
                "text": "*Your minds connect and you hear a whispered voice. The Absolute? Or just the echoes of his fractured mind, reverberating in the dark?*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Mind meld VFX"
              },
              {
                "id": "ThanksAfterAmbush_12",
                "speaker": "Kar'niss",
                "text": "A True Soul. Why would one of our queen's blessed walk with Harpers?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ThanksAfterAmbush_39",
                "speaker": "Player",
                "text": "I infiltrated their ranks - gathering information for our cause.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ThanksAfterAmbush_45",
                "speaker": "",
                "text": "True",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ThanksAfterAmbush_17",
                "speaker": "Kar'niss",
                "text": "Very well. We welcome all who follow our holy queen.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCL_Drider_State_AfterAmbushSituationDefused"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Astarion 1",
                  "Shadowheart 1",
                  "Minthara 1"
                ],
                "context": ""
              },
              {
                "id": "ThanksAfterAmbush_54",
                "speaker": "Kar'niss",
                "text": "Are they ready to depart? We do not want to linger in the shadows, Majesty.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ThanksAfterAmbush_71",
                "speaker": "Player",
                "text": "I'm ready. Let's go.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCL_Drider_Event_PlayersStartFollowingDrider",
                  "SCL_Drider_State_WaitingAtAmbushAfterCombat = False"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ThanksAfterAmbush_61",
                "speaker": "Kar'niss",
                "text": "Follow close - the shadows are hungry. Do not stray from the light.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "HarperRanger_001_AfterAmbush": [
              {
                "id": "HarperRanger_001_AfterAmbush_48",
                "speaker": "Harper Skywin",
                "text": "",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_Event_StartCaravanEscort",
                  "SCL_Drider_State_HasDriderMoonlantern"
                ],
                "setflags": [],
                "goto": "",
                "link": "75",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperRanger_001_AfterAmbush_74",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "75",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Player lifts lantern and illuminates their face."
              },
              {
                "id": "HarperRanger_001_AfterAmbush_88",
                "speaker": "",
                "text": "",
                "node_type": "visualstate",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "75",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperRanger_001_AfterAmbush_12",
                "speaker": "Harper Skywin",
                "text": "Incredible. A light that chases away even the deepest shadows.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "75",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Musing, not really said to player."
              },
              {
                "id": "HarperRanger_001_AfterAmbush_83",
                "speaker": "Narrator",
                "text": "*The lantern flickers ever so briefly, and you hear a slight twitter - or perhaps it's simply your imagination.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "75",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Camera shows lantern in player's hand. The light flickers just a little, and you hear a little titter come from it. Player stows the lantern."
              },
              {
                "id": "HarperRanger_001_AfterAmbush_11",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "75",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperRanger_001_AfterAmbush_23",
                "speaker": "",
                "text": "",
                "node_type": "visualstate",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "75",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperRanger_001_AfterAmbush_86",
                "speaker": "Harper Skywin",
                "text": "You. Don't move a godsdamned muscle.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_EnteringHaven_State_GainedAccess = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "75",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext:  Addressed to player. Harper raises bow and points at the player."
              },
              {
                "id": "HarperRanger_001_AfterAmbush_17",
                "speaker": "",
                "text": "",
                "node_type": "visualstate",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "75",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperRanger_001_AfterAmbush_18",
                "speaker": "Harper Skywin",
                "text": "Talk. Why in the hells would a cultist turn on their kind?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "75",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperRanger_001_AfterAmbush_33",
                "speaker": "Player",
                "text": "",
                "node_type": "normal",
                "checkflags": [
                  "GLO_Factions_Knows_Harpers = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "75",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperRanger_001_AfterAmbush_63",
                "speaker": "",
                "text": "True",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "75",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperRanger_001_AfterAmbush_81",
                "speaker": "Narrator",
                "text": "*The pin the woman wears is familiar to you. She belongs to the Harpers, a covert organisation dedicated to freedom and balance.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "GLO_Factions_Knows_Harpers"
                ],
                "goto": "",
                "link": "75",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Camera shows the Harper's garb. We see a Harper pin on their chest."
              },
              {
                "id": "HarperRanger_001_AfterAmbush_58",
                "speaker": "Player",
                "text": "I'm not one of them. They took me prisoner.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "75",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperRanger_001_AfterAmbush_69",
                "speaker": "Harper Skywin",
                "text": "A prisoner? Of course - and you would not be the first.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "75",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Harper lowers bow while speaking."
              },
              {
                "id": "HarperRanger_001_AfterAmbush_25",
                "speaker": "",
                "text": "",
                "node_type": "visualstate",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "75",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperRanger_001_AfterAmbush_50",
                "speaker": "Harper Skywin",
                "text": "Breathe easy, then - you are a captive no longer.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "75",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperRanger_001_AfterAmbush_73",
                "speaker": "Harper Skywin",
                "text": "You must rest. Come - I will take you to Last Light.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "75",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperRanger_001_AfterAmbush_82",
                "speaker": "Player",
                "text": "Lead on, then.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_State_HasDriderMoonlantern = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_HarpersAfterAmbush": [
              {
                "id": "AD_HarpersAfterAmbush_10",
                "speaker": "Harper Branthos",
                "text": "One less blight in the darkness. A thousand more to conquer.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "153f4e14-c830-5653-1638-7495b0b9fc12_A"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_HarpersAfterAmbush_4",
                "speaker": "Harper Manus",
                "text": "At very least. For every beast we slay, the shadows spawn two more.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_HarpersAfterAmbush_11",
                "speaker": "Harper Elindale",
                "text": "Gods - why so glum? We hit the cult where it hurts.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_HarpersAfterAmbush_5",
                "speaker": "Harper Skywin",
                "text": "A victory is a victory. Our heads are intact - and that's worth celebrating.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_HarpersReachAmbushHouse": [
              {
                "id": "AD_HarpersReachAmbushHouse_0",
                "speaker": "",
                "text": "Perfect spot for an ambush. Get into position.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Harper_Melee_000_AD_LassandraDies": [
              {
                "id": "Harper_Melee_000_AD_LassandraDies_0",
                "speaker": "Harper Branthos",
                "text": "Lass! No!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Just watched your friend Lassandra die in combat"
              }
            ],
            "PlayersAmbush": [
              {
                "id": "PlayersAmbush_60",
                "speaker": "Kar'niss",
                "text": "",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PlayersAmbush_68",
                "speaker": "",
                "text": "",
                "node_type": "visualstate",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PlayersAmbush_71",
                "speaker": "Kar'niss",
                "text": "Someone in the dark, mistress.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PlayersAmbush_70",
                "speaker": "Kar'niss",
                "text": "Step into the light! Let us see you.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PlayersAmbush_99",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Player moves into the light. Player's positioning should match N218 so it merges into the rest of the dialog flow"
              },
              {
                "id": "PlayersAmbush_62",
                "speaker": "",
                "text": "",
                "node_type": "visualstate",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PlayersAmbush_90",
                "speaker": "Narrator",
                "text": "*Your minds connect and you hear a voice whispering to you. The Absolute? Or just the echoes of his fractured mind, reverberating in the darkness?*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Mind meld SFX"
              },
              {
                "id": "PlayersAmbush_65",
                "speaker": "",
                "text": "",
                "node_type": "visualstate",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PlayersAmbush_12",
                "speaker": "Kar'niss",
                "text": "One of your True Souls, my Queen! How have they survived?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Scuttles forward, holding the lantern to illuminate the player's face"
              },
              {
                "id": "PlayersAmbush_80",
                "speaker": "Player",
                "text": "The Absolute protected me.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PlayersAmbush_43",
                "speaker": "Kar'niss",
                "text": "You blessed them too, my Queen? Where is their lantern?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PlayersAmbush_39",
                "speaker": "Player",
                "text": "Lantern? Is that what protects you out here?",
                "node_type": "normal",
                "checkflags": [
                  "GLO_Player_Knows_MoonlanternExists = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "110",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PlayersAmbush_83",
                "speaker": "Kar'niss",
                "text": "Our goddess protects us. We carry her sacred light to drive back the shadows.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "110",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: 'Sacred light' referring to the Moonlantern"
              },
              {
                "id": "PlayersAmbush_87",
                "speaker": "Kar'niss",
                "text": "Yes, majesty, your light can shield another of your faithful. They will join us on the road.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "110",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PlayersAmbush_73",
                "speaker": "Player",
                "text": "Thank you - let's go.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCL_Drider_Event_PlayersStartFollowingDrider",
                  "SCL_Drider_Event_AvoidedCombat",
                  "SCL_Drider_State_SidedWithCaravan",
                  "SCL_Drider_State_SidedWithHarpers = False"
                ],
                "goto": "",
                "link": "41",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PlayersAmbush_52",
                "speaker": "Kar'niss",
                "text": "They will follow close. Do not leave the light!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "CinematicNodeContext: Drider turns and starts to leave, ready to head into the dark. You're expected to follow."
              }
            ],
            "Caravan_AD_Hyena": [
              {
                "id": "Caravan_AD_Hyena_2",
                "speaker": "Hyena",
                "text": "*Whimper.*",
                "node_type": "normal",
                "checkflags": [
                  "13d9f9ef-d1da-1d1d-287f-7a1763d72c38_A"
                ],
                "setflags": [
                  "13d9f9ef-d1da-1d1d-287f-7a1763d72c38_B"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Worg pup - sounds like a growl, but actually haltingly articulating a word (they can speak)"
              },
              {
                "id": "Caravan_AD_Hyena_0",
                "speaker": "Warrior Gronag",
                "text": "Don't make eyes at me, you breech-blossom.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Colourful goblin equivalent of 'shit-stain'. Said indignantly."
              }
            ],
            "HarperCaster_000": [
              {
                "id": "HarperCaster_000_24",
                "speaker": "Harper Elindale",
                "text": "Heard you're planning to infiltrate Moonrise, and take the fight to Ketheric. That'd be a tale for the ages.<br>",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_HasMet_HarperCaster000 = False",
                  "SCL_Drider_State_HarpersWaitingAtBridge"
                ],
                "setflags": [
                  "SCL_Drider_HasMet_HarperCaster000"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperCaster_000_18",
                "speaker": "Harper Elindale",
                "text": "But the curse is at its strongest between here and there. You won't even reach the tower unless you can survive the darkest shadows.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperCaster_000_19",
                "speaker": "Harper Elindale",
                "text": "That's where we come in.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperCaster_000_14",
                "speaker": "Harper Elindale",
                "text": "There's a cultist convoy that brings supplies and personnel to the tower - by some strange magic, they move through the curse unharmed.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperCaster_000_25",
                "speaker": "Harper Elindale",
                "text": "With your help, we'll ambush them, and seize their secret. When we do, it's yours, and the path to Moonrise will be open.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperCaster_000_23",
                "speaker": "Player",
                "text": "Let's do it. You lead, I follow.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_Event_PlayersWillFindCaravanAtAmbush = False"
                ],
                "setflags": [
                  "SCL_Drider_State_StartedAmbushQuestWithHarpers",
                  "SCL_Drider_Event_StartHarpersAmbush"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperCaster_000_2",
                "speaker": "Harper Elindale",
                "text": "You got it, chum. I'll mark your map, in case you get lost.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperCaster_000_8",
                "speaker": "Harper Elindale",
                "text": "But - try not to get lost. Frightful weather out there.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: A little cheeky. The cursed shadows could kill you!"
              }
            ],
            "CaravanStart": [
              {
                "id": "CaravanStart_153",
                "speaker": "Kar'niss",
                "text": "Your worshippers, Majesty. What happened here?",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_State_DeadCultistSituationDefused = False",
                  "SCL_Drider_State_CaravanCultistsDefeated_NoDrider"
                ],
                "setflags": [
                  "SCL_Drider_HasMet"
                ],
                "goto": "",
                "link": "34",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Drider arrives to find the camp deserted apart from you and some dead goblins.\rInternalNodeContext: Drider arrives to find the camp has been slaughtered\rNodeContext: Looking around at dead goblins - his allies have been slaughtered"
              },
              {
                "id": "CaravanStart_56",
                "speaker": "Kar'niss",
                "text": "What did they do?!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "34",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Turns and looks at the player with malevolence\rNodeContext: Turns and looks at the player with malevolence"
              },
              {
                "id": "CaravanStart_100",
                "speaker": "Player",
                "text": "I just found them like this.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "34",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "CaravanStart_116",
                "speaker": "",
                "text": "True",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "34",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "CaravanStart_91",
                "speaker": "Kar'niss",
                "text": "At least these have survived. At least we return with some faithful.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCL_Drider_State_DeadCultistSituationDefused"
                ],
                "goto": "",
                "link": "34",
                "is_end": false,
                "approval": [
                  "Astarion 1",
                  "Gale 1",
                  "Shadowheart 1",
                  "Karlach 1",
                  "Minthara 1"
                ],
                "context": "NodeContext: Stress on 'some'"
              },
              {
                "id": "CaravanStart_17",
                "speaker": "Kar'niss",
                "text": "But we should depart. Are they ready to leave?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "34",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Looks out to the dark, then back to players"
              },
              {
                "id": "CaravanStart_48",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_Laezel"
                ],
                "goto": "",
                "link": "34",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "CaravanStart_53",
                "speaker": "Lae'zel",
                "text": "Every step into the darkness leads us away from the crèche. Cleansing awaits - do not lose sight of our prize.",
                "node_type": "normal",
                "checkflags": [
                  "ORI_Laezel_Knows_FoundCreche = False",
                  "ORI_Laezel_State_CanProceedToAct3 = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "34",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "CaravanStart_34",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_End_Laezel"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "CaravanStart_114",
                "speaker": "Player",
                "text": "First tell me how you can move safely through the darkness.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "CaravanStart_9",
                "speaker": "Kar'niss",
                "text": "We walk in the Absolute's light. Her blessed power keeps the shadows back.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Drider stares at the moon lantern while delivering line."
              },
              {
                "id": "CaravanStart_102",
                "speaker": "Kar'niss",
                "text": "But the shadows are cunning. Wily. If you stray from the light even for a moment, they'll have you.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ],
            "HarperScout_PreparingForAmbush": [
              {
                "id": "HarperScout_PreparingForAmbush_1",
                "speaker": "Harper Lassandra",
                "text": "Listen - if you want to reach Moonrise, you're going to need help. And I know where you'll find it.",
                "node_type": "normal",
                "checkflags": [
                  "HAV_General_HarperScout_000_HasMet = False",
                  "SCL_Drider_State_HarpersWaitingAtBridge"
                ],
                "setflags": [
                  "HAV_General_HarperScout_000_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperScout_PreparingForAmbush_19",
                "speaker": "Harper Lassandra",
                "text": "There's a cultist convoy that passes each day. It carries a lantern that burns the curse away.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperScout_PreparingForAmbush_4",
                "speaker": "Harper Lassandra",
                "text": "You're going to seize that lantern - and I'm going to help you. Just say the word.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperScout_PreparingForAmbush_8",
                "speaker": "Player",
                "text": "Let's take on that convoy. You lead, I follow.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_Event_PlayersWillFindCaravanAtAmbush = False"
                ],
                "setflags": [
                  "SCL_Drider_State_StartedAmbushQuestWithHarpers",
                  "SCL_Drider_Event_StartHarpersAmbush"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperScout_PreparingForAmbush_11",
                "speaker": "Harper Lassandra",
                "text": "Wonderful. I will mark your map, so you can find us, should you lose the way.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperScout_PreparingForAmbush_21",
                "speaker": "Harper Lassandra",
                "text": "Now let's move.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_AllHarpersWaitingAtAmbush": [
              {
                "id": "AD_AllHarpersWaitingAtAmbush_1",
                "speaker": "Harper Elindale",
                "text": "I see something - they're coming!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_AllHarpersWaitingAtAmbush_2",
                "speaker": "Harper Branthos",
                "text": "All right. You ready for this?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_AllHarpersWaitingAtAmbush_0",
                "speaker": "Harper Lassandra",
                "text": "More than ready.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "CINE_CaravanIntro": [
              {
                "id": "CINE_CaravanIntro_0",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: The player pauses as they hear nearby footfalls. They crouch down and observe."
              },
              {
                "id": "CINE_CaravanIntro_1",
                "speaker": "Kar'niss",
                "text": "Onwards! The tower awaits us.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "CinematicNodeContext: Player observes as the drider caravan moves into frame (wide shot).\rNodeContext: Urging the caravan along."
              }
            ],
            "HarperMelee_000_AfterAmbush": [
              {
                "id": "HarperMelee_000_AfterAmbush_20",
                "speaker": "Harper Branthos",
                "text": "",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_Event_StartCaravanEscort",
                  "SCL_Drider_State_HasDriderMoonlantern"
                ],
                "setflags": [],
                "goto": "",
                "link": "56",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperMelee_000_AfterAmbush_80",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "56",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Player lifts lantern and illuminates their face."
              },
              {
                "id": "HarperMelee_000_AfterAmbush_30",
                "speaker": "",
                "text": "",
                "node_type": "visualstate",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "56",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperMelee_000_AfterAmbush_3",
                "speaker": "Harper Branthos",
                "text": "Incredible. A light so radiant, not even the curse can dim it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "56",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Musing, not really said to player."
              },
              {
                "id": "HarperMelee_000_AfterAmbush_2",
                "speaker": "Narrator",
                "text": "*The lantern flickers ever so briefly, and you hear a slight twitter - or perhaps it's simply your imagination.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "56",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Camera shows lantern in player's hand. The light flickers just a little, and you hear a little titter come from it. Player stows the lantern."
              },
              {
                "id": "HarperMelee_000_AfterAmbush_57",
                "speaker": "",
                "text": "",
                "node_type": "visualstate",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "56",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperMelee_000_AfterAmbush_68",
                "speaker": "Harper Branthos",
                "text": "Jaheira's godsend. Such strange company you keep.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "48",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Addressed to player. Harper raises his blade and points at the player.\rNodeContext: Very suspicious"
              },
              {
                "id": "HarperMelee_000_AfterAmbush_40",
                "speaker": "",
                "text": "",
                "node_type": "alias",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "48",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperMelee_000_AfterAmbush_14",
                "speaker": "Harper Branthos",
                "text": "Explain yourself.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "81",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperMelee_000_AfterAmbush_13",
                "speaker": "Player",
                "text": "The cult took me prisoner. Thank the gods you came when you did.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "81",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperMelee_000_AfterAmbush_59",
                "speaker": "",
                "text": "False",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperMelee_000_AfterAmbush_31",
                "speaker": "Harper Branthos",
                "text": "You were no prisoner - and I am no fool. Your lies end here, rat.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCL_Drider_Event_PlayersAttackHarpers"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "WaitingDuringEscort": [
              {
                "id": "WaitingDuringEscort_4",
                "speaker": "Kar'niss",
                "text": "Do not stray from the light, little one. The shadows are hungry.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_HasMet"
                ],
                "setflags": [],
                "goto": "",
                "link": "1",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: panicking a little, twitchy. Stopped momentarily in a dangerous region"
              },
              {
                "id": "WaitingDuringEscort_1",
                "speaker": "Player",
                "text": "Lead the way.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "WaitingDuringEscort_2",
                "speaker": "Kar'niss",
                "text": "I do not lead. I follow Her voice - it calls us to Moonrise. Come!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCL_Drider_Event_ResumeEscort"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Religious certainty - the 'Her' is his god"
              }
            ],
            "Harper_Melee_000_AD_TakesMoonlantern": [
              {
                "id": "Harper_Melee_000_AD_TakesMoonlantern_0",
                "speaker": "Harper Branthos",
                "text": "I have the lantern! Let's finish this up and go home.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AtTower": [
              {
                "id": "AtTower_4",
                "speaker": "Kar'niss",
                "text": "An interloper receives the Majesty's blessing before us?",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_HasMet = False"
                ],
                "setflags": [
                  "SCL_Drider_AtTower_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Looking at us with barely-reined in disgust - he is more deserving thatn we are, surely"
              },
              {
                "id": "AtTower_0",
                "speaker": "Kar'niss",
                "text": "Be worthy of Her.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Leaning forward with glint of madness - could be take as encouragement or threat"
              }
            ],
            "AD_Harper_Melee_000": [
              {
                "id": "AD_Harper_Melee_000_0",
                "speaker": "Harper Branthos",
                "text": "I fear neither shadow nor death.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: during combat, like a prayer, reassuring self"
              }
            ],
            "HarperRanger_000_AfterAmbush": [
              {
                "id": "HarperRanger_000_AfterAmbush_4",
                "speaker": "Harper Manus",
                "text": "Splendid show - newsworthy, even! Where's Volo Geddarm when you need him?",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_HarperRanger_000_AtAmbush_HasMet = False",
                  "SCL_Drider_Event_AcquiredMoonlanternWithoutFight = False"
                ],
                "setflags": [
                  "SCL_Drider_HarperRanger_000_AtAmbush_HasMet"
                ],
                "goto": "",
                "link": "HarperRanger_000_AfterAmbush_0",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperRanger_000_AfterAmbush_1",
                "speaker": "Harper Manus",
                "text": "Go on, check the drider. The lantern's yours for the taking.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Caravan_AD_HalfOrcAndGoblinAtCheckpoint": [
              {
                "id": "Caravan_AD_HalfOrcAndGoblinAtCheckpoint_8",
                "speaker": "Sharp-Eye Lora",
                "text": "What was that?",
                "node_type": "normal",
                "checkflags": [
                  "f2fd8947-51ee-4636-035d-0ed1841d3f5d_C"
                ],
                "setflags": [
                  "f2fd8947-51ee-4636-035d-0ed1841d3f5d_A = False",
                  "f2fd8947-51ee-4636-035d-0ed1841d3f5d_B = False",
                  "f2fd8947-51ee-4636-035d-0ed1841d3f5d_C = False"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Caravan_AD_HalfOrcAndGoblinAtCheckpoint_0",
                "speaker": "Kansif",
                "text": "What was what?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Caravan_AD_HalfOrcAndGoblinAtCheckpoint_3",
                "speaker": "Sharp-Eye Lora",
                "text": "...Nothing. Just the dark.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Caravan_HalfOrcMelee_AtTower": [
              {
                "id": "Caravan_HalfOrcMelee_AtTower_0",
                "speaker": "Bedi",
                "text": "Her cathedral will stand in the city, True Soul. On the bones of all Baldurians.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_HasMet_CaravanHalfOrcMelee"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: grave, taking himself too seriously"
              }
            ],
            "Caravan_HalfOrcMelee": [
              {
                "id": "Caravan_HalfOrcMelee_0",
                "speaker": "Bedi",
                "text": "Stay sharp. These shadows can sneak up on you.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCL_Drider_HasMet_CaravanHalfOrcMelee"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "HarpersAndPlayersAmbush": [
              {
                "id": "HarpersAndPlayersAmbush_69",
                "speaker": "Kar'niss",
                "text": "",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCL_DriderHarper_Caster_000_StartInclusion",
                  "SCL_DriderHarper_Ranger_000_StartInclusion",
                  "SCL_DriderHarper_Ranger_001_StartInclusion",
                  "SCL_DriderHarper_Melee_000_StartInclusion"
                ],
                "goto": "",
                "link": "40",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarpersAndPlayersAmbush_16",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "40",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "40",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ],
            "AD_DroppedLantern": [
              {
                "id": "AD_DroppedLantern_0",
                "speaker": "Kar'niss",
                "text": "No! The lantern!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_CombatStarts": [
              {
                "id": "AD_CombatStarts_0",
                "speaker": "Kar'niss",
                "text": "Drive them into the dark! Do not let them take our light!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_BacktrackedToCaravanCheckpoint": [
              {
                "id": "PAD_BacktrackedToCaravanCheckpoint_0",
                "speaker": "Player",
                "text": "Looks like the drider's caravan came from here.",
                "node_type": "normal",
                "checkflags": [
                  "25c1ac70-f65f-4869-8a74-eff5827d9cde"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PAD_BacktrackedToCaravanCheckpoint_2",
                "speaker": "Player",
                "text": "Cages, shackles... all prepared to march captives off to their fate.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_State_PlayersDefeatedCaravan = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Harper_Caster_000": [
              {
                "id": "AD_Harper_Caster_000_0",
                "speaker": "Harper Elindale",
                "text": "Guard against the darkness.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: wary but energetic, in combat"
              }
            ],
            "Caravan_GoblinRanger_AtTower": [
              {
                "id": "Caravan_GoblinRanger_AtTower_0",
                "speaker": "Sharp-Eye Lora",
                "text": "No food waiting for us? 'S barbaric. They got plenty of prisoners for the roasting.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_HasMet_CaravanGoblinRanger"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: whining - end of a long shift and they haven't been fed"
              }
            ],
            "HarpersAtInn": [
              {
                "id": "HarpersAtInn_57",
                "speaker": "Harper Branthos",
                "text": "You mean to reach Moonrise. And I've orders to help you.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCL_Drider_HarpersAtInn_OneLinerHasMet"
                ],
                "goto": "",
                "link": "9",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarpersAtInn_34",
                "speaker": "Harper Branthos",
                "text": "The path to the Towers is drenched in blackness so deep, even a torch cannot quell it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "9",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarpersAtInn_32",
                "speaker": "Harper Branthos",
                "text": "Yet the cultists have found a way to move freely. Whatever this method, you must claim it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "9",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarpersAtInn_64",
                "speaker": "Harper Branthos",
                "text": "A cultist convoy crosses the land as we speak. I've readied an ambush. Say the word, and we fly.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "9",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarpersAtInn_14",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "16",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "16",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ],
            "AD_EscortInterrupted": [
              {
                "id": "AD_EscortInterrupted_0",
                "speaker": "Kar'niss",
                "text": "Return to the light! Do not stray!",
                "node_type": "normal",
                "checkflags": [
                  "c7cbc714-5e48-c78a-0867-2ce81a42d681_A"
                ],
                "setflags": [
                  "c7cbc714-5e48-c78a-0867-2ce81a42d681_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Drider notices the player has left the safety of the caravan and wandered off into dangerous ground"
              }
            ],
            "Caravan_GoblinMelee_000_AtTower": [
              {
                "id": "Caravan_GoblinMelee_000_AtTower_0",
                "speaker": "Brawler Vez",
                "text": "Wish we was assigned to the war camp. Beer's surely better down there.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_HasMet_CaravanGoblinMelee_000"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_HarpersPreparingBeforeAmbush": [
              {
                "id": "AD_HarpersPreparingBeforeAmbush_12",
                "speaker": "Harper Branthos",
                "text": "When the times comes, move quick, move quiet.",
                "node_type": "normal",
                "checkflags": [
                  "7c651195-e50f-fd75-7a35-f6f9a8d80e8d_C"
                ],
                "setflags": [
                  "7c651195-e50f-fd75-7a35-f6f9a8d80e8d_A = False",
                  "7c651195-e50f-fd75-7a35-f6f9a8d80e8d_C = False",
                  "7c651195-e50f-fd75-7a35-f6f9a8d80e8d_B = False"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_HarpersPreparingBeforeAmbush_2",
                "speaker": "Harper Skywin",
                "text": "And just when will that be?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_HarpersPreparingBeforeAmbush_7",
                "speaker": "Harper Branthos",
                "text": "When I give the word.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_HarpersPreparingBeforeAmbush_5",
                "speaker": "Harper Branthos",
                "text": "And not a moment sooner.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Caravan_AD_MeleeAndRangerGoblinsAtCheckpoint": [
              {
                "id": "Caravan_AD_MeleeAndRangerGoblinsAtCheckpoint_6",
                "speaker": "Sharp-Eye Lora",
                "text": "Ain't you worried about the shadows?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "2fb08ca0-df67-8450-3f01-c1e1c2a78b59_A"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Caravan_AD_MeleeAndRangerGoblinsAtCheckpoint_4",
                "speaker": "Brawler Vez",
                "text": "Nope. 'Cause I ain't a little coward.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Caravan_AD_MeleeAndRangerGoblinsAtCheckpoint_5",
                "speaker": "Sharp-Eye Lora",
                "text": "Yeah... no, me neither.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Dead": [
              {
                "id": "Dead_22",
                "speaker": "Narrator",
                "text": "*The corpse regards you lifelessly.*",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Dead_23",
                "speaker": "Player",
                "text": "Who are you?",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [
                  "GLO_SpeakWithDead_Event_QuestionAsked"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Dead_19",
                "speaker": "Kar'niss",
                "text": "Erased... forgotten... we are... drider...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Dead_8",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ],
            "Caravan_GoblinMelee_001_AtTower": [
              {
                "id": "Caravan_GoblinMelee_001_AtTower_0",
                "speaker": "Warrior Gronag",
                "text": "Absolute's blessing on ya. Maybe Her design will throw us together again sometime.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_HasMet_CaravanGoblinMelee_001"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: idle, wishing us luck"
              }
            ],
            "AD_KillsSomeone": [
              {
                "id": "AD_KillsSomeone_0",
                "speaker": "Kar'niss",
                "text": "For the Absolute! For my queen!",
                "node_type": "normal",
                "checkflags": [
                  "1fbc1449-b85a-90a5-3f67-a8898acbd1d0_A"
                ],
                "setflags": [
                  "1fbc1449-b85a-90a5-3f67-a8898acbd1d0_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Caravan_HalfOrcCaster_AtTower": [
              {
                "id": "Caravan_HalfOrcCaster_AtTower_0",
                "speaker": "Kansif",
                "text": "It was an honour to walk the shadows at your side. A little more inviting here though, eh?",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_HasMet_CaravanHalfOrcCaster"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: formal, making a slight joke at the end"
              }
            ],
            "AD_Harper_Ranger_000": [
              {
                "id": "AD_Harper_Ranger_000_0",
                "speaker": "Harper Manus",
                "text": "No god can protect you.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: in combat, menacing your enemies"
              }
            ],
            "AD_Warning": [
              {
                "id": "AD_Warning_0",
                "speaker": "Kar'niss",
                "text": "If they wander, we will not be responsible.",
                "node_type": "normal",
                "checkflags": [
                  "7b1fff12-3497-bd2c-4003-1905563c535e_A",
                  "7b1fff12-3497-bd2c-4003-1905563c535e_B"
                ],
                "setflags": [
                  "7b1fff12-3497-bd2c-4003-1905563c535e_A = False",
                  "7b1fff12-3497-bd2c-4003-1905563c535e_B = False"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_Warning_4",
                "speaker": "Kar'niss",
                "text": "If they die, it is their own fault.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Caravan_HalfOrcCaster": [
              {
                "id": "Caravan_HalfOrcCaster_35",
                "speaker": "Kansif",
                "text": "True Soul. An honour.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_HasMet_CaravanFirstTime = False"
                ],
                "setflags": [
                  "SCL_Drider_HasMet_CaravanFirstTime",
                  "SCL_Drider_HasMet_CaravanHalfOrcCaster"
                ],
                "goto": "",
                "link": "25",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Bows their head slightly. This is their first time meeting a revered true soul"
              },
              {
                "id": "Caravan_HalfOrcCaster_14",
                "speaker": "",
                "text": "",
                "node_type": "alias",
                "checkflags": [
                  "CAMP_GoblinHuntCelebration_Knows_CreaturePath = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "123",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Caravan_HalfOrcCaster_96",
                "speaker": "Player",
                "text": "Why do you need a lyre, exactly?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "93",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Caravan_HalfOrcCaster_9",
                "speaker": "",
                "text": "",
                "node_type": "alias",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "93",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Caravan_HalfOrcCaster_102",
                "speaker": "Kansif",
                "text": "I admit, I'm surprised a True Soul does not know this. Where are you headed, exactly?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Caravan_HalfOrcCaster_52",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "20",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "20",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ],
            "AD_HarpersReachTree": [
              {
                "id": "AD_HarpersReachTree_0",
                "speaker": "",
                "text": "Keep steady. We're closing in.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_AfterAmbush": [
              {
                "id": "AD_AfterAmbush_0",
                "speaker": "Kar'niss",
                "text": "Shadows and heretics, Majesty. But they won't stop us. They can't stop us.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Outburst - a little crazed as a whispering he's been hearing picks up again"
              }
            ],
            "AD_PlayerTakesMoonlantern": [
              {
                "id": "AD_PlayerTakesMoonlantern_0",
                "speaker": "Kar'niss",
                "text": "Return the lantern! You are not worthy to hold her light!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_ArriveToTollHouse": [
              {
                "id": "AD_ArriveToTollHouse_1",
                "speaker": "Kar'niss",
                "text": "Stay close. The shadows are darkest here - hungriest here.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Warning the others in your caravan - you're entering a very dangerous area."
              },
              {
                "id": "AD_ArriveToTollHouse_0",
                "speaker": "Kar'niss",
                "text": "Do not stray from the light, no matter what they promise you.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Warning the others in your caravan - you're entering a very dangerous area."
              }
            ],
            "HarperMelee_000": [
              {
                "id": "HarperMelee_000_9",
                "speaker": "Harper Branthos",
                "text": "We expect great things of you.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_HasMet_HarperMelee000 = False",
                  "SCL_Drider_State_HarpersBackAtInn"
                ],
                "setflags": [
                  "SCL_Drider_HasMet_HarperMelee000"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperMelee_000_5",
                "speaker": "Harper Branthos",
                "text": "So go. Be great.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_CaravanConflict": [
              {
                "id": "AD_CaravanConflict_0",
                "speaker": "Brawler Vez",
                "text": "You look twitchy, stone-skin. Afraid of the dark?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_CaravanConflict_1",
                "speaker": "Kansif",
                "text": "In this place? Only a fool wouldn't be.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Caravan_GoblinRanger": [
              {
                "id": "Caravan_GoblinRanger_0",
                "speaker": "Sharp-Eye Lora",
                "text": "I miss the camp. It's too quiet out here.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "SCL_Drider_HasMet_CaravanGoblinRanger"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_AfterTollhouse": [
              {
                "id": "AD_AfterTollhouse_1",
                "speaker": "Brawler Vez",
                "text": "There's the tower now, big lad. Your breeches still clean?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: talking to a half-orc fellow-cultist, not to player"
              },
              {
                "id": "AD_AfterTollhouse_0",
                "speaker": "Kansif",
                "text": "My blade is. But that can change - just keep talking.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: talking to a goblin who disrespected you, but it's a mostly-friendly rivalry"
              },
              {
                "id": "AD_AfterTollhouse_2",
                "speaker": "Kar'niss",
                "text": "They will be silent! They approach your sanctuary, Majesty.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: 'they' are cultists he's leading, slightly crazed, talking to his 'god'"
              }
            ],
            "Caravan_GoblinMelee_000": [
              {
                "id": "Caravan_GoblinMelee_000_0",
                "speaker": "Brawler Vez",
                "text": "Can we get movin'? Nabbed these boots from a gnome, and they don't bloody fit.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_HasMet_CaravanGoblinMelee_000 = False"
                ],
                "setflags": [
                  "SCL_Drider_HasMet_CaravanGoblinMelee_000"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_HarpersMoveTowardsAmbush": [
              {
                "id": "AD_HarpersMoveTowardsAmbush_0",
                "speaker": "Harper Branthos",
                "text": "Eyes open, wits sharp.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Very tense, but not shouting. Close to a loud whisper."
              }
            ],
            "HarperNarrator_AfterAmbush": [
              {
                "id": "HarperNarrator_AfterAmbush_35",
                "speaker": "Narrator",
                "text": "*The hunter holds the lantern aloft. Its glow warms you through, chasing away the shadows in and around you.*",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_State_HasDriderMoonlantern"
                ],
                "setflags": [],
                "goto": "",
                "link": "17",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperNarrator_AfterAmbush_18",
                "speaker": "Narrator",
                "text": "*The lantern flickers ever so briefly, and you hear a slight twitter - or perhaps it's simply your imagination.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "17",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Camera shows lantern in Harper's hand. The light flickers just a little, and you hear a little titter come from it. Harper stows the lantern."
              },
              {
                "id": "HarperNarrator_AfterAmbush_19",
                "speaker": "Narrator",
                "text": "*The Harper demands an explanation. Why did you travel with cultists?*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Addressed to player. Harper raises his blade and points at the player.\rNodeContext: Very suspicious"
              },
              {
                "id": "HarperNarrator_AfterAmbush_6",
                "speaker": "Player",
                "text": "I meant to infiltrate the cult. You've ruined the mission.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperNarrator_AfterAmbush_23",
                "speaker": "",
                "text": "True",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperNarrator_AfterAmbush_11",
                "speaker": "Narrator",
                "text": "*The Harper acknowledges your explanation, grateful to see you in one piece.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Harper lowers blade while speaking."
              }
            ],
            "HarperCaster_000_AfterAmbush": [
              {
                "id": "HarperCaster_000_AfterAmbush_0",
                "speaker": "Harper Elindale",
                "text": "Not the cleanest of victories. But a victory, just the same.",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_HarperCaster_000_AtAmbush_HasMet = False",
                  "SCL_Drider_Event_AcquiredMoonlanternWithoutFight = False"
                ],
                "setflags": [
                  "SCL_Drider_HarperCaster_000_AtAmbush_HasMet"
                ],
                "goto": "",
                "link": "HarperCaster_000_AfterAmbush_5",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "HarperCaster_000_AfterAmbush_1",
                "speaker": "Harper Elindale",
                "text": "Hold your nose and check that corpse. The lantern should still be on it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Harpers_AtInn_AfterAmbush": [
              {
                "id": "AD_Harpers_AtInn_AfterAmbush_13",
                "speaker": "Harper Elindale",
                "text": "And the True Soul?",
                "node_type": "normal",
                "checkflags": [
                  "SCL_Drider_State_RendezvousAfterAmbush = False",
                  "SCL_Drider_State_HarpersBackAtInn",
                  "0cca6d90-e7d5-b1d6-8d9e-f6b5b8f65006_A"
                ],
                "setflags": [
                  "0cca6d90-e7d5-b1d6-8d9e-f6b5b8f65006_B"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_Harpers_AtInn_AfterAmbush_12",
                "speaker": "Harper Branthos",
                "text": "Go on - finish the thought.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_Harpers_AtInn_AfterAmbush_1",
                "speaker": "Harper Elindale",
                "text": "I just - are you really sure we can trust someone who is infected?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_Harpers_AtInn_AfterAmbush_6",
                "speaker": "Harper Branthos",
                "text": "Yes. Until Jaheira gives me reason to think otherwise.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_BeforeAmbush": [
              {
                "id": "AD_BeforeAmbush_2",
                "speaker": "Kar'niss",
                "text": "They must keep up. The shadows are hungry.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Called over the shoulder"
              },
              {
                "id": "AD_BeforeAmbush_0",
                "speaker": "Sharp-Eye Lora",
                "text": "Ain't all got ten legs!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: A shouted complaint"
              },
              {
                "id": "AD_BeforeAmbush_1",
                "speaker": "Kar'niss",
                "text": "...Patience, Majesty. You bless us with patience.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Taking a breath to stop from lashing out"
              }
            ],
            "Harper_Melee_000_AD_CombatStarts": [
              {
                "id": "Harper_Melee_000_AD_CombatStarts_0",
                "speaker": "Harper Branthos",
                "text": "Take out the drider - we need that lantern!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "Harper_Melee_000_AD_DriderDies": "Drider dies.",
            "Harper_Ranger_000_AD_LassandraDies": "Lassandra dies.",
            "Caravan_AD_HalfOrcCaster": "Combat AD for Kanslf, Half Orc caster in the driders caravan",
            "ThanksAfterAmbush": "While following the caravan, together with the players are ambushed by a group of players. If they side with the drider after the combat resolves it will thank them.",
            "HarperRanger_001_AfterAmbush": "Femme Harper Ranger after the fight with the Drider. To ppath: You started the fight with the drider, but switched sides. If you don't give the Harpers the moonlantern they came for, you will need to fight them for it.",
            "AD_HarpersAfterAmbush": "Harpers are at the rendezvous point after the ambush reflecting about it.",
            "AD_HarpersReachAmbushHouse": "AD that triggers as harpers reach the house from which they will ambush the caravan.",
            "Harper_Melee_000_AD_LassandraDies": "Lassandra dies in combat with the drider. Branthos (also in combat with the drider) reacts.",
            "PlayersAmbush": "The players have agreed to help the Harpers ambush a caravan of Absolute cultists and prisoners. You've just arrived at the ambush site - the mood is tense, words are spoken in harsh whispers. When the Caravan arrives there's a monsterous drider at its head, muttering to itself, talking to an imaginary queen/majesty that represents the voice of his God, The Absolute. The player can try to trick the drider into handing over its magic lantern (the Moonlantern - a glowing lantern hanging from the end of a staff), although that could leave the drider exposed to the worst effects of the curse. Will likely end in combat, either because you signaled the Harpers to spring their ambush or because the drider got suspicious and attacked.",
            "Caravan_AD_Hyena": "A playful, tame hyena is hanging around a goblin guard named Grim. Grim's having none of it.",
            "HarperCaster_000": "A Harper, getting ready for a mission that will see them trying to kill a drider - a big, dangerous monster. Main path only available when group dialogue is unavailable. This Harper is boisterous and eager.",
            "CaravanStart": "Dialog featuring a goblin and half-orc. Triggers the start of the caravan escort with the Drider appearing.The Drider is male, half-drow elf and half spider (bottom half). He carries a magical lantern to ward off the shadows",
            "HarperScout_PreparingForAmbush": "A Harper scout, getting ready to go back out into the cursed land that recently killed her friend. She's preparing to ambush a drider - a big, dangerous target. Her mood is somewhat grim.",
            "AD_AllHarpersWaitingAtAmbush": "Harper is waiting for the caravan at the ambush spot. After it the ambush starts and the caravan appears.Whispered and urgent - you're about to ambush someone.",
            "CINE_CaravanIntro": "The player spots the drider caravan approaching while exploring SCL (no harpers are present)",
            "HarperMelee_000_AfterAmbush": "Harper leader after the fight with the Drider. You started the fight on drider's side, but switched and sided with the Harpers. They take the lantern and if you want it, you need to attack them or convince them to give it to you.",
            "WaitingDuringEscort": "Players were following the Drider accross the shadowlands but moved too far away from the caravan. The Drider will wait for the player to speak with it again before resuming the movement towards the tower.",
            "Harper_Melee_000_AD_TakesMoonlantern": "Harper takes the moolantern from the drider.",
            "AtTower": "The Drider stands at the top of Moonrise tower - present just before we get our reward.",
            "AD_Harper_Melee_000": "Combat AD for Harper Branthos",
            "HarperRanger_000_AfterAmbush": "Harper Ranger after the fight with the Drider. You may or may not have started the fight on his side. After the ambush has ended, a prisoner threatens you, telling you to hand over the lantern.",
            "Caravan_AD_HalfOrcAndGoblinAtCheckpoint": "AD between the goblin and the half-orc when the entire caravan is at the checkpoint.",
            "Caravan_HalfOrcMelee_AtTower": "This guard was part of the caravan that brought us to Moonrise. Looking around the tower ruins, unimpressed.",
            "Caravan_HalfOrcMelee": "Half-Orc at the edge of the shadow curse. Stoic and focused on the job.",
            "HarpersAndPlayersAmbush": "The players have agreed to help the Harpers ambush a caravan of Absolute cultists and prisoners. You've just arrived at the ambush site - the mood is tense, words are spoken in harsh whispers. When the Caravan arrives there's a monsterous drider at its head, muttering to itself, talking to an imaginary queen/majesty that represents the voice of his God, The Absolute. The player can try to trick the drider into handing over its magic lantern (the Moonlantern - a glowing lantern hanging from the end of a staff), although that could leave the drider exposed to the worst effects of the curse. Will likely end in combat, either because you signaled the Harpers to spring their ambush or because the drider got suspicious and attacked.",
            "AD_DroppedLantern": "Drider dropped the lantern.",
            "AD_CombatStarts": "Drider screams after being attacked during the ambush.",
            "PAD_BacktrackedToCaravanCheckpoint": "Players met the caravan alone or with the harpers and backtracked towards where the caravan was waiting the Drider.",
            "AD_Harper_Caster_000": "Combat AD for Harper Elindale",
            "Caravan_GoblinRanger_AtTower": "A goblin guard who reached Moonrise Towers with us. Currently idle as they await their new orders.",
            "HarpersAtInn": "The players encounter a squad of Harpers at the Last Light Inn who're preparing to set out on a dangerous mission to ambush a drider and some cultists in the shadow-cursed lands. Lassandra, a Harper scout that the player may have helped previously, might be there.",
            "AD_EscortInterrupted": "Drider pauses the escort because someone was left behind. Drider's tone is a little sharp - it's his responsibility to make sure the caravan he's escorting gets to its destination safely.",
            "Caravan_GoblinMelee_000_AtTower": "",
            "AD_HarpersPreparingBeforeAmbush": "A group of Harpers are standing outside an inn They had been preparing a dangerous ambush, but now the leader has another idea. The other Harpers are growing impatient.",
            "Caravan_AD_MeleeAndRangerGoblinsAtCheckpoint": "Two of the three goblins discussing at the checkpoint. The tracker is nervous, looking to chat to distract himself. Vez is absolutely uninterested.",
            "Dead": "The drider's SWD dialogue.",
            "Caravan_GoblinMelee_001_AtTower": "The caravan has come to a stop at Moonrise Towers. Gronag is one of the guards idling outside until they're sent back out into the dark.",
            "AD_KillsSomeone": "Drider kills someone during the ambush encounter.",
            "Caravan_HalfOrcCaster_AtTower": "Kansif is now safe inside Moonrise Towers after delivering us there.",
            "AD_Harper_Ranger_000": "Combat AD for Harper Manus",
            "AD_Warning": "Drider warns players and caravan not to move too far away from the light - otherwise the Moonlantern won't protect them.",
            "Caravan_HalfOrcCaster": "Player approaches Kansif (a stoic, honourable male half-orc) and Brawler Vez (a mouthy female goblin) after clearing a checkpoint and entering their camp in the Shadowcurse. They two Absolute cultists assume you're a True Soul sent by Minthara (which may or may not be true) and will ask if you brought the lyre needed to summon their guide through the darkness. If you have, you can play it and the drider will emerge. If you haven't, they can tell you where to find it.",
            "AD_HarpersReachTree": "AD that triggers near a tree at the shadowlands.",
            "AD_AfterAmbush": "Kicks off conflict between two or more caravan members if they are all alive at the bridge next to the town, after the harpers' ambush.",
            "AD_PlayerTakesMoonlantern": "Player takes the moonlantern and wasn't on the drider's side.",
            "AD_ArriveToTollHouse": "Drider arrives to the toll house and tells everyone to stay close to him.",
            "HarperMelee_000": "Harper one-line, with faith that the player will guide them to victory against the big bad Ketheric Thorm.",
            "AD_CaravanConflict": "Kicks off conflict between two or more caravan members if they are all alive at the bridge next to the town, after the harpers' ambush.",
            "Caravan_GoblinRanger": "Goblin at the edge of the shadow curse. Misses the party back at the camp - this place is unsettling.",
            "AD_AfterTollhouse": "Kicks off conflict between two or more caravan members if they are all alive at the bridge next to the town, after the harpers' ambush.",
            "Caravan_GoblinMelee_000": "If the player has been allowed entry to the camp, they can talk to this goblin to learn that they are waiting for a harp from Minthara with which to summon a guide that will protect them from the shadow curse on the path to Moonrise and if they haven't got it, they need to get it from Minthara. If the player has killed Minthara and hasn't already told the checkpoint goblin, they can mention it here.",
            "AD_HarpersMoveTowardsAmbush": "AD as a group of Harpers move through the shadow curse. They're moving at a quick pace, trying to speak quietly. The mood is tense.",
            "HarperNarrator_AfterAmbush": "Narrator nodes for the after ambush. Dialgo shared between Elindale, Manus and Lassandra.",
            "HarperCaster_000_AfterAmbush": "Harper Caster after the fight with the Drider. You probably started the fight and switched sides to harpers. If so, you need to let them have the moonlantern or fight to keep it.",
            "AD_Harpers_AtInn_AfterAmbush": "| 1st case scenario : Harpers came back victorious from the drider ambush and they are chatting about it back at the inn. || 2nd case scenario : Player went at the ambush without the harpers and they are now left with no lantern and nothing to do, |",
            "AD_BeforeAmbush": "Second caravan AD between the bridge and the ambush.",
            "Harper_Melee_000_AD_CombatStarts": "Start ambush combat"
          }
        }
      },
      "final_flags": [
        "SCL_Drider_HasMet_HarperCaster000",
        "GOB_SpiderNest_State_SpidersHostile",
        "DEN_AttackOnDen_HasMet_Prodigy",
        "DEN_CapturedGoblin_GuardsHasMet",
        "HAV_Umi_NightsongFreed_HasMet",
        "GOB_Checkpoint_Event_MoveToCamp",
        "UND_MyconidRevenge_Event_TakeHead",
        "8a9a14b0-87da-5c78-aa76-7a266de7a786_Phase1",
        "PLA_TavernInvestigation_Knows_AskedStelmane",
        "DEN_AttackOnDen_HasMet_Tiefling010Victory",
        "GLO_Moonrise_Knows_AbsoluteAtGrymforge",
        "COL_Vault_State_HasAccess",
        "CRA_DeadPrisoner_Dead_AskedQuestion",
        "UND_DuergarMutineerFollowUp_Event_Happened",
        "CHA_Outside_Event_DoorGuardConvinced",
        "e0b6dfeb-2923-e0ad-1dc5-2a5d1e055e16_local1",
        "DEN_AttackOnDen_HasMet_GrieflingFriend",
        "DEN_AttackOnDen_HasMet_Tiefling001",
        "GOB_QuartermasterFlimsy_HasMet",
        "HAV_SavingPrisoners_HasMet_Manip",
        "GEN_TransferNPCPayment_2",
        "DEN_AttackOnDen_Event_OpenGateAfterCombat",
        "5e9c4c72-4f56-2646-ce36-88207d2dc33c_KinSaved",
        "95496308-6e34-b8c7-93fb-3b5e56e71f5d_C",
        "GOB_OwlbearCub_Event_InvitedToCamp",
        "MOO_Docks_HasMet_DockObserver",
        "MOO_Jailbreak_HasMet_Guard004",
        "PLA_Desire_Knows_RavengardTaken",
        "DEN_DruidServant005_Knows_TalkedAboutLockdown",
        "UND_SocietyOfBrilliance_MindFlayer_State_MindFlayerFeeding",
        "PLA_ConflictedFlind_Event_MindControlDamage_Minor",
        "DEN_AttackOnDen_HasMet_Servant005Victory",
        "PLA_Desire_State_WyllComTrack",
        "CHA_Chapel_Event_OpenedJergalsTomb",
        "UND_DarkLake_State_ClaimedGekhWasDead",
        "DEN_AttackOnDen_Pet004_HasMet",
        "GLO_Player_Knows_MoonlanternExists",
        "GOB_PainPriest_Event_Reward",
        "2da46374-abab-9219-f7ce-2a002cfd72a5_a",
        "DEN_AttackOnDen_Ranged_001_HasMet",
        "GLO_Volo_HasMet_Personally",
        "GOB_PainPriest_State_ReactedToPenance",
        "8916beac-0385-3df9-de07-8be3cc6752a7_A",
        "da38cd0f-efef-6809-231d-26f71308cd07_B",
        "HAV_ProdigyLament_Knows_RolanAlive",
        "DEN_RaidingParty_Event_SkipConfrontation",
        "ORI_INCLUSION_SHADOWHEART",
        "GLO_TadpoledCount6",
        "PLA_TavernInvestigation_Quest_WallCollapsed",
        "PLA_Refugee_002_TollhouseMentioned",
        "DEN_AttackOnDen_HasMet_RobberKid",
        "FOR_PriestsConqueringGod_AlliedPlayer",
        "HAG_GurHunter_Dead_Knows_Hunter",
        "HAV_TieflingSurvivors_State_DidNotPromiseToSaveMol",
        "DEN_AttackOnDen_HasMet_PickpocketVictory",
        "DEN_GuardedEntrance_State_ParentsKnowDeath",
        "ORI_MintharaRecuitment_Event_InvitedToCamp",
        "FactionHostileToIndivPlayerAfterDialog",
        "GLO_IronhandGnomes_Knows_WulbrenInMoonrise",
        "Den_Thieflings_InterferingGuard_PCGotLore",
        "WLD_FOR_GnomeGoblinsAngry",
        "MOO_KitchenFight_HasMet_GnollMaster",
        "GOB_Checkpoint_Guard01_HasMet",
        "c7cbc714-5e48-c78a-0867-2ce81a42d681_B",
        "WLD_UnfortunateGnome_PayPassage",
        "4c78f756-720d-a285-a3e6-8f69a6069abc_Step1",
        "cd4b312f-5a40-b8c1-1ecb-0862c829a479_A",
        "5ebae00c-47d8-736c-6738-4ee56cebbc49_B",
        "GLO_Prodigy_State_ToldSiblingsProdigyDead",
        "MOO_Jailbreak_Event_ProdigyIntro",
        "DEN_General_YoungLovers_HasMet",
        "GOB_PainPriest_Event_CheckHP",
        "GLO_LiftingTheCurse_State_HalsinRecruitable",
        "GLO_Desire_HasMet",
        "b43d3bc7-f10d-73cc-232e-c1f93cba3ed5_Local2",
        "DEN_AttackOnDen_Pet002_HasMet",
        "FOR_UnfortunateGnome_State_NonCharlatanAccess",
        "UND_MyconidCircle_PlantDuergarHasMet",
        "aa1d4932-8689-5e30-2b17-9b0968663a7a_historysuccess",
        "MOO_Execution_Knows_Executioner",
        "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_WyllSpoke",
        "GOB_WolfPens_Worg_002_HasMet",
        "PLA_GithChokepoint_State_FailedReadingMap",
        "PLA_ZhentShipment_Agent_002_StartInclusion",
        "GLO_HAV_TakingIsobel_HasMet_BriefInRoom",
        "SCL_Drider_HarpersAtInn_OneLinerHasMet",
        "4951b7ce-8495-b2c8-badc-beaff0e3d807_H",
        "d2eeb9af-9d20-919f-5bcf-63b09a554a90_A",
        "DEN_ShadowDruid_Event_SetFaithwarden",
        "73cbf53d-6017-fdd5-a96a-9cae574a1bd9_B",
        "CRA_DeadPrisoner_Dead_MentionedTadpole",
        "GLO_Absolute_Knows_MoonriseTowers",
        "DEN_Rat_Event_MoveToShack",
        "DEN_DruidAttack_HasMet_Protester3AfterAttack",
        "ORI_Inclusion_End_Karlach",
        "UND_WormWall_State_RecognisedCrawlers",
        "GLO_GithChokepoint_DragonAppear",
        "df3e1892-2ab5-7b69-e57b-a75504e1a8f2_B",
        "10297257-36dd-3799-f681-657656779d4a_TieflingsLaezelAD1",
        "ORI_Inclusion_End_Wyll",
        "DEN_AttackOnDen_HasMet_BackupLeader",
        "GLO_HeadRemoval_Event_HeadToInventory",
        "CHA_Jergal_Event_AttemptedAttack",
        "9b4c05c6-0a79-ea8d-c351-43d6fbb04abc_Story1",
        "GOB_AbsoluteCultistStiff_HasMet",
        "GLO_Shadowcurse_Knows_FromGnome",
        "PLA_StuckHalfElf_Knows_ExplainedDowry",
        "FOR_BugBearLove_Event_MovePlayerInside",
        "DEN_Stargazing_Event_SawDragon",
        "SCL_Drider_HarperRanger_000_AtAmbush_HasMet",
        "ORI_INCLUSION_ASTARION",
        "FOR_UnfortunateGone_TiedUpHasmet",
        "HAG_Hagspawn_State_JakeBerserk",
        "6cf6ff37-64f7-3ccf-d702-ee2025510422_B",
        "UND_EbonLake_Event_MoveToLake",
        "FOR_SeluneStash_NoticeStashSeal_CommentedOnSeal",
        "GOB_Torturers_Rat_001_HasMet",
        "GOB_Scrying_NoddedOrShrugged",
        "DEN_BirdSender_HasMet_GobLeadersDead",
        "a759296c-5d41-f5b9-7d31-1c70d1e10dc7_Once",
        "8ab0520b-3a8d-822f-1934-336e2d24e0a0_B",
        "d3eb78cf-ff8c-1e7a-7df7-4b6a04226b17_B",
        "DEN_HarpyMeal_Event_OriginCharm3",
        "683cb55e-08b9-c865-78a6-4e047ee62a24_B",
        "GLO_Tadpoled_UsedToday1",
        "GLO_HAV_TakingIsobel_HeardOfIsobel",
        "DEN_Thieflings_Event_PartnerQuestionAsked",
        "HAG_SurrogateMother_HasMet",
        "b83032a9-f599-fdff-c180-c2d1f267bdb4_B",
        "421668a5-7b68-9e8b-977b-522b4a071156_B",
        "b2a52f0b-5fa8-d275-f080-0fc8edbe1faf_B",
        "GOB_GoblingKing_Event_HealerPersuasion",
        "UND_DuergarCamp_State_DocksHostile",
        "PLA_ZhentShipment_Agent_001_StartInclusion",
        "57c003e7-0932-6f0c-e655-99025a4abe3a_B",
        "DEN_AttackOnDen_HasMet_TieflingLeader",
        "09983dce-d7d0-c108-506f-dcadc4044b0a_Derryth_SwD_Who",
        "PLA_TavernInvestigation_State_HasMet",
        "ORI_Inclusion_Karlach",
        "UND_BrokenMoonLantern_HasMet",
        "3483cea8-0c11-9432-2421-6b95b9140d95_B",
        "7611fa51-4b1b-3d2c-a8a5-74c04d9db7fa_AnimalHandlingSuccess",
        "UND_DuergarPatroller_03_HasMet",
        "DEN_DruidAttack_HasMet_HideoutLeaderAfterAttack",
        "DEN_TieflingScam_Event_InspectedBox",
        "GnomeAskedHelp",
        "3f665b97-a69e-81c5-68e6-5b931720721e_Part1",
        "CHA_LaezelRecruitment_MindMeld",
        "MOO_Bazaar_BazaarStander_006_JailbreakSuccess_HasMet",
        "94cd0a22-c842-d9f3-8121-f8ac16410656_A",
        "SCL_MastiffPoachers_Knows_ContinualFlame",
        "GLO_ScryingEyes_State_FeltGaze",
        "DEN_GuardedEntrance_HasMet_Guard3",
        "DEN_RaidingParty_Event_KanonOpensGate",
        "MOO_Jailbreak_HasMet_Warden",
        "DEN_AttackOnDen_HasMet_Wyll",
        "PLA_ConflictedFlind_Knows_Gnolls",
        "GLO_TalkedToVoloAboutAbsolute",
        "UND_MyconidCircle_DwarvenAlchemist_BaelenRestoredHasmet",
        "COL_Barracks_State_InterruptConvinced",
        "GOB_Festivities_Trader_HasMet",
        "DEN_AttackOnDen_HasMet_Tiefling004",
        "ZhentDungeon_AgreedBuy",
        "11d70a18-2aae-47a0-1a18-c486858b1eaf_B",
        "DEN_GruntingKid_Event_DisappearIntoWall",
        "GOB_BattleStations_HasMet_WarDrum",
        "GOB_GoblinJolly_HasMet",
        "UND_MyconidCircle_InjuredGnome_ReportedGrymforgeFate",
        "564fac12-29bd-3abe-d380-0a864e688883_Turn1",
        "COL_TadpolingCentre_MemoryImprint_FirstUse",
        "HAV_TieflingSurvivors_Mirkon_EndInclusion",
        "DEN_Apprentice_HasMet_ReactedToShadowDruids",
        "DEN_CampGeneral_HasMet_Gatekeeper",
        "SCL_Drider_HasMet_CaravanHalfOrcCaster",
        "HAV_WrootRequest_Wulbren_AskedAboutIronhandGnomes",
        "UND_DeadInTheWater_CorpseDisposerCompanion_HasMet",
        "UND_MyconidCircle_MyconidSuspicious_HasMet",
        "MOO_Jailbreak_Knows_ToolsNeeded",
        "DEN_Hideout_State_GivenWarning",
        "PLA_Refugee_002_HasMet",
        "UND_DuergarGuard_AtPier_01_HasMet",
        "DEN_DruidAttack_HasMet_PickpocketTraderAfterAttack",
        "SCE_Jergal_HasMet",
        "DEN_RaidingParty_Event_OpenDenGate",
        "GOB_GoblinKingDead_Event_SaidFugitives",
        "HAV_SavingPrisoners_HasMet_Florrick",
        "HAV_EnteringHaven_State_RevealedArtifact",
        "UND_State_LeaderFreedGnomes",
        "41e56e7f-1722-7350-33dc-aefe523650fe_B",
        "d3d3855d-6721-b089-5c1e-d6d255a46fdc_A",
        "PLA_ZhentDungeon_State_SaidPassword",
        "c3207254-eafb-348b-d327-f690af0e213f_startedattackmove",
        "DEN_AttackOnDen_HasMet_TieflingBard",
        "UND_MyconidCircle_BroodingSovereign_State_InParty",
        "DEN_AttackOnDen_HasMet_Kid004Victory",
        "DEN_Hideout_Event_LeaveCountdown",
        "1493763b-776c-959c-259a-89f34f326e04_A",
        "DEN_AttackOnDen_ZenBear_HasMet",
        "SCE_TieflingFollowUp_Knows_MolMissingEyepatch",
        "UND_FurnaceSearch_Knows_Xargrim",
        "HAV_ProdigyLament_Knows_SiblingsInMoonrise",
        "DEN_DevilishOx_State_ArcanaCheckComplete_SwA",
        "fa6e2ce0-64f3-bfb8-fb47-10f50f02cadf_AbsoluteMentioned",
        "MOO_Bazaar_HasMet_Bystander01",
        "DEN_AttackOnDen_Event_PassedByEntrance",
        "DEN_Thieflings_TieflingGuard11_HasMet",
        "GOB_Trader_Knows_Goods",
        "DEN_AttackOnDen_HasMet_Tiefling005",
        "GOB_GoblinToast_Event_ToastSuccess",
        "COL_Barracks_Mistress_Knows_ThinksPlayerIsThrall",
        "c9e1ff2a-01e2-abdb-b98e-2d4a35b3c7dc_A",
        "DEN_ZenBear_Helped",
        "MOO_GuardRoom_HasMet_Guard02",
        "FOR_KnifeInMeat_State_KnifeBroken",
        "GOB_Festivities_Goblin001_HasMet",
        "2fb08ca0-df67-8450-3f01-c1e1c2a78b59_A",
        "FOR_GnomeGoblin1_HasMet",
        "SCL_Drider_Event_PlayersStartFollowingDrider",
        "7cf65f2f-1a29-daa2-940e-1159a8940b4e_C",
        "DEN_TieflingRefugees_Quest_HuntRewardOffered",
        "DEN_RaidingParty_Event_GatekeeperToLever",
        "DEN_DruidAttack_HasMet_ServantGnome",
        "COL_NecroLab_GrandDesignSculpture_HasMet_LaezelInclusion",
        "FOR_GoblinAmbush_Event_StopSpotting",
        "HAV_Cat_HasMet",
        "DEN_AttackOnDen_HasMet_RitualDruid003",
        "ReportedToDerryth_BaelenIsAlive",
        "GOB_Owlbear_HasMet_NotChasing",
        "UND_SocietyOfBrilliance_MindFlayer_HasMet",
        "ba2b225d-e9d4-944d-5b4f-b27dd975c626_A",
        "DEN_AttackOnDenDruidLeader_State_HasMet",
        "6fa2b72d-fde1-4ee3-e1d1-f184232f693d_A",
        "DEN_DruidAttack_HasMet_ParentBAfterAttack",
        "DEN_General_Squirrel_LearnedTerritory",
        "MOO_Assault_HasMet_KethericHound",
        "HAG_Hagspawn_Knows_PromisedRaiseHusband",
        "OriginAddToParty",
        "ORI_Shadowheart_Knows_CurseResistant",
        "PLA_ZhentShipment_Agent_001_Inclusion_Start",
        "GOB_RaiderStupid_HasMet",
        "83fdf5e9-88b8-19e7-ba8f-ff075d2222ce_PLA_ZhentShipment_Knows_Gnolls",
        "DEN_Apprentice_Event_RevealedTadpole",
        "DEN_Thieflings_Event_HideoutTrespassCrimeResolved",
        "469a1188-028b-0e6b-b595-fa464baa551e_b",
        "GOB_RaiderBold_HasMet",
        "FoundCounsellor",
        "UND_DuergarCamp_State_SidedNone",
        "HAV_WrootRequest_Gnome002_NightsongFreed_HasMet",
        "a0afae3d-53b0-192d-d822-c61da104f979_A",
        "8f847adf-7b8a-3551-cfc0-4ea0c66a999a_F",
        "SCL_DriderHarper_Melee_000_StartInclusion",
        "DEN_Apprentice_State_ShadowDruidPath",
        "DEN_AttackOnDen_HasMet_LeaderKidVictory",
        "FOR_Monitor_Event_TakeFood",
        "GOB_GoblinToast_ThirdGoblinToasted",
        "5b1ec9d1-cec5-2107-d929-f1af9c05d5d9_B",
        "FOR_Monitor_State_TransformToDevil",
        "DEN_Thieflings_HasMet_Guard2",
        "DEN_Thieflings_HasMet_Mol",
        "ORI_Karlach_HasMet",
        "MOO_Execution_State_PlayerWantedToAttack",
        "SCL_ServantOfTheRaven_Raven_HasMet_SWA",
        "GOB_Festivities_HasMet_Ogre_00",
        "GOB_RatRacket_LocalRat_002_HasMet",
        "4466a73c-607a-4a7e-c1e5-94d549e8f23d_A",
        "ce2b9169-f3e7-e07f-9c58-0fd373d5df9a_PLA_ZhentDungeon_Zhent02_Dead_KnowsZarysisZhentarim",
        "HAV_Minthara_Hasmet",
        "MOO_Jailbreak_Knows_GnomeEscape",
        "DEN_AttackOnDen_Event_EnemiesAppear",
        "FOR_SchoolOgres_Event_AttemptedFirstSkillCheck",
        "GOB_Checkpoint_State_UsedAlarmOnce",
        "HAV_ProdigyLament_Event_Intro",
        "DEN_GoblinScouts_State_SavedDruid",
        "DEN_AttackOnDen_HasMet_Adventurer2",
        "d6df8edb-ac4b-e1d2-794b-6bfd00757cbf_A",
        "MOO_Assault_AssaultFlamingFist_003_ThroneRoomDefeated_HasMet",
        "HAV_ProdigyLament_HasMet_Ide",
        "GOB_GoblinToast_Event_IncludeFourthGoblin",
        "15b0a2b9-2b22-50ab-70c0-ab3042def597_GaleCommentTried",
        "DEN_HarpyMeal_InHideout_WasMean",
        "PreventTradeWithPlayer",
        "DEN_GoblinHunt_Event_GiveRewardBag",
        "1bddcc22-dadd-92c9-4186-4e10ebbfee68_CHA_Crypt_Jergal_DontFollow",
        "UND_AdamantineForge_Knows_Adamantine",
        "DEN_AdventurersQuest_Knows_AradinStory",
        "FOR_Bottomless_State_InteractedWithWell",
        "8baf8087-81b0-de5d-3efa-f74769a625f4_B",
        "ORI_INCLUSION_MINTHARA",
        "SCE_Debrief_State_PartyDebriefed",
        "MOO_Jailbreak_HasMet_Wulbren",
        "DEN_AttackOnDen_HasMet_ChefAndSon",
        "ORI_Inclusion_Astarion",
        "UND_DarkJusticiarsCorpses_Recognized",
        "fd9ed69f-475f-def2-bae0-25065ccc4143_B",
        "GLO_Florrick_State_KnowsWyllDevil",
        "GLO_Desire_State_FreedInAct1",
        "MOO_MoonriseTower_State_Outcast",
        "DEN_DruidLair_Knows_DruidsAlliance",
        "1591cb60-9e65-980a-c49e-69f68b958a1d_B",
        "GOB_Checkpoint_State_GainedAccess",
        "FOR_UnfortunateGnome_Bargaining",
        "DEN_AttackOnDen_HasMet_ProdigyBrother",
        "UND_Elevator_Event_GotWarning",
        "UND_FearfulRothe_Event_MakeDuergarHostileInDialog",
        "GOB_GuardUpset_State_ConvincedTrueSoul",
        "DEN_CapturedGoblin_State_InTransit",
        "GLO_Thieflings_State_PCShookPickpocketSister",
        "GOB_GEB_TorturedAdventurer_Assault_HasMet",
        "DEN_GroveConflict_Event_StoleIdolAttempt",
        "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_NoFFPresent",
        "29ddc96b-303b-373d-2b6f-37ae4e8d534b_A",
        "DEN_Thieflings_Event_CallGuard",
        "SCL_Drider_HasMet",
        "DEN_AdventurersQuest_RaidAdventurerAtCorps_HasMet",
        "UND_FearfulRothe_HasMet_Rothe_001_SpeakWithAnimals",
        "UND_FearfulRothe_State_BefriendedRothe",
        "0d6dbe21-1644-b9bf-8297-dd60d820bd99_B",
        "DEN_GuardedEntrance_HasMet_LiedAboutDeath",
        "FOR_ApothecaryGoblins_Goblin01_HasMet",
        "HAG_AnimalIllusion_Revealed_HasMet1",
        "DEN_TieflingScam_Event_TalkedAboutBox",
        "SCE_Alfira_Event_GaveShiningDawn",
        "0276d317-8b34-66e2-48e2-6b9d69d6830b_F",
        "UND_Automaton_Knows_AskedPlace",
        "HAV_Florrick_Event_RavengardInTowers",
        "CRA_DeadFisherman2_Dead_WhatDoing",
        "GOB_GoblinToast_Event_IncludeThirdGoblin",
        "DEN_AttackOnDen_HasMet_PickpocketTrader",
        "COL_TadpolingCentre_Knows_IdentifiedDarkUrgePod",
        "0cca6d90-e7d5-b1d6-8d9e-f6b5b8f65006_B",
        "GOB_GoblinThroneCheckpoint_Pass",
        "HalsinLeft_KilledLeaders",
        "DEN_AttackOnDen_HasMet_Halsin",
        "c167cdf3-7201-e55c-222f-773c758e1000_IncludedHusband",
        "HAG_HagLair_Victim_001_HasMet",
        "MOO_Audience_State_KethericToldToKneelAtAltar",
        "PLA_StuckDwarf_HasMet_FoundWife",
        "GOB_SpiderNest_State_SpidersChill",
        "PLA_Tavern_Knows_DukeInTavern",
        "ORI_INCLUSION_KARLACH",
        "PLA_ZhentDungeon_State_AgentFreed",
        "UND_FurnaceSearch_Event_DuergarMentionsForge",
        "GLO_Moonrise_Knows_GoblinsCapturedADuke",
        "DEN_DruidLair_Knows_FoundingGrove",
        "FOR_Monitor_HasMet_Dinner",
        "AskedCircle",
        "SCL_Drider_HasMet_CaravanFirstTime",
        "03b6aa2e-e805-3a51-6bdb-d92f0b0da84a_UND_MyconidCircle_ServantHookHorror_01_RecognisedMonster",
        "DEN_GuardedEntrance_HasMet_Protester1",
        "SCE_Minthara_HasMet",
        "MOO_Assault_AssaultHarper_002_ThroneRoomDefeated_HasMet",
        "ToldAboutTadpole",
        "DEN_DruidAttack_HasMet_Tiefling010AfterAttack",
        "f3f236b2-37a1-a0a2-5855-184ead7b1286_C",
        "GOB_DrowCommander_State_Hostile",
        "UND_ArguingGnomes_Event_LearnedAboutPhilomeen",
        "UND_PetrifiedDrow_Knows_WizardIsDhourn",
        "MOO_InfernalVendor_State_ConsentedLowHealth",
        "ORI_Inclusion_End_ShadowHeart",
        "MOO_Assault_HasMet_HarperQuartermaster",
        "ORI_Shadowheart_Knows_SeenTempleVista",
        "FOR_BugBearLove_Event_CoupleHostile",
        "HAG_AnimalIllusion_Narrator",
        "SCL_DriderHarper_Ranger_001_StartInclusion",
        "DEN_Thieflings_State_DoneChase",
        "UND_ElevatorGuard002_HasMet",
        "ThankedFreed_BeldronThulla",
        "ORI_INCLUSION_MINSC",
        "DEN_Thieflings_Knows_PlayerRobbed",
        "DEN_ShadowDruid_HasMet_Opposed",
        "GLO_TadpoledCount1",
        "HAV_ProdigyLament_Brother_RolanDead_HasMet",
        "DEN_DruidAttack_HasMet_ExcitedBoar",
        "3b2ae6b6-ca7e-d905-0430-128078b3119f_B",
        "720e85fb-cc00-b81a-efff-343a04ca221e_A",
        "DEN_DevilishOx_MeetAtDruidsGrove_HasMet_SwA",
        "UND_ClericPetGrave_HasMet",
        "99aa7b78-defd-57bc-eabf-a8aa43a030d9_A",
        "UND_MyconidCircle_DirectToSovereign_HasMet",
        "UND_GnomeWorkerLumpy_HasmetRescued",
        "DEN_GroveConflict_Quest_Learnt3LeadersTwoNames",
        "d97f72ff-8fb1-8a4c-f169-89751bd6e125_b",
        "ORI_INCLUSION_RANDOM",
        "HAG_Well_Event_DrinkWell",
        "a7407f82-add0-9f6d-e4e6-78b9c39195a6_C",
        "HAV_SavingPrisoners_HasMet_Inspector",
        "ORI_INCLUSION_WYLL",
        "4118b185-9468-2295-93f3-9d6eafd8fb8a_Second_Disabled",
        "FOR_GoblinAmbush_State_DrowAutoPass",
        "DEN_TieflingLeader_Quest_GobHuntResponded",
        "GLO_Halsin_Event_TalkedWithDruidLeader",
        "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionRefused",
        "HAV_ProdigyLament_State_ToldStory",
        "SCL_EntryPoint_Event_GainedAccessToCaravanCampFromDialog",
        "ORI_Inclusion_Gale",
        "DEN_RitualDruid_HasMet_Left5",
        "PLA_Desire_Quest_TriedForceDoor",
        "HAV_ProdigyLament_Event_RudeWithIde",
        "DEN_Thieflings_Pickpocket1_PCIsNotAChump",
        "MOO_InfernalVendor_State_AskedAboutDeals",
        "MOO_Jailbreak_Event_SaveTieflings",
        "DEN_AttackOnDen_HasMet_Refugee002",
        "fb0e13b6-cc68-d496-51c2-4594f4f5bf40_TauntHer",
        "182bb613-b70c-5e7c-b3ea-ea14e02d1fab_C",
        "GOB_PainPriest_Event_PickScourge",
        "DEN_GroveConflict_Knows_HeardAboutRitual",
        "d0423454-cc51-ae8e-5096-cffd1aac9f75_A",
        "FOR_BugBearLove_Knows_Lovemaking",
        "MOO_Assault_AssaultHarper_001_ThroneRoomDefeated_HasMet",
        "ORI_INCLUSION_LAEZEL",
        "DEN_DruidAttack_HasMet_SonOfChefAfterAttack",
        "HAG_HagLair_TalkingDoor_HasMet",
        "ORI_Inclusion_ShadowHeart",
        "HAV_TieflingSurvivors_Mirkon_StartInclusion",
        "1ea9e483-36a9-82b1-852f-b901ec25552a_a",
        "DEN_Prodigy_HasMet",
        "PLA_ZhentShipment_State_TalkedAfterKilledGnolls",
        "551618bc-83c9-52cc-0ca7-37c224446cf7_Local1",
        "GOB_Bravado_State_Goblin3Hasmet",
        "MOO_Docks_HasMet_DockJumper",
        "SCE_GnomeFollowUp_HasMet_WulbrenAlive",
        "HAV_LiftingTheCurse_Knows_SeekingBreath",
        "SCE_TieflingFollowUp_Ide_HasMet",
        "SCL_Drider_Event_PlayersAttackHarpers",
        "FOR_BottomlessWell_InteractWithWell_Knows_LookedDown",
        "ORI_INCLUSION_GALE",
        "DEN_GuardedEntrance_HasMet_Parents",
        "GOB_GoblinToast_Event_IncludeSecondGoblin",
        "ca797aab-5a73-7ec5-edb7-022122573b39_B",
        "HAV_ProdigyLament_Sister_RolanDead_HasMet",
        "SCL_DriderHarper_Caster_000_StartInclusion",
        "DEN_AttackOnDen_Event_HeftyTieflingQuip",
        "COL_Vault_Event_Start",
        "HAV_ProdigyLament_HasMet_Rolan",
        "MOO_InfernalVendor_Event_SellingBlood",
        "GLO_Factions_Knows_Harpers",
        "GOB_WolfPens_Event_HalsinLeftParty",
        "SCL_Drider_HasMet_HarperMelee000",
        "FactionHostileToPlayerGroupAfterDialog",
        "MOO_Jailbreak_HasMet_ProdigySister",
        "ORI_Laezel_Quest_FoundZorru",
        "GOB_GoblinPriest_Event_FreedFromChains",
        "PLA_StuckHalfElf_Knows_MentionedDowry",
        "0e791991-068a-3008-e14c-d70ae36d240f_B",
        "SCL_Drider_AtTower_HasMet",
        "21e0890e-7019-66a3-1956-125405f96d7c_A",
        "a63e4af2-6edc-188a-efdf-b9ffc5460fc5_LOCAL_B",
        "SCL_Drider_Event_ResumeEscort",
        "DEN_DruidAttack_HasMet_DruidOpposedAfterAttack",
        "FOR_PriestOfTheConqueringGod_Cultists_Knows_Mission",
        "DEN_Apprentice_Event_RemoveBirdExhaustion",
        "DEN_CampGeneral_PCGotLore",
        "SpokeToBrothers",
        "5f09c70a-153e-77e8-731c-5c532e635809_B",
        "DEN_DruidAttack_HasMet_GatekeeperAfterAttack",
        "SCL_Drider_HarperCaster_000_AtAmbush_HasMet",
        "LearnedGroveSituation",
        "DEN_RaidingParty_Event_UnsheatheForFight",
        "ReachedWife",
        "SCE_BackupLeader_HasMet",
        "GOB_Festivities_BugbearSleeper_00_HasMet",
        "GLO_TadpoleIntro_NPC",
        "DEN_Thieflings_Knows_KidsThieves",
        "30d43adb-dcaf-c0f3-d432-af96a1c2e1ea_spoketowulbren",
        "MOO_Execution_Guard_002_Hasmet",
        "DEN_ShadowDruidLeaderPostGoblins_State_HasMet",
        "DEN_GroveConflict_Knows_LeaderNameKing",
        "153f4e14-c830-5653-1638-7495b0b9fc12_A",
        "SCE_TieflingFollowUp_Knows_MeanAboutMol",
        "TemporaryHostilityAfterDialog",
        "0884581d-9f92-0a34-9440-6a54c0813bbe_ProceedToSecondStage",
        "GLO_Inclusion_End_Halsin",
        "DEN_Prodigy_HasMet_Brother",
        "GLO_Absolute_Knows_TrueSoul",
        "440db1a3-14ad-8127-a14b-c445049225db_HasMetInTower",
        "UND_GnomeForeman_UnfortunateGnome_InclusionStart",
        "SCL_Drider_State_SidedWithCaravan",
        "DEN_WeepingTree_HasMet_Bear",
        "PLA_ZhentDungeon_Dog_03_HasMet",
        "13d9f9ef-d1da-1d1d-287f-7a1763d72c38_B",
        "GOB_DrowCommander_Knows_DrowLeader",
        "ORI_Shadowheart_State_IdolHint",
        "ea88dfe9-ff39-9b98-ae03-48d7fdf2708e_A",
        "DEN_AttackOnDen_HasMet_Refugee004Victory",
        "ORI_Inclusion_End_Astarion",
        "OrderedKillDruids",
        "DEN_DevilishOx_MeetAtDruidsGrove_State_Peaceful",
        "DEN_AttackOnDen_HasMet_RitualDruid002",
        "PLA_StuckHalfElf_StartInclusion",
        "DEN_Thieflings_Pickpocket2_HasMet",
        "375a6f59-375f-f5eb-5f42-60de2dc6aa6b_B",
        "GOB_Checkpoint_Event_WarnedAtCliff",
        "PLA_ZhentShipment_State_Talked",
        "RefusedHelpBrothers1",
        "GOB_PainPriest_Event_ReactToMocking",
        "DEN_DruidLair_Knows_RuneAppearance",
        "SCL_HarperScouts_ShadowCreatures_HasMet",
        "711fda6a-05e2-6677-b067-9b1c710e0cdb_B",
        "GLO_Hag_KnowsAboutSurrogate",
        "MOO_Jailbreak_Event_ForceBoatLeave",
        "MOO_Assault_AssaultFlamingFist_002_HasMet",
        "81f2a55d-d317-761f-f6a0-fe97ad6d5288_C",
        "UND_DuergarCamp_Knows_NereIsTrapped",
        "DEN_SenderBird_Event_TakeOff",
        "FOR_GnomeGoblinsPacified",
        "DEN_DruidAttack_HasMet_ChefAfterAttack",
        "ParentLied",
        "SCL_Drider_HasMet_CaravanHalfOrcMelee",
        "7256657b-1386-989f-0262-c6530e03a9fb_AskedWhy",
        "DEN_General_Inclusion_End_Pickpocket",
        "DEN_WeepingTree_Bear_Upset",
        "UND_TheDrowNere_Mutiny_InclusionStart_GnomeSilly",
        "bde7a4f1-933f-f6ce-4a3e-4b1f29f83704_B",
        "UND_TheDrowNere_Event_HadMindMeld",
        "57c003e7-0932-6f0c-e655-99025a4abe3a_A",
        "DEN_YoungLovers_State_MetPlayer",
        "GLO_Inclusion_Halsin",
        "5310a408-76a3-3498-cc26-ae866871188b_Third_Disabled",
        "HAV_General_HarperScout_001_HasMet",
        "7ffcf0de-e30b-ef58-fcc5-8d3a1482fa59_b",
        "GLO_Absolute_Knows_GoblinsWorship",
        "DEN_Weaponsmith_Knows_Elturel",
        "SCL_DriderHarper_Ranger_000_StartInclusion",
        "DEN_ShadowDruid_Event_ReactionDone",
        "CHA_Crypt_Event_JergalAppears",
        "PLA_ZhentDungeon_Zhent05_HasMet",
        "DEN_TieflingLeader_HasMet_ReactToDruidAttack",
        "ORI_Laezel_State_StartedTieflingsSceneAtCage",
        "DEN_BirdSender_HasMet",
        "UND_MyconidCircle_DeepRothe_BaelenAteShroom_Hasmet",
        "GOB_BattleStations_Event_ToStation",
        "1fbc1449-b85a-90a5-3f67-a8898acbd1d0_B",
        "DEN_AttackOnDen_HasMet_Trainer",
        "GOB_GoblinHeretic_FreeToGo",
        "GOB_GoblinThroneCheckpoint_State_NonCharlatanAccess",
        "1c74b01f-5dcf-8107-b384-204d341ed9d5_OnlyOnce",
        "DEN_Thieflings_State_MessedWithMolsKids",
        "PLA_Refugee_001_HasMet",
        "UND_MyconidCircle_State_GainedAccess",
        "HAV_EnteringHaven_State_GainedAccess",
        "DEN_DruidAttack_HasMet_ParentAAfterAttack",
        "GOB_Checkpoint_State_GoblinsToldLeaders",
        "UND_DuergarCamp_Mutineers_HasMet",
        "LearnedDukeMissingCounsellor",
        "SCL_Drider_State_DeadCultistSituationDefused",
        "MOO_MintharaFate_Event_LeavesForCamp",
        "SCE_JergalDebrief_Event_WhyHere",
        "94cd662c-844b-4dcc-ffdc-0b9a8da32bcc_BarcusSpokeUp",
        "DEN_AttackOnDen_HasMet_LairDoor",
        "RikkaAskedQuest",
        "MOO_Bazaar_State_PilgrimsToTown",
        "DEN_General_Event_TriedNudgingBear",
        "DEN_HasMet_SoloParentB",
        "DEN_RitualDruid_HasMet_Left2",
        "GOB_Torturers_HasMet_Goblet",
        "FOR_BugbearLove_State_InterruptedCouple",
        "DEN_AttackOnDen_Servant005_Answered",
        "UND_BroodingSovereign_State_RefusedCircle",
        "DEN_Thieflings_HasMet_Trainee1",
        "UND_DeadInTheWater_CorpseDisposerLeader_HasMet",
        "MOO_Assault_AssaultHarper_003_ThroneRoomDefeated_HasMet",
        "DEN_Tiefling011_State_Met",
        "DEN_Thieflings_PersuadedPickpocket",
        "GOB_GoblinToast_Event_NoMoreRefills",
        "ORI_Inclusion_Random",
        "MOO_Bazaar_HasMet_Guard00",
        "PLA_KarlachRecruitment_State_PersuasionSucceeded",
        "DEN_Thieflings_State_WitnessedArgument",
        "200aa519-5963-3b2d-3396-d1dcbb013702_AskedStrategy",
        "COL_TadpolingCentre_HasMet_Yeva",
        "3b911555-52e5-7791-d2ac-44fe62465fa1_Loop3",
        "MOO_Assault_AssaultFlamingFist_001_ThroneRoomDefeated_HasMet",
        "GOB_RaiderCunning_HasMet",
        "GOB_Eye_HasMet",
        "DEN_AttackOnDen_HasMet_Refugee003",
        "DEN_Weaponsmith_HasMet",
        "34910f06-fac0-085f-b41a-337d0dfad85a_A",
        "ORI_Inclusion_Laezel",
        "GOB_GoblinToast_SecondGoblinToasted",
        "9e2ef14b-1a2f-4edc-3f78-7e3a27967e5c_C",
        "DEN_AttackOnDen_HasMet_ScoutCaptive",
        "PLA_KarlachRecruitmentTollhouse_State_HostilitiesBegan",
        "UND_PetrifiedDrow_Knows_MemoryCrystal",
        "6d32676a-ac06-3f94-8377-35a6aed97492_B",
        "UND_FairyRings_Dead_AskedDrowIdentity",
        "ZevlorRewarded",
        "SCL_Drider_HasMet_CaravanGoblinRanger",
        "8f819d41-e936-8042-1935-56de252d6c7f_B",
        "GOB_PainPriest_Penanced",
        "b618166c-99f4-1c7a-02b7-32f0f0fbe420_LocalA",
        "SCE_TieflingFollowUp_Event_GiveShiningDawn",
        "DEN_AttackOnDen_HasMet_Servant004Victory",
        "DEN_AttackOnDen_HasMet_Mule1",
        "DEN_TieflingScam_HasMet",
        "DEN_AttackOnDen_HasMet_Kid003",
        "UND_FearfulRothe_Event_ConvincedRotheToAttackDuergar",
        "MOO_BugBearVendor_State_FoundMotive",
        "PLA_FlamingFist7_InnBurntDown_HasMet",
        "DEN_AttackOnDen_HasMet_Tiefling003Victory",
        "0d9d0064-babd-6e83-6ea6-5b78afb0413c_B",
        "SCL_Drider_Event_AvoidedCombat",
        "DEN_GoblinScouts_HasMet_Captive",
        "GLO_Absolute_Knows_Symbol",
        "PLA_ConflictedFlind_Event_MindControl_KillHerself",
        "GLO_SpeakWithDead_Event_QuestionAsked",
        "HAG_Hah_MaskedVictim2_HasMet",
        "DEN_DruidAttack_HasMet_ZenBear",
        "SCL_Drider_State_AfterAmbushSituationDefused",
        "GOB_PainPriest_Event_BadReaction",
        "SCL_ServantOfTheRAven_Servant_HasMet",
        "UND_BrokenLantern_State_TriedArcane",
        "461152ff-16c3-2617-f8af-7ddb5681820b_b",
        "ed70fdfc-3d7b-7753-1171-957f7316fe55_B",
        "MOO_EntranceCheckpoint_Guard2_HasMet_AllowedIn",
        "MOO_Bazaar_Bystander04_PostKetheric_HasMet",
        "SidedTieflings",
        "DEN_GroveConflict_Knows_KaghaRequestedPlayers",
        "PLA_StuckHalfElf_State_PlayerAngered",
        "SCL_Drider_Event_StartHarpersAmbush",
        "UND_BroodingSovereign_State_AskedCircle",
        "DEN_AttackOnDen_HasMet_Trainee001Victory",
        "UND_MyconidCircle_State_FirstGreetingDone",
        "6bde1237-aa43-36d3-9e53-ec1092198541_C",
        "UND_DarkLake_State_HostileResolution",
        "c3d825d1-49b8-9ae2-4554-4fc1f55d2eee_LocalA",
        "COL_TadpolingCentre_Event_PurgePods",
        "DEN_ZhentAgent_02_Inclusion_Start",
        "DEN_AttackOnDen_HasMet_ProdigySister",
        "HAV_HarperScouts_Event_SawYonasFuneral",
        "ORI_Shadowheart_Event_DarkJusticiarHint",
        "HAV_General_HarperScout_000_HasMet",
        "873bc4e0-3d3c-1eac-903b-e94920fd6306_sawgithyanki",
        "DEN_CampGeneral_RufusHasMet",
        "DEN_Apprentice_HasMet",
        "DEN_General_Mule2_HasMet",
        "0d4d7cd3-5055-29a4-6bbd-e15fdf434e7a_A",
        "DEN_AttackOnDen_HasMet_ApprenticeVictory",
        "MOO_Bazaar_State_TalkedAboutPilgrims",
        "GLO_PixieBell_Event_TransformsIntoDeepRothe",
        "98423a2d-7b47-e379-6526-c435773e3cff_B",
        "14e6adcb-c6a8-99e4-1c39-4d3b925590e2_B",
        "3a47baed-8459-4629-40aa-893d83a8d0b2_C",
        "DEN_Thieflings_Event_PlayerNotInvolved",
        "HAG_HagLair_Knows_DoorWasAlive",
        "ThankedFreed_Beldron",
        "e6aef01a-0468-5046-e519-b9b624c704dc_B",
        "DEN_AttackOnDen_HasMet_Griefling",
        "4d9f1cb5-200f-c998-657a-8d04f5c93c74_B",
        "DEN_AttackOnDen_HasMet_RitualDruid005",
        "COL_Morgue_HasMet_Us",
        "4b4d2992-abb5-bd1b-9593-feb68eddf682_B",
        "GLO_Ketheric_State_AngryAtPlayer",
        "ORI_Karlach_Knows_DammonWorkedInHell",
        "ORI_Inclusion_End_Random",
        "DEN_Squirrel_HasMet",
        "ORI_INCLUSION_HALSIN",
        "SCL_OliversDiary_State_SecondRound",
        "DEN_ShadowDruid_State_HadSelfReflection",
        "DEN_Thieflings_Pickpocket1_HasMet",
        "PLA_FlamingFist7_Knows_AskedWhatHappened",
        "DEN_DruidAttack_HasMet_BardAfterAttack",
        "GOB_PainPriest_State_NeedMoreHP",
        "FOR_BugBearLove_Event_OpenDoor",
        "e680129a-9d39-6ffc-3e6d-926daf0d76ff_A",
        "DEN_Thieflings_State_PCSawKidThievesGettingCaught",
        "260f61d5-60df-da35-608b-a9856291b143_PlayerKnowsOrinKilledZevlor",
        "916a75f0-23d8-f05b-449d-d926d69fe782_FailedCheck",
        "MOO_Jailbreak_HasMet_AngrySister",
        "SCE_GnomeFollowUp_Wulbren_HasMet",
        "DEN_druidservant_005_HasMet",
        "CHA_Jergal_HasMet",
        "ORI_Inclusion_End_Gale",
        "PLA_ConflictedFlind_Hyena_001_HasMet",
        "StartedAlt",
        "DEN_RaidingParty_Adventurer2_HasMet",
        "GLO_Thieflings_State_PickpocketKidGotHit",
        "GOB_WolfPens_Event_HalsinLeavesGoblinCamp",
        "e6738c9d-060d-c901-b945-4d49ca303d5b_SuccessfullyReadTracks",
        "DEN_GruntingKid_HasMet",
        "SCE_TieflingFollowUp_Umi_HasMet",
        "16193247-ccea-1974-45ec-e8229a7de4ef_B",
        "DEN_TieflingLeader_Quest_GobHuntDeclined",
        "DEN_RaidingParty_Event_GoblinsAppear",
        "DEN_GuardedEntrance_HasMet_Guard1",
        "GOB_PainPriest_Event_FirstHitDone",
        "ORI_Inclusion_End_Laezel",
        "88c2a54f-df16-19d8-1f97-2c67947bdf74_B",
        "DEN_General_Event_ElevatorBearMoves",
        "DEN_CapturedGoblin_OfferedRevenge",
        "SCL_Drider_HasMet_CaravanGoblinMelee_000",
        "DEN_General_Inclusion_Pickpocket",
        "DEN_RitualDruid_HasMet_Left4",
        "GOB_DrowCommander_HasMet",
        "SCL_HarperScouts_State_PlayerTriedToLeave",
        "GLO_Jergal_State_OutOfTomb",
        "DEN_TieflingLeader_State_KaghaResolved",
        "f3afb428-73fc-2e5c-057b-2e0e5a1b2f1c_B",
        "DEN_AttackOnDen_HasMet_Stargazer",
        "DEN_Thieflings_Event_ShookThief",
        "DEN_AttackOnDen_HasMet_Refugee001",
        "b70d5139-9980-efc6-3ba3-fe2eb56ab2e0_B",
        "HAV_LoneLover_HasMet_DanisUpset",
        "DEN_DruidAttack_HasMet_PetWolf",
        "26071d89-33af-8eac-3c05-ee8dca91338d_who",
        "DEN_Apprentice_UserShortcut",
        "ReflectedKagha",
        "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionAsked",
        "FOR_GoblinAmbush_GoblinsPacified",
        "MOO_Bazaar_BazaarStander_007_AudienceReady_HasMet",
        "MOO_BugBearVendor_HasMet_BazBugBear",
        "932401b1-7763-7fd7-bee1-8731fe62084f_DeadThree",
        "DEN_DruidAttack_HasMet_GrieflingAfterAttack",
        "DEN_GuardedEntrance_State_ClearToPass",
        "GOB_Checkpoint_State_GuidedByCapturedGoblin",
        "DEN_RaidingParty_Event_GoblinRaidFight",
        "ORI_Inclusion_Wyll",
        "RefusedCircle",
        "DEN_TieflingScam_Knows_Scam",
        "964ddec3-a3fd-b0b5-f98a-4b32e118b6ed_B",
        "3174fc37-851b-0494-321e-b606f7e43901_B",
        "DEN_BirdSender_Knows_AskedAboutBird",
        "DEN_DevilishOx_MeetAtDruidsGrove_Incapable",
        "DEN_Thieflings_CaveGuard_002_HasMet",
        "GOB_PainPriest_Knows_PenanceIsPain",
        "6bba3537-3756-eb27-a08a-a8596d765f2e_C",
        "MOO_Bazaar_BazaarStander_005_AudienceReay_HasMet",
        "CHA_LaezelRecruitment_Event_LaezelHostile",
        "DEN_GoblinScouts_SavedDruid",
        "ArrivedAtGrove",
        "DEN_GruntingKid_Event_AskedCanTalk",
        "DEN_Apprentice_Event_GiveReward",
        "acc081f3-204a-2f29-a3bb-6d33ff784c39_C",
        "DEN_AttackOnDen_GrieflingFriend_Knows_Kelemvor",
        "GOB_PainPriest_Event_Mercy",
        "c68c5474-226f-4b47-b327-a22274e360a0_B",
        "a2fa1f0f-b9b5-f8bf-bf27-b11194b8502f_B",
        "ORI_DarkUrge_Knows_ButlerDiedReaction",
        "SCL_LiftingTheCurse_Event_SpottedFlowers",
        "55452e03-17c6-9a9d-072b-80043381c98b_A",
        "UND_LoneDuergar_Event_WaitingForMainDialog",
        "OrderedBreachInn",
        "COL_Morgue_User_HasMet_Us",
        "DEN_RitualDruid_HasMet_Pacified3",
        "DEN_ShadowDruidRats_Event_RememberedLetter",
        "DEN_DruidAttack_State_PrepAfterDeathOfDruids",
        "PLA_Desire_Event_HasMet",
        "4103e544-e1db-525f-81ec-b5dfa71907d7_WantNereOut",
        "PLA_StuckHalfElf_Event_ToldQuestion",
        "UND_BroodingSovereign_Event_Enlarged",
        "f108995b-14f4-7823-d218-790177a93da8_B",
        "6a98f294-9f4f-d0b0-1cba-706f1cb15009_Local1",
        "GOB_WolfPens_Worg_001_HasMet",
        "MOO_Jailbreak_Event_BoatLeavesWithoutPlayers",
        "DEN_DruidAttack_HasMet_WeaponsmithAfterAttack",
        "SCL_Drider_State_StartedAmbushQuestWithHarpers",
        "GLO_Volo_HasMet",
        "OpenedSarcophagus",
        "Counsellor_RefusedHelp",
        "02455563-e119-58e5-1fe7-eb46fe381d30_A",
        "GOB_GuardUpset_HasMet",
        "GOB_RatRacket_LocalRat_001_HasMet",
        "c5f62c4b-fb04-1505-c35b-63119d96b127_First_Disabled",
        "698f5a3b-6d88-3d9e-ee4f-26d9c1fc5b6b_B",
        "UND_TheDrowNere_State_KilledGnomeSerene",
        "COL_General_Knows_ColonyIsIllithid",
        "GLO_VoloBallad_MetGuardPrison",
        "PLA_ZhentDungeon_Zhent01_HasMet",
        "7cd519b5-df41-47c0-1d53-6c315224e489_A",
        "ORI_Karlach_HasMet_DammonUnavailable",
        "GOB_CheckpointBackup003_HasMet",
        "DEN_TieflingScam_Event_FoundOutLies",
        "UND_ArguingGnomes_Quest_Accepted",
        "DEN_Thieflings_HasMet_Chef"
      ]
    },
    "Shar": {
      "chapter_id": "Act2_Shar",
      "scenario_sequence": [
        "sha_orthon",
        "twn_shadowheart",
        "sha_gauntlet",
        "sha_objectofdarknesstrial",
        "sha_corpsepit",
        "sha_trials",
        "sha_fleshgolem",
        "sha_orthonlair",
        "sha_ngb",
        "sha_mausoleum",
        "sha_doublesencountertrial",
        "sha_crypt",
        "sha_nightsong",
        "sha_pad",
        "sha_monitor",
        "sha_ad",
        "twn_templeentrance",
        "sha_sharwrath",
        "sha_raphael",
        "sha_hq",
        "sha_merregon",
        "sha_cloaker",
        "sha_silentlibrary",
        "sha_entrance",
        "sha_displacer",
        "sha_necromancer",
        "sha_barracks",
        "sha_monkamulet",
        "sha_spidermeathunk",
        "sha_pathofdarknesstrial",
        "sha_lastjusticiar",
        "sha_familiarface",
        "sha_academyaltar",
        "sha_disc",
        "sha_voiceofshar",
        "sha_nightsongprison",
        "sha_trapjunction",
        "sha_orthonbed",
        "sha_tadpoledskeletons",
        "sha_orthonslair"
      ],
      "scenario_results": {
        "sha_orthon": {
          "scenario_name": "sha_orthon",
          "session_sequence": [
            "AD",
            "AD_FormLines",
            "AD_TransitionsToSecondPhase",
            "AD_DisplacerGrowl",
            ""
          ],
          "paths": {
            "AD": [
              "AD_0"
            ],
            "AD_FormLines": [
              "AD_FormLines_0"
            ],
            "AD_TransitionsToSecondPhase": [
              "AD_TransitionsToSecondPhase_0"
            ],
            "AD_DisplacerGrowl": [
              "AD_DisplacerGrowl_0"
            ],
            "": [
              "7",
              "122",
              "52",
              "84",
              "23",
              "11",
              "126",
              "50",
              "117",
              "81",
              "4",
              "29",
              "116",
              "62",
              "44",
              "127",
              "105"
            ]
          },
          "node_data": {
            "AD": [
              {
                "id": "AD_0",
                "speaker": "Yurgir",
                "text": "Silence all prayers; smother each rite... blasted song!",
                "node_type": "normal",
                "checkflags": [
                  "3c55f670-825a-6a8d-9e7e-8a5b7aa2f852_A"
                ],
                "setflags": [
                  "3c55f670-825a-6a8d-9e7e-8a5b7aa2f852_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Singing to himself, with an exasperated outburst at the end"
              }
            ],
            "AD_FormLines": [
              {
                "id": "AD_FormLines_0",
                "speaker": "Yurgir",
                "text": "Form up ranks! Don't let anything get past you!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: During combat. Bellowing orders to his merregon soldiers to change formation"
              }
            ],
            "AD_TransitionsToSecondPhase": [
              {
                "id": "AD_TransitionsToSecondPhase_0",
                "speaker": "Yurgir",
                "text": "Bravo - that almost stung. Perhaps I'll make a merregon of you, once you're dead.",
                "node_type": "normal",
                "checkflags": [
                  "SHA_OrthonLair_Event_ReachedHPThreshold"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Pronuncation: mer-eh-gone. Taunting, during combat. The player has injured the Orthon, who responds by changing up his tactics after this utterance."
              }
            ],
            "AD_DisplacerGrowl": [
              {
                "id": "AD_DisplacerGrowl_0",
                "speaker": "Displacer Beast",
                "text": "*Growl.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: SFX only. Displacer growl.\rNodeContext: SFX only. Displacer growl."
              }
            ],
            "": [
              {
                "id": "7",
                "speaker": "Yurgir",
                "text": "The song remains. Seems you haven't dealt with this imaginary Justiciar of yours.",
                "node_type": "normal",
                "checkflags": [
                  "SHA_Orthon_State_InformedOrthonOfJusticiar"
                ],
                "setflags": [
                  "SHA_Orthon_HasMet"
                ],
                "goto": "",
                "link": "119",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Impatient growl"
              },
              {
                "id": "122",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_Karlach"
                ],
                "goto": "",
                "link": "119",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "52",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "84",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "84",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_End_Karlach"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "23",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "11",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "11",
                "speaker": "Player",
                "text": "I know what you're feeding that displacer charm potions. Curious way of ensuring the beast's loyalty.",
                "node_type": "normal",
                "checkflags": [
                  "SHA_Orthon_Even_QueriedCharmedDisplacer = False",
                  "SHA_Displacer_Knows_CharmedFromMeat"
                ],
                "setflags": [
                  "SHA_Orthon_Even_QueriedCharmedDisplacer"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "126",
                "speaker": "Yurgir",
                "text": "Curious? No - effective. A hunter needs to ensure his tools are dependable.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "50",
                "speaker": "Yurgir",
                "text": "Ensuring Nessa's loyalty is as important as having sharpened blades and an oiled crossbow.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "117",
                "speaker": "Player",
                "text": "You're manipulating that creature.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "81",
                "speaker": "Yurgir",
                "text": "Yes. Your point?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Deadpan."
              },
              {
                "id": "4",
                "speaker": "Player",
                "text": "It's wrong - even a beast like that shouldn't be treated in such a way.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Shadowheart 1",
                  "Halsin 1"
                ],
                "context": ""
              },
              {
                "id": "29",
                "speaker": "Yurgir",
                "text": "Treated like what? Pampered? Fed? Given a master to adore?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "116",
                "speaker": "Yurgir",
                "text": "Spare me your bleeding heart. Unless you'd like me to pluck it out and show it to you.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "62",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "44",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "44",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_End_Karlach"
                ],
                "goto": "",
                "link": "66",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "127",
                "speaker": "Player",
                "text": "Not at all. I think I'll make short work of this - show you how it's done.",
                "node_type": "normal",
                "checkflags": [
                  "SHA_Orthon_Event_OrthonQuestionsSearch = False",
                  "SHA_Orthon_State_ContractEnded = False"
                ],
                "setflags": [
                  "SHA_Orthon_Event_OrthonQuestionsSearch"
                ],
                "goto": "",
                "link": "51",
                "is_end": false,
                "approval": [],
                "context": "InternalNodeContext: Local flag unsets when the player acknowledges the Orthon's query in N200"
              },
              {
                "id": "105",
                "speaker": "Yurgir",
                "text": "Remember you said that, when you fail. You won't smile so easily when I peel the face off your skull.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Vicious. Chaffing at the player's bravado."
              }
            ]
          },
          "session_synopses": {
            "AD": "The Orthon mumble-sings to himself while idle in his lair in the Shar Temple. Occasionally he interrupts the lyrics with frustrated outbursts.This occurs after the ambush scene, where we learn that the song is his contract, and will remain stuck in his head until he fulfills the terms.",
            "AD_FormLines": "Orthon tells the merregons to get close to him during combat.",
            "AD_TransitionsToSecondPhase": "During combat, the orthon escalates to phase two (intensifying his attacks and changing up his tactics). This is prompted by:- killing a certain number of minions- lowering his HP a certain amount- surviving for a certain number of combat rounds",
            "AD_DisplacerGrowl": "The Displacer beast growls at the player if the player gets too close to it while it is in its idle behaviour if the Orthon is not hostile to the player.",
            "": "This occurs if the player has successfully convinced the orthon to let them stay in his lair. They did so by telling him they'd search the temple for a way of freeing him from his contract.If the player resolves the Last Justiciar contract, they can inform Yurgir. If they killed the justiciar, Raphael will appear and negotiate with Yurgir. If the player spared the justiciar, they can confront and fight Yurgir."
          }
        },
        "twn_shadowheart": {
          "scenario_name": "twn_shadowheart",
          "session_sequence": [
            "PAD_StatueSight"
          ],
          "paths": {
            "PAD_StatueSight": [
              "PAD_StatueSight_0"
            ]
          },
          "node_data": {
            "PAD_StatueSight": [
              {
                "id": "PAD_StatueSight_0",
                "speaker": "Shadowheart",
                "text": "Ketheric Thorm, shown in Selûnite armour. Is there any god that turncoat hasn't bowed to?",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SCL_Ketheric_State_PlayerKnowsKethericHistory"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Derisive."
              }
            ]
          },
          "session_synopses": {
            "PAD_StatueSight": "Shadowheart spots Ketheric's statue."
          }
        },
        "sha_gauntlet": {
          "scenario_name": "sha_gauntlet",
          "session_sequence": [
            "PAD_Shadowheart"
          ],
          "paths": {
            "PAD_Shadowheart": [
              "PAD_Shadowheart_0"
            ]
          },
          "node_data": {
            "PAD_Shadowheart": [
              {
                "id": "PAD_Shadowheart_0",
                "speaker": "Shadowheart",
                "text": "Through there... there's something about it. Need to look.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_Shadowheart": "Shadowheart has sudden, mysterious hunch and is compelled to investigate a side area in the Temple of Shar. (this is an unconscious prompt from somewhere in her memory - entering the side area will trigger a flashback scene from her past)."
          }
        },
        "sha_objectofdarknesstrial": {
          "scenario_name": "sha_objectofdarknesstrial",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "14"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "14",
                "speaker": "Narrator",
                "text": "*Another bowl, bearing the stains of an ancient blood offering.*",
                "node_type": "normal",
                "checkflags": [
                  "SHA_Trials_State_StatueUsed"
                ],
                "setflags": [],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: The player looks at a large bowl being held by a Shar statue. Close-up of a dried blood stain in the base of the bowl."
              }
            ]
          },
          "session_synopses": {
            "": "For when a player interacts with the statue to begin the stealth trial in the Shar temple."
          }
        },
        "sha_corpsepit": {
          "scenario_name": "sha_corpsepit",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sha_trials": {
          "scenario_name": "sha_trials",
          "session_sequence": [
            "PAD_DarkJusticiar",
            "PAD_ObjectOfDarknessPlaque",
            "PAD_PathOfDarknessHint",
            "PAD_PathOfDarknessSecondWarning",
            "PAD_ShadowheartIntro",
            "PAD_TeleportedByShadow",
            "PAD_SpotGem"
          ],
          "paths": {
            "PAD_DarkJusticiar": [
              "PAD_DarkJusticiar_0",
              "PAD_DarkJusticiar_1"
            ],
            "PAD_ObjectOfDarknessPlaque": [
              "PAD_ObjectOfDarknessPlaque_0"
            ],
            "PAD_PathOfDarknessHint": [
              "PAD_PathOfDarknessHint_0"
            ],
            "PAD_PathOfDarknessSecondWarning": [
              "PAD_PathOfDarknessSecondWarning_0"
            ],
            "PAD_ShadowheartIntro": [
              "PAD_ShadowheartIntro_0"
            ],
            "PAD_TeleportedByShadow": [
              "PAD_TeleportedByShadow_0"
            ],
            "PAD_SpotGem": [
              "PAD_SpotGem_0"
            ]
          },
          "node_data": {
            "PAD_DarkJusticiar": [
              {
                "id": "PAD_DarkJusticiar_0",
                "speaker": "Shadowheart",
                "text": "Countless initiates walked these halls once, seeking to become Dark Justiciars.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PAD_DarkJusticiar_1",
                "speaker": "Shadowheart",
                "text": "I will follow in their path. I will succeed.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_ObjectOfDarknessPlaque": [
              {
                "id": "PAD_ObjectOfDarknessPlaque_0",
                "speaker": "Narrator",
                "text": "*Her Most Vaunted Treasure*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_PathOfDarknessHint": [
              {
                "id": "PAD_PathOfDarknessHint_0",
                "speaker": "Player",
                "text": "This must be what that book meant. I need to get across - and that means remembering where these platforms are.",
                "node_type": "normal",
                "checkflags": [
                  "SHA_Trials_Knows_PathOfDarknessHint"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_PathOfDarknessSecondWarning": [
              {
                "id": "PAD_PathOfDarknessSecondWarning_0",
                "speaker": "",
                "text": "Disappointing. Succeed or fail, the next attempt shall be the last.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Disappointed"
              }
            ],
            "PAD_ShadowheartIntro": [
              {
                "id": "PAD_ShadowheartIntro_0",
                "speaker": "Shadowheart",
                "text": "I shall prove myself worthy, Lady Shar.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Determination & reverence."
              }
            ],
            "PAD_TeleportedByShadow": [
              {
                "id": "PAD_TeleportedByShadow_0",
                "speaker": "Player",
                "text": "Damn. That shade knocked me right back to the start.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_SpotGem": [
              {
                "id": "PAD_SpotGem_0",
                "speaker": "Player",
                "text": "A gem. Looks like it might fit in the altar from before.<br>",
                "node_type": "normal",
                "checkflags": [
                  "SHA_Disc_Altar_Knows_GemsRequired"
                ],
                "setflags": [
                  "SHA_Trials_PAD_SpotGem_Event_FirstGemSeen"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Karlach note: open to interpretation (to mean 'hey, I spotted it!)  but inspired by jimmy durante"
              }
            ]
          },
          "session_synopses": {
            "PAD_DarkJusticiar": "Shadowheart is walking along the corridors of the trials and is clearly excited about the prospect of finally proving herself worthy.",
            "PAD_ObjectOfDarknessPlaque": "The player discovers the name of the Shar trial.",
            "PAD_PathOfDarknessHint": "The player comments after possibly figuring out a clue to successfully completing one of the trials in the Temple of Shar. They must safely cross the room while remembering where the platforms along the way are.",
            "PAD_PathOfDarknessSecondWarning": "Shar warns player that they only have one attempt left.",
            "PAD_ShadowheartIntro": "Shadowheart answers the Shar statue with affirmation.",
            "PAD_TeleportedByShadow": "A player was seen by a ghost while attempting the sneaking trial in the Shar Temple and teleported back to the beginning of the trial.",
            "PAD_SpotGem": "The player notices one of the Trial Gems and points it out. If the player knows that the altar requires the gems, they will reiterate the gem's use. Reactivity for finding additional gems subsequently."
          }
        },
        "sha_fleshgolem": {
          "scenario_name": "sha_fleshgolem",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sha_orthonlair": {
          "scenario_name": "sha_orthonlair",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sha_ngb": {
          "scenario_name": "sha_ngb",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sha_mausoleum": {
          "scenario_name": "sha_mausoleum",
          "session_sequence": [
            "PAD_MyrkulSymbol",
            "PAD_MakeshiftVessel",
            "PAD_Mural_002",
            "PAD_KethericsMap",
            "PAD_FoundIsobelsPlaque",
            "PAD_SkullBalthazaarIntro",
            "AD_IsobelsPlaque",
            "CINE_DescendingIntoTemple",
            "PAD_FoundDisc",
            "PAD_Mural_000",
            "PAD_NecromancersRoom"
          ],
          "paths": {
            "PAD_MyrkulSymbol": [
              "PAD_MyrkulSymbol_0"
            ],
            "PAD_MakeshiftVessel": [
              "PAD_MakeshiftVessel_0"
            ],
            "PAD_Mural_002": [
              "PAD_Mural_002_0"
            ],
            "PAD_KethericsMap": [
              "PAD_KethericsMap_0"
            ],
            "PAD_FoundIsobelsPlaque": [
              "PAD_FoundIsobelsPlaque_2",
              "PAD_FoundIsobelsPlaque_1"
            ],
            "PAD_SkullBalthazaarIntro": [
              "PAD_SkullBalthazaarIntro_0",
              "PAD_SkullBalthazaarIntro_2",
              "PAD_SkullBalthazaarIntro_1"
            ],
            "AD_IsobelsPlaque": [
              "AD_IsobelsPlaque_1",
              "AD_IsobelsPlaque_0"
            ],
            "CINE_DescendingIntoTemple": [
              "CINE_DescendingIntoTemple_0"
            ],
            "PAD_FoundDisc": [
              "PAD_FoundDisc_0"
            ],
            "PAD_Mural_000": [
              "PAD_Mural_000_0"
            ],
            "PAD_NecromancersRoom": [
              "PAD_NecromancersRoom_0"
            ]
          },
          "node_data": {
            "PAD_MyrkulSymbol": [
              {
                "id": "PAD_MyrkulSymbol_0",
                "speaker": "Player",
                "text": "What is that symbol supposed to mean?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_MakeshiftVessel": [
              {
                "id": "PAD_MakeshiftVessel_0",
                "speaker": "Player",
                "text": "What is that? Almost looks like someone was trying to grow a person.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_Mural_002": [
              {
                "id": "PAD_Mural_002_0",
                "speaker": "Player",
                "text": "Ketheric Thorm, leading Shar's forces. Quite the about-face for a warrior of Selûne.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_Ketheric_Knows_HasSeen"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: [Astarion - not impressed]"
              }
            ],
            "PAD_KethericsMap": [
              {
                "id": "PAD_KethericsMap_0",
                "speaker": "Player",
                "text": "Looks like there's a temple under this place - and something deadly sealed inside it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_FoundIsobelsPlaque": [
              {
                "id": "PAD_FoundIsobelsPlaque_2",
                "speaker": "Player",
                "text": "Isobel. That's the name of the cleric at Last Light Inn, right?",
                "node_type": "normal",
                "checkflags": [
                  "HAV_TakingIsobel_HasMet_Isobel"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PAD_FoundIsobelsPlaque_1",
                "speaker": "Player",
                "text": "Can she possibly be Ketheric's daughter?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_SkullBalthazaarIntro": [
              {
                "id": "PAD_SkullBalthazaarIntro_0",
                "speaker": "Player",
                "text": "Balthazar, a necromancer lap dog of Ketheric Thorm's.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PAD_SkullBalthazaarIntro_2",
                "speaker": "Player",
                "text": "Who knows what he may have up his rotten sleeve.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PAD_SkullBalthazaarIntro_1",
                "speaker": "Player",
                "text": "We need to stay alert.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_IsobelsPlaque": [
              {
                "id": "AD_IsobelsPlaque_1",
                "speaker": "Narrator",
                "text": "*Ssussun elgg oloth.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Player looks at a plaque on the side of Isobel's tomb.\rNodeContext: Ssussun elgg oloth (SUSS-sun ELL-gh OL-oth) - Elvish for \"Light slays darkness.\""
              },
              {
                "id": "AD_IsobelsPlaque_0",
                "speaker": "Narrator",
                "text": "*Here lies Isobel Thorm*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "CINE_DescendingIntoTemple": [
              {
                "id": "CINE_DescendingIntoTemple_0",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "CinematicNodeContext: After interacting with the teleportation stone the player reacts as the large elevator disc sets into motion and starts a long desent into darkness.\n\nNOTE: on subsequent uses of the elevator, a fade to black will be done via script.\rInternalNodeContext: Occurs the first time the player uses the elevator/disc linking the Thorm mausoleum in SCL to the Shar Temple.\nNOTE: on subsequent uses of the elevator, a fade to black will be done via script."
              }
            ],
            "PAD_FoundDisc": [
              {
                "id": "PAD_FoundDisc_0",
                "speaker": "Player",
                "text": "That disc looks like it can move - but where does it lead?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: SH - surprise/awe."
              }
            ],
            "PAD_Mural_000": [
              {
                "id": "PAD_Mural_000_0",
                "speaker": "Narrator",
                "text": "*Moonrise Towers. It makes the Urge hiss within. It was part of your disgrace, but how?*<br>",
                "node_type": "normal",
                "checkflags": [
                  "GLO_MoonriseTower_EverEnteredBefore",
                  "REALLY_DARK_URGE"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_NecromancersRoom": [
              {
                "id": "PAD_NecromancersRoom_0",
                "speaker": "Player",
                "text": "Bones everywhere... Someone's been engaging in dark rituals here.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Astarion; as in 'water water everywhere, but not a drop to drink' (referring to a large amount of skeletons on display in a tomb"
              }
            ]
          },
          "session_synopses": {
            "PAD_MyrkulSymbol": "Players enter the room where the symbol of Myrkul lies on the floor. Hard religion DC before the PAD plays.",
            "PAD_MakeshiftVessel": "Players find a vessel with a half-formed humanoid shape gestating inside and reacts accordingly. The being is just inert flesh and cannot speak.",
            "PAD_Mural_002": "Player interacts with the third mural of the Mausoleum puzzle and get the final piece of the story. This mural depicts Ketheric Thorm, along with a Sharran army, standing before the corrupted version of Moonrise Towers. Player response varies, depending on if they've seen Ketheric or not. (note: do NOT refer to Moonrise towers by name in these responses, as awareness is not guaranteed)",
            "PAD_KethericsMap": "Players find the map Ketheric had inside the mausoleum. It shows  the entrance to the Shar Temple (behind Isobel's tomb) and has notes on an attack.",
            "PAD_FoundIsobelsPlaque": "PAD for characters reacting to finding Isobels plaque in the Ketheric Mausoleum. Has 3 reaction states:- Already know Ketheric is Isobel's Father- Don't know aboutfamily relationship but have met Isobel- Don't know about family relationship and haven't met Isobel",
            "PAD_SkullBalthazaarIntro": "Party reacts to a magic-mouth skull that projects Balthazar's voice, warning them to leave.",
            "AD_IsobelsPlaque": "Narrator/player to reading the plaque on Isobel's tomb . If they already know Isobel is Ketheric's daughter, the narrator reaction is different. The Elvish translates to 'Light slays darkness'.Note: the unusual structure of this is because the Origin PAD template is a greeting node and can't be connected to normally.",
            "CINE_DescendingIntoTemple": "Cinematic of players descending into the temple after jumping for the first time on the disc towards the temple.",
            "PAD_FoundDisc": "Players find the disc at the mausoleum that leads to the Shar temple.",
            "PAD_Mural_000": "Player interacts with the first mural of the Mausoleum puzzle and get the first piece of the story. This mural depicts Moonrise Towers in its heyday, before it turned to darkness. The player's comment varies, depending on whether they've been to MRT or not.",
            "PAD_NecromancersRoom": "Players enter for the first time inside the necromancer's room at the mausoleum. Bones are scattered about and arranged into strange totems, in a sign someone has been dabbling in dark magic."
          }
        },
        "sha_doublesencountertrial": {
          "scenario_name": "sha_doublesencountertrial",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "26",
              "4",
              "15",
              "1",
              "13",
              "16",
              "5"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "26",
                "speaker": "Narrator",
                "text": "*The bowl contains an ancient, rust-coloured bloodstain. It forms a neat disc, as if spilled calmly and willingly.*",
                "node_type": "normal",
                "checkflags": [
                  "SHA_Trials_State_StatueUsed = False"
                ],
                "setflags": [
                  "SHA_Trials_State_StatueUsed",
                  "SHA_Trials_State_FirstStatueUsed"
                ],
                "goto": "",
                "link": "4",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: The player looks at a large bowl being held by a Shar statue. Close-up of a dried blood stain in the base of the bowl."
              },
              {
                "id": "4",
                "speaker": "Narrator",
                "text": "*You recognise this as a trial, where initiates would prove themselves to Lady Shar. This one would challenge their combat prowess.*",
                "node_type": "normal",
                "checkflags": [
                  "REALLY_SHADOWHEART"
                ],
                "setflags": [
                  "SHA_Trials_Knows_LearnedAboutTrials"
                ],
                "goto": "",
                "link": "0",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Shadowheart-only narration. Visuals should favour her here.\rInternalNodeContext: SH-only narration"
              },
              {
                "id": "15",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [
                  "SHA_Trials_State_TrialInProgress = False",
                  "SHA_Trials_Event_TrialPassed = False"
                ],
                "setflags": [
                  "ORI_Inclusion_ShadowHeart"
                ],
                "goto": "",
                "link": "0",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "1",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "13",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "13",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "16",
                "speaker": "Player",
                "text": "Look upon the statue.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "5",
                "speaker": "",
                "text": "Vanquish your old life to receive my wisdom.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Player looks at the Shar statue before them and hear's Shar's disembodied voice\rNodeContext: Haunting, disembodied voice offering guidance"
              }
            ]
          },
          "session_synopses": {
            "": "For when a player interacts with the statue to begin the double combat trial in the Shar temple."
          }
        },
        "sha_crypt": {
          "scenario_name": "sha_crypt",
          "session_sequence": [
            "PAD_PuzzlePlaque",
            "PAD_StatueReaction",
            "AD_MagicSkull",
            "PAD_Welcomed",
            "PAD_MagicLockedDoor",
            "AD_Mirrors"
          ],
          "paths": {
            "PAD_PuzzlePlaque": [
              "PAD_PuzzlePlaque_0"
            ],
            "PAD_StatueReaction": [
              "PAD_StatueReaction_0"
            ],
            "AD_MagicSkull": [
              "AD_MagicSkull_0"
            ],
            "PAD_Welcomed": [
              "PAD_Welcomed_0"
            ],
            "PAD_MagicLockedDoor": [
              "PAD_MagicLockedDoor_0"
            ],
            "AD_Mirrors": [
              "AD_Mirrors_0"
            ]
          },
          "node_data": {
            "PAD_PuzzlePlaque": [
              {
                "id": "PAD_PuzzlePlaque_0",
                "speaker": "Narrator",
                "text": "*The answer lies in darkness.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_StatueReaction": [
              {
                "id": "PAD_StatueReaction_0",
                "speaker": "Player",
                "text": "| That's a big statue. |",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_MagicSkull": [
              {
                "id": "AD_MagicSkull_0",
                "speaker": "Herald of Balthazar",
                "text": "Not wanted. Not needed. Leave.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "4a8285f1-6d42-51cd-6803-92696f6e8f7d_A"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Ill-tempered warning from a skull being remotely voiced by a necromancer."
              }
            ],
            "PAD_Welcomed": [
              {
                "id": "PAD_Welcomed_0",
                "speaker": "Shadowheart",
                "text": "I hear you, Lady Shar. I shall not fail.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Reverence"
              }
            ],
            "PAD_MagicLockedDoor": [
              {
                "id": "PAD_MagicLockedDoor_0",
                "speaker": "Player",
                "text": "Some sort of magic blocking the way.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Mirrors": [
              {
                "id": "AD_Mirrors_0",
                "speaker": "Narrator",
                "text": "*The mirrors here seem to not reflect light, but devour it.*<br>",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_PuzzlePlaque": "PAD used for when players interact with the plaque at the entrance of the crypt. Read by the narrator as an object AD.",
            "PAD_StatueReaction": "Players enter the crypt and react to the statue.",
            "AD_MagicSkull": "The skull taunts the player to not go forward, declaring that everything is already being handled.",
            "PAD_Welcomed": "Shadowheart answers in kind to SHA_VoiceOfShar_AD_Welcome",
            "PAD_MagicLockedDoor": "Player interacts with the door locked by magic at the crypt before solving the puzzle.",
            "AD_Mirrors": "Narrator AD on smaller mirrors in SHA temple. Player can mention there is something magical about them, instead of just reflection of surrounding world. There are couple of them in the temple"
          }
        },
        "sha_nightsong": {
          "scenario_name": "sha_nightsong",
          "session_sequence": [
            "AD_NightsongAttacked",
            "CINE_NightsongsDeath"
          ],
          "paths": {
            "AD_NightsongAttacked": [
              "AD_NightsongAttacked_0"
            ],
            "CINE_NightsongsDeath": [
              "CINE_NightsongsDeath_0",
              "CINE_NightsongsDeath_1"
            ]
          },
          "node_data": {
            "AD_NightsongAttacked": [
              {
                "id": "AD_NightsongAttacked_0",
                "speaker": "Nightsong",
                "text": "Unleash your wrath! It only fuels my fury.",
                "node_type": "normal",
                "checkflags": [
                  "b8101d0a-5473-efd1-1d12-719d504d60b8_A"
                ],
                "setflags": [
                  "b8101d0a-5473-efd1-1d12-719d504d60b8_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "CINE_NightsongsDeath": [
              {
                "id": "CINE_NightsongsDeath_0",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [
                  "HAV_Siege_State_NoProtection",
                  "8a4a686d-6c47-411f-a0b3-d79ff33e2922 = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "1",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: 'The permiter of torches surrounding the inn flicker and go out, all at once. Shadowy figures start to move in between, descending on the inn'"
              },
              {
                "id": "CINE_NightsongsDeath_1",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [
                  "ORI_Shadowheart_State_DestroyedHaven"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "CinematicNodeContext: Stunned, lit only by candlelight, she strains to see out the window - then flinches as screams echo inside the inn. She turns to the door as the sound of combat grows closer. She's already reaching for a weapon when the candles go out - and in darkness we hear her door crashing open. Wide shot from the far side of Last Light's bridge: all sources of light flicker and die as the darkness closes in. The screaming goes on."
              }
            ]
          },
          "session_synopses": {
            "AD_NightsongAttacked": "Nightsong cries in pain as she gets attacked by the player.",
            "CINE_NightsongsDeath": "After killing Nightsong the player sees the aftermath in Last Light"
          }
        },
        "sha_pad": {
          "scenario_name": "sha_pad",
          "session_sequence": [
            "Sarcophagus1Plaque"
          ],
          "paths": {
            "Sarcophagus1Plaque": [
              "Sarcophagus1Plaque_0"
            ]
          },
          "node_data": {
            "Sarcophagus1Plaque": [
              {
                "id": "Sarcophagus1Plaque_0",
                "speaker": "Narrator",
                "text": "*In darkness, beauty is equal and wealth unseen.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Reading a plaque in the Shadow Temple."
              }
            ]
          },
          "session_synopses": {
            "Sarcophagus1Plaque": "A plaque on one of Shar's sarcophagi."
          }
        },
        "sha_monitor": {
          "scenario_name": "sha_monitor",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sha_ad": {
          "scenario_name": "sha_ad",
          "session_sequence": [
            "TrialsPlaque1",
            "NightsongPrison_Plaque1"
          ],
          "paths": {
            "TrialsPlaque1": [
              "TrialsPlaque1_0"
            ],
            "NightsongPrison_Plaque1": [
              "NightsongPrison_Plaque1_0"
            ]
          },
          "node_data": {
            "TrialsPlaque1": [
              {
                "id": "TrialsPlaque1_0",
                "speaker": "Narrator",
                "text": "*Brave the Gauntlet of Lady Shar. Test body, mind, and spirit with Her trials. Glory awaits the few who succeed.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "NightsongPrison_Plaque1": [
              {
                "id": "NightsongPrison_Plaque1_0",
                "speaker": "Narrator",
                "text": "*'Pierce the moon.'*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "TrialsPlaque1": "This is a narrator AD on a long vertical plaque that contains a longer scripture. It is placed before the section of the temple that is dedicated to trials areas, so it can be a motivational guideline to what expects ahead.",
            "NightsongPrison_Plaque1": "This is a plaque with narrator AD near the soul cage - before the final trial of killing the Selunite to finish Dark Justiciar training. There are total 3 of them so information needs to be divided nicely."
          }
        },
        "twn_templeentrance": {
          "scenario_name": "twn_templeentrance",
          "session_sequence": [
            "PAD_TempleApproach"
          ],
          "paths": {
            "PAD_TempleApproach": [
              "PAD_TempleApproach_0"
            ]
          },
          "node_data": {
            "PAD_TempleApproach": [
              {
                "id": "PAD_TempleApproach_0",
                "speaker": "Player",
                "text": "Piles of bodies - very old, by the looks of them.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "ORI_Shadowheart_State_TempleApproachHint",
                  "ORI_Shadowheart_Event_DarkJusticiarHint"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_TempleApproach": "Party approaches the Shar Temple and notices the Dark Justiciar corpses."
          }
        },
        "sha_sharwrath": {
          "scenario_name": "sha_sharwrath",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sha_raphael": {
          "scenario_name": "sha_raphael",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "73",
              "155",
              "110",
              "11",
              "41",
              "147",
              "87",
              "114",
              "137",
              "85",
              "140",
              "164",
              "28",
              "31",
              "53",
              "57"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "73",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "155",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: (Cine) We see Raphael casually leaning against a large tomb very near to the Thorm family catacombs entrance. When he sees us , he stands normally, smiles and greets us theatrically with a limerick."
              },
              {
                "id": "155",
                "speaker": "Raphael",
                "text": "Our hero thought but of treasure ahead,<br>Did not consider the peace of the dead...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_Astarion"
                ],
                "goto": "",
                "link": "28",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "110",
                "speaker": "Raphael",
                "text": "Through the dark they went creeping,<br>And awoke what was sleeping...<br>",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "28",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "11",
                "speaker": "Raphael",
                "text": "A new grave they dug, which they themselves fed.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "28",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "41",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_Karlach"
                ],
                "goto": "",
                "link": "28",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "147",
                "speaker": "Karlach",
                "text": "Ooh, spooky.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "28",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Sarcasm (talking to Raphael)"
              },
              {
                "id": "87",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_End_Karlach"
                ],
                "goto": "",
                "link": "28",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "114",
                "speaker": "Player",
                "text": "How long have you been standing around practicing that little recital?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "85",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "137",
                "speaker": "Raphael",
                "text": "Until it was perfect.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "85",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "85",
                "speaker": "Raphael",
                "text": "I've grown quite fond of you, you know - in my way. I thought it only fair to warn you about the dangers ahead.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "28",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: (Cine) When he says ‘the dangers ahead’ he gestures generally behind him, towards the entrance of the Thorm family catacombs."
              },
              {
                "id": "140",
                "speaker": "Player",
                "text": "What dangers are those?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "28",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "164",
                "speaker": "Raphael",
                "text": "Oh, we both know they are soon to be revealed.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "28",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "28",
                "speaker": "Raphael",
                "text": "It would be pointless of me to try to bar you from entering, but I can... set the scene as it were. Prepare you for your role.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "4",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "31",
                "speaker": "Player",
                "text": "How do you even know there's danger ahead?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "53",
                "speaker": "Raphael",
                "text": "My dear friend, I think you'll find I play my part in many a plot indeed.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "57",
                "speaker": "Raphael",
                "text": "Cannot the same be said for you these days, True Soul?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "": "Raphael is encountered at the beginning of the Shar Temple. He briefs the player about the Orthon - the devil he mentions - either telling them that he personally wants it dead, or that it is between the player and their objective. He then saves them from a trap and warns them about the dangers of the temple, before vanishing.!!! Don't remove REALLY_ASTARION tag check from the OOM branch!!!"
          }
        },
        "sha_hq": {
          "scenario_name": "sha_hq",
          "session_sequence": [
            "AD_ShutteredMirrorOfLoss"
          ],
          "paths": {
            "AD_ShutteredMirrorOfLoss": [
              "AD_ShutteredMirrorOfLoss_0"
            ]
          },
          "node_data": {
            "AD_ShutteredMirrorOfLoss": [
              {
                "id": "AD_ShutteredMirrorOfLoss_0",
                "speaker": "Narrator",
                "text": "*Gazing into the broken mirror serves no purpose. The reflection it offers is like a dizzying kaleidoscope.*",
                "node_type": "normal",
                "checkflags": [
                  "SHA_HQ_UsedShatteredMirrorOfLoss"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_ShutteredMirrorOfLoss": "Narrator AD on Shattered Mirror of Loss in Shar's temple in Act 2"
          }
        },
        "sha_merregon": {
          "scenario_name": "sha_merregon",
          "session_sequence": [
            "001",
            "000",
            "006"
          ],
          "paths": {
            "001": [
              "001_13",
              "001_11",
              "001_0",
              "001_2",
              "001_12"
            ],
            "000": [
              "000_0",
              "000_8",
              "000_18",
              "000_9",
              "000_13",
              "000_16"
            ],
            "006": [
              "006_0"
            ]
          },
          "node_data": {
            "001": [
              {
                "id": "001_13",
                "speaker": "Merregon",
                "text": "*Mewl.*",
                "node_type": "normal",
                "checkflags": [
                  "SHA_Merregon_001_HasMet"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: NB - the text between asterisks does not have to be vocalised/pronounced exactly as written, but rather treated as a guideline. Involuntary idle sound from the merregon. Raspy breath, chittering, sighes and moans etc."
              },
              {
                "id": "001_11",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "001_0",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "001_0",
                "speaker": "Merregon",
                "text": "*Rasp.*",
                "node_type": "normal",
                "checkflags": [
                  "SHA_Merregon_001_HasMet = False"
                ],
                "setflags": [
                  "SHA_Merregon_001_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: NB - the text between asterisks does not have to be vocalised/pronounced exactly as written, but rather treated as a guideline. Involuntary idle sound from the merregon. Raspy breath, chittering, sighes and moans etc."
              },
              {
                "id": "001_2",
                "speaker": "Player",
                "text": "Nice mask.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "001_12",
                "speaker": "Merregon",
                "text": "*Hiss.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: NB - the text between asterisks does not have to be vocalised/pronounced exactly as written, but rather treated as a guideline. Involuntary idle sound from the merregon. Raspy breath, chittering, sighes and moans etc."
              }
            ],
            "000": [
              {
                "id": "000_0",
                "speaker": "Narrator",
                "text": "*This merregon seems faintly more alive than the others - beckoning you to look at its wares.*",
                "node_type": "normal",
                "checkflags": [
                  "SHA_Merregon_000_HasMet = False",
                  "SHA_Merregon_Event_DetectThoughtsSuccess"
                ],
                "setflags": [
                  "SHA_Merregon_000_HasMet"
                ],
                "goto": "",
                "link": "15",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: The merregon beckons the player towards its wares\rInternalNodeContext: This greeting if you're speaking to the trader merregon for the first time after having read the mind of another merregon previously."
              },
              {
                "id": "000_8",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "000_18",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "000_18",
                "speaker": "Hoarding Merregon",
                "text": "*Chitter.*",
                "node_type": "normal",
                "checkflags": [
                  "SHA_Merregon_000_HasMet = False"
                ],
                "setflags": [
                  "SHA_Merregon_000_HasMet"
                ],
                "goto": "",
                "link": "15",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: The merregon beckons the player towards its wares\rNodeContext: NB - the text between asterisks does not have to be vocalised/pronounced exactly as written, but rather treated as a guideline. Involuntary idle sound from the merregon. Raspy breath, chittering, sighes and moans etc."
              },
              {
                "id": "000_9",
                "speaker": "Player",
                "text": "*Probe the merregon's mind.*",
                "node_type": "normal",
                "checkflags": [
                  "989f8f48-9328-2eca-3aa2-15007aabd48b_MindHasBeenRead = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "000_13",
                "speaker": "",
                "text": "False",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "000_16",
                "speaker": "Narrator",
                "text": "*The merregon resists your efforts. Most would be angry at such an intrusion, but this creature has no reaction at all.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "006": [
              {
                "id": "006_0",
                "speaker": "Merregon",
                "text": "*Gurgle.*",
                "node_type": "normal",
                "checkflags": [
                  "SHA_Merregon_006_HasMet = False"
                ],
                "setflags": [
                  "SHA_Merregon_006_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "CinematicNodeContext: Merregon cocks its head at the player.\rNodeContext: NB - the text between asterisks does not have to be vocalised/pronounced exactly as written, but rather treated as a guideline. Involuntary idle sound from the merregon. Raspy breath, chittering, sighes and moans etc."
              }
            ]
          },
          "session_synopses": {
            "001": "A merregon - a footsoldier from hell assigned to assist the Orthon ( a huge infernal bounty hunter). Outside of combat, the merregon is unspeaking and unreactive. Upon attempting to read its thoughts, you realise it's little more than an empty vessel, without personality or thought.",
            "000": "One of the merregon henchmen accompanying the orthon in his lair in the Shar Temple. This one acts as a trader and beastmaster for the Orthon's displacer beast. The player can trade, learn about the merregon's connection to the displacer via detect thoughts, and convince it to hand over the potions used to control the beast.",
            "006": "A merregon - a footsoldier from hell assigned to assist the Orthon ( a huge infernal bounty hunter). Outside of combat, the merregon is unspeaking and unreactive, uttering only slight groans and rattling sighes. Upon attempting to read the thoughts of one of its comrades, you realise it's little more than an empty vessel, without personality or thought.vessel, without personality or thought."
          }
        },
        "sha_cloaker": {
          "scenario_name": "sha_cloaker",
          "session_sequence": [
            "PAD_Ambush"
          ],
          "paths": {
            "PAD_Ambush": [
              "PAD_Ambush_0"
            ]
          },
          "node_data": {
            "PAD_Ambush": [
              {
                "id": "PAD_Ambush_0",
                "speaker": "Player",
                "text": "Look out - cloaker!<br>",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Urgent/just been ambushed by a cloaker (a big bat/manta ray-looking creature)"
              }
            ]
          },
          "session_synopses": {
            "PAD_Ambush": "The party reacts to being ambushed by a Cloaker in the Gauntlet of Shar"
          }
        },
        "sha_silentlibrary": {
          "scenario_name": "sha_silentlibrary",
          "session_sequence": [
            "PAD_OpenedScrollDoor",
            "PAD_SpearLoot",
            "AD_SilencePlayer",
            "AD_RiddlePlaque"
          ],
          "paths": {
            "PAD_OpenedScrollDoor": [
              "PAD_OpenedScrollDoor_0"
            ],
            "PAD_SpearLoot": [
              "PAD_SpearLoot_0"
            ],
            "AD_SilencePlayer": [
              "AD_SilencePlayer_0"
            ],
            "AD_RiddlePlaque": [
              "AD_RiddlePlaque_0"
            ]
          },
          "node_data": {
            "PAD_OpenedScrollDoor": [
              {
                "id": "PAD_OpenedScrollDoor_0",
                "speaker": "Player",
                "text": "Seemed to work.<br>",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_SpearLoot": [
              {
                "id": "PAD_SpearLoot_0",
                "speaker": "Player",
                "text": "This is no common spear... It must be the one that Shadowheart is supposed to find.",
                "node_type": "normal",
                "checkflags": [
                  "ORI_Shadowheart_Knows_NeedSpear"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_SilencePlayer": [
              {
                "id": "AD_SilencePlayer_0",
                "speaker": "",
                "text": "You disturb the silence. Hush.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Creepy ghost-whisper, spoken in combat."
              }
            ],
            "AD_RiddlePlaque": [
              {
                "id": "AD_RiddlePlaque_0",
                "speaker": "Narrator",
                "text": "*'What can silence the Nightsong?'*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_OpenedScrollDoor": "Party expresses affirmation that the button opened the door.",
            "PAD_SpearLoot": "Voicebark when picking up the Spear of the Night. A sacred Sharran relic and vital for Shadowheart's quest to kill Nightsong.",
            "AD_SilencePlayer": "Combat reaction for the Dark Justiciar ghosts in the Silent Library. When the player disturbs them they will silence the player . On the third disturbance they become hostile",
            "AD_RiddlePlaque": "Reads out the riddle on the plaque."
          }
        },
        "sha_entrance": {
          "scenario_name": "sha_entrance",
          "session_sequence": [
            "PAD_RecognisedSharTemple"
          ],
          "paths": {
            "PAD_RecognisedSharTemple": [
              "PAD_RecognisedSharTemple_0"
            ]
          },
          "node_data": {
            "PAD_RecognisedSharTemple": [
              {
                "id": "PAD_RecognisedSharTemple_0",
                "speaker": "Player",
                "text": "Some sort of temple? Looks abandoned.",
                "node_type": "normal",
                "checkflags": [
                  "SHA_Entrance_State_ReligionSuccess = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_RecognisedSharTemple": "When the player first enters the Shar Temple they roll History to recognise it as the Gauntlet of Shar - an infamous training ground. If the player is Shadowheart, a Sharran, or a Selunite they automatically succeed"
          }
        },
        "sha_displacer": {
          "scenario_name": "sha_displacer",
          "session_sequence": [
            ""
          ],
          "paths": {
            "": [
              "0",
              "50",
              "63",
              "97",
              "20"
            ]
          },
          "node_data": {
            "": [
              {
                "id": "0",
                "speaker": "Displacer Beast",
                "text": "What was that? I feel strange... clear.",
                "node_type": "normal",
                "checkflags": [
                  "SHA_Displacer_SwA_HasMet = False",
                  "SHA_Displacer_State_RemovedPoisonWithSpell",
                  "PETPAL"
                ],
                "setflags": [
                  "SHA_Displacer_SwA_HasMet"
                ],
                "goto": "",
                "link": "98",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "50",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "63",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "63",
                "speaker": "Player",
                "text": "The orthon sold you to me. I'm your master now.",
                "node_type": "normal",
                "checkflags": [
                  "SHA_Displacer_Event_DeceptionAttempted = False"
                ],
                "setflags": [
                  "SHA_Displacer_Event_DeceptionAttempted"
                ],
                "goto": "",
                "link": "54",
                "is_end": false,
                "approval": [
                  "Astarion -1",
                  "Karlach -1",
                  "Wyll -1",
                  "Minthara 1",
                  "Halsin -1"
                ],
                "context": ""
              },
              {
                "id": "97",
                "speaker": "",
                "text": "False",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "20",
                "speaker": "Displacer Beast",
                "text": "You lie. Your breath stinks of double-speak.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "FactionHostileToPlayerGroupAfterDialog"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "": "Appears if the player tries to speak to the Displacer Beast. The player can learn that the beast is in love with the Orthon, and if they know that it has been charmed by him, they can attempt to convince it to join them in battle against the Orthon."
          }
        },
        "sha_necromancer": {
          "scenario_name": "sha_necromancer",
          "session_sequence": [
            "PAD_MintharaReaction",
            "AD_EnemyVulnerable",
            "AD_OrderingGhouls",
            "AD_StartTurn",
            "AD_GolemDead",
            "GolemInvitation",
            "AD_Justiciar_TakingTurn_2",
            "AD_Death",
            "Barricade",
            "AD_BarricadeLeader",
            "AD_Justiciar_CombatStarts",
            "PAD_DefeatedNecro",
            "AD_DominateGolem",
            "AD_LowHP"
          ],
          "paths": {
            "PAD_MintharaReaction": [
              "PAD_MintharaReaction_0"
            ],
            "AD_EnemyVulnerable": [
              "AD_EnemyVulnerable_0"
            ],
            "AD_OrderingGhouls": [
              "AD_OrderingGhouls_0",
              "AD_OrderingGhouls_1"
            ],
            "AD_StartTurn": [
              "AD_StartTurn_0"
            ],
            "AD_GolemDead": [
              "AD_GolemDead_0"
            ],
            "GolemInvitation": [
              "GolemInvitation_0"
            ],
            "AD_Justiciar_TakingTurn_2": [
              "AD_Justiciar_TakingTurn_2_0"
            ],
            "AD_Death": [
              "AD_Death_0"
            ],
            "Barricade": [
              "Barricade_38",
              "Barricade_13",
              "Barricade_24",
              "Barricade_0"
            ],
            "AD_BarricadeLeader": [
              "AD_BarricadeLeader_0"
            ],
            "AD_Justiciar_CombatStarts": [
              "AD_Justiciar_CombatStarts_0"
            ],
            "PAD_DefeatedNecro": [
              "PAD_DefeatedNecro_0"
            ],
            "AD_DominateGolem": [
              "AD_DominateGolem_0"
            ],
            "AD_LowHP": [
              "AD_LowHP_0"
            ]
          },
          "node_data": {
            "PAD_MintharaReaction": [
              {
                "id": "PAD_MintharaReaction_0",
                "speaker": "Nightwarden Minthara",
                "text": "I wish I could kill that bloated sack of offal, but he may yet help us reach Ketheric.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_EnemyVulnerable": [
              {
                "id": "AD_EnemyVulnerable_0",
                "speaker": "Balthazar",
                "text": "We have the upper hand - do your work, Flesh!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_OrderingGhouls": [
              {
                "id": "AD_OrderingGhouls_0",
                "speaker": "Balthazar",
                "text": "Embalming fluid, and a pipette. Now.",
                "node_type": "normal",
                "checkflags": [
                  "003e1f20-0cac-171b-aa7c-df901e42aa6c_A"
                ],
                "setflags": [
                  "003e1f20-0cac-171b-aa7c-df901e42aa6c_B"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Ordering his ghould minions about"
              },
              {
                "id": "AD_OrderingGhouls_1",
                "speaker": "",
                "text": "At ooonce.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Raspy undead drawl"
              }
            ],
            "AD_StartTurn": [
              {
                "id": "AD_StartTurn_0",
                "speaker": "Balthazar",
                "text": "It will be a kindness to put an end to your follies.",
                "node_type": "normal",
                "checkflags": [
                  "6bc7114f-5279-4374-385e-b396157d5189_A"
                ],
                "setflags": [
                  "6bc7114f-5279-4374-385e-b396157d5189_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_GolemDead": [
              {
                "id": "AD_GolemDead_0",
                "speaker": "Balthazar",
                "text": "Wretch. You broke my brother!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "GolemInvitation": [
              {
                "id": "GolemInvitation_0",
                "speaker": "Flesh",
                "text": "*Gurgle.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "CinematicNodeContext: The door to Balthazar's private chambers open, revealing a flesh golem. It utters a gurgle and beckons the player to enter.\rInternalNodeContext: Note - if the flesh golem is somehow unavailable, an alternate invitation will trigger with the necormancer instead."
              }
            ],
            "AD_Justiciar_TakingTurn_2": [
              {
                "id": "AD_Justiciar_TakingTurn_2_0",
                "speaker": "Justiciar Avenger",
                "text": "Darkness shall consume you, corpse-thief!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Rasped, wraithlike battle taunt, directed at a trespassing necromancer"
              }
            ],
            "AD_Death": [
              {
                "id": "AD_Death_0",
                "speaker": "Balthazar",
                "text": "Death... But a fleeting inconvenience.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Barricade": [
              {
                "id": "Barricade_38",
                "speaker": "Reconstituted Duellist",
                "text": "My creations are my pride and joy. I shall kill you for attacking them.",
                "node_type": "normal",
                "checkflags": [
                  "SHA_Necromancer_State_PlayerAttacked"
                ],
                "setflags": [],
                "goto": "",
                "link": "29",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Barricade_13",
                "speaker": "Reconstituted Duellist",
                "text": "Afraid I'd ruin these things' looks? Make good on your threat, or else stand aside.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "33",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Barricade_24",
                "speaker": "",
                "text": "False",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Barricade_0",
                "speaker": "Reconstituted Duellist",
                "text": "These are masterworks. Perhaps you'll join their ranks, once I repurpose your corpse.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "FactionHostileToPlayerGroupAfterDialog"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_BarricadeLeader": [
              {
                "id": "AD_BarricadeLeader_0",
                "speaker": "Reconstituted Duellist",
                "text": "You dawdle. Come closer - now.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Urgent"
              }
            ],
            "AD_Justiciar_CombatStarts": [
              {
                "id": "AD_Justiciar_CombatStarts_0",
                "speaker": "Justiciar Avenger",
                "text": "Trespasser. Myrkul's fat lapdog!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Rasped, wraithlike battle taunt. MER-kul"
              }
            ],
            "PAD_DefeatedNecro": [
              {
                "id": "PAD_DefeatedNecro_0",
                "speaker": "Player",
                "text": "He's dead. Good riddance.<br>",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_DominateGolem": [
              {
                "id": "AD_DominateGolem_0",
                "speaker": "Balthazar",
                "text": "Flesh! Enough of this foolishness!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_LowHP": [
              {
                "id": "AD_LowHP_0",
                "speaker": "Balthazar",
                "text": "Fool. You think striking down my body will be the end of me?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_MintharaReaction": "When dialogue with Balthazar ends (or his projection that delivers the narrative bit) this PAD is played by Minthara in party.",
            "AD_EnemyVulnerable": "Balthazar orders his flesh golem to attack his enemy while they're vulnerable",
            "AD_OrderingGhouls": "Balthazar gives some orders to his ghouls while in the Shar temple. He tells them to fetch things related to his necromancy (he's busy repairing some of his undead troops)",
            "AD_StartTurn": "Balthazar gloats at and taunts the player before acting during his turn",
            "AD_GolemDead": "Balthazar is angry at his flesh golem being killed",
            "GolemInvitation": "Balthazar's private chambers are unlocked and his flesh golem invites the players inside to talk",
            "AD_Justiciar_TakingTurn_2": "Justiciar that attacks Balthazar in his lair in Shar temple. Need to have same or similar voice to other Dark Justiciars",
            "AD_Death": "Balthazar's final words as he dies",
            "Barricade": "The player is challenged by some skeleton warriors at a barricade outside the Necromancer's lair. The necromancer speaks through the dead warriors - his words in their dessicated voices.(this mayor may not follow on from an earlier scene with more skeletons controlled by the necromancer). A mindmeld convinces the necromancer to command his skeletons to grant entry. The scene ends with combat with the skeletons, or a shadowquake triggering a fight between player (+ skeletons) against sharran wraiths. Afterwards, the player is invited into Balthazar's inner sanctum.",
            "AD_BarricadeLeader": "The lead skeleton defending Balthazar's room will attempt to grab the players' attention",
            "AD_Justiciar_CombatStarts": "Justiciar that attacks Balthazar in his lair in Shar temple. Need to have same or similar voice to other Dark Justiciars",
            "PAD_DefeatedNecro": "The players comment on Balthazar's death",
            "AD_DominateGolem": "Balthazar scolds his flesh golem as he calms it down",
            "AD_LowHP": "Balthazar defiantly reacts to being critically injured"
          }
        },
        "sha_barracks": {
          "scenario_name": "sha_barracks",
          "session_sequence": [
            "AD_Plaque"
          ],
          "paths": {
            "AD_Plaque": [
              "AD_Plaque_0"
            ]
          },
          "node_data": {
            "AD_Plaque": [
              {
                "id": "AD_Plaque_0",
                "speaker": "Narrator",
                "text": "*Feed your bodies and rest your minds. Lady Shar needs her warriors strong and ready.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Plaque text at barracks/dining hall of a Shar temple"
              }
            ]
          },
          "session_synopses": {
            "AD_Plaque": "This is a plaque placed in the section of barracks and dining halls and altar in Shar temple. Wise words to acolytes to have priestine thoughts and behavior"
          }
        },
        "sha_monkamulet": {
          "scenario_name": "sha_monkamulet",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sha_spidermeathunk": {
          "scenario_name": "sha_spidermeathunk",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sha_pathofdarknesstrial": {
          "scenario_name": "sha_pathofdarknesstrial",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sha_lastjusticiar": {
          "scenario_name": "sha_lastjusticiar",
          "session_sequence": [
            "AD_UltimatumLure",
            "JusticiarAppears"
          ],
          "paths": {
            "AD_UltimatumLure": [
              "AD_UltimatumLure_0"
            ],
            "JusticiarAppears": [
              "JusticiarAppears_17",
              "JusticiarAppears_10",
              "JusticiarAppears_1",
              "JusticiarAppears_14",
              "JusticiarAppears_6",
              "JusticiarAppears_2",
              "JusticiarAppears_23",
              "JusticiarAppears_25"
            ]
          },
          "node_data": {
            "AD_UltimatumLure": [
              {
                "id": "AD_UltimatumLure_0",
                "speaker": "",
                "text": "*Squee.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: rat noises - SFX only"
              }
            ],
            "JusticiarAppears": [
              {
                "id": "JusticiarAppears_17",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [
                  "SHA_LastJusticiar_Event_JusticiarTransforms"
                ],
                "goto": "",
                "link": "10",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: A rat transforms into an elf. Its hisses and squeaks morph into the elf's cry of pain as he returns to his true form.\n\nKeep the camera on the player while they react to the transformation"
              },
              {
                "id": "JusticiarAppears_10",
                "speaker": "Lyrthindor",
                "text": "These hands... too big. Where are the others? Where's the rest of me?!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Looking at his own hands in confusion\rNodeContext: Groan of pain followed by anger and confusion as he looks down at his own hands in disbelief"
              },
              {
                "id": "JusticiarAppears_1",
                "speaker": "Lyrthindor",
                "text": "You - why did you have to keep prying? Why couldn't you just leave?!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Looks up from his hands to the player, angry\rNodeContext: Angry, irrational outburst. Looks up at the player on 'you'."
              },
              {
                "id": "JusticiarAppears_14",
                "speaker": "Player",
                "text": "Hold on - who are you?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "JusticiarAppears_6",
                "speaker": "Lyrthindor",
                "text": "Lyrthindor - last Dark Justiciar. I kept watch over Lady Shar's temple. Kept the faith alive, after all the others were killed.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: lir-thin-door. Furious."
              },
              {
                "id": "JusticiarAppears_2",
                "speaker": "Lyrthindor",
                "text": "But you ruined it. Trespassed. Spoiled our - my - secret. Now you'll rot in the dark.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "FactionHostileToPlayerGroupAfterDialog"
                ],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Furious. Still mixed up, referring to himself in plural then correcting. Turns hostile immediately afterwards"
              },
              {
                "id": "JusticiarAppears_23",
                "speaker": "Player",
                "text": "I'm sorry. What more can be said?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [
                  "Lae'zel -1",
                  "Shadowheart 1"
                ],
                "context": ""
              },
              {
                "id": "JusticiarAppears_25",
                "speaker": "Lyrthindor",
                "text": "Nothing. You had your chance to talk - now you die.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "FactionHostileToPlayerGroupAfterDialog"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Furious. Turns hostile immediately afterwards"
              }
            ]
          },
          "session_synopses": {
            "AD_UltimatumLure": "The player can hear rats' squeaks and hisses coming from the bottom of the Shar Temple. This is meant to lure the player to the bottom of the temple.At this point the player has killed multiple rats and refused to negotiate with them.",
            "JusticiarAppears": "After killing the final rat during the Ultimatum stage, one of the final rats returns to its humanoid form as Lyrthindor,  the Last Justiciar. He's furious that the player has blown his cover, and quickly turns hostile."
          }
        },
        "sha_familiarface": {
          "scenario_name": "sha_familiarface",
          "session_sequence": [
            "AD_MonitorLeaves"
          ],
          "paths": {
            "AD_MonitorLeaves": [
              "AD_MonitorLeaves_0"
            ]
          },
          "node_data": {
            "AD_MonitorLeaves": [
              {
                "id": "AD_MonitorLeaves_0",
                "speaker": "Raphael",
                "text": "You cannot harm me, but you can irritate me. Goodbye.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: mildly irritated, said right before he teleports away"
              }
            ]
          },
          "session_synopses": {
            "AD_MonitorLeaves": "Raphael leaves while at the front of Shar Temple, in case he is attacked."
          }
        },
        "sha_academyaltar": {
          "scenario_name": "sha_academyaltar",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sha_disc": {
          "scenario_name": "sha_disc",
          "session_sequence": [
            "Altar",
            "PAD_ShadowheartVista"
          ],
          "paths": {
            "Altar": [
              "Altar_39",
              "Altar_53",
              "Altar_1",
              "Altar_65",
              "56",
              "NODE_NOT_FOUND"
            ],
            "PAD_ShadowheartVista": [
              "PAD_ShadowheartVista_0"
            ]
          },
          "node_data": {
            "Altar": [
              {
                "id": "Altar_39",
                "speaker": "Narrator",
                "text": "*The inscription's challenge remains the same.*",
                "node_type": "normal",
                "checkflags": [
                  "SHA_Disc_Altar_Hasmet"
                ],
                "setflags": [],
                "goto": "",
                "link": "67",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Altar_53",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_ShadowHeart"
                ],
                "goto": "",
                "link": "67",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Altar_1",
                "speaker": "",
                "text": "",
                "node_type": "alias",
                "checkflags": [],
                "setflags": [
                  "SHA_Trials_Knows_SeenAltarInscription"
                ],
                "goto": "",
                "link": "67",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Altar_65",
                "speaker": "Shadowheart",
                "text": "There's nothing more for us to do here - not until we complete Lady Shar's trials.",
                "node_type": "normal",
                "checkflags": [
                  "SHA_Trials_State_AllTrialsPassed = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "56",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "56",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ],
            "PAD_ShadowheartVista": [
              {
                "id": "PAD_ShadowheartVista_0",
                "speaker": "Shadowheart",
                "text": "Lady Shar... so many must have toiled to make a visage so grand. It's beautiful...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Overawed at the sight of a statue of liberty-sized representation of Shar, in  the heart of a huge temple."
              }
            ]
          },
          "session_synopses": {
            "Altar": "The player approaches an altar dedicated to Shar. This altar is a call to action for the player to complete Shar's trials and become a Dark Justiciar.",
            "PAD_ShadowheartVista": "Shadowheart sees the giant Shar Statue and lets it set in that she is in the temple of shar."
          }
        },
        "sha_voiceofshar": {
          "scenario_name": "sha_voiceofshar",
          "session_sequence": [
            "PAD_VoiceReaction",
            "AD_Welcome"
          ],
          "paths": {
            "PAD_VoiceReaction": [
              "PAD_VoiceReaction_0"
            ],
            "AD_Welcome": [
              "AD_Welcome_0"
            ]
          },
          "node_data": {
            "PAD_VoiceReaction": [
              {
                "id": "PAD_VoiceReaction_0",
                "speaker": "Player",
                "text": "A voice... is that Shar herself, who speaks...?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "ORI_Shadowheart_State_HeardSharVoice"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: SH: awestruck"
              }
            ],
            "AD_Welcome": [
              {
                "id": "AD_Welcome_0",
                "speaker": "",
                "text": "Welcome, child. Follow my voice, and prove your worth.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_VoiceReaction": "Party reacts to Shar's voice in the temple and acknowledging it is Shar's voice.",
            "AD_Welcome": "The player is welcomed to the Shar Temple by a disembodied voice"
          }
        },
        "sha_nightsongprison": {
          "scenario_name": "sha_nightsongprison",
          "session_sequence": [
            "PAD_Prayer",
            "AD_Plaque2",
            "AD_MartialPlaque",
            "AD_NecroUnavailable",
            "AD_EntrancePlaque",
            "ArriveAtShadowfell",
            "AD_Plaque3",
            "PAD_EnteredShadowfell",
            "NecroAndNightsong",
            "PAD_ShadowfellEntrance",
            "PAD_NightsongsFateReaction",
            "AD_DarknessPlaque",
            "PAD_EntrancePlaqueReaction_2",
            "AD_NecroAndNightsong",
            "NightsongFreed",
            "AD_StealthPlaque"
          ],
          "paths": {
            "PAD_Prayer": [
              "PAD_Prayer_0"
            ],
            "AD_Plaque2": [
              "AD_Plaque2_0"
            ],
            "AD_MartialPlaque": [
              "AD_MartialPlaque_0"
            ],
            "AD_NecroUnavailable": [
              "AD_NecroUnavailable_0"
            ],
            "AD_EntrancePlaque": [
              "AD_EntrancePlaque_0"
            ],
            "ArriveAtShadowfell": [
              "ArriveAtShadowfell_55",
              "ArriveAtShadowfell_47",
              "ArriveAtShadowfell_53",
              "ArriveAtShadowfell_23",
              "ArriveAtShadowfell_61",
              "ArriveAtShadowfell_59",
              "ArriveAtShadowfell_52",
              "ArriveAtShadowfell_48",
              "ArriveAtShadowfell_54",
              "40",
              "NODE_NOT_FOUND"
            ],
            "AD_Plaque3": [
              "AD_Plaque3_0"
            ],
            "PAD_EnteredShadowfell": [
              "PAD_EnteredShadowfell_0"
            ],
            "NecroAndNightsong": [
              "NecroAndNightsong_65",
              "NecroAndNightsong_38",
              "NecroAndNightsong_32",
              "NecroAndNightsong_51",
              "NecroAndNightsong_56",
              "NecroAndNightsong_48",
              "NecroAndNightsong_61",
              "NecroAndNightsong_50",
              "NecroAndNightsong_62"
            ],
            "PAD_ShadowfellEntrance": [
              "PAD_ShadowfellEntrance_0"
            ],
            "PAD_NightsongsFateReaction": [
              "PAD_NightsongsFateReaction_1",
              "PAD_NightsongsFateReaction_5"
            ],
            "AD_DarknessPlaque": [
              "AD_DarknessPlaque_0"
            ],
            "PAD_EntrancePlaqueReaction_2": [
              "PAD_EntrancePlaqueReaction_2_0",
              "PAD_EntrancePlaqueReaction_2_3"
            ],
            "AD_NecroAndNightsong": [
              "AD_NecroAndNightsong_5",
              "AD_NecroAndNightsong_14",
              "AD_NecroAndNightsong_7",
              "AD_NecroAndNightsong_1"
            ],
            "NightsongFreed": [
              "NightsongFreed_47",
              "NightsongFreed_48"
            ],
            "AD_StealthPlaque": [
              "AD_StealthPlaque_0"
            ]
          },
          "node_data": {
            "PAD_Prayer": [
              {
                "id": "PAD_Prayer_0",
                "speaker": "Shadowheart",
                "text": "Just a little bit farther. See my actions, Lady Shar. Hear my words of faith.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "199a746e-309f-52f0-1a47-0375711725cb_A"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Urging herself on. Final descent"
              }
            ],
            "AD_Plaque2": [
              {
                "id": "AD_Plaque2_0",
                "speaker": "Narrator",
                "text": "*Ascend in her silver blood.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_MartialPlaque": [
              {
                "id": "AD_MartialPlaque_0",
                "speaker": "Narrator",
                "text": "*Deliver the Night Mother's mercy upon her enemies.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_NecroUnavailable": [
              {
                "id": "AD_NecroUnavailable_0",
                "speaker": "Nightsong",
                "text": "I smell the stink of Balthazar. Bring him to me.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: She can do an ostentatiouse 'sniff' sound like a pro wrestler insulting an enemy"
              }
            ],
            "AD_EntrancePlaque": [
              {
                "id": "AD_EntrancePlaque_0",
                "speaker": "Narrator",
                "text": "*Spill the blood of Selûne and rise a warrior of Shar.*",
                "node_type": "normal",
                "checkflags": [
                  "MOO_BalthazarsSecrets_Knows_NightsongSecret = False"
                ],
                "setflags": [
                  "SHA_NightsongPrison_Knows_NightsongIsPerson"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: This node if the player didn't already know Nightsong was a living being\rNodeContext: The text of a plaque, instructing initiates in a sharran rite."
              }
            ],
            "ArriveAtShadowfell": [
              {
                "id": "ArriveAtShadowfell_55",
                "speaker": "",
                "text": "",
                "node_type": "alias",
                "checkflags": [
                  "c6b28a2d-4095-40fc-bed0-de222e6af105"
                ],
                "setflags": [],
                "goto": "",
                "link": "ArriveAtShadowfell_64",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ArriveAtShadowfell_47",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_ShadowHeart"
                ],
                "goto": "",
                "link": "36",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ArriveAtShadowfell_53",
                "speaker": "Shadowheart",
                "text": "Lady Shar... I can feel her all around. This is her domain. This is the Shadowfell.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "36",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Awestruck"
              },
              {
                "id": "ArriveAtShadowfell_23",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_End_ShadowHeart"
                ],
                "goto": "",
                "link": "36",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ArriveAtShadowfell_61",
                "speaker": "",
                "text": "",
                "node_type": "visualstate",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "36",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ArriveAtShadowfell_59",
                "speaker": "Balthazar",
                "text": "You cleared the way for me, True Soul. What promising flesh you are. As a reward, I shall let you bear witness to my masterpiece.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "8",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Please restrict hip and leg movement for this line. He will be floating as he speaks.\n\nBalthazar appears behind the player through the entrance from Shar Temple to Nightsong's prison. He's levitating and reaches their side before they can react, \rInternalNodeContext: Fallback - haven't met balthazar in person or agreed to help\rNodeContext: High-handed, pleased with himself"
              },
              {
                "id": "ArriveAtShadowfell_52",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [
                  "MUTED = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "8",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ArriveAtShadowfell_48",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_ShadowHeart"
                ],
                "goto": "",
                "link": "8",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ArriveAtShadowfell_54",
                "speaker": "Shadowheart",
                "text": "This is the Dark Lady's domain - he does not belong here.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "40",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Addressed to player re: Balthazar. Disdain."
              },
              {
                "id": "40",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ],
            "AD_Plaque3": [
              {
                "id": "AD_Plaque3_0",
                "speaker": "Narrator",
                "text": "*In her blood be anointed: Dark Justiciar.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_EnteredShadowfell": [
              {
                "id": "PAD_EnteredShadowfell_0",
                "speaker": "Player",
                "text": "I feel lighter, unburdened, as if the softest push could send me drifting away.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "NecroAndNightsong": [
              {
                "id": "NecroAndNightsong_65",
                "speaker": "Nightsong",
                "text": "Balthazar. Come to add more bars to my cage.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "GLO_Ketheric_Knows_ImmortalitySource",
                  "SHA_Nightsong_HasMet",
                  "GLO_Ketheric_Knows_AboutImmortality"
                ],
                "goto": "",
                "link": "45",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: She paces the narrow cage where she's kept, like a tiger. She looks down as she paces, not yet deigning to make eye contact."
              },
              {
                "id": "NecroAndNightsong_38",
                "speaker": "Nightsong",
                "text": "Or perhaps to lead this would-be Justiciar's blade directly to my heart?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "45",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext:  On \"this Justiciar\",\" abruptly turns to the player and points an accusing finger. As she moves forward out of position, magical hands grab around her wrists arms and shoulers, holding her back. She looks down at them and grimaces in rage, then steps back into place. This is how she's bound: If she moves too far, she'll be pulled back by the magi-hands."
              },
              {
                "id": "NecroAndNightsong_32",
                "speaker": "Nightsong",
                "text": "I invite you: heap more sins upon your head. My retribution will be all the sweeter for them.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "45",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Stock still. Cold. Staring Balthazar dead in the eyes.\rNodeContext: With a deep, seething foreboding"
              },
              {
                "id": "NecroAndNightsong_51",
                "speaker": "Balthazar",
                "text": "All this time, and you still fail to appreciate the gifts I bestowed on you, Aylin. Sad, to see a thing of beauty not recognise its own worth.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "45",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Displeased pout\rNodeContext: A little displeased and admonishing"
              },
              {
                "id": "NecroAndNightsong_56",
                "speaker": "Balthazar",
                "text": "But General Thorm - he appreciates you. And he wants you close at hand, so I am here to whisk you back to him.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "45",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Brightening up\rNodeContext: Tone brightening up a little"
              },
              {
                "id": "NecroAndNightsong_48",
                "speaker": "Nightsong",
                "text": "Ketheric. I welcome the sight of him, after these hundred years. He whose immortality I supply with my very soul.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "GLO_Ketheric_Knows_ImmortalitySource"
                ],
                "goto": "",
                "link": "45",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: She spits on the floor of her cage after 'Ketheric'"
              },
              {
                "id": "NecroAndNightsong_61",
                "speaker": "Balthazar",
                "text": "General. Thorm. I'm sure you'll be on your best behaviour for him. But just in case, I've taken some precautions.",
                "node_type": "normal",
                "checkflags": [
                  "MOO_MoonriseTower_State_Outcast = False"
                ],
                "setflags": [
                  "ORI_Inclusion_ShadowHeart"
                ],
                "goto": "",
                "link": "45",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Chastising."
              },
              {
                "id": "NecroAndNightsong_50",
                "speaker": "Balthazar",
                "text": "Keep back. It will take quite some concentration to secure Aylin for her little journey.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "45",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "NecroAndNightsong_62",
                "speaker": "Shadowheart",
                "text": "The Nightsong is Shar's sacrifice - she's my destiny. He cannot have her!",
                "node_type": "normal",
                "checkflags": [
                  "AVATAR = False"
                ],
                "setflags": [
                  "SHA_NightsongPrison_State_ShadowheartGaveOpinion"
                ],
                "goto": "",
                "link": "45",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Urgent. Her sacred mission is in jeopardy"
              }
            ],
            "PAD_ShadowfellEntrance": [
              {
                "id": "PAD_ShadowfellEntrance_0",
                "speaker": "Shadowheart",
                "text": "This must be where initiates undertook their final preparations. The end is near.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Focus/mounting anticipation. Arc: SH is loyal to Shar"
              }
            ],
            "PAD_NightsongsFateReaction": [
              {
                "id": "PAD_NightsongsFateReaction_1",
                "speaker": "Player",
                "text": "It's done, Shadowheart.",
                "node_type": "normal",
                "checkflags": [
                  "SHA_NightsongPrison_State_ShadowheartKilledNightsong",
                  "SHA_NightsongPrison_Event_ShadowheartThereForFate"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Karlach: High derision. She doesn't support what just happened.\nHalsin - bitter"
              },
              {
                "id": "PAD_NightsongsFateReaction_5",
                "speaker": "Player",
                "text": "I hope your goddess is pleased.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Halsin - bitter"
              }
            ],
            "AD_DarknessPlaque": [
              {
                "id": "AD_DarknessPlaque_0",
                "speaker": "Narrator",
                "text": "*Shroud yourself in blackest night.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_EntrancePlaqueReaction_2": [
              {
                "id": "PAD_EntrancePlaqueReaction_2_0",
                "speaker": "Player",
                "text": "|Minthara Line|",
                "node_type": "normal",
                "checkflags": [
                  "MOO_BalthazarsSecrets_Knows_NightsongSecret"
                ],
                "setflags": [],
                "goto": "",
                "link": "5",
                "is_end": false,
                "approval": [],
                "context": "InternalNodeContext: Shadowheart subnode deliberately excluded"
              },
              {
                "id": "PAD_EntrancePlaqueReaction_2_3",
                "speaker": "Player",
                "text": "Alive - and abandoned in this place for a very long time.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: Shadowheart subnode excluded"
              }
            ],
            "AD_NecroAndNightsong": [
              {
                "id": "AD_NecroAndNightsong_5",
                "speaker": "Nightsong",
                "text": "Hatred makes you so hideous, Balthazar.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "7cd27f5f-4eee-558e-eee6-ee37600f04ef_A"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_NecroAndNightsong_14",
                "speaker": "Balthazar",
                "text": "Unkind, Aylin. Unkind and incorrect - I could never hate my masterwork.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Gently chiding"
              },
              {
                "id": "AD_NecroAndNightsong_7",
                "speaker": "Nightsong",
                "text": "Perhaps you're right - perhaps you're incapable of feeling at all.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "AD_NecroAndNightsong_1",
                "speaker": "Balthazar",
                "text": "Please, Aylin - spare me. Your insults grew tired and shopworn years ago.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Unfazed"
              }
            ],
            "NightsongFreed": [
              {
                "id": "NightsongFreed_47",
                "speaker": "Nightsong",
                "text": "Our Lady of Silver. Hear me!<br>She Who Guides, the Moonmaiden Selûne -<br>MOTHER OF THE SO-CALLED NIGHTSONG.<br>THE NIGHTSONG IS NO MORE!",
                "node_type": "normal",
                "checkflags": [
                  "8a4a686d-6c47-411f-a0b3-d79ff33e2922"
                ],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: She kneels, head down, allowing the player to lay a hand upon her shoulder. As the hand makes contact, the hands appear upon her again - they glow and burs/ fade awayt. She steps forward nervously and stumbles, not having been free in a century and momentarily dizzied by the prospect of it. She catches herself on hand and knees, her head hanging. She begins to beat the ground with a fist in a slow, powerful rhythm. Then, she begins to hum an ancient, almost Gregorian chant. As she hums, the sound of it echoing through the Shadowfell builds and morphs into a chorus humming in harmony with her. She raises herself to her feet, but the rhythm continues, as does the song, independently of her.\n\nAs the music swells, Nightsong raises her voice in an invocation\n\rNodeContext: Shouted to the heavens."
              },
              {
                "id": "NightsongFreed_48",
                "speaker": "Nightsong",
                "text": "I am resplendent.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "27",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: A moonbeam lands on Nightsong, like a spotlight. She begins to glow as the music swells and reaches its climax.\nWithin the moonbeam, she transforms. Her wounds heal, and her rusted, dirty armour and torn clothes begin to mend.\nThe ragged, violently marred costume she was wearing is replaced, piece by piece, with the shining armour of a paladin of Selune.The spotlight on Nightsong fades. She is renewed, beautiful, powerful.\n\n\rNodeContext: With joy and gratitiude. Not ego, but fact."
              }
            ],
            "AD_StealthPlaque": [
              {
                "id": "AD_StealthPlaque_0",
                "speaker": "Narrator",
                "text": "*Trust your secrets to the night.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_Prayer": "Shadowheart recites verses of a prayer to Shar as she draws closer to Nightsong.This is a prayer that SH may have recited previously, now repeated as SH gets past the final hurdles to fulfill Shar's bidding. Urging herself on for the 'final lap'.",
            "AD_Plaque2": "This is a plaque with narrator AD near the soul cage - before the final trial of killing the Selunite to finish Dark Justiciar training. There are total 3 of them so information needs to be divided nicely.",
            "AD_MartialPlaque": "Narrator AD to read what is out on the plaque.",
            "AD_NecroUnavailable": "Nightsong indicates to the player that she cannot talk while Balthazar is unavailable",
            "AD_EntrancePlaque": "The player reads the plaque outside Nightsong's chamber. It instructs them to kill Nightsong in order to become a Dark Justiciar",
            "ArriveAtShadowfell": "After the player arrives at Nightsong's prison in the Shadowfell we see Balthazar show up, hot on the player's heels. Balthazar makes his way down towards Nightsong. Variant lines for:1. Met Balthazar in person, agreed to help2. Met Balthazar in person, didn't agree to help 3. Fallback (likely skipped meeting Balthazar)If Balthazar is dead then the player is just shown a cinematic shot of the Shadowfell",
            "AD_Plaque3": "This is a plaque with narrator AD near the soul cage - before the final trial of killing the Selunite to finish Dark Justiciar training. There are total 3 of them so information needs to be divided nicely.",
            "PAD_EnteredShadowfell": "PAD that plays after the end the cinematic upon entering the shadowfell in Nightsong's prison. Calls out to the player that they can jump down to the platforms below safely.",
            "NecroAndNightsong": "If Balthazar is alive when the player reaches Nightsong, they will encounter a dialogue where Balthazar and Nightsong square off. The player has one last chance to betray Balthazar and prevent him from taking Nightsong to Moonrise.",
            "PAD_ShadowfellEntrance": "Entered the final hall before entering the shadowfell in the shar temple. The area used to be used for Dark Justiciars to wash themselves, conduct last prayers and arming themselves before entering the waters into the shadowfell.",
            "PAD_NightsongsFateReaction": "PAD that plays after the players have finished the Nightsong Rtual situation in the Shadowfell.",
            "AD_DarknessPlaque": "Narrator AD to read what is out on the plaque.",
            "PAD_EntrancePlaqueReaction_2": "The player has read the plaque outside the entrance to Nightsong's Prison and the characters are reacting appropriately:- discovering Nightsong is a living being for the first time- confirming that same fact after learning it elsewhere- if Shadowheart, iterating her desire to sacrifice Nightsong/retrieve the spear required to do so.- reacting to Shadowheart’s desire to sacrifice Nightsong to Shar, with variables depending on if they’re just learning Nightsong is a living being here or not.",
            "AD_NecroAndNightsong": "Nightsong and Balthazar banter before the player arrives into the Shadowfell.",
            "NightsongFreed": "After the players free Nightsong she is returned to her former glory",
            "AD_StealthPlaque": "Narrator AD to read what is out on the plaque."
          }
        },
        "sha_trapjunction": {
          "scenario_name": "sha_trapjunction",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sha_orthonbed": {
          "scenario_name": "sha_orthonbed",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "sha_tadpoledskeletons": {
          "scenario_name": "sha_tadpoledskeletons",
          "session_sequence": [
            "PAD_OnTurn"
          ],
          "paths": {
            "PAD_OnTurn": [
              "PAD_OnTurn_0"
            ]
          },
          "node_data": {
            "PAD_OnTurn": [
              {
                "id": "PAD_OnTurn_0",
                "speaker": "Shadowheart",
                "text": "Why do Lady Shar's dead attack? Am I being tested...?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Conflicted. Spectres allied to Shar are attacking her in a Shar temple."
              }
            ]
          },
          "session_synopses": {
            "PAD_OnTurn": "Shadowheart expresses some conflicting feelings about fighting against the temple's defenders."
          }
        },
        "sha_orthonslair": {
          "scenario_name": "sha_orthonslair",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        }
      },
      "final_flags": [
        "SCL_Drider_HasMet_HarperCaster000",
        "GOB_SpiderNest_State_SpidersHostile",
        "DEN_AttackOnDen_HasMet_Prodigy",
        "DEN_CapturedGoblin_GuardsHasMet",
        "HAV_Umi_NightsongFreed_HasMet",
        "GOB_Checkpoint_Event_MoveToCamp",
        "UND_MyconidRevenge_Event_TakeHead",
        "8a9a14b0-87da-5c78-aa76-7a266de7a786_Phase1",
        "PLA_TavernInvestigation_Knows_AskedStelmane",
        "DEN_AttackOnDen_HasMet_Tiefling010Victory",
        "GLO_Moonrise_Knows_AbsoluteAtGrymforge",
        "COL_Vault_State_HasAccess",
        "CRA_DeadPrisoner_Dead_AskedQuestion",
        "UND_DuergarMutineerFollowUp_Event_Happened",
        "CHA_Outside_Event_DoorGuardConvinced",
        "e0b6dfeb-2923-e0ad-1dc5-2a5d1e055e16_local1",
        "DEN_AttackOnDen_HasMet_GrieflingFriend",
        "DEN_AttackOnDen_HasMet_Tiefling001",
        "GOB_QuartermasterFlimsy_HasMet",
        "HAV_SavingPrisoners_HasMet_Manip",
        "GEN_TransferNPCPayment_2",
        "DEN_AttackOnDen_Event_OpenGateAfterCombat",
        "5e9c4c72-4f56-2646-ce36-88207d2dc33c_KinSaved",
        "95496308-6e34-b8c7-93fb-3b5e56e71f5d_C",
        "GOB_OwlbearCub_Event_InvitedToCamp",
        "MOO_Docks_HasMet_DockObserver",
        "MOO_Jailbreak_HasMet_Guard004",
        "PLA_Desire_Knows_RavengardTaken",
        "DEN_DruidServant005_Knows_TalkedAboutLockdown",
        "UND_SocietyOfBrilliance_MindFlayer_State_MindFlayerFeeding",
        "PLA_ConflictedFlind_Event_MindControlDamage_Minor",
        "DEN_AttackOnDen_HasMet_Servant005Victory",
        "PLA_Desire_State_WyllComTrack",
        "CHA_Chapel_Event_OpenedJergalsTomb",
        "UND_DarkLake_State_ClaimedGekhWasDead",
        "DEN_AttackOnDen_Pet004_HasMet",
        "GLO_Player_Knows_MoonlanternExists",
        "GOB_PainPriest_Event_Reward",
        "2da46374-abab-9219-f7ce-2a002cfd72a5_a",
        "DEN_AttackOnDen_Ranged_001_HasMet",
        "GLO_Volo_HasMet_Personally",
        "GOB_PainPriest_State_ReactedToPenance",
        "8916beac-0385-3df9-de07-8be3cc6752a7_A",
        "da38cd0f-efef-6809-231d-26f71308cd07_B",
        "HAV_ProdigyLament_Knows_RolanAlive",
        "DEN_RaidingParty_Event_SkipConfrontation",
        "ORI_INCLUSION_SHADOWHEART",
        "GLO_TadpoledCount6",
        "PLA_TavernInvestigation_Quest_WallCollapsed",
        "PLA_Refugee_002_TollhouseMentioned",
        "DEN_AttackOnDen_HasMet_RobberKid",
        "FOR_PriestsConqueringGod_AlliedPlayer",
        "HAG_GurHunter_Dead_Knows_Hunter",
        "HAV_TieflingSurvivors_State_DidNotPromiseToSaveMol",
        "DEN_AttackOnDen_HasMet_PickpocketVictory",
        "DEN_GuardedEntrance_State_ParentsKnowDeath",
        "ORI_MintharaRecuitment_Event_InvitedToCamp",
        "FactionHostileToIndivPlayerAfterDialog",
        "GLO_IronhandGnomes_Knows_WulbrenInMoonrise",
        "WLD_FOR_GnomeGoblinsAngry",
        "Den_Thieflings_InterferingGuard_PCGotLore",
        "MOO_KitchenFight_HasMet_GnollMaster",
        "GOB_Checkpoint_Guard01_HasMet",
        "c7cbc714-5e48-c78a-0867-2ce81a42d681_B",
        "WLD_UnfortunateGnome_PayPassage",
        "4c78f756-720d-a285-a3e6-8f69a6069abc_Step1",
        "cd4b312f-5a40-b8c1-1ecb-0862c829a479_A",
        "5ebae00c-47d8-736c-6738-4ee56cebbc49_B",
        "GLO_Prodigy_State_ToldSiblingsProdigyDead",
        "MOO_Jailbreak_Event_ProdigyIntro",
        "DEN_General_YoungLovers_HasMet",
        "GLO_LiftingTheCurse_State_HalsinRecruitable",
        "GOB_PainPriest_Event_CheckHP",
        "GLO_Desire_HasMet",
        "b43d3bc7-f10d-73cc-232e-c1f93cba3ed5_Local2",
        "DEN_AttackOnDen_Pet002_HasMet",
        "FOR_UnfortunateGnome_State_NonCharlatanAccess",
        "UND_MyconidCircle_PlantDuergarHasMet",
        "aa1d4932-8689-5e30-2b17-9b0968663a7a_historysuccess",
        "MOO_Execution_Knows_Executioner",
        "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_WyllSpoke",
        "GOB_WolfPens_Worg_002_HasMet",
        "PLA_GithChokepoint_State_FailedReadingMap",
        "PLA_ZhentShipment_Agent_002_StartInclusion",
        "GLO_HAV_TakingIsobel_HasMet_BriefInRoom",
        "SCL_Drider_HarpersAtInn_OneLinerHasMet",
        "4951b7ce-8495-b2c8-badc-beaff0e3d807_H",
        "d2eeb9af-9d20-919f-5bcf-63b09a554a90_A",
        "DEN_ShadowDruid_Event_SetFaithwarden",
        "73cbf53d-6017-fdd5-a96a-9cae574a1bd9_B",
        "CRA_DeadPrisoner_Dead_MentionedTadpole",
        "GLO_Absolute_Knows_MoonriseTowers",
        "DEN_Rat_Event_MoveToShack",
        "DEN_DruidAttack_HasMet_Protester3AfterAttack",
        "ORI_Inclusion_End_Karlach",
        "UND_WormWall_State_RecognisedCrawlers",
        "GLO_GithChokepoint_DragonAppear",
        "SHA_Merregon_000_HasMet",
        "df3e1892-2ab5-7b69-e57b-a75504e1a8f2_B",
        "10297257-36dd-3799-f681-657656779d4a_TieflingsLaezelAD1",
        "ORI_Inclusion_End_Wyll",
        "DEN_AttackOnDen_HasMet_BackupLeader",
        "GLO_HeadRemoval_Event_HeadToInventory",
        "4a8285f1-6d42-51cd-6803-92696f6e8f7d_A",
        "CHA_Jergal_Event_AttemptedAttack",
        "9b4c05c6-0a79-ea8d-c351-43d6fbb04abc_Story1",
        "GOB_AbsoluteCultistStiff_HasMet",
        "GLO_Shadowcurse_Knows_FromGnome",
        "PLA_StuckHalfElf_Knows_ExplainedDowry",
        "FOR_BugBearLove_Event_MovePlayerInside",
        "DEN_Stargazing_Event_SawDragon",
        "SCL_Drider_HarperRanger_000_AtAmbush_HasMet",
        "SHA_LastJusticiar_Event_JusticiarTransforms",
        "ORI_INCLUSION_ASTARION",
        "FOR_UnfortunateGone_TiedUpHasmet",
        "HAG_Hagspawn_State_JakeBerserk",
        "6cf6ff37-64f7-3ccf-d702-ee2025510422_B",
        "UND_EbonLake_Event_MoveToLake",
        "FOR_SeluneStash_NoticeStashSeal_CommentedOnSeal",
        "GOB_Torturers_Rat_001_HasMet",
        "GOB_Scrying_NoddedOrShrugged",
        "DEN_BirdSender_HasMet_GobLeadersDead",
        "a759296c-5d41-f5b9-7d31-1c70d1e10dc7_Once",
        "8ab0520b-3a8d-822f-1934-336e2d24e0a0_B",
        "d3eb78cf-ff8c-1e7a-7df7-4b6a04226b17_B",
        "DEN_HarpyMeal_Event_OriginCharm3",
        "683cb55e-08b9-c865-78a6-4e047ee62a24_B",
        "GLO_Tadpoled_UsedToday1",
        "GLO_HAV_TakingIsobel_HeardOfIsobel",
        "DEN_Thieflings_Event_PartnerQuestionAsked",
        "HAG_SurrogateMother_HasMet",
        "b83032a9-f599-fdff-c180-c2d1f267bdb4_B",
        "421668a5-7b68-9e8b-977b-522b4a071156_B",
        "b2a52f0b-5fa8-d275-f080-0fc8edbe1faf_B",
        "GOB_GoblingKing_Event_HealerPersuasion",
        "UND_DuergarCamp_State_DocksHostile",
        "PLA_ZhentShipment_Agent_001_StartInclusion",
        "57c003e7-0932-6f0c-e655-99025a4abe3a_B",
        "DEN_AttackOnDen_HasMet_TieflingLeader",
        "09983dce-d7d0-c108-506f-dcadc4044b0a_Derryth_SwD_Who",
        "PLA_TavernInvestigation_State_HasMet",
        "ORI_Inclusion_Karlach",
        "UND_BrokenMoonLantern_HasMet",
        "3483cea8-0c11-9432-2421-6b95b9140d95_B",
        "7611fa51-4b1b-3d2c-a8a5-74c04d9db7fa_AnimalHandlingSuccess",
        "UND_DuergarPatroller_03_HasMet",
        "DEN_DruidAttack_HasMet_HideoutLeaderAfterAttack",
        "DEN_TieflingScam_Event_InspectedBox",
        "GnomeAskedHelp",
        "3f665b97-a69e-81c5-68e6-5b931720721e_Part1",
        "CHA_LaezelRecruitment_MindMeld",
        "MOO_Bazaar_BazaarStander_006_JailbreakSuccess_HasMet",
        "94cd0a22-c842-d9f3-8121-f8ac16410656_A",
        "SCL_MastiffPoachers_Knows_ContinualFlame",
        "GLO_ScryingEyes_State_FeltGaze",
        "DEN_GuardedEntrance_HasMet_Guard3",
        "DEN_RaidingParty_Event_KanonOpensGate",
        "MOO_Jailbreak_HasMet_Warden",
        "DEN_AttackOnDen_HasMet_Wyll",
        "ORI_Shadowheart_State_DestroyedHaven",
        "PLA_ConflictedFlind_Knows_Gnolls",
        "GLO_TalkedToVoloAboutAbsolute",
        "UND_MyconidCircle_DwarvenAlchemist_BaelenRestoredHasmet",
        "6bc7114f-5279-4374-385e-b396157d5189_B",
        "COL_Barracks_State_InterruptConvinced",
        "GOB_Festivities_Trader_HasMet",
        "DEN_AttackOnDen_HasMet_Tiefling004",
        "ZhentDungeon_AgreedBuy",
        "11d70a18-2aae-47a0-1a18-c486858b1eaf_B",
        "DEN_GruntingKid_Event_DisappearIntoWall",
        "GOB_BattleStations_HasMet_WarDrum",
        "GOB_GoblinJolly_HasMet",
        "UND_MyconidCircle_InjuredGnome_ReportedGrymforgeFate",
        "564fac12-29bd-3abe-d380-0a864e688883_Turn1",
        "COL_TadpolingCentre_MemoryImprint_FirstUse",
        "HAV_TieflingSurvivors_Mirkon_EndInclusion",
        "DEN_Apprentice_HasMet_ReactedToShadowDruids",
        "DEN_CampGeneral_HasMet_Gatekeeper",
        "SCL_Drider_HasMet_CaravanHalfOrcCaster",
        "HAV_WrootRequest_Wulbren_AskedAboutIronhandGnomes",
        "UND_DeadInTheWater_CorpseDisposerCompanion_HasMet",
        "UND_MyconidCircle_MyconidSuspicious_HasMet",
        "MOO_Jailbreak_Knows_ToolsNeeded",
        "DEN_Hideout_State_GivenWarning",
        "PLA_Refugee_002_HasMet",
        "UND_DuergarGuard_AtPier_01_HasMet",
        "DEN_DruidAttack_HasMet_PickpocketTraderAfterAttack",
        "SCE_Jergal_HasMet",
        "DEN_RaidingParty_Event_OpenDenGate",
        "b8101d0a-5473-efd1-1d12-719d504d60b8_B",
        "SHA_Displacer_SwA_HasMet",
        "GOB_GoblinKingDead_Event_SaidFugitives",
        "HAV_SavingPrisoners_HasMet_Florrick",
        "HAV_EnteringHaven_State_RevealedArtifact",
        "UND_State_LeaderFreedGnomes",
        "41e56e7f-1722-7350-33dc-aefe523650fe_B",
        "d3d3855d-6721-b089-5c1e-d6d255a46fdc_A",
        "PLA_ZhentDungeon_State_SaidPassword",
        "c3207254-eafb-348b-d327-f690af0e213f_startedattackmove",
        "DEN_AttackOnDen_HasMet_TieflingBard",
        "UND_MyconidCircle_BroodingSovereign_State_InParty",
        "DEN_AttackOnDen_HasMet_Kid004Victory",
        "DEN_Hideout_Event_LeaveCountdown",
        "1493763b-776c-959c-259a-89f34f326e04_A",
        "UND_FurnaceSearch_Knows_Xargrim",
        "HAV_ProdigyLament_Knows_SiblingsInMoonrise",
        "DEN_AttackOnDen_ZenBear_HasMet",
        "SCE_TieflingFollowUp_Knows_MolMissingEyepatch",
        "DEN_DevilishOx_State_ArcanaCheckComplete_SwA",
        "fa6e2ce0-64f3-bfb8-fb47-10f50f02cadf_AbsoluteMentioned",
        "MOO_Bazaar_HasMet_Bystander01",
        "SHA_Displacer_Event_DeceptionAttempted",
        "DEN_AttackOnDen_Event_PassedByEntrance",
        "DEN_Thieflings_TieflingGuard11_HasMet",
        "GOB_Trader_Knows_Goods",
        "DEN_AttackOnDen_HasMet_Tiefling005",
        "GOB_GoblinToast_Event_ToastSuccess",
        "COL_Barracks_Mistress_Knows_ThinksPlayerIsThrall",
        "c9e1ff2a-01e2-abdb-b98e-2d4a35b3c7dc_A",
        "DEN_ZenBear_Helped",
        "MOO_GuardRoom_HasMet_Guard02",
        "FOR_KnifeInMeat_State_KnifeBroken",
        "GOB_Festivities_Goblin001_HasMet",
        "2fb08ca0-df67-8450-3f01-c1e1c2a78b59_A",
        "FOR_GnomeGoblin1_HasMet",
        "SCL_Drider_Event_PlayersStartFollowingDrider",
        "7cf65f2f-1a29-daa2-940e-1159a8940b4e_C",
        "DEN_TieflingRefugees_Quest_HuntRewardOffered",
        "DEN_RaidingParty_Event_GatekeeperToLever",
        "DEN_DruidAttack_HasMet_ServantGnome",
        "COL_NecroLab_GrandDesignSculpture_HasMet_LaezelInclusion",
        "FOR_GoblinAmbush_Event_StopSpotting",
        "HAV_Cat_HasMet",
        "DEN_AttackOnDen_HasMet_RitualDruid003",
        "ReportedToDerryth_BaelenIsAlive",
        "GOB_Owlbear_HasMet_NotChasing",
        "UND_SocietyOfBrilliance_MindFlayer_HasMet",
        "ba2b225d-e9d4-944d-5b4f-b27dd975c626_A",
        "DEN_AttackOnDenDruidLeader_State_HasMet",
        "6fa2b72d-fde1-4ee3-e1d1-f184232f693d_A",
        "DEN_DruidAttack_HasMet_ParentBAfterAttack",
        "DEN_General_Squirrel_LearnedTerritory",
        "MOO_Assault_HasMet_KethericHound",
        "HAG_Hagspawn_Knows_PromisedRaiseHusband",
        "OriginAddToParty",
        "ORI_Shadowheart_Knows_CurseResistant",
        "PLA_ZhentShipment_Agent_001_Inclusion_Start",
        "GOB_RaiderStupid_HasMet",
        "83fdf5e9-88b8-19e7-ba8f-ff075d2222ce_PLA_ZhentShipment_Knows_Gnolls",
        "DEN_Apprentice_Event_RevealedTadpole",
        "DEN_Thieflings_Event_HideoutTrespassCrimeResolved",
        "469a1188-028b-0e6b-b595-fa464baa551e_b",
        "GOB_RaiderBold_HasMet",
        "FoundCounsellor",
        "UND_DuergarCamp_State_SidedNone",
        "HAV_WrootRequest_Gnome002_NightsongFreed_HasMet",
        "a0afae3d-53b0-192d-d822-c61da104f979_A",
        "8f847adf-7b8a-3551-cfc0-4ea0c66a999a_F",
        "SCL_DriderHarper_Melee_000_StartInclusion",
        "SHA_Merregon_006_HasMet",
        "DEN_Apprentice_State_ShadowDruidPath",
        "DEN_AttackOnDen_HasMet_LeaderKidVictory",
        "FOR_Monitor_Event_TakeFood",
        "GOB_GoblinToast_ThirdGoblinToasted",
        "5b1ec9d1-cec5-2107-d929-f1af9c05d5d9_B",
        "FOR_Monitor_State_TransformToDevil",
        "DEN_Thieflings_HasMet_Guard2",
        "DEN_Thieflings_HasMet_Mol",
        "ORI_Karlach_HasMet",
        "MOO_Execution_State_PlayerWantedToAttack",
        "SCL_ServantOfTheRaven_Raven_HasMet_SWA",
        "GOB_Festivities_HasMet_Ogre_00",
        "GOB_RatRacket_LocalRat_002_HasMet",
        "4466a73c-607a-4a7e-c1e5-94d549e8f23d_A",
        "ce2b9169-f3e7-e07f-9c58-0fd373d5df9a_PLA_ZhentDungeon_Zhent02_Dead_KnowsZarysisZhentarim",
        "HAV_Minthara_Hasmet",
        "MOO_Jailbreak_Knows_GnomeEscape",
        "DEN_AttackOnDen_Event_EnemiesAppear",
        "GLO_Ketheric_Knows_ImmortalitySource",
        "003e1f20-0cac-171b-aa7c-df901e42aa6c_B",
        "FOR_SchoolOgres_Event_AttemptedFirstSkillCheck",
        "GOB_Checkpoint_State_UsedAlarmOnce",
        "HAV_ProdigyLament_Event_Intro",
        "DEN_GoblinScouts_State_SavedDruid",
        "DEN_AttackOnDen_HasMet_Adventurer2",
        "d6df8edb-ac4b-e1d2-794b-6bfd00757cbf_A",
        "MOO_Assault_AssaultFlamingFist_003_ThroneRoomDefeated_HasMet",
        "SHA_Merregon_001_HasMet",
        "HAV_ProdigyLament_HasMet_Ide",
        "GOB_GoblinToast_Event_IncludeFourthGoblin",
        "15b0a2b9-2b22-50ab-70c0-ab3042def597_GaleCommentTried",
        "DEN_HarpyMeal_InHideout_WasMean",
        "PreventTradeWithPlayer",
        "DEN_GoblinHunt_Event_GiveRewardBag",
        "1bddcc22-dadd-92c9-4186-4e10ebbfee68_CHA_Crypt_Jergal_DontFollow",
        "UND_AdamantineForge_Knows_Adamantine",
        "DEN_AdventurersQuest_Knows_AradinStory",
        "FOR_Bottomless_State_InteractedWithWell",
        "8baf8087-81b0-de5d-3efa-f74769a625f4_B",
        "ORI_INCLUSION_MINTHARA",
        "SCE_Debrief_State_PartyDebriefed",
        "MOO_Jailbreak_HasMet_Wulbren",
        "DEN_AttackOnDen_HasMet_ChefAndSon",
        "ORI_Inclusion_Astarion",
        "UND_DarkJusticiarsCorpses_Recognized",
        "fd9ed69f-475f-def2-bae0-25065ccc4143_B",
        "GLO_Florrick_State_KnowsWyllDevil",
        "GLO_Desire_State_FreedInAct1",
        "MOO_MoonriseTower_State_Outcast",
        "DEN_DruidLair_Knows_DruidsAlliance",
        "1591cb60-9e65-980a-c49e-69f68b958a1d_B",
        "GOB_Checkpoint_State_GainedAccess",
        "FOR_UnfortunateGnome_Bargaining",
        "DEN_AttackOnDen_HasMet_ProdigyBrother",
        "UND_Elevator_Event_GotWarning",
        "UND_FearfulRothe_Event_MakeDuergarHostileInDialog",
        "GOB_GuardUpset_State_ConvincedTrueSoul",
        "SHA_Trials_Knows_SeenAltarInscription",
        "DEN_CapturedGoblin_State_InTransit",
        "GLO_Thieflings_State_PCShookPickpocketSister",
        "GOB_GEB_TorturedAdventurer_Assault_HasMet",
        "DEN_GroveConflict_Event_StoleIdolAttempt",
        "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_NoFFPresent",
        "29ddc96b-303b-373d-2b6f-37ae4e8d534b_A",
        "DEN_Thieflings_Event_CallGuard",
        "SCL_Drider_HasMet",
        "DEN_AdventurersQuest_RaidAdventurerAtCorps_HasMet",
        "UND_FearfulRothe_HasMet_Rothe_001_SpeakWithAnimals",
        "UND_FearfulRothe_State_BefriendedRothe",
        "0d6dbe21-1644-b9bf-8297-dd60d820bd99_B",
        "DEN_GuardedEntrance_HasMet_LiedAboutDeath",
        "FOR_ApothecaryGoblins_Goblin01_HasMet",
        "HAG_AnimalIllusion_Revealed_HasMet1",
        "DEN_TieflingScam_Event_TalkedAboutBox",
        "SCE_Alfira_Event_GaveShiningDawn",
        "0276d317-8b34-66e2-48e2-6b9d69d6830b_F",
        "UND_Automaton_Knows_AskedPlace",
        "HAV_Florrick_Event_RavengardInTowers",
        "CRA_DeadFisherman2_Dead_WhatDoing",
        "GOB_GoblinToast_Event_IncludeThirdGoblin",
        "DEN_AttackOnDen_HasMet_PickpocketTrader",
        "COL_TadpolingCentre_Knows_IdentifiedDarkUrgePod",
        "0cca6d90-e7d5-b1d6-8d9e-f6b5b8f65006_B",
        "GOB_GoblinThroneCheckpoint_Pass",
        "HalsinLeft_KilledLeaders",
        "DEN_AttackOnDen_HasMet_Halsin",
        "c167cdf3-7201-e55c-222f-773c758e1000_IncludedHusband",
        "HAG_HagLair_Victim_001_HasMet",
        "MOO_Audience_State_KethericToldToKneelAtAltar",
        "PLA_StuckDwarf_HasMet_FoundWife",
        "GOB_SpiderNest_State_SpidersChill",
        "PLA_Tavern_Knows_DukeInTavern",
        "ORI_INCLUSION_KARLACH",
        "PLA_ZhentDungeon_State_AgentFreed",
        "UND_FurnaceSearch_Event_DuergarMentionsForge",
        "GLO_Moonrise_Knows_GoblinsCapturedADuke",
        "DEN_DruidLair_Knows_FoundingGrove",
        "FOR_Monitor_HasMet_Dinner",
        "AskedCircle",
        "SCL_Drider_HasMet_CaravanFirstTime",
        "03b6aa2e-e805-3a51-6bdb-d92f0b0da84a_UND_MyconidCircle_ServantHookHorror_01_RecognisedMonster",
        "DEN_GuardedEntrance_HasMet_Protester1",
        "SCE_Minthara_HasMet",
        "MOO_Assault_AssaultHarper_002_ThroneRoomDefeated_HasMet",
        "ToldAboutTadpole",
        "DEN_DruidAttack_HasMet_Tiefling010AfterAttack",
        "f3f236b2-37a1-a0a2-5855-184ead7b1286_C",
        "GOB_DrowCommander_State_Hostile",
        "UND_ArguingGnomes_Event_LearnedAboutPhilomeen",
        "UND_PetrifiedDrow_Knows_WizardIsDhourn",
        "MOO_InfernalVendor_State_ConsentedLowHealth",
        "ORI_Inclusion_End_ShadowHeart",
        "MOO_Assault_HasMet_HarperQuartermaster",
        "ORI_Shadowheart_Knows_SeenTempleVista",
        "FOR_BugBearLove_Event_CoupleHostile",
        "HAG_AnimalIllusion_Narrator",
        "SCL_DriderHarper_Ranger_001_StartInclusion",
        "DEN_Thieflings_State_DoneChase",
        "UND_ElevatorGuard002_HasMet",
        "ThankedFreed_BeldronThulla",
        "ORI_INCLUSION_MINSC",
        "DEN_Thieflings_Knows_PlayerRobbed",
        "DEN_ShadowDruid_HasMet_Opposed",
        "GLO_TadpoledCount1",
        "HAV_ProdigyLament_Brother_RolanDead_HasMet",
        "DEN_DruidAttack_HasMet_ExcitedBoar",
        "3b2ae6b6-ca7e-d905-0430-128078b3119f_B",
        "720e85fb-cc00-b81a-efff-343a04ca221e_A",
        "DEN_DevilishOx_MeetAtDruidsGrove_HasMet_SwA",
        "UND_ClericPetGrave_HasMet",
        "99aa7b78-defd-57bc-eabf-a8aa43a030d9_A",
        "UND_MyconidCircle_DirectToSovereign_HasMet",
        "UND_GnomeWorkerLumpy_HasmetRescued",
        "DEN_GroveConflict_Quest_Learnt3LeadersTwoNames",
        "d97f72ff-8fb1-8a4c-f169-89751bd6e125_b",
        "SHA_Trials_PAD_SpotGem_Event_FirstGemSeen",
        "ORI_INCLUSION_RANDOM",
        "HAG_Well_Event_DrinkWell",
        "a7407f82-add0-9f6d-e4e6-78b9c39195a6_C",
        "HAV_SavingPrisoners_HasMet_Inspector",
        "ORI_INCLUSION_WYLL",
        "4118b185-9468-2295-93f3-9d6eafd8fb8a_Second_Disabled",
        "FOR_GoblinAmbush_State_DrowAutoPass",
        "DEN_TieflingLeader_Quest_GobHuntResponded",
        "GLO_Halsin_Event_TalkedWithDruidLeader",
        "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionRefused",
        "HAV_ProdigyLament_State_ToldStory",
        "SCL_EntryPoint_Event_GainedAccessToCaravanCampFromDialog",
        "ORI_Inclusion_Gale",
        "DEN_RitualDruid_HasMet_Left5",
        "PLA_Desire_Quest_TriedForceDoor",
        "HAV_ProdigyLament_Event_RudeWithIde",
        "DEN_Thieflings_Pickpocket1_PCIsNotAChump",
        "MOO_InfernalVendor_State_AskedAboutDeals",
        "MOO_Jailbreak_Event_SaveTieflings",
        "DEN_AttackOnDen_HasMet_Refugee002",
        "fb0e13b6-cc68-d496-51c2-4594f4f5bf40_TauntHer",
        "182bb613-b70c-5e7c-b3ea-ea14e02d1fab_C",
        "GOB_PainPriest_Event_PickScourge",
        "DEN_GroveConflict_Knows_HeardAboutRitual",
        "d0423454-cc51-ae8e-5096-cffd1aac9f75_A",
        "FOR_BugBearLove_Knows_Lovemaking",
        "MOO_Assault_AssaultHarper_001_ThroneRoomDefeated_HasMet",
        "ORI_INCLUSION_LAEZEL",
        "DEN_DruidAttack_HasMet_SonOfChefAfterAttack",
        "HAG_HagLair_TalkingDoor_HasMet",
        "ORI_Inclusion_ShadowHeart",
        "HAV_TieflingSurvivors_Mirkon_StartInclusion",
        "1ea9e483-36a9-82b1-852f-b901ec25552a_a",
        "DEN_Prodigy_HasMet",
        "PLA_ZhentShipment_State_TalkedAfterKilledGnolls",
        "551618bc-83c9-52cc-0ca7-37c224446cf7_Local1",
        "GOB_Bravado_State_Goblin3Hasmet",
        "MOO_Docks_HasMet_DockJumper",
        "SCE_GnomeFollowUp_HasMet_WulbrenAlive",
        "HAV_LiftingTheCurse_Knows_SeekingBreath",
        "SCE_TieflingFollowUp_Ide_HasMet",
        "SCL_Drider_Event_PlayersAttackHarpers",
        "FOR_BottomlessWell_InteractWithWell_Knows_LookedDown",
        "ORI_INCLUSION_GALE",
        "DEN_GuardedEntrance_HasMet_Parents",
        "GOB_GoblinToast_Event_IncludeSecondGoblin",
        "ca797aab-5a73-7ec5-edb7-022122573b39_B",
        "HAV_ProdigyLament_Sister_RolanDead_HasMet",
        "SCL_DriderHarper_Caster_000_StartInclusion",
        "DEN_AttackOnDen_Event_HeftyTieflingQuip",
        "COL_Vault_Event_Start",
        "HAV_ProdigyLament_HasMet_Rolan",
        "MOO_InfernalVendor_Event_SellingBlood",
        "GLO_Factions_Knows_Harpers",
        "GOB_WolfPens_Event_HalsinLeftParty",
        "SCL_Drider_HasMet_HarperMelee000",
        "FactionHostileToPlayerGroupAfterDialog",
        "MOO_Jailbreak_HasMet_ProdigySister",
        "ORI_Laezel_Quest_FoundZorru",
        "GOB_GoblinPriest_Event_FreedFromChains",
        "PLA_StuckHalfElf_Knows_MentionedDowry",
        "0e791991-068a-3008-e14c-d70ae36d240f_B",
        "SCL_Drider_AtTower_HasMet",
        "21e0890e-7019-66a3-1956-125405f96d7c_A",
        "a63e4af2-6edc-188a-efdf-b9ffc5460fc5_LOCAL_B",
        "SCL_Drider_Event_ResumeEscort",
        "DEN_DruidAttack_HasMet_DruidOpposedAfterAttack",
        "SHA_Orthon_HasMet",
        "FOR_PriestOfTheConqueringGod_Cultists_Knows_Mission",
        "DEN_Apprentice_Event_RemoveBirdExhaustion",
        "DEN_CampGeneral_PCGotLore",
        "SpokeToBrothers",
        "5f09c70a-153e-77e8-731c-5c532e635809_B",
        "DEN_DruidAttack_HasMet_GatekeeperAfterAttack",
        "SCL_Drider_HarperCaster_000_AtAmbush_HasMet",
        "LearnedGroveSituation",
        "DEN_RaidingParty_Event_UnsheatheForFight",
        "ReachedWife",
        "SCE_BackupLeader_HasMet",
        "GOB_Festivities_BugbearSleeper_00_HasMet",
        "GLO_TadpoleIntro_NPC",
        "DEN_Thieflings_Knows_KidsThieves",
        "30d43adb-dcaf-c0f3-d432-af96a1c2e1ea_spoketowulbren",
        "MOO_Execution_Guard_002_Hasmet",
        "DEN_ShadowDruidLeaderPostGoblins_State_HasMet",
        "DEN_GroveConflict_Knows_LeaderNameKing",
        "153f4e14-c830-5653-1638-7495b0b9fc12_A",
        "SCE_TieflingFollowUp_Knows_MeanAboutMol",
        "TemporaryHostilityAfterDialog",
        "0884581d-9f92-0a34-9440-6a54c0813bbe_ProceedToSecondStage",
        "GLO_Inclusion_End_Halsin",
        "DEN_Prodigy_HasMet_Brother",
        "GLO_Absolute_Knows_TrueSoul",
        "440db1a3-14ad-8127-a14b-c445049225db_HasMetInTower",
        "UND_GnomeForeman_UnfortunateGnome_InclusionStart",
        "SCL_Drider_State_SidedWithCaravan",
        "DEN_WeepingTree_HasMet_Bear",
        "PLA_ZhentDungeon_Dog_03_HasMet",
        "13d9f9ef-d1da-1d1d-287f-7a1763d72c38_B",
        "GOB_DrowCommander_Knows_DrowLeader",
        "ORI_Shadowheart_State_IdolHint",
        "ea88dfe9-ff39-9b98-ae03-48d7fdf2708e_A",
        "DEN_AttackOnDen_HasMet_Refugee004Victory",
        "ORI_Inclusion_End_Astarion",
        "OrderedKillDruids",
        "DEN_DevilishOx_MeetAtDruidsGrove_State_Peaceful",
        "DEN_AttackOnDen_HasMet_RitualDruid002",
        "PLA_StuckHalfElf_StartInclusion",
        "DEN_Thieflings_Pickpocket2_HasMet",
        "375a6f59-375f-f5eb-5f42-60de2dc6aa6b_B",
        "GOB_Checkpoint_Event_WarnedAtCliff",
        "ORI_Shadowheart_State_HeardSharVoice",
        "PLA_ZhentShipment_State_Talked",
        "RefusedHelpBrothers1",
        "GOB_PainPriest_Event_ReactToMocking",
        "DEN_DruidLair_Knows_RuneAppearance",
        "SCL_HarperScouts_ShadowCreatures_HasMet",
        "711fda6a-05e2-6677-b067-9b1c710e0cdb_B",
        "GLO_Hag_KnowsAboutSurrogate",
        "MOO_Jailbreak_Event_ForceBoatLeave",
        "MOO_Assault_AssaultFlamingFist_002_HasMet",
        "81f2a55d-d317-761f-f6a0-fe97ad6d5288_C",
        "UND_DuergarCamp_Knows_NereIsTrapped",
        "DEN_SenderBird_Event_TakeOff",
        "FOR_GnomeGoblinsPacified",
        "DEN_DruidAttack_HasMet_ChefAfterAttack",
        "ParentLied",
        "SCL_Drider_HasMet_CaravanHalfOrcMelee",
        "7256657b-1386-989f-0262-c6530e03a9fb_AskedWhy",
        "DEN_General_Inclusion_End_Pickpocket",
        "DEN_WeepingTree_Bear_Upset",
        "UND_TheDrowNere_Mutiny_InclusionStart_GnomeSilly",
        "bde7a4f1-933f-f6ce-4a3e-4b1f29f83704_B",
        "SHA_Orthon_Event_OrthonQuestionsSearch",
        "UND_TheDrowNere_Event_HadMindMeld",
        "57c003e7-0932-6f0c-e655-99025a4abe3a_A",
        "DEN_YoungLovers_State_MetPlayer",
        "GLO_Inclusion_Halsin",
        "5310a408-76a3-3498-cc26-ae866871188b_Third_Disabled",
        "HAV_General_HarperScout_001_HasMet",
        "7ffcf0de-e30b-ef58-fcc5-8d3a1482fa59_b",
        "GLO_Absolute_Knows_GoblinsWorship",
        "DEN_Weaponsmith_Knows_Elturel",
        "SCL_DriderHarper_Ranger_000_StartInclusion",
        "DEN_ShadowDruid_Event_ReactionDone",
        "CHA_Crypt_Event_JergalAppears",
        "PLA_ZhentDungeon_Zhent05_HasMet",
        "DEN_TieflingLeader_HasMet_ReactToDruidAttack",
        "ORI_Laezel_State_StartedTieflingsSceneAtCage",
        "DEN_BirdSender_HasMet",
        "UND_MyconidCircle_DeepRothe_BaelenAteShroom_Hasmet",
        "GOB_BattleStations_Event_ToStation",
        "1fbc1449-b85a-90a5-3f67-a8898acbd1d0_B",
        "DEN_AttackOnDen_HasMet_Trainer",
        "GOB_GoblinHeretic_FreeToGo",
        "GOB_GoblinThroneCheckpoint_State_NonCharlatanAccess",
        "1c74b01f-5dcf-8107-b384-204d341ed9d5_OnlyOnce",
        "DEN_Thieflings_State_MessedWithMolsKids",
        "PLA_Refugee_001_HasMet",
        "UND_MyconidCircle_State_GainedAccess",
        "HAV_EnteringHaven_State_GainedAccess",
        "DEN_DruidAttack_HasMet_ParentAAfterAttack",
        "GOB_Checkpoint_State_GoblinsToldLeaders",
        "UND_DuergarCamp_Mutineers_HasMet",
        "LearnedDukeMissingCounsellor",
        "SCL_Drider_State_DeadCultistSituationDefused",
        "MOO_MintharaFate_Event_LeavesForCamp",
        "SHA_NightsongPrison_State_ShadowheartGaveOpinion",
        "SCE_JergalDebrief_Event_WhyHere",
        "94cd662c-844b-4dcc-ffdc-0b9a8da32bcc_BarcusSpokeUp",
        "DEN_AttackOnDen_HasMet_LairDoor",
        "RikkaAskedQuest",
        "MOO_Bazaar_State_PilgrimsToTown",
        "DEN_General_Event_TriedNudgingBear",
        "DEN_HasMet_SoloParentB",
        "DEN_RitualDruid_HasMet_Left2",
        "GOB_Torturers_HasMet_Goblet",
        "FOR_BugbearLove_State_InterruptedCouple",
        "DEN_AttackOnDen_Servant005_Answered",
        "UND_BroodingSovereign_State_RefusedCircle",
        "DEN_Thieflings_HasMet_Trainee1",
        "UND_DeadInTheWater_CorpseDisposerLeader_HasMet",
        "MOO_Assault_AssaultHarper_003_ThroneRoomDefeated_HasMet",
        "DEN_Tiefling011_State_Met",
        "DEN_Thieflings_PersuadedPickpocket",
        "GOB_GoblinToast_Event_NoMoreRefills",
        "ORI_Inclusion_Random",
        "MOO_Bazaar_HasMet_Guard00",
        "PLA_KarlachRecruitment_State_PersuasionSucceeded",
        "DEN_Thieflings_State_WitnessedArgument",
        "200aa519-5963-3b2d-3396-d1dcbb013702_AskedStrategy",
        "COL_TadpolingCentre_HasMet_Yeva",
        "3b911555-52e5-7791-d2ac-44fe62465fa1_Loop3",
        "MOO_Assault_AssaultFlamingFist_001_ThroneRoomDefeated_HasMet",
        "GOB_RaiderCunning_HasMet",
        "GOB_Eye_HasMet",
        "DEN_AttackOnDen_HasMet_Refugee003",
        "DEN_Weaponsmith_HasMet",
        "34910f06-fac0-085f-b41a-337d0dfad85a_A",
        "ORI_Inclusion_Laezel",
        "GOB_GoblinToast_SecondGoblinToasted",
        "9e2ef14b-1a2f-4edc-3f78-7e3a27967e5c_C",
        "DEN_AttackOnDen_HasMet_ScoutCaptive",
        "PLA_KarlachRecruitmentTollhouse_State_HostilitiesBegan",
        "UND_PetrifiedDrow_Knows_MemoryCrystal",
        "6d32676a-ac06-3f94-8377-35a6aed97492_B",
        "UND_FairyRings_Dead_AskedDrowIdentity",
        "ZevlorRewarded",
        "SCL_Drider_HasMet_CaravanGoblinRanger",
        "8f819d41-e936-8042-1935-56de252d6c7f_B",
        "GOB_PainPriest_Penanced",
        "b618166c-99f4-1c7a-02b7-32f0f0fbe420_LocalA",
        "SCE_TieflingFollowUp_Event_GiveShiningDawn",
        "DEN_AttackOnDen_HasMet_Servant004Victory",
        "DEN_AttackOnDen_HasMet_Mule1",
        "DEN_TieflingScam_HasMet",
        "DEN_AttackOnDen_HasMet_Kid003",
        "UND_FearfulRothe_Event_ConvincedRotheToAttackDuergar",
        "MOO_BugBearVendor_State_FoundMotive",
        "PLA_FlamingFist7_InnBurntDown_HasMet",
        "DEN_AttackOnDen_HasMet_Tiefling003Victory",
        "0d9d0064-babd-6e83-6ea6-5b78afb0413c_B",
        "SCL_Drider_Event_AvoidedCombat",
        "199a746e-309f-52f0-1a47-0375711725cb_A",
        "DEN_GoblinScouts_HasMet_Captive",
        "GLO_Absolute_Knows_Symbol",
        "PLA_ConflictedFlind_Event_MindControl_KillHerself",
        "GLO_SpeakWithDead_Event_QuestionAsked",
        "HAG_Hah_MaskedVictim2_HasMet",
        "DEN_DruidAttack_HasMet_ZenBear",
        "SCL_Drider_State_AfterAmbushSituationDefused",
        "GOB_PainPriest_Event_BadReaction",
        "SCL_ServantOfTheRAven_Servant_HasMet",
        "UND_BrokenLantern_State_TriedArcane",
        "461152ff-16c3-2617-f8af-7ddb5681820b_b",
        "ed70fdfc-3d7b-7753-1171-957f7316fe55_B",
        "MOO_EntranceCheckpoint_Guard2_HasMet_AllowedIn",
        "MOO_Bazaar_Bystander04_PostKetheric_HasMet",
        "SidedTieflings",
        "DEN_GroveConflict_Knows_KaghaRequestedPlayers",
        "PLA_StuckHalfElf_State_PlayerAngered",
        "SCL_Drider_Event_StartHarpersAmbush",
        "UND_BroodingSovereign_State_AskedCircle",
        "DEN_AttackOnDen_HasMet_Trainee001Victory",
        "UND_MyconidCircle_State_FirstGreetingDone",
        "6bde1237-aa43-36d3-9e53-ec1092198541_C",
        "SHA_Trials_Knows_LearnedAboutTrials",
        "UND_DarkLake_State_HostileResolution",
        "c3d825d1-49b8-9ae2-4554-4fc1f55d2eee_LocalA",
        "COL_TadpolingCentre_Event_PurgePods",
        "3c55f670-825a-6a8d-9e7e-8a5b7aa2f852_B",
        "DEN_ZhentAgent_02_Inclusion_Start",
        "DEN_AttackOnDen_HasMet_ProdigySister",
        "HAV_HarperScouts_Event_SawYonasFuneral",
        "ORI_Shadowheart_Event_DarkJusticiarHint",
        "HAV_General_HarperScout_000_HasMet",
        "873bc4e0-3d3c-1eac-903b-e94920fd6306_sawgithyanki",
        "DEN_CampGeneral_RufusHasMet",
        "DEN_Apprentice_HasMet",
        "DEN_General_Mule2_HasMet",
        "0d4d7cd3-5055-29a4-6bbd-e15fdf434e7a_A",
        "DEN_AttackOnDen_HasMet_ApprenticeVictory",
        "MOO_Bazaar_State_TalkedAboutPilgrims",
        "GLO_PixieBell_Event_TransformsIntoDeepRothe",
        "98423a2d-7b47-e379-6526-c435773e3cff_B",
        "14e6adcb-c6a8-99e4-1c39-4d3b925590e2_B",
        "3a47baed-8459-4629-40aa-893d83a8d0b2_C",
        "DEN_Thieflings_Event_PlayerNotInvolved",
        "HAG_HagLair_Knows_DoorWasAlive",
        "ThankedFreed_Beldron",
        "e6aef01a-0468-5046-e519-b9b624c704dc_B",
        "DEN_AttackOnDen_HasMet_Griefling",
        "4d9f1cb5-200f-c998-657a-8d04f5c93c74_B",
        "DEN_AttackOnDen_HasMet_RitualDruid005",
        "COL_Morgue_HasMet_Us",
        "4b4d2992-abb5-bd1b-9593-feb68eddf682_B",
        "SHA_NightsongPrison_Knows_NightsongIsPerson",
        "GLO_Ketheric_State_AngryAtPlayer",
        "ORI_Karlach_Knows_DammonWorkedInHell",
        "ORI_Inclusion_End_Random",
        "DEN_Squirrel_HasMet",
        "ORI_INCLUSION_HALSIN",
        "SCL_OliversDiary_State_SecondRound",
        "DEN_ShadowDruid_State_HadSelfReflection",
        "DEN_Thieflings_Pickpocket1_HasMet",
        "GLO_Ketheric_Knows_AboutImmortality",
        "PLA_FlamingFist7_Knows_AskedWhatHappened",
        "DEN_DruidAttack_HasMet_BardAfterAttack",
        "GOB_PainPriest_State_NeedMoreHP",
        "FOR_BugBearLove_Event_OpenDoor",
        "e680129a-9d39-6ffc-3e6d-926daf0d76ff_A",
        "DEN_Thieflings_State_PCSawKidThievesGettingCaught",
        "260f61d5-60df-da35-608b-a9856291b143_PlayerKnowsOrinKilledZevlor",
        "916a75f0-23d8-f05b-449d-d926d69fe782_FailedCheck",
        "MOO_Jailbreak_HasMet_AngrySister",
        "SCE_GnomeFollowUp_Wulbren_HasMet",
        "DEN_druidservant_005_HasMet",
        "CHA_Jergal_HasMet",
        "ORI_Inclusion_End_Gale",
        "PLA_ConflictedFlind_Hyena_001_HasMet",
        "StartedAlt",
        "DEN_RaidingParty_Adventurer2_HasMet",
        "GLO_Thieflings_State_PickpocketKidGotHit",
        "GOB_WolfPens_Event_HalsinLeavesGoblinCamp",
        "e6738c9d-060d-c901-b945-4d49ca303d5b_SuccessfullyReadTracks",
        "DEN_GruntingKid_HasMet",
        "SHA_Nightsong_HasMet",
        "SCE_TieflingFollowUp_Umi_HasMet",
        "16193247-ccea-1974-45ec-e8229a7de4ef_B",
        "DEN_TieflingLeader_Quest_GobHuntDeclined",
        "DEN_RaidingParty_Event_GoblinsAppear",
        "DEN_GuardedEntrance_HasMet_Guard1",
        "GOB_PainPriest_Event_FirstHitDone",
        "ORI_Inclusion_End_Laezel",
        "88c2a54f-df16-19d8-1f97-2c67947bdf74_B",
        "DEN_General_Event_ElevatorBearMoves",
        "DEN_CapturedGoblin_OfferedRevenge",
        "SCL_Drider_HasMet_CaravanGoblinMelee_000",
        "DEN_General_Inclusion_Pickpocket",
        "DEN_RitualDruid_HasMet_Left4",
        "GOB_DrowCommander_HasMet",
        "SCL_HarperScouts_State_PlayerTriedToLeave",
        "GLO_Jergal_State_OutOfTomb",
        "DEN_TieflingLeader_State_KaghaResolved",
        "f3afb428-73fc-2e5c-057b-2e0e5a1b2f1c_B",
        "DEN_AttackOnDen_HasMet_Stargazer",
        "DEN_Thieflings_Event_ShookThief",
        "DEN_AttackOnDen_HasMet_Refugee001",
        "b70d5139-9980-efc6-3ba3-fe2eb56ab2e0_B",
        "HAV_LoneLover_HasMet_DanisUpset",
        "DEN_DruidAttack_HasMet_PetWolf",
        "26071d89-33af-8eac-3c05-ee8dca91338d_who",
        "DEN_Apprentice_UserShortcut",
        "ReflectedKagha",
        "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionAsked",
        "FOR_GoblinAmbush_GoblinsPacified",
        "MOO_Bazaar_BazaarStander_007_AudienceReady_HasMet",
        "MOO_BugBearVendor_HasMet_BazBugBear",
        "932401b1-7763-7fd7-bee1-8731fe62084f_DeadThree",
        "ORI_Shadowheart_State_TempleApproachHint",
        "DEN_DruidAttack_HasMet_GrieflingAfterAttack",
        "DEN_GuardedEntrance_State_ClearToPass",
        "GOB_Checkpoint_State_GuidedByCapturedGoblin",
        "DEN_RaidingParty_Event_GoblinRaidFight",
        "ORI_Inclusion_Wyll",
        "RefusedCircle",
        "DEN_TieflingScam_Knows_Scam",
        "964ddec3-a3fd-b0b5-f98a-4b32e118b6ed_B",
        "3174fc37-851b-0494-321e-b606f7e43901_B",
        "DEN_BirdSender_Knows_AskedAboutBird",
        "DEN_DevilishOx_MeetAtDruidsGrove_Incapable",
        "DEN_Thieflings_CaveGuard_002_HasMet",
        "GOB_PainPriest_Knows_PenanceIsPain",
        "6bba3537-3756-eb27-a08a-a8596d765f2e_C",
        "MOO_Bazaar_BazaarStander_005_AudienceReay_HasMet",
        "SHA_Trials_State_FirstStatueUsed",
        "CHA_LaezelRecruitment_Event_LaezelHostile",
        "DEN_GoblinScouts_SavedDruid",
        "ArrivedAtGrove",
        "DEN_GruntingKid_Event_AskedCanTalk",
        "DEN_Apprentice_Event_GiveReward",
        "acc081f3-204a-2f29-a3bb-6d33ff784c39_C",
        "DEN_AttackOnDen_GrieflingFriend_Knows_Kelemvor",
        "GOB_PainPriest_Event_Mercy",
        "c68c5474-226f-4b47-b327-a22274e360a0_B",
        "a2fa1f0f-b9b5-f8bf-bf27-b11194b8502f_B",
        "SHA_Orthon_Even_QueriedCharmedDisplacer",
        "ORI_DarkUrge_Knows_ButlerDiedReaction",
        "SCL_LiftingTheCurse_Event_SpottedFlowers",
        "55452e03-17c6-9a9d-072b-80043381c98b_A",
        "UND_LoneDuergar_Event_WaitingForMainDialog",
        "OrderedBreachInn",
        "COL_Morgue_User_HasMet_Us",
        "DEN_RitualDruid_HasMet_Pacified3",
        "DEN_ShadowDruidRats_Event_RememberedLetter",
        "DEN_DruidAttack_State_PrepAfterDeathOfDruids",
        "PLA_Desire_Event_HasMet",
        "4103e544-e1db-525f-81ec-b5dfa71907d7_WantNereOut",
        "PLA_StuckHalfElf_Event_ToldQuestion",
        "UND_BroodingSovereign_Event_Enlarged",
        "f108995b-14f4-7823-d218-790177a93da8_B",
        "6a98f294-9f4f-d0b0-1cba-706f1cb15009_Local1",
        "GOB_WolfPens_Worg_001_HasMet",
        "7cd27f5f-4eee-558e-eee6-ee37600f04ef_A",
        "MOO_Jailbreak_Event_BoatLeavesWithoutPlayers",
        "DEN_DruidAttack_HasMet_WeaponsmithAfterAttack",
        "SCL_Drider_State_StartedAmbushQuestWithHarpers",
        "GLO_Volo_HasMet",
        "OpenedSarcophagus",
        "Counsellor_RefusedHelp",
        "02455563-e119-58e5-1fe7-eb46fe381d30_A",
        "GOB_GuardUpset_HasMet",
        "GOB_RatRacket_LocalRat_001_HasMet",
        "c5f62c4b-fb04-1505-c35b-63119d96b127_First_Disabled",
        "SHA_Trials_State_StatueUsed",
        "698f5a3b-6d88-3d9e-ee4f-26d9c1fc5b6b_B",
        "UND_TheDrowNere_State_KilledGnomeSerene",
        "COL_General_Knows_ColonyIsIllithid",
        "GLO_VoloBallad_MetGuardPrison",
        "PLA_ZhentDungeon_Zhent01_HasMet",
        "7cd519b5-df41-47c0-1d53-6c315224e489_A",
        "ORI_Karlach_HasMet_DammonUnavailable",
        "GOB_CheckpointBackup003_HasMet",
        "DEN_TieflingScam_Event_FoundOutLies",
        "UND_ArguingGnomes_Quest_Accepted",
        "DEN_Thieflings_HasMet_Chef"
      ]
    },
    "Town": {
      "chapter_id": "Act2_Town",
      "scenario_sequence": [
        "twn_aasimarsurvivor",
        "twn_distillerysignpost",
        "twn_missingpetscollarspile",
        "twn_tomasonsguildsignpost",
        "twn_tohospitalsignpost",
        "twn_prayersandcharms",
        "twn_masonsguild",
        "twn_approachedbloodbankinventorylist",
        "twn_vlaakithattack",
        "twn_korrillathespy",
        "twn_tollhouse",
        "twn_gale",
        "twn_centralsquaresignpost",
        "twn_interactedwithbloodbankinventorylist",
        "twn_pickedupseluneprayerbook",
        "twn_monkamulet",
        "twn_tollhousesignpost",
        "twn_masonsguildsignpost",
        "twn_finale",
        "twn_selunegrave",
        "twn_arabellaspowers",
        "twn_centralsquare",
        "twn_hospital",
        "twn_missingpetsboard",
        "twn_hospitalsignpost",
        "twn_mausoleum",
        "twn_distillery",
        "twn_helpwantedposter",
        "twn_hospitalplaque",
        "twn_laezel",
        "twn_readseluneprayerbook",
        "twn_masonguild",
        "twn_mausoleumsignpost",
        "twn_bgsignpost",
        "twn_fishermannote",
        "twn_marchingarmy"
      ],
      "scenario_results": {
        "twn_aasimarsurvivor": {
          "scenario_name": "twn_aasimarsurvivor",
          "session_sequence": [
            "PAD_TrapSpotted",
            "PAD_DoorSpotted"
          ],
          "paths": {
            "PAD_TrapSpotted": [
              "PAD_TrapSpotted_0"
            ],
            "PAD_DoorSpotted": [
              "PAD_DoorSpotted_0"
            ]
          },
          "node_data": {
            "PAD_TrapSpotted": [
              {
                "id": "PAD_TrapSpotted_0",
                "speaker": "Player",
                "text": "|What an unsettling place...|",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_DoorSpotted": [
              {
                "id": "PAD_DoorSpotted_0",
                "speaker": "Player",
                "text": "Strange - the dust on the leftmost door has been wiped clean.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_TrapSpotted": "The player spots the trap in the aasimar survivor booster.",
            "PAD_DoorSpotted": "The player discovers a door to the hideout where an Aasimar Harper had survived longer than most would in the curse."
          }
        },
        "twn_distillerysignpost": {
          "scenario_name": "twn_distillerysignpost",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "twn_missingpetscollarspile": {
          "scenario_name": "twn_missingpetscollarspile",
          "session_sequence": [
            "PAD"
          ],
          "paths": {
            "PAD": [
              "PAD_0"
            ]
          },
          "node_data": {
            "PAD": [
              {
                "id": "PAD_0",
                "speaker": "Player",
                "text": "'Rascal.'? 'Jagoda.'? All these collars belonged to pets.",
                "node_type": "normal",
                "checkflags": [
                  "TWN_MissingPets_State_ReadPosters = False"
                ],
                "setflags": [
                  "TWN_MissingPets_State_CheckedPileOfPetsCollars"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD": "Character interacts with a pile of pet collars.Different reaction depending on whether the user has read the missing pet posters before or not."
          }
        },
        "twn_tomasonsguildsignpost": {
          "scenario_name": "twn_tomasonsguildsignpost",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "twn_tohospitalsignpost": {
          "scenario_name": "twn_tohospitalsignpost",
          "session_sequence": [
            "AD"
          ],
          "paths": {
            "AD": [
              "AD_0"
            ]
          },
          "node_data": {
            "AD": [
              {
                "id": "AD_0",
                "speaker": "Narrator",
                "text": "*Ahead - House of Healing*<br>",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD": "Signpost in the Town."
          }
        },
        "twn_prayersandcharms": {
          "scenario_name": "twn_prayersandcharms",
          "session_sequence": [
            "PAD_2P"
          ],
          "paths": {
            "PAD_2P": [
              "PAD_2P_0",
              "PAD_2P_1"
            ]
          },
          "node_data": {
            "PAD_2P": [
              {
                "id": "PAD_2P_0",
                "speaker": "Player",
                "text": "Prayers, charms, battle cries - the Harpers' work. They were primed for combat.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PAD_2P_1",
                "speaker": "Player",
                "text": "A commemoration of battles long past. Like the town itself.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: [Astarion: a little sarcastically]"
              }
            ]
          },
          "session_synopses": {
            "PAD_2P": "AD about a wall with protective charms and prayers written by Harpers attacking Ketheric's Outpost."
          }
        },
        "twn_masonsguild": {
          "scenario_name": "twn_masonsguild",
          "session_sequence": [
            "PAD_Entrance_1P"
          ],
          "paths": {
            "PAD_Entrance_1P": [
              "PAD_Entrance_1P_0"
            ]
          },
          "node_data": {
            "PAD_Entrance_1P": [
              {
                "id": "PAD_Entrance_1P_0",
                "speaker": "Player",
                "text": "A kiln, unfinished sculptures, stone fragments. Masons worked here.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_Entrance_1P": "VB that is played when you approach the Mason's Guild in SCL"
          }
        },
        "twn_approachedbloodbankinventorylist": {
          "scenario_name": "twn_approachedbloodbankinventorylist",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "twn_vlaakithattack": {
          "scenario_name": "twn_vlaakithattack",
          "session_sequence": [
            "PAD_GithRadarGoesOffComment",
            "Melee_000_Dead",
            "AD_Caster_000_TakingTurn_003"
          ],
          "paths": {
            "PAD_GithRadarGoesOffComment": [
              "PAD_GithRadarGoesOffComment_0"
            ],
            "Melee_000_Dead": [
              "Melee_000_Dead_23",
              "Melee_000_Dead_24",
              "Melee_000_Dead_21",
              "Melee_000_Dead_6"
            ],
            "AD_Caster_000_TakingTurn_003": [
              "AD_Caster_000_TakingTurn_003_0"
            ]
          },
          "node_data": {
            "PAD_GithRadarGoesOffComment": [
              {
                "id": "PAD_GithRadarGoesOffComment_0",
                "speaker": "Player",
                "text": "That noise - it's coming from the gith knight's trinket.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Melee_000_Dead": [
              {
                "id": "Melee_000_Dead_23",
                "speaker": "Narrator",
                "text": "*The corpse regards you lifelessly.*",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Melee_000_Dead_24",
                "speaker": "Player",
                "text": "Who are you?",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached = False"
                ],
                "setflags": [
                  "GLO_SpeakWithDead_Event_QuestionAsked"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Melee_000_Dead_21",
                "speaker": "Veteran Warrior Bradi'ith",
                "text": "Bradi'ith...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Melee_000_Dead_6",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Caster_000_TakingTurn_003": [
              {
                "id": "AD_Caster_000_TakingTurn_003_0",
                "speaker": "Ch'r'ai Tska'an",
                "text": "I will take the artefact for my queen!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_GithRadarGoesOffComment": "The Gith Radar starts making a sound and players comment on it.Branching depending on whether they allied with Voss and he told them what it does.Prioritizes playing on Laezel even if she's not the one carrying the radar but is nearby.",
            "Melee_000_Dead": "SwD dialog for S_TWN_VlaakithAttack_Melee_000. Players are ambushed by a group of giths sent by Vlaakith to follow up on her threats.https://larianstudios.atlassian.net/browse/GUS-210886",
            "AD_Caster_000_TakingTurn_003": "Combat AD"
          }
        },
        "twn_korrillathespy": {
          "scenario_name": "twn_korrillathespy",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "twn_tollhouse": {
          "scenario_name": "twn_tollhouse",
          "session_sequence": [
            "AD_TollhouseMaster_Buff_001_Combat",
            "TollhouseMaster",
            "AD_TollhouseMaster_Buff_004_Combat",
            "AD_Face_Regret",
            "PAD_CormyrCrate",
            "AD_TollhouseMaster",
            "AD_SafeSkeleton",
            "AD_Face_Cowardice",
            "AD_TollhouseMaster_Buff_002_Combat",
            "PAD_DalelandsCrate",
            "Face_Guilt",
            "PAD_TollmasterDead",
            "AD_ConfiscatedItemsPlaque",
            "AD_TollhouseMaster_Buff_005_Combat",
            "PAD_ThayCrate",
            "AD_Face_Heartlessness",
            "AD_Face_Obedience",
            "PAD_BlockedDoor",
            "AD_Face_Greed",
            "AD_TollhouseMaster_Buff_006_Combat"
          ],
          "paths": {
            "AD_TollhouseMaster_Buff_001_Combat": [
              "AD_TollhouseMaster_Buff_001_Combat_0"
            ],
            "TollhouseMaster": [
              "TollhouseMaster_94",
              "TollhouseMaster_172",
              "TollhouseMaster_55",
              "TollhouseMaster_33",
              "42",
              "NODE_NOT_FOUND"
            ],
            "AD_TollhouseMaster_Buff_004_Combat": [
              "AD_TollhouseMaster_Buff_004_Combat_0"
            ],
            "AD_Face_Regret": [
              "AD_Face_Regret_0"
            ],
            "PAD_CormyrCrate": [
              "PAD_CormyrCrate_0"
            ],
            "AD_TollhouseMaster": [
              "AD_TollhouseMaster_0"
            ],
            "AD_SafeSkeleton": [
              "AD_SafeSkeleton_0"
            ],
            "AD_Face_Cowardice": [
              "AD_Face_Cowardice_0"
            ],
            "AD_TollhouseMaster_Buff_002_Combat": [
              "AD_TollhouseMaster_Buff_002_Combat_0"
            ],
            "PAD_DalelandsCrate": [
              "PAD_DalelandsCrate_0"
            ],
            "Face_Guilt": [
              "Face_Guilt_7",
              "Face_Guilt_28",
              "Face_Guilt_4",
              "Face_Guilt_24",
              "Face_Guilt_2",
              "Face_Guilt_22",
              "Face_Guilt_14",
              "Face_Guilt_1",
              "Face_Guilt_19",
              "Face_Guilt_11"
            ],
            "PAD_TollmasterDead": [
              "PAD_TollmasterDead_0"
            ],
            "AD_ConfiscatedItemsPlaque": [
              "AD_ConfiscatedItemsPlaque_0"
            ],
            "AD_TollhouseMaster_Buff_005_Combat": [
              "AD_TollhouseMaster_Buff_005_Combat_0"
            ],
            "PAD_ThayCrate": [
              "PAD_ThayCrate_0"
            ],
            "AD_Face_Heartlessness": [
              "AD_Face_Heartlessness_0"
            ],
            "AD_Face_Obedience": [
              "AD_Face_Obedience_0"
            ],
            "PAD_BlockedDoor": [
              "PAD_BlockedDoor_0"
            ],
            "AD_Face_Greed": [
              "AD_Face_Greed_0"
            ],
            "AD_TollhouseMaster_Buff_006_Combat": [
              "AD_TollhouseMaster_Buff_006_Combat_0"
            ]
          },
          "node_data": {
            "AD_TollhouseMaster_Buff_001_Combat": [
              {
                "id": "AD_TollhouseMaster_Buff_001_Combat_0",
                "speaker": "Gerringothe Thorm",
                "text": "IF YOU WILL NOT GIVE, THEN I WILL TAKE!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "TollhouseMaster": [
              {
                "id": "TollhouseMaster_94",
                "speaker": "Gerringothe Thorm",
                "text": "YOU BROUGHT VIOLENCE. UNACCEPTABLE. BUT ALL CAN BE FORGIVEN. FOR THE RIGHT PRICE.",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Tollhouse_TollhouseMaster_HasMet = False",
                  "TWN_Tollhouse_State_FaceWasAttacked"
                ],
                "setflags": [
                  "TWN_Tollhouse_TollhouseMaster_HasMet"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: howling with anger on first phrases - more reasonable on last two phrases, hoping to get some cash out of the situation"
              },
              {
                "id": "TollhouseMaster_172",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "TollhouseMaster_55",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "TollhouseMaster_55",
                "speaker": "Gerringothe Thorm",
                "text": "WHAT DO YOU BRING?",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Tollhouse_TollhouseMaster_HasMet = False"
                ],
                "setflags": [
                  "TWN_Tollhouse_TollhouseMaster_HasMet"
                ],
                "goto": "",
                "link": "42",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Spotting you, Gerringothe lurches forward.\rNodeContext: a desperate, cacophonous howl"
              },
              {
                "id": "TollhouseMaster_33",
                "speaker": "Player",
                "text": "Who are you?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "42",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "42",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ],
            "AD_TollhouseMaster_Buff_004_Combat": [
              {
                "id": "AD_TollhouseMaster_Buff_004_Combat_0",
                "speaker": "Gerringothe Thorm",
                "text": "PAY ME IN BLOOD.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Face_Regret": [
              {
                "id": "AD_Face_Regret_0",
                "speaker": "Visage of Regret",
                "text": "So much time. Wasted.",
                "node_type": "normal",
                "checkflags": [
                  "1507f82b-d6a2-791b-17ed-65b81a40e9f5_A"
                ],
                "setflags": [
                  "1507f82b-d6a2-791b-17ed-65b81a40e9f5_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_CormyrCrate": [
              {
                "id": "PAD_CormyrCrate_0",
                "speaker": "Player",
                "text": "Silks from Cormyr, it says. Empty, though.<br>",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_TollhouseMaster": [
              {
                "id": "AD_TollhouseMaster_0",
                "speaker": "Gerringothe Thorm",
                "text": "GOLD...",
                "node_type": "normal",
                "checkflags": [
                  "dd1890a0-ff6c-a358-4269-1859078cc21d_A"
                ],
                "setflags": [
                  "dd1890a0-ff6c-a358-4269-1859078cc21d_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_SafeSkeleton": [
              {
                "id": "AD_SafeSkeleton_0",
                "speaker": "Narrator",
                "text": "*A forgotten soul, trapped in a safe - but who put them there, and why?*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Face_Cowardice": [
              {
                "id": "AD_Face_Cowardice_0",
                "speaker": "Visage of Cowardice",
                "text": "Don't tell on me. Please.",
                "node_type": "normal",
                "checkflags": [
                  "6d4ecf46-ffab-ed53-3b19-68607a0e1309_A"
                ],
                "setflags": [
                  "6d4ecf46-ffab-ed53-3b19-68607a0e1309_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_TollhouseMaster_Buff_002_Combat": [
              {
                "id": "AD_TollhouseMaster_Buff_002_Combat_0",
                "speaker": "Gerringothe Thorm",
                "text": "YOU WILL NOT BE FORGIVEN.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_DalelandsCrate": [
              {
                "id": "PAD_DalelandsCrate_0",
                "speaker": "Player",
                "text": "Cheese from the Dalelands. Or what's left of it.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Face_Guilt": [
              {
                "id": "Face_Guilt_7",
                "speaker": "Visage of Guilt",
                "text": "They gave me what they had. Should I have let them leave?",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Tollhouse_HasMet_Guilt = False"
                ],
                "setflags": [
                  "TWN_Tollhouse_HasMet_Guilt"
                ],
                "goto": "",
                "link": "24",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Distraught, hand-wringing"
              },
              {
                "id": "Face_Guilt_28",
                "speaker": "Player",
                "text": "Yes. But I guess you didn't.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Face_Guilt_4",
                "speaker": "Visage of Guilt",
                "text": "No. I thought there might be more to take. Hidden inside.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Haunted, almost confused"
              },
              {
                "id": "Face_Guilt_24",
                "speaker": "Visage of Guilt",
                "text": "I opened them. Searched inside them.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "20",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Self loathing creeping in"
              },
              {
                "id": "Face_Guilt_2",
                "speaker": "Player",
                "text": "Why would you do something like that?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Face_Guilt_22",
                "speaker": "Visage of Guilt",
                "text": "Some wouldn't pay their dues. Some couldn't.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Rising disgust with each sentence - but a twinge of malice with the last few words"
              },
              {
                "id": "Face_Guilt_14",
                "speaker": "Visage of Guilt",
                "text": "They paid a different price in the end.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Frightened, even horrified"
              },
              {
                "id": "Face_Guilt_1",
                "speaker": "Player",
                "text": "If you can tell right from wrong, maybe we can still fix this.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Face_Guilt_19",
                "speaker": "",
                "text": "True",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Face_Guilt_11",
                "speaker": "Visage of Guilt",
                "text": "Yes - yes yes. Help me. Make me pay.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "InternalNodeContext: The visage is excited by the prospect of finally being freed of its guilt (by being killed)"
              }
            ],
            "PAD_TollmasterDead": [
              {
                "id": "PAD_TollmasterDead_0",
                "speaker": "Player",
                "text": "Free from the curse, now - perhaps she'll find peace.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_ConfiscatedItemsPlaque": [
              {
                "id": "AD_ConfiscatedItemsPlaque_0",
                "speaker": "Narrator",
                "text": "*Seized Inventory*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_TollhouseMaster_Buff_005_Combat": [
              {
                "id": "AD_TollhouseMaster_Buff_005_Combat_0",
                "speaker": "Gerringothe Thorm",
                "text": "NO MORE TAKING. GIVE. GIVE. GIVE!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_ThayCrate": [
              {
                "id": "PAD_ThayCrate_0",
                "speaker": "Player",
                "text": "All the way from Thay. Jewels and gems, probably - one's still in there.<br>",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Face_Heartlessness": [
              {
                "id": "AD_Face_Heartlessness_0",
                "speaker": "Visage of Heartlessness",
                "text": "At least it's worth more than their lives.",
                "node_type": "normal",
                "checkflags": [
                  "2de7b4a6-b710-27e6-ab9f-a00c004460de_A"
                ],
                "setflags": [
                  "2de7b4a6-b710-27e6-ab9f-a00c004460de_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Face_Obedience": [
              {
                "id": "AD_Face_Obedience_0",
                "speaker": "Visage of Obedience",
                "text": "All goods are subject to inspection and taxation.",
                "node_type": "normal",
                "checkflags": [
                  "5d7c5690-f498-6124-0ded-9b3d95a20800_A"
                ],
                "setflags": [
                  "5d7c5690-f498-6124-0ded-9b3d95a20800_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_BlockedDoor": [
              {
                "id": "PAD_BlockedDoor_0",
                "speaker": "Player",
                "text": "Forget it - it's blocked from behind.<br>",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Face_Greed": [
              {
                "id": "AD_Face_Greed_0",
                "speaker": "Visage of Greed",
                "text": "Look. Just LOOK.",
                "node_type": "normal",
                "checkflags": [
                  "33dfbffe-344d-8c3c-5486-7f25e56d42bf_A"
                ],
                "setflags": [
                  "33dfbffe-344d-8c3c-5486-7f25e56d42bf_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_TollhouseMaster_Buff_006_Combat": [
              {
                "id": "AD_TollhouseMaster_Buff_006_Combat_0",
                "speaker": "Gerringothe Thorm",
                "text": "I. AM. OWED!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_TollhouseMaster_Buff_001_Combat": "Combat AD",
            "TollhouseMaster": "Dialogue with the Toll collector.She will continuously, endlessly demand gold from the player. You can convince her to let you pass (hard persuade), or you will have to fight  (once you stop giving it gold, or once you run out of gold).",
            "AD_TollhouseMaster_Buff_004_Combat": "Combat AD",
            "AD_Face_Regret": "The Visage of Regret is standing near a window that is looking at the harbor and regreting about not leaving this town.Speaks with the same voice as the shadow-cursed tollmaster, but with a distinct emotional inflectoin. Regret, in this case.",
            "PAD_CormyrCrate": "AD is played after the player used a specific container with emblem of Cormyr.",
            "AD_TollhouseMaster": "Tollhouse, Tollhouse Collector as she's hanging around by herself.",
            "AD_SafeSkeleton": "Player clicks on the skeleton that locked himself in the heavy safe in Tollhouse. This was am employee of Tollhouse and this way he hoped to wait out the fallout of Shadowcurse. But have died in that safe in dramatic way.",
            "AD_Face_Cowardice": "The Visage of Cowardice is hiding in the secret lair, hoping that nobody will find it. Speaks with the same voice as the shadow-cursed tollmaster, but with a distinct emotional inflectoin. Cowardice, in this case.",
            "AD_TollhouseMaster_Buff_002_Combat": "Combat AD",
            "PAD_DalelandsCrate": "AD is played after the player used a specific container with emblem of Dalelands.",
            "Face_Guilt": "The Visage of Guilt, hovering in front of several skeletons (dead adventurers that found their end by the hands of the Tollhouse Collector).",
            "PAD_TollmasterDead": "In Town in Act 2 we meet the Tollmaster that went crazy about gold",
            "AD_ConfiscatedItemsPlaque": "Plaque in the Tollhouse, outside a room full of confiscated items.",
            "AD_TollhouseMaster_Buff_005_Combat": "Combat AD",
            "PAD_ThayCrate": "AD is played after the player used a specific container with emblem of Thay.",
            "AD_Face_Heartlessness": "The Visage of Heartlesness is standing near some shelves with goods and talks about taking stuff from other people.Speaks with the same voice as the shadow-cursed tollmaster, but with a distinct emotional inflection. Heartlessnesst, in this case.",
            "AD_Face_Obedience": "The Visage of Obedience is standing near the entrance as the player enters the Tollhouse.",
            "PAD_BlockedDoor": "PAD, happens when you click on a door in the tollhouse that is blocked from the other side.",
            "AD_Face_Greed": "This Visage of Greed is standing in front of a room full of confiscated items, lusting after them.Speaks with the same voice as the shadow-cursed tollmaster, but with a distinct emotional inflectoin. Greed, in this case.",
            "AD_TollhouseMaster_Buff_006_Combat": "Combat AD"
          }
        },
        "twn_gale": {
          "scenario_name": "twn_gale",
          "session_sequence": [
            "LootBoss"
          ],
          "paths": {
            "LootBoss": [
              "LootBoss_3",
              "LootBoss_2",
              "LootBoss_5",
              "LootBoss_4",
              "LootBoss_11"
            ]
          },
          "node_data": {
            "LootBoss": [
              {
                "id": "LootBoss_3",
                "speaker": "Narrator",
                "text": "*The corpse is saturated with darkness, flesh and bone corrupted by a dense concentration of Shadow Weave. Sharran magic, summoned from beyond the Weave's boundaries. Beyond Mystra's control.*",
                "node_type": "normal",
                "checkflags": [
                  "BREWER_CREATURE = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "2",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: VFX of dark shadow magic reflecting flashing over Gale's face. Gale reacts."
              },
              {
                "id": "LootBoss_2",
                "speaker": "Narrator",
                "text": "*Left alone, its corruption will leak and spread. You could nullify it, preventing such harm as Mystra would want. Or you could absorb it, tasting Shar's forbidden magic for yourself.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "LootBoss_5",
                "speaker": "Gale",
                "text": "Cleanse the corpse. Destroy this tainted power.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "ORI_Gale_State_RefusedTWNBossPower"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "LootBoss_4",
                "speaker": "Narrator",
                "text": "*A blast of purest Weave is enough to banish the shadow magic trapped beneath the corpse's skin.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Gale focuses. Bright, white VFX (reading as morally good)."
              },
              {
                "id": "LootBoss_11",
                "speaker": "Narrator",
                "text": "*As its blight fades, you feel a lightness rush in to take its place - Mystra. A taste of what you lost and of what awaits you for fulfilling her purpose.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "CinematicNodeContext: Gale smiles"
              }
            ]
          },
          "session_synopses": {
            "LootBoss": "Gale (or someone near Gale) has attempted to loot a corpse and Gale realises the evil possibilities."
          }
        },
        "twn_centralsquaresignpost": {
          "scenario_name": "twn_centralsquaresignpost",
          "session_sequence": [
            "AD"
          ],
          "paths": {
            "AD": [
              "AD_0"
            ]
          },
          "node_data": {
            "AD": [
              {
                "id": "AD_0",
                "speaker": "Narrator",
                "text": "*North - Thorm Mausoleum <br>South - South Reithwin <br>East - Masons' Guild <br>West - House of Healing*<br>",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD": "Signpost in the Town."
          }
        },
        "twn_interactedwithbloodbankinventorylist": {
          "scenario_name": "twn_interactedwithbloodbankinventorylist",
          "session_sequence": [
            "PAD"
          ],
          "paths": {
            "PAD": [
              "PAD_0"
            ]
          },
          "node_data": {
            "PAD": [
              {
                "id": "PAD_0",
                "speaker": "Player",
                "text": "Quite the list of characters, but hardly my taste.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Just read a list of people who gave their blood to a hospital. Farmers and vagabonds - he's not impressed."
              }
            ]
          },
          "session_synopses": {
            "PAD": "Astarion reacting on picking up / reading \"Blood Bank Inventory List\" by any player (including himself)Location: SCL -> Hospital -> Morgue"
          }
        },
        "twn_pickedupseluneprayerbook": {
          "scenario_name": "twn_pickedupseluneprayerbook",
          "session_sequence": [
            "PAD"
          ],
          "paths": {
            "PAD": [
              "PAD_0"
            ]
          },
          "node_data": {
            "PAD": [
              {
                "id": "PAD_0",
                "speaker": "Shadowheart",
                "text": "A Selûne prayer book. Hmm, well she didn't answer any prayers from this place.",
                "node_type": "normal",
                "checkflags": [
                  "ShadowHeart_InParty_Knows_SharWorshipper",
                  "TWN_State_PickedUpSelunePrayerBook"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: seh-LOON-eh."
              }
            ]
          },
          "session_synopses": {
            "PAD": "ShadowHeart reacting on picking up \"Selune Prayer Book\"Location: SCL -> Tollhouse - Seized Inventory Room.She reacts both when she picks up the book or when another character does that."
          }
        },
        "twn_monkamulet": {
          "scenario_name": "twn_monkamulet",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "twn_tollhousesignpost": {
          "scenario_name": "twn_tollhousesignpost",
          "session_sequence": [
            "AD"
          ],
          "paths": {
            "AD": [
              "AD_0"
            ]
          },
          "node_data": {
            "AD": [
              {
                "id": "AD_0",
                "speaker": "Narrator",
                "text": "*North - North Reithwin<br>East - Reithwin Tollhouse<br>South - Moonrise Towers<br>West - The Waning Moon*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD": "Signpost in the Town."
          }
        },
        "twn_masonsguildsignpost": {
          "scenario_name": "twn_masonsguildsignpost",
          "session_sequence": [
            "AD"
          ],
          "paths": {
            "AD": [
              "AD_0"
            ]
          },
          "node_data": {
            "AD": [
              {
                "id": "AD_0",
                "speaker": "Narrator",
                "text": "*Here - Masons' Guild <br>West - Central Square*<br>",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD": "Signpost in the Town."
          }
        },
        "twn_finale": {
          "scenario_name": "twn_finale",
          "session_sequence": [
            "LeavingAct",
            "PAD_ArmyLeft"
          ],
          "paths": {
            "LeavingAct": [
              "LeavingAct_10",
              "LeavingAct_8",
              "LeavingAct_6"
            ],
            "PAD_ArmyLeft": [
              "PAD_ArmyLeft_0"
            ]
          },
          "node_data": {
            "LeavingAct": [
              {
                "id": "LeavingAct_10",
                "speaker": "Narrator",
                "text": "*The curse has been lifted, the lands cleansed of the shadows. Ketheric's reign of living death is over.*",
                "node_type": "normal",
                "checkflags": [
                  "GLO_LiftingTheCurse_State_BreathHasBeenRestored",
                  "REALLY_SHADOWHEART = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Players leave SCL by the Risen Road. They look back to see beams of light breaking through the clouds.-The curse has been lifted. The clouds above part, and a powerful beam of moonlight shines through and illuminates the town centre where the statue of Ketheric stood. It is now shattered."
              },
              {
                "id": "LeavingAct_8",
                "speaker": "Narrator",
                "text": "*Your courage has been tested, and in this, at least, you have triumphed.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Cut to close up of the shattered statue. An enormous silver tree bursts through the ground where the statue once stood, silver leaves/fruits sprouting, and the light from above intensifies as the shadows disperse."
              },
              {
                "id": "LeavingAct_6",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "CinematicNodeContext: Cut back to party, with Halsin in shot, looking across the rejuvenating region. Halsin takes front and centre, looking back across the 'healed'vista, overjoyed, and then the party turn and continue their journey"
              }
            ],
            "PAD_ArmyLeft": [
              {
                "id": "PAD_ArmyLeft_0",
                "speaker": "Player",
                "text": "The Absolute's armies are on the march - and Baldur's Gate is their target.",
                "node_type": "normal",
                "checkflags": [
                  "TWN_MarchingArmy_State_SawAbsoluteArmy"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "LeavingAct": "Scene of players leaving SCL to travel to Intermezzo. This scene triggers when the party leave Moonrise Tower after defeating Ketheric. There are two variants. One where the curse has been lifted, one where the curse hasn't been lifted.If the curse has been lifted, Halsin and/or Art Cullagh will be present at Moonrise if alive, and will tell players that the quest has succeeded, and that when they leave Moonrise, they'll see the restults. They tell you to wrap up your business here first. This happens in the dialogues for those characters, not here.If the curse hasn't been lifted, players see a vista of the shadow-cursed lands on leaving Moonrise, and move on toward the Risen Road.",
            "PAD_ArmyLeft": "Comment on how the absolute army left. Reactivity if you saw them previously or not."
          }
        },
        "twn_selunegrave": {
          "scenario_name": "twn_selunegrave",
          "session_sequence": [
            "PAD_IdentifiedGrave"
          ],
          "paths": {
            "PAD_IdentifiedGrave": [
              "PAD_IdentifiedGrave_0"
            ]
          },
          "node_data": {
            "PAD_IdentifiedGrave": [
              {
                "id": "PAD_IdentifiedGrave_0",
                "speaker": "Player",
                "text": "Some of our war dead, from so long ago. Buried in haste when we had to flee the curse.",
                "node_type": "normal",
                "checkflags": [
                  "REALLY_HALSIN"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Solemn, Spotting some old makeshift graves."
              }
            ]
          },
          "session_synopses": {
            "PAD_IdentifiedGrave": "Player comes across some old, rushed graves for the war dead from a hundred years ago. They comment depending on how much they're aware of previous events in the region, Jaheira and Halsin, as veterans of this very fight, know the full context."
          }
        },
        "twn_arabellaspowers": {
          "scenario_name": "twn_arabellaspowers",
          "session_sequence": [
            "ZombieArabella_Dead"
          ],
          "paths": {
            "ZombieArabella_Dead": [
              "ZombieArabella_Dead_24"
            ]
          },
          "node_data": {
            "ZombieArabella_Dead": [
              {
                "id": "ZombieArabella_Dead_24",
                "speaker": "Narrator",
                "text": "*The corpse does not stir. It will answer no more questions.*",
                "node_type": "normal",
                "checkflags": [
                  "GLO_SpeakWithDead_State_QuestionsLimitReached"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "ZombieArabella_Dead": "Arabella has been found dead. This means player refused to find her parents earlier, and she then ran off."
          }
        },
        "twn_centralsquare": {
          "scenario_name": "twn_centralsquare",
          "session_sequence": [
            "PlaqueOfIntelligence",
            "Plaque_001_AD",
            "PAD_ExitLocked",
            "PAD_PlaqueFirstUse",
            "PAD_EnteredSanctuary",
            "AD_Justiciar",
            "Plaque_002_AD"
          ],
          "paths": {
            "PlaqueOfIntelligence": [
              "PlaqueOfIntelligence_7",
              "PlaqueOfIntelligence_15",
              "PlaqueOfIntelligence_10",
              "PlaqueOfIntelligence_1",
              "PlaqueOfIntelligence_12"
            ],
            "Plaque_001_AD": [
              "Plaque_001_AD_0"
            ],
            "PAD_ExitLocked": [
              "PAD_ExitLocked_0"
            ],
            "PAD_PlaqueFirstUse": [
              "PAD_PlaqueFirstUse_0"
            ],
            "PAD_EnteredSanctuary": [
              "PAD_EnteredSanctuary_0"
            ],
            "AD_Justiciar": [
              "AD_Justiciar_0"
            ],
            "Plaque_002_AD": [
              "Plaque_002_AD_0"
            ]
          },
          "node_data": {
            "PlaqueOfIntelligence": [
              {
                "id": "PlaqueOfIntelligence_7",
                "speaker": "Narrator",
                "text": "*Lady Shar has exiled you. It would be foolish to think you could enjoy any favours found here, surely... yet what do you have to lose from reading on?*",
                "node_type": "normal",
                "checkflags": [
                  "SHADOWHEART_ENEMYOFSHARPATH"
                ],
                "setflags": [],
                "goto": "",
                "link": "3",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: SH concerned/unsure expression"
              },
              {
                "id": "PlaqueOfIntelligence_15",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "PlaqueOfIntelligence_10",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PlaqueOfIntelligence_10",
                "speaker": "Narrator",
                "text": "*Do you accept Shar's test of your intellect?*",
                "node_type": "normal",
                "checkflags": [
                  "TWN_CentralSquare_HasMet_PlaqueOfIntelligence = False"
                ],
                "setflags": [
                  "TWN_CentralSquare_HasMet_PlaqueOfIntelligence"
                ],
                "goto": "",
                "link": "3",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Player looks at the plaque\rNodeContext: The text inscribed on a plaque at the base of a Shar statue"
              },
              {
                "id": "PlaqueOfIntelligence_1",
                "speaker": "Player",
                "text": "You are Shar's child - there is no reason to shy away. Nod in acceptance.",
                "node_type": "normal",
                "checkflags": [
                  "SHADOWHEART_ENEMYOFSHARPATH = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "3",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "PlaqueOfIntelligence_12",
                "speaker": "Narrator",
                "text": "*You feel a small pulse of energy race up your spine. And a strange sensation of acceptance.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "TWN_CentralSquare_State_PlaqueOfIntelligenceActivated"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "CinematicNodeContext: A faint purple aura glows from the statue"
              }
            ],
            "Plaque_001_AD": [
              {
                "id": "Plaque_001_AD_0",
                "speaker": "Plaque",
                "text": "F - L O S S <br>- P A I N <br>A L L S <br>L - R I S E",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_ExitLocked": [
              {
                "id": "PAD_ExitLocked_0",
                "speaker": "Player",
                "text": "Stuck. There's no leaving without a fight.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_PlaqueFirstUse": [
              {
                "id": "PAD_PlaqueFirstUse_0",
                "speaker": "Player",
                "text": "Was that a click I heard? There's something about these plaques...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_EnteredSanctuary": [
              {
                "id": "PAD_EnteredSanctuary_0",
                "speaker": "Player",
                "text": "The curse has no effect here - what is this place?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Justiciar": [
              {
                "id": "AD_Justiciar_0",
                "speaker": "Narrator",
                "text": "*There is a darkness to these warriors that endures even now, long after their lives were spent. But who did they serve?*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Plaque_002_AD": [
              {
                "id": "Plaque_002_AD_0",
                "speaker": "Plaque",
                "text": "O U R - L <br>M I S T R <br>W H E N - N I <br>T H O R M -",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PlaqueOfIntelligence": "Secret room in SCL_Main_A, beneath the Central Square. This statue has a dogma of Shar and asks you whether you accept it. Accepting it require a saving throw, on a failure you get a debuff and guardians appear. If you are a follower of Shar / Shadowheart you get have a special option which gives you auto-success.",
            "Plaque_001_AD": "One of the plaque in the Central Square.You need to click on the 3 plaques in a correct sequence to unlock a secret entrance to the secret room underneath the central square.The correct sequence: 2-3-1The plaques should either tell the history of Ketheric Thorm / this outpost or be some sort of propaganda.",
            "PAD_ExitLocked": "This PAD is played when you try to exit the secret room beneath the central square after three guardians were revealed to you, but before you defeated them.",
            "PAD_PlaqueFirstUse": "Clicking on one of the plaquet at the central square in Town for the first time. The plaques must be pressed in the right order to unlock a secret room, and have what looks like nonsense written on them, but is actually the clue to the order.",
            "PAD_EnteredSanctuary": "This PAD is played when you enter the secret Shar sanctuary beneath the Central Sqaure of the Town. It's free of the Shadow Curse and the player character comments on that.",
            "AD_Justiciar": "There are piles and individual skeletons in justiciar сuirass scattered across the Town and SCL. We can click some of the most posing of them to get little narrator comment. Shadowheart may have followed up on this if we know about her justiciar connection.",
            "Plaque_002_AD": "One of the plaque in the Central Square.You need to click on the 3 plaques in a correct sequence to unlock a secret entrance to the secret room underneath the central square.The correct sequence: 2-3-1The plaques should either tell the history of Ketheric Thorm / this outpost or be some sort of propaganda."
          }
        },
        "twn_hospital": {
          "scenario_name": "twn_hospital",
          "session_sequence": [
            "AD_Surgeon_SuccessfulSurgery_Combat",
            "AD_Surgeon_Leech_Combat",
            "AD_Surgeon_InstrumentRequest_002_Combat",
            "PAD_SurgeonDead",
            "Reception_Receptionist",
            "ZealousAssistant_003_AD",
            "AD_Surgeon_InstrumentRequest_004_Combat",
            "AD_ResponseToSurgeon_001_Combat",
            "ZealousAssistant_002",
            "Reception_CorpseTender",
            "AD_Surgeon_InstrumentRequest_001_Combat",
            "AD_Surgeon_Trepan_Combat",
            "ZealousAssistant_001_AD",
            "Patient_AD",
            "AD_Surgeon",
            "AD_Surgeon_InstrumentRequest_003_Combat",
            "PAD_Entrance_1P",
            "AD_Surgeon_Bonesaw_Combat",
            "RooftopRaven"
          ],
          "paths": {
            "AD_Surgeon_SuccessfulSurgery_Combat": [
              "AD_Surgeon_SuccessfulSurgery_Combat_0"
            ],
            "AD_Surgeon_Leech_Combat": [
              "AD_Surgeon_Leech_Combat_0"
            ],
            "AD_Surgeon_InstrumentRequest_002_Combat": [
              "AD_Surgeon_InstrumentRequest_002_Combat_0"
            ],
            "PAD_SurgeonDead": [
              "PAD_SurgeonDead_0"
            ],
            "Reception_Receptionist": [
              "Reception_Receptionist_88",
              "Reception_Receptionist_55",
              "Reception_Receptionist_95",
              "Reception_Receptionist_14",
              "Reception_Receptionist_43",
              "Reception_Receptionist_42",
              "Reception_Receptionist_59",
              "Reception_Receptionist_41",
              "Reception_Receptionist_31",
              "Reception_Receptionist_10"
            ],
            "ZealousAssistant_003_AD": [
              "ZealousAssistant_003_AD_0",
              "ZealousAssistant_003_AD_9"
            ],
            "AD_Surgeon_InstrumentRequest_004_Combat": [
              "AD_Surgeon_InstrumentRequest_004_Combat_0"
            ],
            "AD_ResponseToSurgeon_001_Combat": [
              "AD_ResponseToSurgeon_001_Combat_0"
            ],
            "ZealousAssistant_002": [
              "ZealousAssistant_002_0"
            ],
            "Reception_CorpseTender": [
              "Reception_CorpseTender_46",
              "Reception_CorpseTender_72",
              "Reception_CorpseTender_31",
              "53",
              "NODE_NOT_FOUND"
            ],
            "AD_Surgeon_InstrumentRequest_001_Combat": [
              "AD_Surgeon_InstrumentRequest_001_Combat_0"
            ],
            "AD_Surgeon_Trepan_Combat": [
              "AD_Surgeon_Trepan_Combat_0"
            ],
            "ZealousAssistant_001_AD": [
              "ZealousAssistant_001_AD_0"
            ],
            "Patient_AD": [
              "Patient_AD_0"
            ],
            "AD_Surgeon": [
              "AD_Surgeon_0"
            ],
            "AD_Surgeon_InstrumentRequest_003_Combat": [
              "AD_Surgeon_InstrumentRequest_003_Combat_0"
            ],
            "PAD_Entrance_1P": [
              "PAD_Entrance_1P_0"
            ],
            "AD_Surgeon_Bonesaw_Combat": [
              "AD_Surgeon_Bonesaw_Combat_0"
            ],
            "RooftopRaven": [
              "RooftopRaven_30",
              "RooftopRaven_23",
              "RooftopRaven_15",
              "RooftopRaven_10"
            ]
          },
          "node_data": {
            "AD_Surgeon_SuccessfulSurgery_Combat": [
              {
                "id": "AD_Surgeon_SuccessfulSurgery_Combat_0",
                "speaker": "Malus Thorm",
                "text": "A successful procedure, Shar be praised!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Surgeon_Leech_Combat": [
              {
                "id": "AD_Surgeon_Leech_Combat_0",
                "speaker": "Malus Thorm",
                "text": "Behold - the leech, for draining humours most foul.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Surgeon_InstrumentRequest_002_Combat": [
              {
                "id": "AD_Surgeon_InstrumentRequest_002_Combat_0",
                "speaker": "Malus Thorm",
                "text": "The subject resists. Next instrument, good sister.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_SurgeonDead": [
              {
                "id": "PAD_SurgeonDead_0",
                "speaker": "Player",
                "text": "That's one shadow monster dead.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Reception_Receptionist": [
              {
                "id": "Reception_Receptionist_88",
                "speaker": "Sister Sinda",
                "text": "Here to see the doctor? Are we poorly? Are we desperately poorly?",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Hospital_Reception_Receptionist_HasMet = False"
                ],
                "setflags": [
                  "TWN_Hospital_Reception_Receptionist_HasMet"
                ],
                "goto": "",
                "link": "21",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Reception_Receptionist_55",
                "speaker": "Sister Sinda",
                "text": "Not so well. But well enough to wait. Join the line, and you will be seen.",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Hospital_Reception_State_LowHP = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "21",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: The nurse 'looks' you over, assessing your condition.\rInternalNodeContext: Upon investigation, deduces that you're not that sick."
              },
              {
                "id": "Reception_Receptionist_95",
                "speaker": "Player",
                "text": "I don't have time to wait - I need to see the doctor right now.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "25",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Reception_Receptionist_14",
                "speaker": "Sister Sinda",
                "text": "Yes yes, but all must wait. The doctor's hands are full.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "25",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: a little frantic, overwhelmed"
              },
              {
                "id": "Reception_Receptionist_43",
                "speaker": "Sister Sinda",
                "text": "Join the line - you will be seen.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "25",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: with a touch of desperation"
              },
              {
                "id": "Reception_Receptionist_42",
                "speaker": "Player",
                "text": "Pretend to be ill.",
                "node_type": "normal",
                "checkflags": [
                  "BARD = False",
                  "ROGUE = False"
                ],
                "setflags": [],
                "goto": "",
                "link": "64",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Reception_Receptionist_59",
                "speaker": "",
                "text": "True",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "64",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Reception_Receptionist_41",
                "speaker": "Sister Sinda",
                "text": "Poor creature - so sad, so sick.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Sympathetic reaction to player's 'illness'."
              },
              {
                "id": "Reception_Receptionist_31",
                "speaker": "Sister Sinda",
                "text": "The doctor will see you. The doctor will soothe.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "TWN_Hospital_Reception_State_GainedAcess"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Reception_Receptionist_10",
                "speaker": "Sister Sinda",
                "text": "Down to the theatre, be swift, be saved.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ZealousAssistant_003_AD": [
              {
                "id": "ZealousAssistant_003_AD_0",
                "speaker": "Sister Anya",
                "text": "Can you feel it? The hurting?",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Hospital_State_NursesKilledSurgeon",
                  "7cb61031-a8dd-1d49-5052-621c7050c9cb_C"
                ],
                "setflags": [
                  "7cb61031-a8dd-1d49-5052-621c7050c9cb_B = False",
                  "7cb61031-a8dd-1d49-5052-621c7050c9cb_A = False",
                  "7cb61031-a8dd-1d49-5052-621c7050c9cb_C = False"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Soft, soothing, and creepy."
              },
              {
                "id": "ZealousAssistant_003_AD_9",
                "speaker": "Sister Anya",
                "text": "Here, darling. Let me soothe the pain.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Surgeon_InstrumentRequest_004_Combat": [
              {
                "id": "AD_Surgeon_InstrumentRequest_004_Combat_0",
                "speaker": "Malus Thorm",
                "text": "This flesh must be flayed. The next instrument, sister.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_ResponseToSurgeon_001_Combat": [
              {
                "id": "AD_ResponseToSurgeon_001_Combat_0",
                "speaker": "Sister Geanne",
                "text": "Your wish guides my hand.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ZealousAssistant_002": [
              {
                "id": "ZealousAssistant_002_0",
                "speaker": "Narrator",
                "text": "*She remains silent.*",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Hospital_HasMet_Nurse002 = False",
                  "TWN_Hospital_State_NursesKilledSurgeon"
                ],
                "setflags": [
                  "TWN_Hospital_HasMet_Nurse002"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Reception_CorpseTender": [
              {
                "id": "Reception_CorpseTender_46",
                "speaker": "Sister Lidwin",
                "text": "Don't call the doctor yet! I've got potions, sutures - I know I can do this...",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Hospital_Reception_CorpseTender_HasMet = False"
                ],
                "setflags": [
                  "TWN_Hospital_Reception_CorpseTender_HasMet"
                ],
                "goto": "",
                "link": "53",
                "is_end": false,
                "approval": [],
                "context": "InternalNodeContext: She doesn't see you coming, but from the sound of your footsteps thinks you might be the doctor. \rNodeContext: The nurse is panicking assuming you are a patient"
              },
              {
                "id": "Reception_CorpseTender_72",
                "speaker": "Sister Lidwin",
                "text": "Oh, you're a patient. This is the children's ward - triage is back that way.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "53",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: Mid-inspection, the nurse notices you. \rNodeContext: Mid-inspection, the nurse notices the player."
              },
              {
                "id": "Reception_CorpseTender_31",
                "speaker": "",
                "text": "",
                "node_type": "jump",
                "checkflags": [],
                "setflags": [],
                "goto": "53",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "53",
                "error": "NODE_DATA_NOT_FOUND",
                "special_marker": true
              },
              {
                "id": "NODE_NOT_FOUND",
                "special_marker": true
              }
            ],
            "AD_Surgeon_InstrumentRequest_001_Combat": [
              {
                "id": "AD_Surgeon_InstrumentRequest_001_Combat_0",
                "speaker": "Malus Thorm",
                "text": "Sister. The first instrument, if I may.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Surgeon_Trepan_Combat": [
              {
                "id": "AD_Surgeon_Trepan_Combat_0",
                "speaker": "Malus Thorm",
                "text": "Blood has pooled in the brain. I must open the cranium!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ZealousAssistant_001_AD": [
              {
                "id": "ZealousAssistant_001_AD_0",
                "speaker": "Sister Geanne",
                "text": "He is absent. Abscence is him.",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Hospital_State_NursesKilledSurgeon",
                  "36aea695-4652-6e6a-8380-567e8c440740_C"
                ],
                "setflags": [
                  "36aea695-4652-6e6a-8380-567e8c440740_C = False",
                  "36aea695-4652-6e6a-8380-567e8c440740_A = False",
                  "36aea695-4652-6e6a-8380-567e8c440740_B = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Weird outbursts. Her mind is lost. Not loud, just intense"
              }
            ],
            "Patient_AD": [
              {
                "id": "Patient_AD_0",
                "speaker": "Distressed Patient",
                "text": "Grggg - gng - nng...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: Gurgling - tongue has been torn out"
              }
            ],
            "AD_Surgeon": [
              {
                "id": "AD_Surgeon_0",
                "speaker": "Malus Thorm",
                "text": "Only with unwavering hand can we show our subject mercy.",
                "node_type": "normal",
                "checkflags": [
                  "f4169abb-abdc-be87-1a9d-91387440472c_A"
                ],
                "setflags": [
                  "f4169abb-abdc-be87-1a9d-91387440472c_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: speaking to nurses as he demonstrates surgical procedure"
              }
            ],
            "AD_Surgeon_InstrumentRequest_003_Combat": [
              {
                "id": "AD_Surgeon_InstrumentRequest_003_Combat_0",
                "speaker": "Sister Anya",
                "text": "A most difficult dissection. Sister?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: 'Sister?' = expectantly, asking for his next surgical tool."
              }
            ],
            "PAD_Entrance_1P": [
              {
                "id": "PAD_Entrance_1P_0",
                "speaker": "Player",
                "text": "A house of healing, for all the good it does anyone now.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Surgeon_Bonesaw_Combat": [
              {
                "id": "AD_Surgeon_Bonesaw_Combat_0",
                "speaker": "Malus Thorm",
                "text": "Still yourself. The saw's teeth will open the way for her shadow.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "RooftopRaven": [
              {
                "id": "RooftopRaven_30",
                "speaker": "Narrator",
                "text": "|*The raven is unnerved by your presence and clearly wants you to leave*|",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Hospital_RooftopRaven_State_Persuaded = False",
                  "PETPAL = False"
                ],
                "setflags": [
                  "TWN_Hospital_RooftopRaven_HasMet"
                ],
                "goto": "",
                "link": "59",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "RooftopRaven_23",
                "speaker": "ade29cab-0f28-42f5-b5bb-4f8911171a9d",
                "text": "|Ca-caw!|",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "RooftopRaven_15",
                "speaker": "Player",
                "text": "|*Just prepare to fight raven for no good reason*|",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "RooftopRaven_10",
                "speaker": "ade29cab-0f28-42f5-b5bb-4f8911171a9d",
                "text": "|Ka-kaw!|",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [
                  "FactionHostileToPlayerGroupAfterDialog"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD_Surgeon_SuccessfulSurgery_Combat": "Combat AD",
            "AD_Surgeon_Leech_Combat": "Combat AD",
            "AD_Surgeon_InstrumentRequest_002_Combat": "Combat AD",
            "PAD_SurgeonDead": "PAD is played after Surgeon is dead.Variations: - Killed by Nurses; - Killed himself; - Killed in combat;",
            "Reception_Receptionist": "Receptionist at the entrance of the Hospital. She's mostly supposed to be there for flavor and to provide directions to the operating room (down the hallway and under the observation area.) If you piss her off or try to circumvent her to see the doctor, she'll fight you.",
            "ZealousAssistant_003_AD": "Nurses only speak if the Surgeon is dead.Case #1 They operated on the Surgeon and killed him.Case #2.The player killed the Surgeon and ran away. The nurses now have ADs.",
            "AD_Surgeon_InstrumentRequest_004_Combat": "Combat AD",
            "AD_ResponseToSurgeon_001_Combat": "Combat AD",
            "ZealousAssistant_002": "One of the nurses in the HospitalMUTE (maybe just can't talk or maybe lost her tongue to the surgeon)",
            "Reception_CorpseTender": "A nurse is tending to the corpse of Arabella's father, one of the rejected/failed experiments of the Surgeon. She is insistent that it makes sense, even though the corpse is well... a corpse. The player can trade with this nurse.",
            "AD_Surgeon_InstrumentRequest_001_Combat": "Combat AD",
            "AD_Surgeon_Trepan_Combat": "Combat AD",
            "ZealousAssistant_001_AD": "Nurses only speak if the Surgeon is dead.Case #1 They operated on the Surgeon and killed him.Case #2.The player killed the Surgeon and ran away. The nurses now have ADs.",
            "Patient_AD": "Patiens has no tongue or eyes. If you release him he produces some sounds, walks a couple of feet and dies from blood loss.",
            "AD_Surgeon": "Surgeon in the Hospital in the Cursed Town operates on a goblin restrained in a chair.OR comments about patients if the goblin is dead (released).",
            "AD_Surgeon_InstrumentRequest_003_Combat": "Combat AD",
            "PAD_Entrance_1P": "VB that is played when you approach the Hospital in SCL",
            "AD_Surgeon_Bonesaw_Combat": "Combat AD",
            "RooftopRaven": ""
          }
        },
        "twn_missingpetsboard": {
          "scenario_name": "twn_missingpetsboard",
          "session_sequence": [
            "PAD"
          ],
          "paths": {
            "PAD": [
              "PAD_0"
            ]
          },
          "node_data": {
            "PAD": [
              {
                "id": "PAD_0",
                "speaker": "Player",
                "text": "Missing - 'Zola'. 'Rascal'. Why do those names sounds familiar? Oh - the blood-stained collars...",
                "node_type": "normal",
                "checkflags": [
                  "TWN_MissingPets_State_CheckedPileOfPetsCollars"
                ],
                "setflags": [
                  "TWN_MissingPets_State_ReadPosters"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD": "Character interacts with a board of posters outlining many pets who have gone missing in the town in the shadowlands."
          }
        },
        "twn_hospitalsignpost": {
          "scenario_name": "twn_hospitalsignpost",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "twn_mausoleum": {
          "scenario_name": "twn_mausoleum",
          "session_sequence": [
            "PAD_MausoleumEntry"
          ],
          "paths": {
            "PAD_MausoleumEntry": [
              "PAD_MausoleumEntry_0"
            ]
          },
          "node_data": {
            "PAD_MausoleumEntry": [
              {
                "id": "PAD_MausoleumEntry_0",
                "speaker": "Player",
                "text": "These sigils... what were they for?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD_MausoleumEntry": "On approaching the Thorm Mausoleum in SCL, characters comment on the sigils placed around the entrance of the Mausoleum. Halsin, Minthara, Shadowheart, Druids and Selune followers have more context on what they are seeing."
          }
        },
        "twn_distillery": {
          "scenario_name": "twn_distillery",
          "session_sequence": [
            "Brewer_Zombie_01",
            "ResearchNotes",
            "PAD_Brewer_Poison",
            "AD_Brewer_Zombie_02",
            "AD_Brewer_Zombie_03",
            "AD_Brewer_Hallucinating_001_Combat",
            "AD_HalflingsSign",
            "PAD_Entrance_1P",
            "AD_Brewer",
            "AD_WaningMoonSign",
            "AD_Brewer_Zombie_04",
            "AD_Brewer_Necro_Combat",
            "AD_Brewer_Physical_Combat",
            "AD_Brewer_Drunk_003_Combat",
            "AD_Brewer_Poison_Combat",
            "PAD_ArmInBarrel",
            "PAD_Brewer_Hallucinating",
            "PAD_BrewerDead",
            "Brewer_Zombie_04",
            "Brewer",
            "Brewer_Zombie_02"
          ],
          "paths": {
            "Brewer_Zombie_01": [
              "Brewer_Zombie_01_20",
              "Brewer_Zombie_01_13",
              "Brewer_Zombie_01_4",
              "Brewer_Zombie_01_3",
              "Brewer_Zombie_01_22"
            ],
            "ResearchNotes": [
              "ResearchNotes_26",
              "ResearchNotes_9",
              "ResearchNotes_19",
              "ResearchNotes_4",
              "ResearchNotes_0",
              "ResearchNotes_11",
              "ResearchNotes_16",
              "ResearchNotes_21",
              "ResearchNotes_10",
              "ResearchNotes_8",
              "ResearchNotes_23",
              "ResearchNotes_5"
            ],
            "PAD_Brewer_Poison": [
              "PAD_Brewer_Poison_0"
            ],
            "AD_Brewer_Zombie_02": [
              "AD_Brewer_Zombie_02_0"
            ],
            "AD_Brewer_Zombie_03": [
              "AD_Brewer_Zombie_03_0"
            ],
            "AD_Brewer_Hallucinating_001_Combat": [
              "AD_Brewer_Hallucinating_001_Combat_0"
            ],
            "AD_HalflingsSign": [
              "AD_HalflingsSign_0"
            ],
            "PAD_Entrance_1P": [
              "PAD_Entrance_1P_0"
            ],
            "AD_Brewer": [
              "AD_Brewer_1",
              "AD_Brewer_5"
            ],
            "AD_WaningMoonSign": [
              "AD_WaningMoonSign_0"
            ],
            "AD_Brewer_Zombie_04": [
              "AD_Brewer_Zombie_04_0"
            ],
            "AD_Brewer_Necro_Combat": [
              "AD_Brewer_Necro_Combat_0"
            ],
            "AD_Brewer_Physical_Combat": [
              "AD_Brewer_Physical_Combat_0"
            ],
            "AD_Brewer_Drunk_003_Combat": [
              "AD_Brewer_Drunk_003_Combat_0"
            ],
            "AD_Brewer_Poison_Combat": [
              "AD_Brewer_Poison_Combat_0"
            ],
            "PAD_ArmInBarrel": [
              "PAD_ArmInBarrel_0"
            ],
            "PAD_Brewer_Hallucinating": [
              "PAD_Brewer_Hallucinating_0"
            ],
            "PAD_BrewerDead": [
              "PAD_BrewerDead_0"
            ],
            "Brewer_Zombie_04": [
              "Brewer_Zombie_04_1",
              "Brewer_Zombie_04_8",
              "Brewer_Zombie_04_14",
              "Brewer_Zombie_04_13",
              "Brewer_Zombie_04_11"
            ],
            "Brewer": [
              "Brewer_179",
              "Brewer_258",
              "Brewer_288",
              "Brewer_49",
              "Brewer_103",
              "Brewer_25"
            ],
            "Brewer_Zombie_02": [
              "Brewer_Zombie_02_0"
            ]
          },
          "node_data": {
            "Brewer_Zombie_01": [
              {
                "id": "Brewer_Zombie_01_20",
                "speaker": "Blighted Barman",
                "text": "D-do mess our pardon. Our master d-distiller spill's quite the caused.",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Distillery_HasMet_Zombie_01 = False",
                  "TWN_Distillery_State_PeacefulResolution"
                ],
                "setflags": [
                  "TWN_Distillery_HasMet_Zombie_01"
                ],
                "goto": "",
                "link": "3",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Brewer_Zombie_01_13",
                "speaker": "Blighted Barman",
                "text": "Now settle your mind, chum, and get your shine on. Be will it what?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "3",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Brewer_Zombie_01_4",
                "speaker": "Player",
                "text": "Nothing for me, thanks.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "15",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Brewer_Zombie_01_3",
                "speaker": "Blighted Barman",
                "text": "M-moon Mountain Dark, coming righ-righ-right up. A man of proper t-taste!",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "15",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Stuck on repeat, going through the motions and 'glitching out'."
              },
              {
                "id": "Brewer_Zombie_01_22",
                "speaker": "Player",
                "text": "Leave.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "ResearchNotes": [
              {
                "id": "ResearchNotes_26",
                "speaker": "Narrator",
                "text": "*Research notes. They describe a powerful venom extracted from a rare purple worm. Distiller Thisobald Thorm sought to create a fatal poison using the worm's gullet.*",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Distillery_Knows_AlchemyStashLocation = False",
                  "TWN_Distillery_HasMet_ResearchNotes = False"
                ],
                "setflags": [
                  "TWN_Distillery_HasMet_ResearchNotes"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ResearchNotes_9",
                "speaker": "Narrator",
                "text": "*He procured several parts of a gullet, but rinsed one in error. The poison he brewed was noxious - but not fatal.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ResearchNotes_19",
                "speaker": "Narrator",
                "text": "*He devoted months to formulating a deadly poison with the remaining ingredients, without success.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ResearchNotes_4",
                "speaker": "Narrator",
                "text": "*After exhaustive experimentation, he was able to make a near-deadly extract from the glands. But to complete his poison, Thisobald required one last ingredient:*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ResearchNotes_0",
                "speaker": "Narrator",
                "text": "*The petals of a corpse rose.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ResearchNotes_11",
                "speaker": "Narrator",
                "text": "*The book's index reveals corpse roses may grow near tombs, mausoleums, and particularly redolent cadavers.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ResearchNotes_16",
                "speaker": "Narrator",
                "text": "*Thisobald enlisted a courier from Baldur's Gate to obtain corpse rose petals and other ingredients and deliver them to a covert location.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ResearchNotes_21",
                "speaker": "Narrator",
                "text": "*Unfortunately, a deep purple stain darkens the final page, obscuring the parcel's destination.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ResearchNotes_10",
                "speaker": "Player",
                "text": "Focus your eyes on the page. Mentally separate the blank ink from the purple stain.",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Distillery_Knows_AlchemyStashLocation = False",
                  "TWN_Distillery_State_CheckedResearchNotes = False"
                ],
                "setflags": [
                  "TWN_Distillery_State_CheckedResearchNotes"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ResearchNotes_8",
                "speaker": "",
                "text": "True",
                "node_type": "rollresult",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ResearchNotes_23",
                "speaker": "Narrator",
                "text": "*Your mind separates the black from the blue, revealing the stash's location. You mark your map as a reminder.*",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Distillery_State_FoundAlchemyStash = False"
                ],
                "setflags": [
                  "TWN_Distillery_Event_LearnedAlchemyStashLocation"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "ResearchNotes_5",
                "speaker": "Narrator",
                "text": "*With the corpse rose petals the package contains, you might create Thisobald's purple worm poison.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_Brewer_Poison": [
              {
                "id": "PAD_Brewer_Poison_0",
                "speaker": "Player",
                "text": "Hells - his brew's turned to poison.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Brewer_Zombie_02": [
              {
                "id": "AD_Brewer_Zombie_02_0",
                "speaker": "Blighted Patron",
                "text": "Finally, there might be some more drink for the rest of us.",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Distillery_State_PeacefulResolution",
                  "0b8c6047-3086-fee9-4fbe-4a29d5a3928d_C"
                ],
                "setflags": [
                  "0b8c6047-3086-fee9-4fbe-4a29d5a3928d_C = False",
                  "0b8c6047-3086-fee9-4fbe-4a29d5a3928d_A = False",
                  "0b8c6047-3086-fee9-4fbe-4a29d5a3928d_B = False"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: reflecting on the fact the brewer just died, but with little emotion"
              }
            ],
            "AD_Brewer_Zombie_03": [
              {
                "id": "AD_Brewer_Zombie_03_0",
                "speaker": "Blighted Troubador",
                "text": "Drink has torn his mortal stitches - Say, hey, for the pub!",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Distillery_State_PeacefulResolution",
                  "6d7dd0b2-3ea0-9fe3-4c7f-98061f69f70b_A"
                ],
                "setflags": [
                  "6d7dd0b2-3ea0-9fe3-4c7f-98061f69f70b_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: referring to the brewer, who just died"
              }
            ],
            "AD_Brewer_Hallucinating_001_Combat": [
              {
                "id": "AD_Brewer_Hallucinating_001_Combat_0",
                "speaker": "Thisobald Thorm",
                "text": "Imps! No, no - illusions, delusions, delirium.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_HalflingsSign": [
              {
                "id": "AD_HalflingsSign_0",
                "speaker": "Narrator",
                "text": "*Halflings and gnomes - order here.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_Entrance_1P": [
              {
                "id": "PAD_Entrance_1P_0",
                "speaker": "Player",
                "text": "That sign above. This must be a brewery - or distillery.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Brewer": [
              {
                "id": "AD_Brewer_1",
                "speaker": "Thisobald Thorm",
                "text": "Never enough.",
                "node_type": "normal",
                "checkflags": [
                  "b0d721a3-ca68-1e03-4e19-6eeddf6dd9ab_A"
                ],
                "setflags": [
                  "b0d721a3-ca68-1e03-4e19-6eeddf6dd9ab_B"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: melancholy"
              },
              {
                "id": "AD_Brewer_5",
                "speaker": "Thisobald Thorm",
                "text": "Always empty.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: melancholy"
              }
            ],
            "AD_WaningMoonSign": [
              {
                "id": "AD_WaningMoonSign_0",
                "speaker": "Narrator",
                "text": "*The Waning Moon - Distillery.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Brewer_Zombie_04": [
              {
                "id": "AD_Brewer_Zombie_04_0",
                "speaker": "Blighted Actor",
                "text": "Wait... what am I doing here again?",
                "node_type": "normal",
                "checkflags": [
                  "4823073f-d1c4-5fe7-de96-d63538c05fbb_A"
                ],
                "setflags": [
                  "4823073f-d1c4-5fe7-de96-d63538c05fbb_B"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Brewer_Necro_Combat": [
              {
                "id": "AD_Brewer_Necro_Combat_0",
                "speaker": "Thisobald Thorm",
                "text": "Drink of dead, dying, death. Order up.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Brewer_Physical_Combat": [
              {
                "id": "AD_Brewer_Physical_Combat_0",
                "speaker": "Thisobald Thorm",
                "text": "Blrgh. Need... relief...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Brewer_Drunk_003_Combat": [
              {
                "id": "AD_Brewer_Drunk_003_Combat_0",
                "speaker": "Thisobald Thorm",
                "text": "Blrgh. Don't feel so good...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "AD_Brewer_Poison_Combat": [
              {
                "id": "AD_Brewer_Poison_Combat_0",
                "speaker": "Thisobald Thorm",
                "text": "I've picked your poison.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_ArmInBarrel": [
              {
                "id": "PAD_ArmInBarrel_0",
                "speaker": "Player",
                "text": "Is that... a human arm? Do I even want to know?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_Brewer_Hallucinating": [
              {
                "id": "PAD_Brewer_Hallucinating_0",
                "speaker": "Player",
                "text": "Is that... yes! His hallucinations made real.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "PAD_BrewerDead": [
              {
                "id": "PAD_BrewerDead_0",
                "speaker": "Player",
                "text": "Pity we had to kill him. He seemed more lonely than cruel.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ],
            "Brewer_Zombie_04": [
              {
                "id": "Brewer_Zombie_04_1",
                "speaker": "Blighted Actor",
                "text": "One day I'll get there... one day...",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Distillery_HasMet_Zombie_04 = False"
                ],
                "setflags": [
                  "TWN_Distillery_HasMet_Zombie_04"
                ],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: lost in thought"
              },
              {
                "id": "Brewer_Zombie_04_8",
                "speaker": "Player",
                "text": "What are you doing up here on this stage?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Brewer_Zombie_04_14",
                "speaker": "Blighted Actor",
                "text": "Isn't it obvious! I'm a... I stand on a stage, pretending...",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: hesitant, trying to find the right words, but is cursed to forget"
              },
              {
                "id": "Brewer_Zombie_04_13",
                "speaker": "Player",
                "text": "You mean you're an actor? How did you end up here?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Brewer_Zombie_04_11",
                "speaker": "Blighted Actor",
                "text": "I was... performing... and then the lights went out. I'm waiting for the curtain call.<br>",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: hopeful, but uncertain"
              }
            ],
            "Brewer": [
              {
                "id": "Brewer_179",
                "speaker": "",
                "text": "",
                "node_type": "tagcinematic",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "85",
                "is_end": false,
                "approval": [],
                "context": "CinematicNodeContext: The brewer drags itself to a bar counter, on which are two full mugs."
              },
              {
                "id": "Brewer_258",
                "speaker": "Thisobald Thorm",
                "text": "Drink, gulp it down, wet your whistle. Tell your story.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "85",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Twisted and creepy, a jovial barman who has been corrupted by curse."
              },
              {
                "id": "Brewer_288",
                "speaker": "Player",
                "text": "What in all Nine Hells are you?",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "85",
                "is_end": false,
                "approval": [],
                "context": ""
              },
              {
                "id": "Brewer_49",
                "speaker": "Thisobald Thorm",
                "text": "Son of Thorm. Sot of Sword Coast.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "85",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: Thorm pronounced like Thorn)"
              },
              {
                "id": "Brewer_103",
                "speaker": "Thisobald Thorm",
                "text": "Go on. Cheers, bottoms up, down the hatch.",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "85",
                "is_end": false,
                "approval": [],
                "context": "NodeContext: still an offer, but becoming more of a threat"
              },
              {
                "id": "Brewer_25",
                "speaker": "",
                "text": "",
                "node_type": "taganswer",
                "checkflags": [],
                "setflags": [
                  "ORI_Inclusion_Random"
                ],
                "goto": "",
                "link": "85",
                "is_end": false,
                "approval": [],
                "context": ""
              }
            ],
            "Brewer_Zombie_02": [
              {
                "id": "Brewer_Zombie_02_0",
                "speaker": "Blighted Patron",
                "text": "I don't know you... perhaps I forgot you.",
                "node_type": "normal",
                "checkflags": [
                  "TWN_Distillery_HasMet_Zombie_02 = False"
                ],
                "setflags": [
                  "TWN_Distillery_HasMet_Zombie_02"
                ],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "Brewer_Zombie_01": "A zombie who was once the waiter. He is stuck on repeat, going through the motions and 'glitching out'.",
            "ResearchNotes": "Research notes of the Brewer.He experimented with different poisons on different creatures, trying to figure out the most effective ways of poisoning them. This book also contains info about his attempts to create a Purple Worm Poison.",
            "PAD_Brewer_Poison": "Played during the fight with the Brewer.",
            "AD_Brewer_Zombie_02": "One of the zombie patrons in the Brewery. Just wandering around.He's been trapped in the shadow-curse for a hundred years, and has been drained of most of his emotions. What lingers is a sense of sadness - he misses the joy of the old times.",
            "AD_Brewer_Zombie_03": "Zombie Patron #3 in BreweryTroubador singing/chanting drinking rhymes.",
            "AD_Brewer_Hallucinating_001_Combat": "Combat AD",
            "AD_HalflingsSign": "Plaque that says \"Halfings and gnomes order here.\"",
            "PAD_Entrance_1P": "VB that is played when you approach the Distillery in SCL",
            "AD_Brewer": "Brewer in Shadow-Cursed Town. Waiting for someone to join him as he stands behind the bar.The brewer was once an ordinary person, but has been twisted by the shadowcurse and is now a huge, bloated monstrosity. He speaks in fragments, and is menacing but with an air of melancholy. He wants to drink until he forgets everything, and would like to bring everyone into oblivion with him.",
            "AD_WaningMoonSign": "Click on the sign of Distillery in TWN",
            "AD_Brewer_Zombie_04": "Zombie Patron #4 in Brewery. Used to be an actor, was on her way to Baldur's Gate. Like the other patrons in the brewery, she's been trapped in the shadow-curse for a hundred years, and is mostly drained of emotions.",
            "AD_Brewer_Necro_Combat": "Combat AD",
            "AD_Brewer_Physical_Combat": "Combat AD",
            "AD_Brewer_Drunk_003_Combat": "Combat AD",
            "AD_Brewer_Poison_Combat": "Combat AD",
            "PAD_ArmInBarrel": "There is a barrel with an arm sticking out of it, Clicking on it makes the characters comment. The comment is different depending on whether the player has read the Brewer's diary.",
            "PAD_Brewer_Hallucinating": "Played during the fight with the Brewer.",
            "PAD_BrewerDead": "In Town in Act 2 we meet the Brewer that is son of Ketheric and shadow-curse mutated. This one is played when we defeat him",
            "Brewer_Zombie_04": "One of the zombie patrons in the Brewery. This is an actor whose heart was set on the Five Flagons in Baldur's Gate, but he got lost in his cups here.",
            "Brewer": "Dialog with the Brewer. He is a bloated creature who asks us to drink ourselves into oblivion with him. Player choices lead either to combat, or to the brewer drinking himself until he explodes.Twisted and creepy, a jovial barman who has been corrupted by curse to become a monstrous drunk. He speaks in fragments, swinging between melancholy, menace, and humour. Extra emphasis and derangment on bold words.",
            "Brewer_Zombie_02": "One of the zombie patrons in the Brewery. Just wandering around."
          }
        },
        "twn_helpwantedposter": {
          "scenario_name": "twn_helpwantedposter",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "twn_hospitalplaque": {
          "scenario_name": "twn_hospitalplaque",
          "session_sequence": [
            "AD"
          ],
          "paths": {
            "AD": [
              "AD_0"
            ]
          },
          "node_data": {
            "AD": [
              {
                "id": "AD_0",
                "speaker": "Narrator",
                "text": "*Reithwin House of Healing. Presiding Surgeon: Malus Thorm.*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD": "Plaque identifying hospital"
          }
        },
        "twn_laezel": {
          "scenario_name": "twn_laezel",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "twn_readseluneprayerbook": {
          "scenario_name": "twn_readseluneprayerbook",
          "session_sequence": [
            "PAD"
          ],
          "paths": {
            "PAD": [
              "PAD_0"
            ]
          },
          "node_data": {
            "PAD": [
              {
                "id": "PAD_0",
                "speaker": "Shadowheart",
                "text": "Rambling nonsense. Why someone would be drawn to this is beyond me.",
                "node_type": "normal",
                "checkflags": [
                  "ShadowHeart_InParty_Knows_SharWorshipper = False",
                  "TWN_State_ReadSelunePrayerBook"
                ],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "PAD": "ShadowHeart reacting on reading\"Selune Prayer Book\"Location: SCL -> Tollhouse - Seized Inventory Room.She reacts both when she reads the book or when another character does that."
          }
        },
        "twn_masonguild": {
          "scenario_name": "twn_masonguild",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "twn_mausoleumsignpost": {
          "scenario_name": "twn_mausoleumsignpost",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        },
        "twn_bgsignpost": {
          "scenario_name": "twn_bgsignpost",
          "session_sequence": [
            "AD"
          ],
          "paths": {
            "AD": [
              "AD_0"
            ]
          },
          "node_data": {
            "AD": [
              {
                "id": "AD_0",
                "speaker": "Narrator",
                "text": "*East - Reithwin <br>West - Baldur's Gate*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": "NodeContext: RYTH-win. Like rye bread, not wreath. TH like in 'thick', not like in 'those'."
              }
            ]
          },
          "session_synopses": {
            "AD": "Signpost in the Cursed Town."
          }
        },
        "twn_fishermannote": {
          "scenario_name": "twn_fishermannote",
          "session_sequence": [
            "AD"
          ],
          "paths": {
            "AD": [
              "AD_0"
            ]
          },
          "node_data": {
            "AD": [
              {
                "id": "AD_0",
                "speaker": "Narrator",
                "text": "*Gone fishing. CATCH you later! - Ellis*",
                "node_type": "normal",
                "checkflags": [],
                "setflags": [],
                "goto": "",
                "link": "",
                "is_end": true,
                "approval": [],
                "context": ""
              }
            ]
          },
          "session_synopses": {
            "AD": "Just a note from a fisherman."
          }
        },
        "twn_marchingarmy": {
          "scenario_name": "twn_marchingarmy",
          "session_sequence": [],
          "paths": {},
          "node_data": {},
          "session_synopses": {}
        }
      },
      "final_flags": [
        "SCL_Drider_HasMet_HarperCaster000",
        "GOB_SpiderNest_State_SpidersHostile",
        "DEN_AttackOnDen_HasMet_Prodigy",
        "TWN_CentralSquare_HasMet_PlaqueOfIntelligence",
        "DEN_CapturedGoblin_GuardsHasMet",
        "HAV_Umi_NightsongFreed_HasMet",
        "GOB_Checkpoint_Event_MoveToCamp",
        "UND_MyconidRevenge_Event_TakeHead",
        "8a9a14b0-87da-5c78-aa76-7a266de7a786_Phase1",
        "PLA_TavernInvestigation_Knows_AskedStelmane",
        "DEN_AttackOnDen_HasMet_Tiefling010Victory",
        "GLO_Moonrise_Knows_AbsoluteAtGrymforge",
        "COL_Vault_State_HasAccess",
        "CRA_DeadPrisoner_Dead_AskedQuestion",
        "UND_DuergarMutineerFollowUp_Event_Happened",
        "CHA_Outside_Event_DoorGuardConvinced",
        "e0b6dfeb-2923-e0ad-1dc5-2a5d1e055e16_local1",
        "DEN_AttackOnDen_HasMet_GrieflingFriend",
        "DEN_AttackOnDen_HasMet_Tiefling001",
        "GOB_QuartermasterFlimsy_HasMet",
        "HAV_SavingPrisoners_HasMet_Manip",
        "GEN_TransferNPCPayment_2",
        "DEN_AttackOnDen_Event_OpenGateAfterCombat",
        "5e9c4c72-4f56-2646-ce36-88207d2dc33c_KinSaved",
        "95496308-6e34-b8c7-93fb-3b5e56e71f5d_C",
        "GOB_OwlbearCub_Event_InvitedToCamp",
        "MOO_Docks_HasMet_DockObserver",
        "MOO_Jailbreak_HasMet_Guard004",
        "PLA_Desire_Knows_RavengardTaken",
        "DEN_DruidServant005_Knows_TalkedAboutLockdown",
        "UND_SocietyOfBrilliance_MindFlayer_State_MindFlayerFeeding",
        "PLA_ConflictedFlind_Event_MindControlDamage_Minor",
        "DEN_AttackOnDen_HasMet_Servant005Victory",
        "PLA_Desire_State_WyllComTrack",
        "CHA_Chapel_Event_OpenedJergalsTomb",
        "UND_DarkLake_State_ClaimedGekhWasDead",
        "DEN_AttackOnDen_Pet004_HasMet",
        "GLO_Player_Knows_MoonlanternExists",
        "GOB_PainPriest_Event_Reward",
        "2da46374-abab-9219-f7ce-2a002cfd72a5_a",
        "DEN_AttackOnDen_Ranged_001_HasMet",
        "GLO_Volo_HasMet_Personally",
        "GOB_PainPriest_State_ReactedToPenance",
        "8916beac-0385-3df9-de07-8be3cc6752a7_A",
        "da38cd0f-efef-6809-231d-26f71308cd07_B",
        "HAV_ProdigyLament_Knows_RolanAlive",
        "DEN_RaidingParty_Event_SkipConfrontation",
        "ORI_INCLUSION_SHADOWHEART",
        "GLO_TadpoledCount6",
        "PLA_TavernInvestigation_Quest_WallCollapsed",
        "PLA_Refugee_002_TollhouseMentioned",
        "DEN_AttackOnDen_HasMet_RobberKid",
        "FOR_PriestsConqueringGod_AlliedPlayer",
        "HAG_GurHunter_Dead_Knows_Hunter",
        "HAV_TieflingSurvivors_State_DidNotPromiseToSaveMol",
        "DEN_AttackOnDen_HasMet_PickpocketVictory",
        "DEN_GuardedEntrance_State_ParentsKnowDeath",
        "ORI_MintharaRecuitment_Event_InvitedToCamp",
        "FactionHostileToIndivPlayerAfterDialog",
        "GLO_IronhandGnomes_Knows_WulbrenInMoonrise",
        "Den_Thieflings_InterferingGuard_PCGotLore",
        "WLD_FOR_GnomeGoblinsAngry",
        "MOO_KitchenFight_HasMet_GnollMaster",
        "GOB_Checkpoint_Guard01_HasMet",
        "c7cbc714-5e48-c78a-0867-2ce81a42d681_B",
        "WLD_UnfortunateGnome_PayPassage",
        "4c78f756-720d-a285-a3e6-8f69a6069abc_Step1",
        "cd4b312f-5a40-b8c1-1ecb-0862c829a479_A",
        "5ebae00c-47d8-736c-6738-4ee56cebbc49_B",
        "GLO_Prodigy_State_ToldSiblingsProdigyDead",
        "MOO_Jailbreak_Event_ProdigyIntro",
        "DEN_General_YoungLovers_HasMet",
        "GLO_LiftingTheCurse_State_HalsinRecruitable",
        "GOB_PainPriest_Event_CheckHP",
        "GLO_Desire_HasMet",
        "6d4ecf46-ffab-ed53-3b19-68607a0e1309_B",
        "b43d3bc7-f10d-73cc-232e-c1f93cba3ed5_Local2",
        "DEN_AttackOnDen_Pet002_HasMet",
        "FOR_UnfortunateGnome_State_NonCharlatanAccess",
        "UND_MyconidCircle_PlantDuergarHasMet",
        "aa1d4932-8689-5e30-2b17-9b0968663a7a_historysuccess",
        "4823073f-d1c4-5fe7-de96-d63538c05fbb_B",
        "MOO_Execution_Knows_Executioner",
        "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_WyllSpoke",
        "GOB_WolfPens_Worg_002_HasMet",
        "PLA_GithChokepoint_State_FailedReadingMap",
        "PLA_ZhentShipment_Agent_002_StartInclusion",
        "GLO_HAV_TakingIsobel_HasMet_BriefInRoom",
        "SCL_Drider_HarpersAtInn_OneLinerHasMet",
        "4951b7ce-8495-b2c8-badc-beaff0e3d807_H",
        "d2eeb9af-9d20-919f-5bcf-63b09a554a90_A",
        "DEN_ShadowDruid_Event_SetFaithwarden",
        "73cbf53d-6017-fdd5-a96a-9cae574a1bd9_B",
        "CRA_DeadPrisoner_Dead_MentionedTadpole",
        "GLO_Absolute_Knows_MoonriseTowers",
        "DEN_Rat_Event_MoveToShack",
        "DEN_DruidAttack_HasMet_Protester3AfterAttack",
        "ORI_Inclusion_End_Karlach",
        "UND_WormWall_State_RecognisedCrawlers",
        "GLO_GithChokepoint_DragonAppear",
        "SHA_Merregon_000_HasMet",
        "df3e1892-2ab5-7b69-e57b-a75504e1a8f2_B",
        "10297257-36dd-3799-f681-657656779d4a_TieflingsLaezelAD1",
        "ORI_Inclusion_End_Wyll",
        "DEN_AttackOnDen_HasMet_BackupLeader",
        "GLO_HeadRemoval_Event_HeadToInventory",
        "4a8285f1-6d42-51cd-6803-92696f6e8f7d_A",
        "CHA_Jergal_Event_AttemptedAttack",
        "9b4c05c6-0a79-ea8d-c351-43d6fbb04abc_Story1",
        "GOB_AbsoluteCultistStiff_HasMet",
        "GLO_Shadowcurse_Knows_FromGnome",
        "PLA_StuckHalfElf_Knows_ExplainedDowry",
        "FOR_BugBearLove_Event_MovePlayerInside",
        "DEN_Stargazing_Event_SawDragon",
        "SCL_Drider_HarperRanger_000_AtAmbush_HasMet",
        "SHA_LastJusticiar_Event_JusticiarTransforms",
        "ORI_INCLUSION_ASTARION",
        "FOR_UnfortunateGone_TiedUpHasmet",
        "HAG_Hagspawn_State_JakeBerserk",
        "6cf6ff37-64f7-3ccf-d702-ee2025510422_B",
        "UND_EbonLake_Event_MoveToLake",
        "FOR_SeluneStash_NoticeStashSeal_CommentedOnSeal",
        "GOB_Torturers_Rat_001_HasMet",
        "GOB_Scrying_NoddedOrShrugged",
        "DEN_BirdSender_HasMet_GobLeadersDead",
        "a759296c-5d41-f5b9-7d31-1c70d1e10dc7_Once",
        "8ab0520b-3a8d-822f-1934-336e2d24e0a0_B",
        "d3eb78cf-ff8c-1e7a-7df7-4b6a04226b17_B",
        "TWN_Distillery_State_CheckedResearchNotes",
        "DEN_HarpyMeal_Event_OriginCharm3",
        "683cb55e-08b9-c865-78a6-4e047ee62a24_B",
        "GLO_Tadpoled_UsedToday1",
        "GLO_HAV_TakingIsobel_HeardOfIsobel",
        "DEN_Thieflings_Event_PartnerQuestionAsked",
        "HAG_SurrogateMother_HasMet",
        "b83032a9-f599-fdff-c180-c2d1f267bdb4_B",
        "421668a5-7b68-9e8b-977b-522b4a071156_B",
        "b2a52f0b-5fa8-d275-f080-0fc8edbe1faf_B",
        "GOB_GoblingKing_Event_HealerPersuasion",
        "TWN_Hospital_Reception_Receptionist_HasMet",
        "UND_DuergarCamp_State_DocksHostile",
        "PLA_ZhentShipment_Agent_001_StartInclusion",
        "57c003e7-0932-6f0c-e655-99025a4abe3a_B",
        "dd1890a0-ff6c-a358-4269-1859078cc21d_B",
        "DEN_AttackOnDen_HasMet_TieflingLeader",
        "09983dce-d7d0-c108-506f-dcadc4044b0a_Derryth_SwD_Who",
        "PLA_TavernInvestigation_State_HasMet",
        "ORI_Inclusion_Karlach",
        "UND_BrokenMoonLantern_HasMet",
        "3483cea8-0c11-9432-2421-6b95b9140d95_B",
        "7611fa51-4b1b-3d2c-a8a5-74c04d9db7fa_AnimalHandlingSuccess",
        "UND_DuergarPatroller_03_HasMet",
        "DEN_DruidAttack_HasMet_HideoutLeaderAfterAttack",
        "DEN_TieflingScam_Event_InspectedBox",
        "GnomeAskedHelp",
        "3f665b97-a69e-81c5-68e6-5b931720721e_Part1",
        "CHA_LaezelRecruitment_MindMeld",
        "MOO_Bazaar_BazaarStander_006_JailbreakSuccess_HasMet",
        "94cd0a22-c842-d9f3-8121-f8ac16410656_A",
        "SCL_MastiffPoachers_Knows_ContinualFlame",
        "GLO_ScryingEyes_State_FeltGaze",
        "DEN_GuardedEntrance_HasMet_Guard3",
        "DEN_RaidingParty_Event_KanonOpensGate",
        "MOO_Jailbreak_HasMet_Warden",
        "DEN_AttackOnDen_HasMet_Wyll",
        "ORI_Shadowheart_State_DestroyedHaven",
        "PLA_ConflictedFlind_Knows_Gnolls",
        "GLO_TalkedToVoloAboutAbsolute",
        "UND_MyconidCircle_DwarvenAlchemist_BaelenRestoredHasmet",
        "6bc7114f-5279-4374-385e-b396157d5189_B",
        "COL_Barracks_State_InterruptConvinced",
        "GOB_Festivities_Trader_HasMet",
        "DEN_AttackOnDen_HasMet_Tiefling004",
        "ZhentDungeon_AgreedBuy",
        "11d70a18-2aae-47a0-1a18-c486858b1eaf_B",
        "DEN_GruntingKid_Event_DisappearIntoWall",
        "GOB_BattleStations_HasMet_WarDrum",
        "GOB_GoblinJolly_HasMet",
        "UND_MyconidCircle_InjuredGnome_ReportedGrymforgeFate",
        "564fac12-29bd-3abe-d380-0a864e688883_Turn1",
        "COL_TadpolingCentre_MemoryImprint_FirstUse",
        "HAV_TieflingSurvivors_Mirkon_EndInclusion",
        "DEN_Apprentice_HasMet_ReactedToShadowDruids",
        "DEN_CampGeneral_HasMet_Gatekeeper",
        "SCL_Drider_HasMet_CaravanHalfOrcCaster",
        "HAV_WrootRequest_Wulbren_AskedAboutIronhandGnomes",
        "UND_DeadInTheWater_CorpseDisposerCompanion_HasMet",
        "UND_MyconidCircle_MyconidSuspicious_HasMet",
        "MOO_Jailbreak_Knows_ToolsNeeded",
        "DEN_Hideout_State_GivenWarning",
        "PLA_Refugee_002_HasMet",
        "UND_DuergarGuard_AtPier_01_HasMet",
        "DEN_DruidAttack_HasMet_PickpocketTraderAfterAttack",
        "SCE_Jergal_HasMet",
        "DEN_RaidingParty_Event_OpenDenGate",
        "b8101d0a-5473-efd1-1d12-719d504d60b8_B",
        "SHA_Displacer_SwA_HasMet",
        "GOB_GoblinKingDead_Event_SaidFugitives",
        "HAV_SavingPrisoners_HasMet_Florrick",
        "HAV_EnteringHaven_State_RevealedArtifact",
        "UND_State_LeaderFreedGnomes",
        "41e56e7f-1722-7350-33dc-aefe523650fe_B",
        "d3d3855d-6721-b089-5c1e-d6d255a46fdc_A",
        "PLA_ZhentDungeon_State_SaidPassword",
        "c3207254-eafb-348b-d327-f690af0e213f_startedattackmove",
        "DEN_AttackOnDen_HasMet_TieflingBard",
        "UND_MyconidCircle_BroodingSovereign_State_InParty",
        "DEN_AttackOnDen_HasMet_Kid004Victory",
        "TWN_Hospital_Reception_State_GainedAcess",
        "TWN_MissingPets_State_ReadPosters",
        "DEN_Hideout_Event_LeaveCountdown",
        "1493763b-776c-959c-259a-89f34f326e04_A",
        "DEN_AttackOnDen_ZenBear_HasMet",
        "SCE_TieflingFollowUp_Knows_MolMissingEyepatch",
        "UND_FurnaceSearch_Knows_Xargrim",
        "HAV_ProdigyLament_Knows_SiblingsInMoonrise",
        "DEN_DevilishOx_State_ArcanaCheckComplete_SwA",
        "fa6e2ce0-64f3-bfb8-fb47-10f50f02cadf_AbsoluteMentioned",
        "MOO_Bazaar_HasMet_Bystander01",
        "SHA_Displacer_Event_DeceptionAttempted",
        "DEN_AttackOnDen_Event_PassedByEntrance",
        "DEN_Thieflings_TieflingGuard11_HasMet",
        "GOB_Trader_Knows_Goods",
        "DEN_AttackOnDen_HasMet_Tiefling005",
        "GOB_GoblinToast_Event_ToastSuccess",
        "COL_Barracks_Mistress_Knows_ThinksPlayerIsThrall",
        "c9e1ff2a-01e2-abdb-b98e-2d4a35b3c7dc_A",
        "DEN_ZenBear_Helped",
        "MOO_GuardRoom_HasMet_Guard02",
        "FOR_KnifeInMeat_State_KnifeBroken",
        "GOB_Festivities_Goblin001_HasMet",
        "2fb08ca0-df67-8450-3f01-c1e1c2a78b59_A",
        "FOR_GnomeGoblin1_HasMet",
        "SCL_Drider_Event_PlayersStartFollowingDrider",
        "7cf65f2f-1a29-daa2-940e-1159a8940b4e_C",
        "DEN_TieflingRefugees_Quest_HuntRewardOffered",
        "DEN_RaidingParty_Event_GatekeeperToLever",
        "DEN_DruidAttack_HasMet_ServantGnome",
        "COL_NecroLab_GrandDesignSculpture_HasMet_LaezelInclusion",
        "FOR_GoblinAmbush_Event_StopSpotting",
        "TWN_Hospital_RooftopRaven_HasMet",
        "HAV_Cat_HasMet",
        "DEN_AttackOnDen_HasMet_RitualDruid003",
        "ReportedToDerryth_BaelenIsAlive",
        "GOB_Owlbear_HasMet_NotChasing",
        "UND_SocietyOfBrilliance_MindFlayer_HasMet",
        "ba2b225d-e9d4-944d-5b4f-b27dd975c626_A",
        "DEN_AttackOnDenDruidLeader_State_HasMet",
        "6fa2b72d-fde1-4ee3-e1d1-f184232f693d_A",
        "DEN_DruidAttack_HasMet_ParentBAfterAttack",
        "DEN_General_Squirrel_LearnedTerritory",
        "MOO_Assault_HasMet_KethericHound",
        "HAG_Hagspawn_Knows_PromisedRaiseHusband",
        "OriginAddToParty",
        "ORI_Shadowheart_Knows_CurseResistant",
        "PLA_ZhentShipment_Agent_001_Inclusion_Start",
        "GOB_RaiderStupid_HasMet",
        "83fdf5e9-88b8-19e7-ba8f-ff075d2222ce_PLA_ZhentShipment_Knows_Gnolls",
        "DEN_Apprentice_Event_RevealedTadpole",
        "DEN_Thieflings_Event_HideoutTrespassCrimeResolved",
        "469a1188-028b-0e6b-b595-fa464baa551e_b",
        "GOB_RaiderBold_HasMet",
        "FoundCounsellor",
        "UND_DuergarCamp_State_SidedNone",
        "HAV_WrootRequest_Gnome002_NightsongFreed_HasMet",
        "a0afae3d-53b0-192d-d822-c61da104f979_A",
        "8f847adf-7b8a-3551-cfc0-4ea0c66a999a_F",
        "SCL_DriderHarper_Melee_000_StartInclusion",
        "SHA_Merregon_006_HasMet",
        "DEN_Apprentice_State_ShadowDruidPath",
        "DEN_AttackOnDen_HasMet_LeaderKidVictory",
        "FOR_Monitor_Event_TakeFood",
        "GOB_GoblinToast_ThirdGoblinToasted",
        "5b1ec9d1-cec5-2107-d929-f1af9c05d5d9_B",
        "FOR_Monitor_State_TransformToDevil",
        "DEN_Thieflings_HasMet_Guard2",
        "TWN_MissingPets_State_CheckedPileOfPetsCollars",
        "DEN_Thieflings_HasMet_Mol",
        "ORI_Karlach_HasMet",
        "MOO_Execution_State_PlayerWantedToAttack",
        "SCL_ServantOfTheRaven_Raven_HasMet_SWA",
        "GOB_Festivities_HasMet_Ogre_00",
        "GOB_RatRacket_LocalRat_002_HasMet",
        "TWN_Tollhouse_HasMet_Guilt",
        "4466a73c-607a-4a7e-c1e5-94d549e8f23d_A",
        "ce2b9169-f3e7-e07f-9c58-0fd373d5df9a_PLA_ZhentDungeon_Zhent02_Dead_KnowsZarysisZhentarim",
        "HAV_Minthara_Hasmet",
        "MOO_Jailbreak_Knows_GnomeEscape",
        "DEN_AttackOnDen_Event_EnemiesAppear",
        "GLO_Ketheric_Knows_ImmortalitySource",
        "003e1f20-0cac-171b-aa7c-df901e42aa6c_B",
        "FOR_SchoolOgres_Event_AttemptedFirstSkillCheck",
        "GOB_Checkpoint_State_UsedAlarmOnce",
        "TWN_Distillery_HasMet_ResearchNotes",
        "HAV_ProdigyLament_Event_Intro",
        "DEN_GoblinScouts_State_SavedDruid",
        "DEN_AttackOnDen_HasMet_Adventurer2",
        "d6df8edb-ac4b-e1d2-794b-6bfd00757cbf_A",
        "MOO_Assault_AssaultFlamingFist_003_ThroneRoomDefeated_HasMet",
        "SHA_Merregon_001_HasMet",
        "HAV_ProdigyLament_HasMet_Ide",
        "GOB_GoblinToast_Event_IncludeFourthGoblin",
        "15b0a2b9-2b22-50ab-70c0-ab3042def597_GaleCommentTried",
        "DEN_HarpyMeal_InHideout_WasMean",
        "PreventTradeWithPlayer",
        "DEN_GoblinHunt_Event_GiveRewardBag",
        "1bddcc22-dadd-92c9-4186-4e10ebbfee68_CHA_Crypt_Jergal_DontFollow",
        "UND_AdamantineForge_Knows_Adamantine",
        "DEN_AdventurersQuest_Knows_AradinStory",
        "FOR_Bottomless_State_InteractedWithWell",
        "8baf8087-81b0-de5d-3efa-f74769a625f4_B",
        "ORI_INCLUSION_MINTHARA",
        "SCE_Debrief_State_PartyDebriefed",
        "MOO_Jailbreak_HasMet_Wulbren",
        "DEN_AttackOnDen_HasMet_ChefAndSon",
        "ORI_Inclusion_Astarion",
        "UND_DarkJusticiarsCorpses_Recognized",
        "fd9ed69f-475f-def2-bae0-25065ccc4143_B",
        "GLO_Florrick_State_KnowsWyllDevil",
        "GLO_Desire_State_FreedInAct1",
        "MOO_MoonriseTower_State_Outcast",
        "DEN_DruidLair_Knows_DruidsAlliance",
        "1591cb60-9e65-980a-c49e-69f68b958a1d_B",
        "GOB_Checkpoint_State_GainedAccess",
        "FOR_UnfortunateGnome_Bargaining",
        "DEN_AttackOnDen_HasMet_ProdigyBrother",
        "UND_Elevator_Event_GotWarning",
        "UND_FearfulRothe_Event_MakeDuergarHostileInDialog",
        "GOB_GuardUpset_State_ConvincedTrueSoul",
        "SHA_Trials_Knows_SeenAltarInscription",
        "DEN_CapturedGoblin_State_InTransit",
        "TWN_Tollhouse_TollhouseMaster_HasMet",
        "GLO_Thieflings_State_PCShookPickpocketSister",
        "GOB_GEB_TorturedAdventurer_Assault_HasMet",
        "DEN_GroveConflict_Event_StoleIdolAttempt",
        "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_NoFFPresent",
        "29ddc96b-303b-373d-2b6f-37ae4e8d534b_A",
        "DEN_Thieflings_Event_CallGuard",
        "SCL_Drider_HasMet",
        "DEN_AdventurersQuest_RaidAdventurerAtCorps_HasMet",
        "UND_FearfulRothe_HasMet_Rothe_001_SpeakWithAnimals",
        "UND_FearfulRothe_State_BefriendedRothe",
        "0d6dbe21-1644-b9bf-8297-dd60d820bd99_B",
        "DEN_GuardedEntrance_HasMet_LiedAboutDeath",
        "FOR_ApothecaryGoblins_Goblin01_HasMet",
        "HAG_AnimalIllusion_Revealed_HasMet1",
        "DEN_TieflingScam_Event_TalkedAboutBox",
        "SCE_Alfira_Event_GaveShiningDawn",
        "0276d317-8b34-66e2-48e2-6b9d69d6830b_F",
        "UND_Automaton_Knows_AskedPlace",
        "HAV_Florrick_Event_RavengardInTowers",
        "CRA_DeadFisherman2_Dead_WhatDoing",
        "GOB_GoblinToast_Event_IncludeThirdGoblin",
        "DEN_AttackOnDen_HasMet_PickpocketTrader",
        "COL_TadpolingCentre_Knows_IdentifiedDarkUrgePod",
        "0cca6d90-e7d5-b1d6-8d9e-f6b5b8f65006_B",
        "GOB_GoblinThroneCheckpoint_Pass",
        "HalsinLeft_KilledLeaders",
        "DEN_AttackOnDen_HasMet_Halsin",
        "c167cdf3-7201-e55c-222f-773c758e1000_IncludedHusband",
        "HAG_HagLair_Victim_001_HasMet",
        "MOO_Audience_State_KethericToldToKneelAtAltar",
        "PLA_StuckDwarf_HasMet_FoundWife",
        "GOB_SpiderNest_State_SpidersChill",
        "PLA_Tavern_Knows_DukeInTavern",
        "ORI_INCLUSION_KARLACH",
        "PLA_ZhentDungeon_State_AgentFreed",
        "UND_FurnaceSearch_Event_DuergarMentionsForge",
        "GLO_Moonrise_Knows_GoblinsCapturedADuke",
        "DEN_DruidLair_Knows_FoundingGrove",
        "FOR_Monitor_HasMet_Dinner",
        "AskedCircle",
        "SCL_Drider_HasMet_CaravanFirstTime",
        "03b6aa2e-e805-3a51-6bdb-d92f0b0da84a_UND_MyconidCircle_ServantHookHorror_01_RecognisedMonster",
        "DEN_GuardedEntrance_HasMet_Protester1",
        "SCE_Minthara_HasMet",
        "MOO_Assault_AssaultHarper_002_ThroneRoomDefeated_HasMet",
        "ToldAboutTadpole",
        "f4169abb-abdc-be87-1a9d-91387440472c_B",
        "DEN_DruidAttack_HasMet_Tiefling010AfterAttack",
        "f3f236b2-37a1-a0a2-5855-184ead7b1286_C",
        "GOB_DrowCommander_State_Hostile",
        "TWN_Distillery_Event_LearnedAlchemyStashLocation",
        "5d7c5690-f498-6124-0ded-9b3d95a20800_B",
        "UND_ArguingGnomes_Event_LearnedAboutPhilomeen",
        "UND_PetrifiedDrow_Knows_WizardIsDhourn",
        "MOO_InfernalVendor_State_ConsentedLowHealth",
        "ORI_Inclusion_End_ShadowHeart",
        "MOO_Assault_HasMet_HarperQuartermaster",
        "ORI_Shadowheart_Knows_SeenTempleVista",
        "FOR_BugBearLove_Event_CoupleHostile",
        "HAG_AnimalIllusion_Narrator",
        "SCL_DriderHarper_Ranger_001_StartInclusion",
        "DEN_Thieflings_State_DoneChase",
        "UND_ElevatorGuard002_HasMet",
        "ThankedFreed_BeldronThulla",
        "ORI_INCLUSION_MINSC",
        "DEN_Thieflings_Knows_PlayerRobbed",
        "DEN_ShadowDruid_HasMet_Opposed",
        "GLO_TadpoledCount1",
        "HAV_ProdigyLament_Brother_RolanDead_HasMet",
        "DEN_DruidAttack_HasMet_ExcitedBoar",
        "3b2ae6b6-ca7e-d905-0430-128078b3119f_B",
        "720e85fb-cc00-b81a-efff-343a04ca221e_A",
        "DEN_DevilishOx_MeetAtDruidsGrove_HasMet_SwA",
        "UND_ClericPetGrave_HasMet",
        "99aa7b78-defd-57bc-eabf-a8aa43a030d9_A",
        "UND_MyconidCircle_DirectToSovereign_HasMet",
        "UND_GnomeWorkerLumpy_HasmetRescued",
        "DEN_GroveConflict_Quest_Learnt3LeadersTwoNames",
        "d97f72ff-8fb1-8a4c-f169-89751bd6e125_b",
        "SHA_Trials_PAD_SpotGem_Event_FirstGemSeen",
        "ORI_INCLUSION_RANDOM",
        "HAG_Well_Event_DrinkWell",
        "a7407f82-add0-9f6d-e4e6-78b9c39195a6_C",
        "HAV_SavingPrisoners_HasMet_Inspector",
        "ORI_INCLUSION_WYLL",
        "4118b185-9468-2295-93f3-9d6eafd8fb8a_Second_Disabled",
        "FOR_GoblinAmbush_State_DrowAutoPass",
        "DEN_TieflingLeader_Quest_GobHuntResponded",
        "GLO_Halsin_Event_TalkedWithDruidLeader",
        "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionRefused",
        "HAV_ProdigyLament_State_ToldStory",
        "SCL_EntryPoint_Event_GainedAccessToCaravanCampFromDialog",
        "ORI_Inclusion_Gale",
        "DEN_RitualDruid_HasMet_Left5",
        "PLA_Desire_Quest_TriedForceDoor",
        "HAV_ProdigyLament_Event_RudeWithIde",
        "DEN_Thieflings_Pickpocket1_PCIsNotAChump",
        "MOO_InfernalVendor_State_AskedAboutDeals",
        "MOO_Jailbreak_Event_SaveTieflings",
        "DEN_AttackOnDen_HasMet_Refugee002",
        "fb0e13b6-cc68-d496-51c2-4594f4f5bf40_TauntHer",
        "TWN_Distillery_HasMet_Zombie_04",
        "182bb613-b70c-5e7c-b3ea-ea14e02d1fab_C",
        "GOB_PainPriest_Event_PickScourge",
        "DEN_GroveConflict_Knows_HeardAboutRitual",
        "d0423454-cc51-ae8e-5096-cffd1aac9f75_A",
        "FOR_BugBearLove_Knows_Lovemaking",
        "MOO_Assault_AssaultHarper_001_ThroneRoomDefeated_HasMet",
        "ORI_INCLUSION_LAEZEL",
        "DEN_DruidAttack_HasMet_SonOfChefAfterAttack",
        "HAG_HagLair_TalkingDoor_HasMet",
        "ORI_Inclusion_ShadowHeart",
        "HAV_TieflingSurvivors_Mirkon_StartInclusion",
        "1ea9e483-36a9-82b1-852f-b901ec25552a_a",
        "DEN_Prodigy_HasMet",
        "PLA_ZhentShipment_State_TalkedAfterKilledGnolls",
        "551618bc-83c9-52cc-0ca7-37c224446cf7_Local1",
        "GOB_Bravado_State_Goblin3Hasmet",
        "MOO_Docks_HasMet_DockJumper",
        "SCE_GnomeFollowUp_HasMet_WulbrenAlive",
        "HAV_LiftingTheCurse_Knows_SeekingBreath",
        "SCE_TieflingFollowUp_Ide_HasMet",
        "6d7dd0b2-3ea0-9fe3-4c7f-98061f69f70b_B",
        "SCL_Drider_Event_PlayersAttackHarpers",
        "FOR_BottomlessWell_InteractWithWell_Knows_LookedDown",
        "ORI_INCLUSION_GALE",
        "DEN_GuardedEntrance_HasMet_Parents",
        "GOB_GoblinToast_Event_IncludeSecondGoblin",
        "ca797aab-5a73-7ec5-edb7-022122573b39_B",
        "HAV_ProdigyLament_Sister_RolanDead_HasMet",
        "SCL_DriderHarper_Caster_000_StartInclusion",
        "DEN_AttackOnDen_Event_HeftyTieflingQuip",
        "COL_Vault_Event_Start",
        "HAV_ProdigyLament_HasMet_Rolan",
        "MOO_InfernalVendor_Event_SellingBlood",
        "GLO_Factions_Knows_Harpers",
        "GOB_WolfPens_Event_HalsinLeftParty",
        "SCL_Drider_HasMet_HarperMelee000",
        "FactionHostileToPlayerGroupAfterDialog",
        "MOO_Jailbreak_HasMet_ProdigySister",
        "ORI_Laezel_Quest_FoundZorru",
        "GOB_GoblinPriest_Event_FreedFromChains",
        "PLA_StuckHalfElf_Knows_MentionedDowry",
        "0e791991-068a-3008-e14c-d70ae36d240f_B",
        "SCL_Drider_AtTower_HasMet",
        "21e0890e-7019-66a3-1956-125405f96d7c_A",
        "a63e4af2-6edc-188a-efdf-b9ffc5460fc5_LOCAL_B",
        "SCL_Drider_Event_ResumeEscort",
        "DEN_DruidAttack_HasMet_DruidOpposedAfterAttack",
        "SHA_Orthon_HasMet",
        "FOR_PriestOfTheConqueringGod_Cultists_Knows_Mission",
        "DEN_Apprentice_Event_RemoveBirdExhaustion",
        "DEN_CampGeneral_PCGotLore",
        "SpokeToBrothers",
        "5f09c70a-153e-77e8-731c-5c532e635809_B",
        "DEN_DruidAttack_HasMet_GatekeeperAfterAttack",
        "SCL_Drider_HarperCaster_000_AtAmbush_HasMet",
        "LearnedGroveSituation",
        "DEN_RaidingParty_Event_UnsheatheForFight",
        "ReachedWife",
        "SCE_BackupLeader_HasMet",
        "GOB_Festivities_BugbearSleeper_00_HasMet",
        "GLO_TadpoleIntro_NPC",
        "DEN_Thieflings_Knows_KidsThieves",
        "30d43adb-dcaf-c0f3-d432-af96a1c2e1ea_spoketowulbren",
        "MOO_Execution_Guard_002_Hasmet",
        "DEN_ShadowDruidLeaderPostGoblins_State_HasMet",
        "DEN_GroveConflict_Knows_LeaderNameKing",
        "153f4e14-c830-5653-1638-7495b0b9fc12_A",
        "SCE_TieflingFollowUp_Knows_MeanAboutMol",
        "TemporaryHostilityAfterDialog",
        "0884581d-9f92-0a34-9440-6a54c0813bbe_ProceedToSecondStage",
        "GLO_Inclusion_End_Halsin",
        "DEN_Prodigy_HasMet_Brother",
        "GLO_Absolute_Knows_TrueSoul",
        "440db1a3-14ad-8127-a14b-c445049225db_HasMetInTower",
        "UND_GnomeForeman_UnfortunateGnome_InclusionStart",
        "SCL_Drider_State_SidedWithCaravan",
        "DEN_WeepingTree_HasMet_Bear",
        "PLA_ZhentDungeon_Dog_03_HasMet",
        "13d9f9ef-d1da-1d1d-287f-7a1763d72c38_B",
        "GOB_DrowCommander_Knows_DrowLeader",
        "ORI_Shadowheart_State_IdolHint",
        "ea88dfe9-ff39-9b98-ae03-48d7fdf2708e_A",
        "DEN_AttackOnDen_HasMet_Refugee004Victory",
        "ORI_Inclusion_End_Astarion",
        "OrderedKillDruids",
        "DEN_DevilishOx_MeetAtDruidsGrove_State_Peaceful",
        "DEN_AttackOnDen_HasMet_RitualDruid002",
        "PLA_StuckHalfElf_StartInclusion",
        "DEN_Thieflings_Pickpocket2_HasMet",
        "375a6f59-375f-f5eb-5f42-60de2dc6aa6b_B",
        "GOB_Checkpoint_Event_WarnedAtCliff",
        "ORI_Shadowheart_State_HeardSharVoice",
        "PLA_ZhentShipment_State_Talked",
        "RefusedHelpBrothers1",
        "GOB_PainPriest_Event_ReactToMocking",
        "DEN_DruidLair_Knows_RuneAppearance",
        "SCL_HarperScouts_ShadowCreatures_HasMet",
        "711fda6a-05e2-6677-b067-9b1c710e0cdb_B",
        "GLO_Hag_KnowsAboutSurrogate",
        "MOO_Jailbreak_Event_ForceBoatLeave",
        "MOO_Assault_AssaultFlamingFist_002_HasMet",
        "2de7b4a6-b710-27e6-ab9f-a00c004460de_B",
        "81f2a55d-d317-761f-f6a0-fe97ad6d5288_C",
        "UND_DuergarCamp_Knows_NereIsTrapped",
        "DEN_SenderBird_Event_TakeOff",
        "FOR_GnomeGoblinsPacified",
        "DEN_DruidAttack_HasMet_ChefAfterAttack",
        "ParentLied",
        "SCL_Drider_HasMet_CaravanHalfOrcMelee",
        "7256657b-1386-989f-0262-c6530e03a9fb_AskedWhy",
        "DEN_General_Inclusion_End_Pickpocket",
        "DEN_WeepingTree_Bear_Upset",
        "UND_TheDrowNere_Mutiny_InclusionStart_GnomeSilly",
        "bde7a4f1-933f-f6ce-4a3e-4b1f29f83704_B",
        "SHA_Orthon_Event_OrthonQuestionsSearch",
        "TWN_Hospital_Reception_CorpseTender_HasMet",
        "UND_TheDrowNere_Event_HadMindMeld",
        "57c003e7-0932-6f0c-e655-99025a4abe3a_A",
        "DEN_YoungLovers_State_MetPlayer",
        "GLO_Inclusion_Halsin",
        "5310a408-76a3-3498-cc26-ae866871188b_Third_Disabled",
        "HAV_General_HarperScout_001_HasMet",
        "7ffcf0de-e30b-ef58-fcc5-8d3a1482fa59_b",
        "GLO_Absolute_Knows_GoblinsWorship",
        "DEN_Weaponsmith_Knows_Elturel",
        "SCL_DriderHarper_Ranger_000_StartInclusion",
        "DEN_ShadowDruid_Event_ReactionDone",
        "CHA_Crypt_Event_JergalAppears",
        "PLA_ZhentDungeon_Zhent05_HasMet",
        "DEN_TieflingLeader_HasMet_ReactToDruidAttack",
        "TWN_Distillery_HasMet_Zombie_01",
        "ORI_Laezel_State_StartedTieflingsSceneAtCage",
        "DEN_BirdSender_HasMet",
        "UND_MyconidCircle_DeepRothe_BaelenAteShroom_Hasmet",
        "GOB_BattleStations_Event_ToStation",
        "1fbc1449-b85a-90a5-3f67-a8898acbd1d0_B",
        "DEN_AttackOnDen_HasMet_Trainer",
        "GOB_GoblinHeretic_FreeToGo",
        "GOB_GoblinThroneCheckpoint_State_NonCharlatanAccess",
        "1c74b01f-5dcf-8107-b384-204d341ed9d5_OnlyOnce",
        "DEN_Thieflings_State_MessedWithMolsKids",
        "PLA_Refugee_001_HasMet",
        "UND_MyconidCircle_State_GainedAccess",
        "HAV_EnteringHaven_State_GainedAccess",
        "DEN_DruidAttack_HasMet_ParentAAfterAttack",
        "GOB_Checkpoint_State_GoblinsToldLeaders",
        "UND_DuergarCamp_Mutineers_HasMet",
        "LearnedDukeMissingCounsellor",
        "SCL_Drider_State_DeadCultistSituationDefused",
        "MOO_MintharaFate_Event_LeavesForCamp",
        "SHA_NightsongPrison_State_ShadowheartGaveOpinion",
        "b0d721a3-ca68-1e03-4e19-6eeddf6dd9ab_B",
        "SCE_JergalDebrief_Event_WhyHere",
        "94cd662c-844b-4dcc-ffdc-0b9a8da32bcc_BarcusSpokeUp",
        "DEN_AttackOnDen_HasMet_LairDoor",
        "RikkaAskedQuest",
        "MOO_Bazaar_State_PilgrimsToTown",
        "DEN_General_Event_TriedNudgingBear",
        "DEN_HasMet_SoloParentB",
        "DEN_RitualDruid_HasMet_Left2",
        "GOB_Torturers_HasMet_Goblet",
        "FOR_BugbearLove_State_InterruptedCouple",
        "DEN_AttackOnDen_Servant005_Answered",
        "UND_BroodingSovereign_State_RefusedCircle",
        "DEN_Thieflings_HasMet_Trainee1",
        "UND_DeadInTheWater_CorpseDisposerLeader_HasMet",
        "MOO_Assault_AssaultHarper_003_ThroneRoomDefeated_HasMet",
        "DEN_Tiefling011_State_Met",
        "DEN_Thieflings_PersuadedPickpocket",
        "GOB_GoblinToast_Event_NoMoreRefills",
        "ORI_Inclusion_Random",
        "MOO_Bazaar_HasMet_Guard00",
        "PLA_KarlachRecruitment_State_PersuasionSucceeded",
        "DEN_Thieflings_State_WitnessedArgument",
        "200aa519-5963-3b2d-3396-d1dcbb013702_AskedStrategy",
        "COL_TadpolingCentre_HasMet_Yeva",
        "3b911555-52e5-7791-d2ac-44fe62465fa1_Loop3",
        "MOO_Assault_AssaultFlamingFist_001_ThroneRoomDefeated_HasMet",
        "GOB_RaiderCunning_HasMet",
        "GOB_Eye_HasMet",
        "DEN_AttackOnDen_HasMet_Refugee003",
        "DEN_Weaponsmith_HasMet",
        "34910f06-fac0-085f-b41a-337d0dfad85a_A",
        "ORI_Inclusion_Laezel",
        "GOB_GoblinToast_SecondGoblinToasted",
        "9e2ef14b-1a2f-4edc-3f78-7e3a27967e5c_C",
        "ORI_Gale_State_RefusedTWNBossPower",
        "DEN_AttackOnDen_HasMet_ScoutCaptive",
        "PLA_KarlachRecruitmentTollhouse_State_HostilitiesBegan",
        "UND_PetrifiedDrow_Knows_MemoryCrystal",
        "6d32676a-ac06-3f94-8377-35a6aed97492_B",
        "UND_FairyRings_Dead_AskedDrowIdentity",
        "ZevlorRewarded",
        "SCL_Drider_HasMet_CaravanGoblinRanger",
        "8f819d41-e936-8042-1935-56de252d6c7f_B",
        "GOB_PainPriest_Penanced",
        "b618166c-99f4-1c7a-02b7-32f0f0fbe420_LocalA",
        "SCE_TieflingFollowUp_Event_GiveShiningDawn",
        "DEN_AttackOnDen_HasMet_Servant004Victory",
        "DEN_AttackOnDen_HasMet_Mule1",
        "DEN_TieflingScam_HasMet",
        "DEN_AttackOnDen_HasMet_Kid003",
        "TWN_CentralSquare_State_PlaqueOfIntelligenceActivated",
        "UND_FearfulRothe_Event_ConvincedRotheToAttackDuergar",
        "MOO_BugBearVendor_State_FoundMotive",
        "PLA_FlamingFist7_InnBurntDown_HasMet",
        "DEN_AttackOnDen_HasMet_Tiefling003Victory",
        "33dfbffe-344d-8c3c-5486-7f25e56d42bf_B",
        "0d9d0064-babd-6e83-6ea6-5b78afb0413c_B",
        "SCL_Drider_Event_AvoidedCombat",
        "199a746e-309f-52f0-1a47-0375711725cb_A",
        "DEN_GoblinScouts_HasMet_Captive",
        "GLO_Absolute_Knows_Symbol",
        "PLA_ConflictedFlind_Event_MindControl_KillHerself",
        "GLO_SpeakWithDead_Event_QuestionAsked",
        "HAG_Hah_MaskedVictim2_HasMet",
        "DEN_DruidAttack_HasMet_ZenBear",
        "SCL_Drider_State_AfterAmbushSituationDefused",
        "GOB_PainPriest_Event_BadReaction",
        "SCL_ServantOfTheRAven_Servant_HasMet",
        "UND_BrokenLantern_State_TriedArcane",
        "461152ff-16c3-2617-f8af-7ddb5681820b_b",
        "ed70fdfc-3d7b-7753-1171-957f7316fe55_B",
        "MOO_EntranceCheckpoint_Guard2_HasMet_AllowedIn",
        "MOO_Bazaar_Bystander04_PostKetheric_HasMet",
        "SidedTieflings",
        "DEN_GroveConflict_Knows_KaghaRequestedPlayers",
        "PLA_StuckHalfElf_State_PlayerAngered",
        "SCL_Drider_Event_StartHarpersAmbush",
        "UND_BroodingSovereign_State_AskedCircle",
        "DEN_AttackOnDen_HasMet_Trainee001Victory",
        "UND_MyconidCircle_State_FirstGreetingDone",
        "6bde1237-aa43-36d3-9e53-ec1092198541_C",
        "SHA_Trials_Knows_LearnedAboutTrials",
        "UND_DarkLake_State_HostileResolution",
        "c3d825d1-49b8-9ae2-4554-4fc1f55d2eee_LocalA",
        "COL_TadpolingCentre_Event_PurgePods",
        "3c55f670-825a-6a8d-9e7e-8a5b7aa2f852_B",
        "DEN_ZhentAgent_02_Inclusion_Start",
        "DEN_AttackOnDen_HasMet_ProdigySister",
        "HAV_HarperScouts_Event_SawYonasFuneral",
        "ORI_Shadowheart_Event_DarkJusticiarHint",
        "HAV_General_HarperScout_000_HasMet",
        "1507f82b-d6a2-791b-17ed-65b81a40e9f5_B",
        "873bc4e0-3d3c-1eac-903b-e94920fd6306_sawgithyanki",
        "DEN_CampGeneral_RufusHasMet",
        "DEN_Apprentice_HasMet",
        "DEN_General_Mule2_HasMet",
        "0d4d7cd3-5055-29a4-6bbd-e15fdf434e7a_A",
        "DEN_AttackOnDen_HasMet_ApprenticeVictory",
        "MOO_Bazaar_State_TalkedAboutPilgrims",
        "GLO_PixieBell_Event_TransformsIntoDeepRothe",
        "98423a2d-7b47-e379-6526-c435773e3cff_B",
        "14e6adcb-c6a8-99e4-1c39-4d3b925590e2_B",
        "3a47baed-8459-4629-40aa-893d83a8d0b2_C",
        "DEN_Thieflings_Event_PlayerNotInvolved",
        "HAG_HagLair_Knows_DoorWasAlive",
        "ThankedFreed_Beldron",
        "e6aef01a-0468-5046-e519-b9b624c704dc_B",
        "DEN_AttackOnDen_HasMet_Griefling",
        "4d9f1cb5-200f-c998-657a-8d04f5c93c74_B",
        "DEN_AttackOnDen_HasMet_RitualDruid005",
        "COL_Morgue_HasMet_Us",
        "4b4d2992-abb5-bd1b-9593-feb68eddf682_B",
        "SHA_NightsongPrison_Knows_NightsongIsPerson",
        "GLO_Ketheric_State_AngryAtPlayer",
        "ORI_Karlach_Knows_DammonWorkedInHell",
        "ORI_Inclusion_End_Random",
        "DEN_Squirrel_HasMet",
        "ORI_INCLUSION_HALSIN",
        "SCL_OliversDiary_State_SecondRound",
        "DEN_ShadowDruid_State_HadSelfReflection",
        "DEN_Thieflings_Pickpocket1_HasMet",
        "GLO_Ketheric_Knows_AboutImmortality",
        "PLA_FlamingFist7_Knows_AskedWhatHappened",
        "DEN_DruidAttack_HasMet_BardAfterAttack",
        "GOB_PainPriest_State_NeedMoreHP",
        "TWN_Hospital_HasMet_Nurse002",
        "FOR_BugBearLove_Event_OpenDoor",
        "e680129a-9d39-6ffc-3e6d-926daf0d76ff_A",
        "DEN_Thieflings_State_PCSawKidThievesGettingCaught",
        "260f61d5-60df-da35-608b-a9856291b143_PlayerKnowsOrinKilledZevlor",
        "916a75f0-23d8-f05b-449d-d926d69fe782_FailedCheck",
        "MOO_Jailbreak_HasMet_AngrySister",
        "SCE_GnomeFollowUp_Wulbren_HasMet",
        "DEN_druidservant_005_HasMet",
        "CHA_Jergal_HasMet",
        "ORI_Inclusion_End_Gale",
        "PLA_ConflictedFlind_Hyena_001_HasMet",
        "StartedAlt",
        "DEN_RaidingParty_Adventurer2_HasMet",
        "GLO_Thieflings_State_PickpocketKidGotHit",
        "GOB_WolfPens_Event_HalsinLeavesGoblinCamp",
        "e6738c9d-060d-c901-b945-4d49ca303d5b_SuccessfullyReadTracks",
        "DEN_GruntingKid_HasMet",
        "SHA_Nightsong_HasMet",
        "SCE_TieflingFollowUp_Umi_HasMet",
        "16193247-ccea-1974-45ec-e8229a7de4ef_B",
        "DEN_TieflingLeader_Quest_GobHuntDeclined",
        "DEN_RaidingParty_Event_GoblinsAppear",
        "DEN_GuardedEntrance_HasMet_Guard1",
        "GOB_PainPriest_Event_FirstHitDone",
        "ORI_Inclusion_End_Laezel",
        "88c2a54f-df16-19d8-1f97-2c67947bdf74_B",
        "DEN_General_Event_ElevatorBearMoves",
        "DEN_CapturedGoblin_OfferedRevenge",
        "SCL_Drider_HasMet_CaravanGoblinMelee_000",
        "DEN_General_Inclusion_Pickpocket",
        "DEN_RitualDruid_HasMet_Left4",
        "GOB_DrowCommander_HasMet",
        "SCL_HarperScouts_State_PlayerTriedToLeave",
        "GLO_Jergal_State_OutOfTomb",
        "DEN_TieflingLeader_State_KaghaResolved",
        "f3afb428-73fc-2e5c-057b-2e0e5a1b2f1c_B",
        "DEN_AttackOnDen_HasMet_Stargazer",
        "DEN_Thieflings_Event_ShookThief",
        "DEN_AttackOnDen_HasMet_Refugee001",
        "b70d5139-9980-efc6-3ba3-fe2eb56ab2e0_B",
        "HAV_LoneLover_HasMet_DanisUpset",
        "DEN_DruidAttack_HasMet_PetWolf",
        "26071d89-33af-8eac-3c05-ee8dca91338d_who",
        "DEN_Apprentice_UserShortcut",
        "ReflectedKagha",
        "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionAsked",
        "FOR_GoblinAmbush_GoblinsPacified",
        "MOO_Bazaar_BazaarStander_007_AudienceReady_HasMet",
        "MOO_BugBearVendor_HasMet_BazBugBear",
        "932401b1-7763-7fd7-bee1-8731fe62084f_DeadThree",
        "ORI_Shadowheart_State_TempleApproachHint",
        "DEN_DruidAttack_HasMet_GrieflingAfterAttack",
        "DEN_GuardedEntrance_State_ClearToPass",
        "GOB_Checkpoint_State_GuidedByCapturedGoblin",
        "DEN_RaidingParty_Event_GoblinRaidFight",
        "ORI_Inclusion_Wyll",
        "RefusedCircle",
        "DEN_TieflingScam_Knows_Scam",
        "964ddec3-a3fd-b0b5-f98a-4b32e118b6ed_B",
        "3174fc37-851b-0494-321e-b606f7e43901_B",
        "TWN_Distillery_HasMet_Zombie_02",
        "DEN_BirdSender_Knows_AskedAboutBird",
        "DEN_DevilishOx_MeetAtDruidsGrove_Incapable",
        "DEN_Thieflings_CaveGuard_002_HasMet",
        "GOB_PainPriest_Knows_PenanceIsPain",
        "6bba3537-3756-eb27-a08a-a8596d765f2e_C",
        "MOO_Bazaar_BazaarStander_005_AudienceReay_HasMet",
        "SHA_Trials_State_FirstStatueUsed",
        "CHA_LaezelRecruitment_Event_LaezelHostile",
        "DEN_GoblinScouts_SavedDruid",
        "ArrivedAtGrove",
        "DEN_GruntingKid_Event_AskedCanTalk",
        "DEN_Apprentice_Event_GiveReward",
        "acc081f3-204a-2f29-a3bb-6d33ff784c39_C",
        "DEN_AttackOnDen_GrieflingFriend_Knows_Kelemvor",
        "GOB_PainPriest_Event_Mercy",
        "c68c5474-226f-4b47-b327-a22274e360a0_B",
        "a2fa1f0f-b9b5-f8bf-bf27-b11194b8502f_B",
        "SHA_Orthon_Even_QueriedCharmedDisplacer",
        "ORI_DarkUrge_Knows_ButlerDiedReaction",
        "SCL_LiftingTheCurse_Event_SpottedFlowers",
        "55452e03-17c6-9a9d-072b-80043381c98b_A",
        "UND_LoneDuergar_Event_WaitingForMainDialog",
        "OrderedBreachInn",
        "COL_Morgue_User_HasMet_Us",
        "DEN_RitualDruid_HasMet_Pacified3",
        "DEN_ShadowDruidRats_Event_RememberedLetter",
        "DEN_DruidAttack_State_PrepAfterDeathOfDruids",
        "PLA_Desire_Event_HasMet",
        "4103e544-e1db-525f-81ec-b5dfa71907d7_WantNereOut",
        "PLA_StuckHalfElf_Event_ToldQuestion",
        "UND_BroodingSovereign_Event_Enlarged",
        "f108995b-14f4-7823-d218-790177a93da8_B",
        "6a98f294-9f4f-d0b0-1cba-706f1cb15009_Local1",
        "GOB_WolfPens_Worg_001_HasMet",
        "7cd27f5f-4eee-558e-eee6-ee37600f04ef_A",
        "MOO_Jailbreak_Event_BoatLeavesWithoutPlayers",
        "DEN_DruidAttack_HasMet_WeaponsmithAfterAttack",
        "SCL_Drider_State_StartedAmbushQuestWithHarpers",
        "GLO_Volo_HasMet",
        "OpenedSarcophagus",
        "Counsellor_RefusedHelp",
        "02455563-e119-58e5-1fe7-eb46fe381d30_A",
        "GOB_GuardUpset_HasMet",
        "GOB_RatRacket_LocalRat_001_HasMet",
        "c5f62c4b-fb04-1505-c35b-63119d96b127_First_Disabled",
        "SHA_Trials_State_StatueUsed",
        "698f5a3b-6d88-3d9e-ee4f-26d9c1fc5b6b_B",
        "UND_TheDrowNere_State_KilledGnomeSerene",
        "COL_General_Knows_ColonyIsIllithid",
        "GLO_VoloBallad_MetGuardPrison",
        "PLA_ZhentDungeon_Zhent01_HasMet",
        "7cd519b5-df41-47c0-1d53-6c315224e489_A",
        "ORI_Karlach_HasMet_DammonUnavailable",
        "GOB_CheckpointBackup003_HasMet",
        "DEN_TieflingScam_Event_FoundOutLies",
        "UND_ArguingGnomes_Quest_Accepted",
        "DEN_Thieflings_HasMet_Chef"
      ]
    }
  },
  "final_flags": [
    "003e1f20-0cac-171b-aa7c-df901e42aa6c_B",
    "02455563-e119-58e5-1fe7-eb46fe381d30_A",
    "0276d317-8b34-66e2-48e2-6b9d69d6830b_F",
    "03b6aa2e-e805-3a51-6bdb-d92f0b0da84a_UND_MyconidCircle_ServantHookHorror_01_RecognisedMonster",
    "0884581d-9f92-0a34-9440-6a54c0813bbe_ProceedToSecondStage",
    "09983dce-d7d0-c108-506f-dcadc4044b0a_Derryth_SwD_Who",
    "0cca6d90-e7d5-b1d6-8d9e-f6b5b8f65006_B",
    "0d4d7cd3-5055-29a4-6bbd-e15fdf434e7a_A",
    "0d6dbe21-1644-b9bf-8297-dd60d820bd99_B",
    "0d9d0064-babd-6e83-6ea6-5b78afb0413c_B",
    "0e791991-068a-3008-e14c-d70ae36d240f_B",
    "10297257-36dd-3799-f681-657656779d4a_TieflingsLaezelAD1",
    "11d70a18-2aae-47a0-1a18-c486858b1eaf_B",
    "13d9f9ef-d1da-1d1d-287f-7a1763d72c38_B",
    "1493763b-776c-959c-259a-89f34f326e04_A",
    "14e6adcb-c6a8-99e4-1c39-4d3b925590e2_B",
    "1507f82b-d6a2-791b-17ed-65b81a40e9f5_B",
    "153f4e14-c830-5653-1638-7495b0b9fc12_A",
    "1591cb60-9e65-980a-c49e-69f68b958a1d_B",
    "15b0a2b9-2b22-50ab-70c0-ab3042def597_GaleCommentTried",
    "16193247-ccea-1974-45ec-e8229a7de4ef_B",
    "182bb613-b70c-5e7c-b3ea-ea14e02d1fab_C",
    "199a746e-309f-52f0-1a47-0375711725cb_A",
    "1bddcc22-dadd-92c9-4186-4e10ebbfee68_CHA_Crypt_Jergal_DontFollow",
    "1c74b01f-5dcf-8107-b384-204d341ed9d5_OnlyOnce",
    "1ea9e483-36a9-82b1-852f-b901ec25552a_a",
    "1fbc1449-b85a-90a5-3f67-a8898acbd1d0_B",
    "200aa519-5963-3b2d-3396-d1dcbb013702_AskedStrategy",
    "21e0890e-7019-66a3-1956-125405f96d7c_A",
    "26071d89-33af-8eac-3c05-ee8dca91338d_who",
    "260f61d5-60df-da35-608b-a9856291b143_PlayerKnowsOrinKilledZevlor",
    "29ddc96b-303b-373d-2b6f-37ae4e8d534b_A",
    "2da46374-abab-9219-f7ce-2a002cfd72a5_a",
    "2de7b4a6-b710-27e6-ab9f-a00c004460de_B",
    "2fb08ca0-df67-8450-3f01-c1e1c2a78b59_A",
    "30d43adb-dcaf-c0f3-d432-af96a1c2e1ea_spoketowulbren",
    "3174fc37-851b-0494-321e-b606f7e43901_B",
    "33dfbffe-344d-8c3c-5486-7f25e56d42bf_B",
    "3483cea8-0c11-9432-2421-6b95b9140d95_B",
    "34910f06-fac0-085f-b41a-337d0dfad85a_A",
    "375a6f59-375f-f5eb-5f42-60de2dc6aa6b_B",
    "3a47baed-8459-4629-40aa-893d83a8d0b2_C",
    "3b2ae6b6-ca7e-d905-0430-128078b3119f_B",
    "3b911555-52e5-7791-d2ac-44fe62465fa1_Loop3",
    "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_NoFFPresent",
    "3c05c8ab-de4e-b1a5-691a-2f221d19fecf_WyllSpoke",
    "3c55f670-825a-6a8d-9e7e-8a5b7aa2f852_B",
    "3f665b97-a69e-81c5-68e6-5b931720721e_Part1",
    "4103e544-e1db-525f-81ec-b5dfa71907d7_WantNereOut",
    "4118b185-9468-2295-93f3-9d6eafd8fb8a_Second_Disabled",
    "41e56e7f-1722-7350-33dc-aefe523650fe_B",
    "421668a5-7b68-9e8b-977b-522b4a071156_B",
    "440db1a3-14ad-8127-a14b-c445049225db_HasMetInTower",
    "4466a73c-607a-4a7e-c1e5-94d549e8f23d_A",
    "461152ff-16c3-2617-f8af-7ddb5681820b_b",
    "469a1188-028b-0e6b-b595-fa464baa551e_b",
    "4823073f-d1c4-5fe7-de96-d63538c05fbb_B",
    "4951b7ce-8495-b2c8-badc-beaff0e3d807_H",
    "4a8285f1-6d42-51cd-6803-92696f6e8f7d_A",
    "4b4d2992-abb5-bd1b-9593-feb68eddf682_B",
    "4c78f756-720d-a285-a3e6-8f69a6069abc_Step1",
    "4d9f1cb5-200f-c998-657a-8d04f5c93c74_B",
    "5310a408-76a3-3498-cc26-ae866871188b_Third_Disabled",
    "551618bc-83c9-52cc-0ca7-37c224446cf7_Local1",
    "55452e03-17c6-9a9d-072b-80043381c98b_A",
    "564fac12-29bd-3abe-d380-0a864e688883_Turn1",
    "57c003e7-0932-6f0c-e655-99025a4abe3a_A",
    "57c003e7-0932-6f0c-e655-99025a4abe3a_B",
    "5b1ec9d1-cec5-2107-d929-f1af9c05d5d9_B",
    "5d7c5690-f498-6124-0ded-9b3d95a20800_B",
    "5e9c4c72-4f56-2646-ce36-88207d2dc33c_KinSaved",
    "5ebae00c-47d8-736c-6738-4ee56cebbc49_B",
    "5f09c70a-153e-77e8-731c-5c532e635809_B",
    "683cb55e-08b9-c865-78a6-4e047ee62a24_B",
    "698f5a3b-6d88-3d9e-ee4f-26d9c1fc5b6b_B",
    "6a98f294-9f4f-d0b0-1cba-706f1cb15009_Local1",
    "6bba3537-3756-eb27-a08a-a8596d765f2e_C",
    "6bc7114f-5279-4374-385e-b396157d5189_B",
    "6bde1237-aa43-36d3-9e53-ec1092198541_C",
    "6cf6ff37-64f7-3ccf-d702-ee2025510422_B",
    "6d32676a-ac06-3f94-8377-35a6aed97492_B",
    "6d4ecf46-ffab-ed53-3b19-68607a0e1309_B",
    "6d7dd0b2-3ea0-9fe3-4c7f-98061f69f70b_B",
    "6fa2b72d-fde1-4ee3-e1d1-f184232f693d_A",
    "711fda6a-05e2-6677-b067-9b1c710e0cdb_B",
    "720e85fb-cc00-b81a-efff-343a04ca221e_A",
    "7256657b-1386-989f-0262-c6530e03a9fb_AskedWhy",
    "73cbf53d-6017-fdd5-a96a-9cae574a1bd9_B",
    "7611fa51-4b1b-3d2c-a8a5-74c04d9db7fa_AnimalHandlingSuccess",
    "7cd27f5f-4eee-558e-eee6-ee37600f04ef_A",
    "7cd519b5-df41-47c0-1d53-6c315224e489_A",
    "7cf65f2f-1a29-daa2-940e-1159a8940b4e_C",
    "7ffcf0de-e30b-ef58-fcc5-8d3a1482fa59_b",
    "81f2a55d-d317-761f-f6a0-fe97ad6d5288_C",
    "83fdf5e9-88b8-19e7-ba8f-ff075d2222ce_PLA_ZhentShipment_Knows_Gnolls",
    "873bc4e0-3d3c-1eac-903b-e94920fd6306_sawgithyanki",
    "88c2a54f-df16-19d8-1f97-2c67947bdf74_B",
    "8916beac-0385-3df9-de07-8be3cc6752a7_A",
    "8a9a14b0-87da-5c78-aa76-7a266de7a786_Phase1",
    "8ab0520b-3a8d-822f-1934-336e2d24e0a0_B",
    "8baf8087-81b0-de5d-3efa-f74769a625f4_B",
    "8f819d41-e936-8042-1935-56de252d6c7f_B",
    "8f847adf-7b8a-3551-cfc0-4ea0c66a999a_F",
    "916a75f0-23d8-f05b-449d-d926d69fe782_FailedCheck",
    "932401b1-7763-7fd7-bee1-8731fe62084f_DeadThree",
    "94cd0a22-c842-d9f3-8121-f8ac16410656_A",
    "94cd662c-844b-4dcc-ffdc-0b9a8da32bcc_BarcusSpokeUp",
    "95496308-6e34-b8c7-93fb-3b5e56e71f5d_C",
    "964ddec3-a3fd-b0b5-f98a-4b32e118b6ed_B",
    "98423a2d-7b47-e379-6526-c435773e3cff_B",
    "99aa7b78-defd-57bc-eabf-a8aa43a030d9_A",
    "9b4c05c6-0a79-ea8d-c351-43d6fbb04abc_Story1",
    "9e2ef14b-1a2f-4edc-3f78-7e3a27967e5c_C",
    "ArrivedAtGrove",
    "AskedCircle",
    "CHA_Chapel_Event_OpenedJergalsTomb",
    "CHA_Crypt_Event_JergalAppears",
    "CHA_Jergal_Event_AttemptedAttack",
    "CHA_Jergal_HasMet",
    "CHA_LaezelRecruitment_Event_LaezelHostile",
    "CHA_LaezelRecruitment_MindMeld",
    "CHA_Outside_Event_DoorGuardConvinced",
    "COL_Barracks_Mistress_Knows_ThinksPlayerIsThrall",
    "COL_Barracks_State_InterruptConvinced",
    "COL_General_Knows_ColonyIsIllithid",
    "COL_Morgue_HasMet_Us",
    "COL_Morgue_User_HasMet_Us",
    "COL_NecroLab_GrandDesignSculpture_HasMet_LaezelInclusion",
    "COL_TadpolingCentre_Event_PurgePods",
    "COL_TadpolingCentre_HasMet_Yeva",
    "COL_TadpolingCentre_Knows_IdentifiedDarkUrgePod",
    "COL_TadpolingCentre_MemoryImprint_FirstUse",
    "COL_Vault_Event_Start",
    "COL_Vault_State_HasAccess",
    "CRA_DeadFisherman2_Dead_WhatDoing",
    "CRA_DeadPrisoner_Dead_AskedQuestion",
    "CRA_DeadPrisoner_Dead_MentionedTadpole",
    "Counsellor_RefusedHelp",
    "DEN_AdventurersQuest_Knows_AradinStory",
    "DEN_AdventurersQuest_RaidAdventurerAtCorps_HasMet",
    "DEN_Apprentice_Event_GiveReward",
    "DEN_Apprentice_Event_RemoveBirdExhaustion",
    "DEN_Apprentice_Event_RevealedTadpole",
    "DEN_Apprentice_HasMet",
    "DEN_Apprentice_HasMet_ReactedToShadowDruids",
    "DEN_Apprentice_State_ShadowDruidPath",
    "DEN_Apprentice_UserShortcut",
    "DEN_AttackOnDenDruidLeader_State_HasMet",
    "DEN_AttackOnDen_Event_EnemiesAppear",
    "DEN_AttackOnDen_Event_HeftyTieflingQuip",
    "DEN_AttackOnDen_Event_OpenGateAfterCombat",
    "DEN_AttackOnDen_Event_PassedByEntrance",
    "DEN_AttackOnDen_GrieflingFriend_Knows_Kelemvor",
    "DEN_AttackOnDen_HasMet_Adventurer2",
    "DEN_AttackOnDen_HasMet_ApprenticeVictory",
    "DEN_AttackOnDen_HasMet_BackupLeader",
    "DEN_AttackOnDen_HasMet_ChefAndSon",
    "DEN_AttackOnDen_HasMet_Griefling",
    "DEN_AttackOnDen_HasMet_GrieflingFriend",
    "DEN_AttackOnDen_HasMet_Halsin",
    "DEN_AttackOnDen_HasMet_Kid003",
    "DEN_AttackOnDen_HasMet_Kid004Victory",
    "DEN_AttackOnDen_HasMet_LairDoor",
    "DEN_AttackOnDen_HasMet_LeaderKidVictory",
    "DEN_AttackOnDen_HasMet_Mule1",
    "DEN_AttackOnDen_HasMet_PickpocketTrader",
    "DEN_AttackOnDen_HasMet_PickpocketVictory",
    "DEN_AttackOnDen_HasMet_Prodigy",
    "DEN_AttackOnDen_HasMet_ProdigyBrother",
    "DEN_AttackOnDen_HasMet_ProdigySister",
    "DEN_AttackOnDen_HasMet_Refugee001",
    "DEN_AttackOnDen_HasMet_Refugee002",
    "DEN_AttackOnDen_HasMet_Refugee003",
    "DEN_AttackOnDen_HasMet_Refugee004Victory",
    "DEN_AttackOnDen_HasMet_RitualDruid002",
    "DEN_AttackOnDen_HasMet_RitualDruid003",
    "DEN_AttackOnDen_HasMet_RitualDruid005",
    "DEN_AttackOnDen_HasMet_RobberKid",
    "DEN_AttackOnDen_HasMet_ScoutCaptive",
    "DEN_AttackOnDen_HasMet_Servant004Victory",
    "DEN_AttackOnDen_HasMet_Servant005Victory",
    "DEN_AttackOnDen_HasMet_Stargazer",
    "DEN_AttackOnDen_HasMet_Tiefling001",
    "DEN_AttackOnDen_HasMet_Tiefling003Victory",
    "DEN_AttackOnDen_HasMet_Tiefling004",
    "DEN_AttackOnDen_HasMet_Tiefling005",
    "DEN_AttackOnDen_HasMet_Tiefling010Victory",
    "DEN_AttackOnDen_HasMet_TieflingBard",
    "DEN_AttackOnDen_HasMet_TieflingLeader",
    "DEN_AttackOnDen_HasMet_Trainee001Victory",
    "DEN_AttackOnDen_HasMet_Trainer",
    "DEN_AttackOnDen_HasMet_Wyll",
    "DEN_AttackOnDen_Pet002_HasMet",
    "DEN_AttackOnDen_Pet004_HasMet",
    "DEN_AttackOnDen_Ranged_001_HasMet",
    "DEN_AttackOnDen_Servant005_Answered",
    "DEN_AttackOnDen_ZenBear_HasMet",
    "DEN_BirdSender_HasMet",
    "DEN_BirdSender_HasMet_GobLeadersDead",
    "DEN_BirdSender_Knows_AskedAboutBird",
    "DEN_CampGeneral_HasMet_Gatekeeper",
    "DEN_CampGeneral_PCGotLore",
    "DEN_CampGeneral_RufusHasMet",
    "DEN_CapturedGoblin_GuardsHasMet",
    "DEN_CapturedGoblin_OfferedRevenge",
    "DEN_CapturedGoblin_State_InTransit",
    "DEN_DevilishOx_MeetAtDruidsGrove_HasMet_SwA",
    "DEN_DevilishOx_MeetAtDruidsGrove_Incapable",
    "DEN_DevilishOx_MeetAtDruidsGrove_State_Peaceful",
    "DEN_DevilishOx_State_ArcanaCheckComplete_SwA",
    "DEN_DruidAttack_HasMet_BardAfterAttack",
    "DEN_DruidAttack_HasMet_ChefAfterAttack",
    "DEN_DruidAttack_HasMet_DruidOpposedAfterAttack",
    "DEN_DruidAttack_HasMet_ExcitedBoar",
    "DEN_DruidAttack_HasMet_GatekeeperAfterAttack",
    "DEN_DruidAttack_HasMet_GrieflingAfterAttack",
    "DEN_DruidAttack_HasMet_HideoutLeaderAfterAttack",
    "DEN_DruidAttack_HasMet_ParentAAfterAttack",
    "DEN_DruidAttack_HasMet_ParentBAfterAttack",
    "DEN_DruidAttack_HasMet_PetWolf",
    "DEN_DruidAttack_HasMet_PickpocketTraderAfterAttack",
    "DEN_DruidAttack_HasMet_Protester3AfterAttack",
    "DEN_DruidAttack_HasMet_ServantGnome",
    "DEN_DruidAttack_HasMet_SonOfChefAfterAttack",
    "DEN_DruidAttack_HasMet_Tiefling010AfterAttack",
    "DEN_DruidAttack_HasMet_WeaponsmithAfterAttack",
    "DEN_DruidAttack_HasMet_ZenBear",
    "DEN_DruidAttack_State_PrepAfterDeathOfDruids",
    "DEN_DruidLair_Knows_DruidsAlliance",
    "DEN_DruidLair_Knows_FoundingGrove",
    "DEN_DruidLair_Knows_RuneAppearance",
    "DEN_DruidServant005_Knows_TalkedAboutLockdown",
    "DEN_General_Event_ElevatorBearMoves",
    "DEN_General_Event_TriedNudgingBear",
    "DEN_General_Inclusion_End_Pickpocket",
    "DEN_General_Inclusion_Pickpocket",
    "DEN_General_Mule2_HasMet",
    "DEN_General_Squirrel_LearnedTerritory",
    "DEN_General_YoungLovers_HasMet",
    "DEN_GoblinHunt_Event_GiveRewardBag",
    "DEN_GoblinScouts_HasMet_Captive",
    "DEN_GoblinScouts_SavedDruid",
    "DEN_GoblinScouts_State_SavedDruid",
    "DEN_GroveConflict_Event_StoleIdolAttempt",
    "DEN_GroveConflict_Knows_HeardAboutRitual",
    "DEN_GroveConflict_Knows_KaghaRequestedPlayers",
    "DEN_GroveConflict_Knows_LeaderNameKing",
    "DEN_GroveConflict_Quest_Learnt3LeadersTwoNames",
    "DEN_GruntingKid_Event_AskedCanTalk",
    "DEN_GruntingKid_Event_DisappearIntoWall",
    "DEN_GruntingKid_HasMet",
    "DEN_GuardedEntrance_HasMet_Guard1",
    "DEN_GuardedEntrance_HasMet_Guard3",
    "DEN_GuardedEntrance_HasMet_LiedAboutDeath",
    "DEN_GuardedEntrance_HasMet_Parents",
    "DEN_GuardedEntrance_HasMet_Protester1",
    "DEN_GuardedEntrance_State_ClearToPass",
    "DEN_GuardedEntrance_State_ParentsKnowDeath",
    "DEN_HarpyMeal_Event_OriginCharm3",
    "DEN_HarpyMeal_InHideout_WasMean",
    "DEN_HasMet_SoloParentB",
    "DEN_Hideout_Event_LeaveCountdown",
    "DEN_Hideout_State_GivenWarning",
    "DEN_Prodigy_HasMet",
    "DEN_Prodigy_HasMet_Brother",
    "DEN_RaidingParty_Adventurer2_HasMet",
    "DEN_RaidingParty_Event_GatekeeperToLever",
    "DEN_RaidingParty_Event_GoblinRaidFight",
    "DEN_RaidingParty_Event_GoblinsAppear",
    "DEN_RaidingParty_Event_KanonOpensGate",
    "DEN_RaidingParty_Event_OpenDenGate",
    "DEN_RaidingParty_Event_SkipConfrontation",
    "DEN_RaidingParty_Event_UnsheatheForFight",
    "DEN_Rat_Event_MoveToShack",
    "DEN_RitualDruid_HasMet_Left2",
    "DEN_RitualDruid_HasMet_Left4",
    "DEN_RitualDruid_HasMet_Left5",
    "DEN_RitualDruid_HasMet_Pacified3",
    "DEN_SenderBird_Event_TakeOff",
    "DEN_ShadowDruidLeaderPostGoblins_State_HasMet",
    "DEN_ShadowDruidRats_Event_RememberedLetter",
    "DEN_ShadowDruid_Event_ReactionDone",
    "DEN_ShadowDruid_Event_SetFaithwarden",
    "DEN_ShadowDruid_HasMet_Opposed",
    "DEN_ShadowDruid_State_HadSelfReflection",
    "DEN_Squirrel_HasMet",
    "DEN_Stargazing_Event_SawDragon",
    "DEN_Thieflings_CaveGuard_002_HasMet",
    "DEN_Thieflings_Event_CallGuard",
    "DEN_Thieflings_Event_HideoutTrespassCrimeResolved",
    "DEN_Thieflings_Event_PartnerQuestionAsked",
    "DEN_Thieflings_Event_PlayerNotInvolved",
    "DEN_Thieflings_Event_ShookThief",
    "DEN_Thieflings_HasMet_Chef",
    "DEN_Thieflings_HasMet_Guard2",
    "DEN_Thieflings_HasMet_Mol",
    "DEN_Thieflings_HasMet_Trainee1",
    "DEN_Thieflings_Knows_KidsThieves",
    "DEN_Thieflings_Knows_PlayerRobbed",
    "DEN_Thieflings_PersuadedPickpocket",
    "DEN_Thieflings_Pickpocket1_HasMet",
    "DEN_Thieflings_Pickpocket1_PCIsNotAChump",
    "DEN_Thieflings_Pickpocket2_HasMet",
    "DEN_Thieflings_State_DoneChase",
    "DEN_Thieflings_State_MessedWithMolsKids",
    "DEN_Thieflings_State_PCSawKidThievesGettingCaught",
    "DEN_Thieflings_State_WitnessedArgument",
    "DEN_Thieflings_TieflingGuard11_HasMet",
    "DEN_Tiefling011_State_Met",
    "DEN_TieflingLeader_HasMet_ReactToDruidAttack",
    "DEN_TieflingLeader_Quest_GobHuntDeclined",
    "DEN_TieflingLeader_Quest_GobHuntResponded",
    "DEN_TieflingLeader_State_KaghaResolved",
    "DEN_TieflingRefugees_Quest_HuntRewardOffered",
    "DEN_TieflingScam_Event_FoundOutLies",
    "DEN_TieflingScam_Event_InspectedBox",
    "DEN_TieflingScam_Event_TalkedAboutBox",
    "DEN_TieflingScam_HasMet",
    "DEN_TieflingScam_Knows_Scam",
    "DEN_Weaponsmith_HasMet",
    "DEN_Weaponsmith_Knows_Elturel",
    "DEN_WeepingTree_Bear_Upset",
    "DEN_WeepingTree_HasMet_Bear",
    "DEN_YoungLovers_State_MetPlayer",
    "DEN_ZenBear_Helped",
    "DEN_ZhentAgent_02_Inclusion_Start",
    "DEN_druidservant_005_HasMet",
    "Den_Thieflings_InterferingGuard_PCGotLore",
    "FOR_ApothecaryGoblins_Goblin01_HasMet",
    "FOR_BottomlessWell_InteractWithWell_Knows_LookedDown",
    "FOR_Bottomless_State_InteractedWithWell",
    "FOR_BugBearLove_Event_CoupleHostile",
    "FOR_BugBearLove_Event_MovePlayerInside",
    "FOR_BugBearLove_Event_OpenDoor",
    "FOR_BugBearLove_Knows_Lovemaking",
    "FOR_BugbearLove_State_InterruptedCouple",
    "FOR_GnomeGoblin1_HasMet",
    "FOR_GnomeGoblinsPacified",
    "FOR_GoblinAmbush_Event_StopSpotting",
    "FOR_GoblinAmbush_GoblinsPacified",
    "FOR_GoblinAmbush_State_DrowAutoPass",
    "FOR_KnifeInMeat_State_KnifeBroken",
    "FOR_Monitor_Event_TakeFood",
    "FOR_Monitor_HasMet_Dinner",
    "FOR_Monitor_State_TransformToDevil",
    "FOR_PriestOfTheConqueringGod_Cultists_Knows_Mission",
    "FOR_PriestsConqueringGod_AlliedPlayer",
    "FOR_SchoolOgres_Event_AttemptedFirstSkillCheck",
    "FOR_SeluneStash_NoticeStashSeal_CommentedOnSeal",
    "FOR_UnfortunateGnome_Bargaining",
    "FOR_UnfortunateGnome_State_NonCharlatanAccess",
    "FOR_UnfortunateGone_TiedUpHasmet",
    "FactionHostileToIndivPlayerAfterDialog",
    "FactionHostileToPlayerGroupAfterDialog",
    "FoundCounsellor",
    "GEN_TransferNPCPayment_2",
    "GLO_Absolute_Knows_GoblinsWorship",
    "GLO_Absolute_Knows_MoonriseTowers",
    "GLO_Absolute_Knows_Symbol",
    "GLO_Absolute_Knows_TrueSoul",
    "GLO_Desire_HasMet",
    "GLO_Desire_State_FreedInAct1",
    "GLO_Factions_Knows_Harpers",
    "GLO_Florrick_State_KnowsWyllDevil",
    "GLO_GithChokepoint_DragonAppear",
    "GLO_HAV_TakingIsobel_HasMet_BriefInRoom",
    "GLO_HAV_TakingIsobel_HeardOfIsobel",
    "GLO_Hag_KnowsAboutSurrogate",
    "GLO_Halsin_Event_TalkedWithDruidLeader",
    "GLO_HeadRemoval_Event_HeadToInventory",
    "GLO_Inclusion_End_Halsin",
    "GLO_Inclusion_Halsin",
    "GLO_IronhandGnomes_Knows_WulbrenInMoonrise",
    "GLO_Jergal_State_OutOfTomb",
    "GLO_Ketheric_Knows_AboutImmortality",
    "GLO_Ketheric_Knows_ImmortalitySource",
    "GLO_Ketheric_State_AngryAtPlayer",
    "GLO_LiftingTheCurse_State_HalsinRecruitable",
    "GLO_Moonrise_Knows_AbsoluteAtGrymforge",
    "GLO_Moonrise_Knows_GoblinsCapturedADuke",
    "GLO_PixieBell_Event_TransformsIntoDeepRothe",
    "GLO_Player_Knows_MoonlanternExists",
    "GLO_Prodigy_State_ToldSiblingsProdigyDead",
    "GLO_ScryingEyes_State_FeltGaze",
    "GLO_Shadowcurse_Knows_FromGnome",
    "GLO_SpeakWithDead_Event_QuestionAsked",
    "GLO_TadpoleIntro_NPC",
    "GLO_TadpoledCount1",
    "GLO_TadpoledCount6",
    "GLO_Tadpoled_UsedToday1",
    "GLO_TalkedToVoloAboutAbsolute",
    "GLO_Thieflings_State_PCShookPickpocketSister",
    "GLO_Thieflings_State_PickpocketKidGotHit",
    "GLO_VoloBallad_MetGuardPrison",
    "GLO_Volo_HasMet",
    "GLO_Volo_HasMet_Personally",
    "GOB_AbsoluteCultistStiff_HasMet",
    "GOB_BattleStations_Event_ToStation",
    "GOB_BattleStations_HasMet_WarDrum",
    "GOB_Bravado_State_Goblin3Hasmet",
    "GOB_CheckpointBackup003_HasMet",
    "GOB_Checkpoint_Event_MoveToCamp",
    "GOB_Checkpoint_Event_WarnedAtCliff",
    "GOB_Checkpoint_Guard01_HasMet",
    "GOB_Checkpoint_State_GainedAccess",
    "GOB_Checkpoint_State_GoblinsToldLeaders",
    "GOB_Checkpoint_State_GuidedByCapturedGoblin",
    "GOB_Checkpoint_State_UsedAlarmOnce",
    "GOB_DrowCommander_HasMet",
    "GOB_DrowCommander_Knows_DrowLeader",
    "GOB_DrowCommander_State_Hostile",
    "GOB_Eye_HasMet",
    "GOB_Festivities_BugbearSleeper_00_HasMet",
    "GOB_Festivities_Goblin001_HasMet",
    "GOB_Festivities_HasMet_Ogre_00",
    "GOB_Festivities_Trader_HasMet",
    "GOB_GEB_TorturedAdventurer_Assault_HasMet",
    "GOB_GoblinHeretic_FreeToGo",
    "GOB_GoblinJolly_HasMet",
    "GOB_GoblinKingDead_Event_SaidFugitives",
    "GOB_GoblinPriest_Event_FreedFromChains",
    "GOB_GoblinThroneCheckpoint_Pass",
    "GOB_GoblinThroneCheckpoint_State_NonCharlatanAccess",
    "GOB_GoblinToast_Event_IncludeFourthGoblin",
    "GOB_GoblinToast_Event_IncludeSecondGoblin",
    "GOB_GoblinToast_Event_IncludeThirdGoblin",
    "GOB_GoblinToast_Event_NoMoreRefills",
    "GOB_GoblinToast_Event_ToastSuccess",
    "GOB_GoblinToast_SecondGoblinToasted",
    "GOB_GoblinToast_ThirdGoblinToasted",
    "GOB_GoblingKing_Event_HealerPersuasion",
    "GOB_GuardUpset_HasMet",
    "GOB_GuardUpset_State_ConvincedTrueSoul",
    "GOB_OwlbearCub_Event_InvitedToCamp",
    "GOB_Owlbear_HasMet_NotChasing",
    "GOB_PainPriest_Event_BadReaction",
    "GOB_PainPriest_Event_CheckHP",
    "GOB_PainPriest_Event_FirstHitDone",
    "GOB_PainPriest_Event_Mercy",
    "GOB_PainPriest_Event_PickScourge",
    "GOB_PainPriest_Event_ReactToMocking",
    "GOB_PainPriest_Event_Reward",
    "GOB_PainPriest_Knows_PenanceIsPain",
    "GOB_PainPriest_Penanced",
    "GOB_PainPriest_State_NeedMoreHP",
    "GOB_PainPriest_State_ReactedToPenance",
    "GOB_QuartermasterFlimsy_HasMet",
    "GOB_RaiderBold_HasMet",
    "GOB_RaiderCunning_HasMet",
    "GOB_RaiderStupid_HasMet",
    "GOB_RatRacket_LocalRat_001_HasMet",
    "GOB_RatRacket_LocalRat_002_HasMet",
    "GOB_Scrying_NoddedOrShrugged",
    "GOB_SpiderNest_State_SpidersChill",
    "GOB_SpiderNest_State_SpidersHostile",
    "GOB_Torturers_HasMet_Goblet",
    "GOB_Torturers_Rat_001_HasMet",
    "GOB_Trader_Knows_Goods",
    "GOB_WolfPens_Event_HalsinLeavesGoblinCamp",
    "GOB_WolfPens_Event_HalsinLeftParty",
    "GOB_WolfPens_Worg_001_HasMet",
    "GOB_WolfPens_Worg_002_HasMet",
    "GnomeAskedHelp",
    "HAG_AnimalIllusion_Narrator",
    "HAG_AnimalIllusion_Revealed_HasMet1",
    "HAG_GurHunter_Dead_Knows_Hunter",
    "HAG_HagLair_Knows_DoorWasAlive",
    "HAG_HagLair_TalkingDoor_HasMet",
    "HAG_HagLair_Victim_001_HasMet",
    "HAG_Hagspawn_Knows_PromisedRaiseHusband",
    "HAG_Hagspawn_State_JakeBerserk",
    "HAG_Hah_MaskedVictim2_HasMet",
    "HAG_SurrogateMother_HasMet",
    "HAG_Well_Event_DrinkWell",
    "HAV_Cat_HasMet",
    "HAV_EnteringHaven_State_GainedAccess",
    "HAV_EnteringHaven_State_RevealedArtifact",
    "HAV_Florrick_Event_RavengardInTowers",
    "HAV_General_HarperScout_000_HasMet",
    "HAV_General_HarperScout_001_HasMet",
    "HAV_HarperScouts_Event_SawYonasFuneral",
    "HAV_LiftingTheCurse_Knows_SeekingBreath",
    "HAV_LoneLover_HasMet_DanisUpset",
    "HAV_Minthara_Hasmet",
    "HAV_ProdigyLament_Brother_RolanDead_HasMet",
    "HAV_ProdigyLament_Event_Intro",
    "HAV_ProdigyLament_Event_RudeWithIde",
    "HAV_ProdigyLament_HasMet_Ide",
    "HAV_ProdigyLament_HasMet_Rolan",
    "HAV_ProdigyLament_Knows_RolanAlive",
    "HAV_ProdigyLament_Knows_SiblingsInMoonrise",
    "HAV_ProdigyLament_Sister_RolanDead_HasMet",
    "HAV_ProdigyLament_State_ToldStory",
    "HAV_SavingPrisoners_HasMet_Florrick",
    "HAV_SavingPrisoners_HasMet_Inspector",
    "HAV_SavingPrisoners_HasMet_Manip",
    "HAV_TieflingSurvivors_Mirkon_EndInclusion",
    "HAV_TieflingSurvivors_Mirkon_StartInclusion",
    "HAV_TieflingSurvivors_State_DidNotPromiseToSaveMol",
    "HAV_Umi_NightsongFreed_HasMet",
    "HAV_WrootRequest_Gnome002_NightsongFreed_HasMet",
    "HAV_WrootRequest_Wulbren_AskedAboutIronhandGnomes",
    "HalsinLeft_KilledLeaders",
    "LearnedDukeMissingCounsellor",
    "LearnedGroveSituation",
    "MOO_Assault_AssaultFlamingFist_001_ThroneRoomDefeated_HasMet",
    "MOO_Assault_AssaultFlamingFist_002_HasMet",
    "MOO_Assault_AssaultFlamingFist_003_ThroneRoomDefeated_HasMet",
    "MOO_Assault_AssaultHarper_001_ThroneRoomDefeated_HasMet",
    "MOO_Assault_AssaultHarper_002_ThroneRoomDefeated_HasMet",
    "MOO_Assault_AssaultHarper_003_ThroneRoomDefeated_HasMet",
    "MOO_Assault_HasMet_HarperQuartermaster",
    "MOO_Assault_HasMet_KethericHound",
    "MOO_Audience_State_KethericToldToKneelAtAltar",
    "MOO_Bazaar_BazaarStander_005_AudienceReay_HasMet",
    "MOO_Bazaar_BazaarStander_006_JailbreakSuccess_HasMet",
    "MOO_Bazaar_BazaarStander_007_AudienceReady_HasMet",
    "MOO_Bazaar_Bystander04_PostKetheric_HasMet",
    "MOO_Bazaar_HasMet_Bystander01",
    "MOO_Bazaar_HasMet_Guard00",
    "MOO_Bazaar_State_PilgrimsToTown",
    "MOO_Bazaar_State_TalkedAboutPilgrims",
    "MOO_BugBearVendor_HasMet_BazBugBear",
    "MOO_BugBearVendor_State_FoundMotive",
    "MOO_Docks_HasMet_DockJumper",
    "MOO_Docks_HasMet_DockObserver",
    "MOO_EntranceCheckpoint_Guard2_HasMet_AllowedIn",
    "MOO_Execution_Guard_002_Hasmet",
    "MOO_Execution_Knows_Executioner",
    "MOO_Execution_State_PlayerWantedToAttack",
    "MOO_GuardRoom_HasMet_Guard02",
    "MOO_InfernalVendor_Event_SellingBlood",
    "MOO_InfernalVendor_State_AskedAboutDeals",
    "MOO_InfernalVendor_State_ConsentedLowHealth",
    "MOO_Jailbreak_Event_BoatLeavesWithoutPlayers",
    "MOO_Jailbreak_Event_ForceBoatLeave",
    "MOO_Jailbreak_Event_ProdigyIntro",
    "MOO_Jailbreak_Event_SaveTieflings",
    "MOO_Jailbreak_HasMet_AngrySister",
    "MOO_Jailbreak_HasMet_Guard004",
    "MOO_Jailbreak_HasMet_ProdigySister",
    "MOO_Jailbreak_HasMet_Warden",
    "MOO_Jailbreak_HasMet_Wulbren",
    "MOO_Jailbreak_Knows_GnomeEscape",
    "MOO_Jailbreak_Knows_ToolsNeeded",
    "MOO_KitchenFight_HasMet_GnollMaster",
    "MOO_MintharaFate_Event_LeavesForCamp",
    "MOO_MoonriseTower_State_Outcast",
    "ORI_DarkUrge_Knows_ButlerDiedReaction",
    "ORI_Gale_State_RefusedTWNBossPower",
    "ORI_INCLUSION_ASTARION",
    "ORI_INCLUSION_GALE",
    "ORI_INCLUSION_HALSIN",
    "ORI_INCLUSION_KARLACH",
    "ORI_INCLUSION_LAEZEL",
    "ORI_INCLUSION_MINSC",
    "ORI_INCLUSION_MINTHARA",
    "ORI_INCLUSION_RANDOM",
    "ORI_INCLUSION_SHADOWHEART",
    "ORI_INCLUSION_WYLL",
    "ORI_Inclusion_Astarion",
    "ORI_Inclusion_End_Astarion",
    "ORI_Inclusion_End_Gale",
    "ORI_Inclusion_End_Karlach",
    "ORI_Inclusion_End_Laezel",
    "ORI_Inclusion_End_Random",
    "ORI_Inclusion_End_ShadowHeart",
    "ORI_Inclusion_End_Wyll",
    "ORI_Inclusion_Gale",
    "ORI_Inclusion_Karlach",
    "ORI_Inclusion_Laezel",
    "ORI_Inclusion_Random",
    "ORI_Inclusion_ShadowHeart",
    "ORI_Inclusion_Wyll",
    "ORI_Karlach_HasMet",
    "ORI_Karlach_HasMet_DammonUnavailable",
    "ORI_Karlach_Knows_DammonWorkedInHell",
    "ORI_Laezel_Quest_FoundZorru",
    "ORI_Laezel_State_StartedTieflingsSceneAtCage",
    "ORI_MintharaRecuitment_Event_InvitedToCamp",
    "ORI_Shadowheart_Event_DarkJusticiarHint",
    "ORI_Shadowheart_Knows_CurseResistant",
    "ORI_Shadowheart_Knows_SeenTempleVista",
    "ORI_Shadowheart_State_DestroyedHaven",
    "ORI_Shadowheart_State_HeardSharVoice",
    "ORI_Shadowheart_State_IdolHint",
    "ORI_Shadowheart_State_TempleApproachHint",
    "OpenedSarcophagus",
    "OrderedBreachInn",
    "OrderedKillDruids",
    "OriginAddToParty",
    "PLA_ConflictedFlind_Event_MindControlDamage_Minor",
    "PLA_ConflictedFlind_Event_MindControl_KillHerself",
    "PLA_ConflictedFlind_Hyena_001_HasMet",
    "PLA_ConflictedFlind_Knows_Gnolls",
    "PLA_Desire_Event_HasMet",
    "PLA_Desire_Knows_RavengardTaken",
    "PLA_Desire_Quest_TriedForceDoor",
    "PLA_Desire_State_WyllComTrack",
    "PLA_FlamingFist7_InnBurntDown_HasMet",
    "PLA_FlamingFist7_Knows_AskedWhatHappened",
    "PLA_GithChokepoint_State_FailedReadingMap",
    "PLA_KarlachRecruitmentTollhouse_State_HostilitiesBegan",
    "PLA_KarlachRecruitment_State_PersuasionSucceeded",
    "PLA_Refugee_001_HasMet",
    "PLA_Refugee_002_HasMet",
    "PLA_Refugee_002_TollhouseMentioned",
    "PLA_StuckDwarf_HasMet_FoundWife",
    "PLA_StuckHalfElf_Event_ToldQuestion",
    "PLA_StuckHalfElf_Knows_ExplainedDowry",
    "PLA_StuckHalfElf_Knows_MentionedDowry",
    "PLA_StuckHalfElf_StartInclusion",
    "PLA_StuckHalfElf_State_PlayerAngered",
    "PLA_TavernInvestigation_Knows_AskedStelmane",
    "PLA_TavernInvestigation_Quest_WallCollapsed",
    "PLA_TavernInvestigation_State_HasMet",
    "PLA_Tavern_Knows_DukeInTavern",
    "PLA_ZhentDungeon_Dog_03_HasMet",
    "PLA_ZhentDungeon_State_AgentFreed",
    "PLA_ZhentDungeon_State_SaidPassword",
    "PLA_ZhentDungeon_Zhent01_HasMet",
    "PLA_ZhentDungeon_Zhent05_HasMet",
    "PLA_ZhentShipment_Agent_001_Inclusion_Start",
    "PLA_ZhentShipment_Agent_001_StartInclusion",
    "PLA_ZhentShipment_Agent_002_StartInclusion",
    "PLA_ZhentShipment_State_Talked",
    "PLA_ZhentShipment_State_TalkedAfterKilledGnolls",
    "ParentLied",
    "PreventTradeWithPlayer",
    "ReachedWife",
    "ReflectedKagha",
    "RefusedCircle",
    "RefusedHelpBrothers1",
    "ReportedToDerryth_BaelenIsAlive",
    "RikkaAskedQuest",
    "SCE_Alfira_Event_GaveShiningDawn",
    "SCE_BackupLeader_HasMet",
    "SCE_Debrief_State_PartyDebriefed",
    "SCE_GnomeFollowUp_HasMet_WulbrenAlive",
    "SCE_GnomeFollowUp_Wulbren_HasMet",
    "SCE_JergalDebrief_Event_WhyHere",
    "SCE_Jergal_HasMet",
    "SCE_Minthara_HasMet",
    "SCE_TieflingFollowUp_Event_GiveShiningDawn",
    "SCE_TieflingFollowUp_Ide_HasMet",
    "SCE_TieflingFollowUp_Knows_MeanAboutMol",
    "SCE_TieflingFollowUp_Knows_MolMissingEyepatch",
    "SCE_TieflingFollowUp_Umi_HasMet",
    "SCL_DriderHarper_Caster_000_StartInclusion",
    "SCL_DriderHarper_Melee_000_StartInclusion",
    "SCL_DriderHarper_Ranger_000_StartInclusion",
    "SCL_DriderHarper_Ranger_001_StartInclusion",
    "SCL_Drider_AtTower_HasMet",
    "SCL_Drider_Event_AvoidedCombat",
    "SCL_Drider_Event_PlayersAttackHarpers",
    "SCL_Drider_Event_PlayersStartFollowingDrider",
    "SCL_Drider_Event_ResumeEscort",
    "SCL_Drider_Event_StartHarpersAmbush",
    "SCL_Drider_HarperCaster_000_AtAmbush_HasMet",
    "SCL_Drider_HarperRanger_000_AtAmbush_HasMet",
    "SCL_Drider_HarpersAtInn_OneLinerHasMet",
    "SCL_Drider_HasMet",
    "SCL_Drider_HasMet_CaravanFirstTime",
    "SCL_Drider_HasMet_CaravanGoblinMelee_000",
    "SCL_Drider_HasMet_CaravanGoblinRanger",
    "SCL_Drider_HasMet_CaravanHalfOrcCaster",
    "SCL_Drider_HasMet_CaravanHalfOrcMelee",
    "SCL_Drider_HasMet_HarperCaster000",
    "SCL_Drider_HasMet_HarperMelee000",
    "SCL_Drider_State_AfterAmbushSituationDefused",
    "SCL_Drider_State_DeadCultistSituationDefused",
    "SCL_Drider_State_SidedWithCaravan",
    "SCL_Drider_State_StartedAmbushQuestWithHarpers",
    "SCL_EntryPoint_Event_GainedAccessToCaravanCampFromDialog",
    "SCL_HarperScouts_ShadowCreatures_HasMet",
    "SCL_HarperScouts_State_PlayerTriedToLeave",
    "SCL_LiftingTheCurse_Event_SpottedFlowers",
    "SCL_MastiffPoachers_Knows_ContinualFlame",
    "SCL_OliversDiary_State_SecondRound",
    "SCL_ServantOfTheRAven_Servant_HasMet",
    "SCL_ServantOfTheRaven_Raven_HasMet_SWA",
    "SHA_Displacer_Event_DeceptionAttempted",
    "SHA_Displacer_SwA_HasMet",
    "SHA_LastJusticiar_Event_JusticiarTransforms",
    "SHA_Merregon_000_HasMet",
    "SHA_Merregon_001_HasMet",
    "SHA_Merregon_006_HasMet",
    "SHA_NightsongPrison_Knows_NightsongIsPerson",
    "SHA_NightsongPrison_State_ShadowheartGaveOpinion",
    "SHA_Nightsong_HasMet",
    "SHA_Orthon_Even_QueriedCharmedDisplacer",
    "SHA_Orthon_Event_OrthonQuestionsSearch",
    "SHA_Orthon_HasMet",
    "SHA_Trials_Knows_LearnedAboutTrials",
    "SHA_Trials_Knows_SeenAltarInscription",
    "SHA_Trials_PAD_SpotGem_Event_FirstGemSeen",
    "SHA_Trials_State_FirstStatueUsed",
    "SHA_Trials_State_StatueUsed",
    "SidedTieflings",
    "SpokeToBrothers",
    "StartedAlt",
    "TWN_CentralSquare_HasMet_PlaqueOfIntelligence",
    "TWN_CentralSquare_State_PlaqueOfIntelligenceActivated",
    "TWN_Distillery_Event_LearnedAlchemyStashLocation",
    "TWN_Distillery_HasMet_ResearchNotes",
    "TWN_Distillery_HasMet_Zombie_01",
    "TWN_Distillery_HasMet_Zombie_02",
    "TWN_Distillery_HasMet_Zombie_04",
    "TWN_Distillery_State_CheckedResearchNotes",
    "TWN_Hospital_HasMet_Nurse002",
    "TWN_Hospital_Reception_CorpseTender_HasMet",
    "TWN_Hospital_Reception_Receptionist_HasMet",
    "TWN_Hospital_Reception_State_GainedAcess",
    "TWN_Hospital_RooftopRaven_HasMet",
    "TWN_MissingPets_State_CheckedPileOfPetsCollars",
    "TWN_MissingPets_State_ReadPosters",
    "TWN_Tollhouse_HasMet_Guilt",
    "TWN_Tollhouse_TollhouseMaster_HasMet",
    "TemporaryHostilityAfterDialog",
    "ThankedFreed_Beldron",
    "ThankedFreed_BeldronThulla",
    "ToldAboutTadpole",
    "UND_AdamantineForge_Knows_Adamantine",
    "UND_ArguingGnomes_Event_LearnedAboutPhilomeen",
    "UND_ArguingGnomes_Quest_Accepted",
    "UND_Automaton_Knows_AskedPlace",
    "UND_BrokenLantern_State_TriedArcane",
    "UND_BrokenMoonLantern_HasMet",
    "UND_BroodingSovereign_Event_Enlarged",
    "UND_BroodingSovereign_State_AskedCircle",
    "UND_BroodingSovereign_State_RefusedCircle",
    "UND_ClericPetGrave_HasMet",
    "UND_DarkJusticiarsCorpses_Recognized",
    "UND_DarkLake_State_ClaimedGekhWasDead",
    "UND_DarkLake_State_HostileResolution",
    "UND_DeadInTheWater_CorpseDisposerCompanion_HasMet",
    "UND_DeadInTheWater_CorpseDisposerLeader_HasMet",
    "UND_DuergarCamp_Knows_NereIsTrapped",
    "UND_DuergarCamp_Mutineers_HasMet",
    "UND_DuergarCamp_State_DocksHostile",
    "UND_DuergarCamp_State_SidedNone",
    "UND_DuergarGuard_AtPier_01_HasMet",
    "UND_DuergarMutineerFollowUp_Event_Happened",
    "UND_DuergarPatroller_03_HasMet",
    "UND_EbonLake_Event_MoveToLake",
    "UND_ElevatorGuard002_HasMet",
    "UND_Elevator_Event_GotWarning",
    "UND_FairyRings_Dead_AskedDrowIdentity",
    "UND_FearfulRothe_Event_ConvincedRotheToAttackDuergar",
    "UND_FearfulRothe_Event_MakeDuergarHostileInDialog",
    "UND_FearfulRothe_HasMet_Rothe_001_SpeakWithAnimals",
    "UND_FearfulRothe_State_BefriendedRothe",
    "UND_FurnaceSearch_Event_DuergarMentionsForge",
    "UND_FurnaceSearch_Knows_Xargrim",
    "UND_GnomeForeman_UnfortunateGnome_InclusionStart",
    "UND_GnomeWorkerLumpy_HasmetRescued",
    "UND_LoneDuergar_Event_WaitingForMainDialog",
    "UND_MyconidCircle_BroodingSovereign_State_InParty",
    "UND_MyconidCircle_DeepRothe_BaelenAteShroom_Hasmet",
    "UND_MyconidCircle_DirectToSovereign_HasMet",
    "UND_MyconidCircle_DwarvenAlchemist_BaelenRestoredHasmet",
    "UND_MyconidCircle_InjuredGnome_ReportedGrymforgeFate",
    "UND_MyconidCircle_MyconidSuspicious_HasMet",
    "UND_MyconidCircle_PlantDuergarHasMet",
    "UND_MyconidCircle_State_FirstGreetingDone",
    "UND_MyconidCircle_State_GainedAccess",
    "UND_MyconidRevenge_Event_TakeHead",
    "UND_PetrifiedDrow_Knows_MemoryCrystal",
    "UND_PetrifiedDrow_Knows_WizardIsDhourn",
    "UND_SocietyOfBrilliance_MindFlayer_HasMet",
    "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionAsked",
    "UND_SocietyOfBrilliance_MindFlayer_State_ConnectionRefused",
    "UND_SocietyOfBrilliance_MindFlayer_State_MindFlayerFeeding",
    "UND_State_LeaderFreedGnomes",
    "UND_TheDrowNere_Event_HadMindMeld",
    "UND_TheDrowNere_Mutiny_InclusionStart_GnomeSilly",
    "UND_TheDrowNere_State_KilledGnomeSerene",
    "UND_WormWall_State_RecognisedCrawlers",
    "WLD_FOR_GnomeGoblinsAngry",
    "WLD_UnfortunateGnome_PayPassage",
    "ZevlorRewarded",
    "ZhentDungeon_AgreedBuy",
    "a0afae3d-53b0-192d-d822-c61da104f979_A",
    "a2fa1f0f-b9b5-f8bf-bf27-b11194b8502f_B",
    "a63e4af2-6edc-188a-efdf-b9ffc5460fc5_LOCAL_B",
    "a7407f82-add0-9f6d-e4e6-78b9c39195a6_C",
    "a759296c-5d41-f5b9-7d31-1c70d1e10dc7_Once",
    "aa1d4932-8689-5e30-2b17-9b0968663a7a_historysuccess",
    "acc081f3-204a-2f29-a3bb-6d33ff784c39_C",
    "b0d721a3-ca68-1e03-4e19-6eeddf6dd9ab_B",
    "b2a52f0b-5fa8-d275-f080-0fc8edbe1faf_B",
    "b43d3bc7-f10d-73cc-232e-c1f93cba3ed5_Local2",
    "b618166c-99f4-1c7a-02b7-32f0f0fbe420_LocalA",
    "b70d5139-9980-efc6-3ba3-fe2eb56ab2e0_B",
    "b8101d0a-5473-efd1-1d12-719d504d60b8_B",
    "b83032a9-f599-fdff-c180-c2d1f267bdb4_B",
    "ba2b225d-e9d4-944d-5b4f-b27dd975c626_A",
    "bde7a4f1-933f-f6ce-4a3e-4b1f29f83704_B",
    "c167cdf3-7201-e55c-222f-773c758e1000_IncludedHusband",
    "c3207254-eafb-348b-d327-f690af0e213f_startedattackmove",
    "c3d825d1-49b8-9ae2-4554-4fc1f55d2eee_LocalA",
    "c5f62c4b-fb04-1505-c35b-63119d96b127_First_Disabled",
    "c68c5474-226f-4b47-b327-a22274e360a0_B",
    "c7cbc714-5e48-c78a-0867-2ce81a42d681_B",
    "c9e1ff2a-01e2-abdb-b98e-2d4a35b3c7dc_A",
    "ca797aab-5a73-7ec5-edb7-022122573b39_B",
    "cd4b312f-5a40-b8c1-1ecb-0862c829a479_A",
    "ce2b9169-f3e7-e07f-9c58-0fd373d5df9a_PLA_ZhentDungeon_Zhent02_Dead_KnowsZarysisZhentarim",
    "d0423454-cc51-ae8e-5096-cffd1aac9f75_A",
    "d2eeb9af-9d20-919f-5bcf-63b09a554a90_A",
    "d3d3855d-6721-b089-5c1e-d6d255a46fdc_A",
    "d3eb78cf-ff8c-1e7a-7df7-4b6a04226b17_B",
    "d6df8edb-ac4b-e1d2-794b-6bfd00757cbf_A",
    "d97f72ff-8fb1-8a4c-f169-89751bd6e125_b",
    "da38cd0f-efef-6809-231d-26f71308cd07_B",
    "dd1890a0-ff6c-a358-4269-1859078cc21d_B",
    "df3e1892-2ab5-7b69-e57b-a75504e1a8f2_B",
    "e0b6dfeb-2923-e0ad-1dc5-2a5d1e055e16_local1",
    "e6738c9d-060d-c901-b945-4d49ca303d5b_SuccessfullyReadTracks",
    "e680129a-9d39-6ffc-3e6d-926daf0d76ff_A",
    "e6aef01a-0468-5046-e519-b9b624c704dc_B",
    "ea88dfe9-ff39-9b98-ae03-48d7fdf2708e_A",
    "ed70fdfc-3d7b-7753-1171-957f7316fe55_B",
    "f108995b-14f4-7823-d218-790177a93da8_B",
    "f3afb428-73fc-2e5c-057b-2e0e5a1b2f1c_B",
    "f3f236b2-37a1-a0a2-5855-184ead7b1286_C",
    "f4169abb-abdc-be87-1a9d-91387440472c_B",
    "fa6e2ce0-64f3-bfb8-fb47-10f50f02cadf_AbsoluteMentioned",
    "fb0e13b6-cc68-d496-51c2-4594f4f5bf40_TauntHer",
    "fd9ed69f-475f-def2-bae0-25065ccc4143_B"
  ]
}