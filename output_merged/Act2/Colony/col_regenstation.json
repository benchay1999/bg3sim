{
  "metadata": {
    "individual_metadata": {
      "PAD_SourcePain": {
        "synopsis": "This PAD plays when a player is used as an energy source in one of the Colony's regeneration stations.",
        "how_to_trigger": "- Load GustavDev/SCL_Main_A- Go to one of the Colony regeneration stations, e.g. S_COL_RegenStation1_5e5596d1-dd18-409c-b060-d4d01d664146- Place a player on the bed while another player activates the regen station. The player on the bed will (if able to speak) play this PAD."
      },
      "PAD_WrongSource": {
        "synopsis": "The regen station failed to work because the character trying to activate it can't be used, e.g. a construct or an undead or similar.",
        "how_to_trigger": "Load SCL_Main_A.Go to any of the regen stations(S_COL_RegenStation2_a87a8d2f-c84c-474f-9dee-d4e9612ae0ffS_COL_RegenStation1_5e5596d1-dd18-409c-b060-d4d01d664146)Place a construct on the draining platform/bed."
      },
      "PAD": {
        "synopsis": "Players are trying to use a recovery pod (like in the tutorial) that's disabled because there's nobody in the attached bed (or pod, art still TBD).",
        "how_to_trigger": "In SCL_Main_A, click on any of S_COL_RegenStation1_5e5596d1-dd18-409c-b060-d4d01d664146S_COL_RegenStation2_a87a8d2f-c84c-474f-9dee-d4e9612ae0ffS_COL_RegenStation3_7ad215a8-c134-4e8f-b0ae-fa7bac14a1b5"
      },
      "AD_Butcher_SourcePain": {
        "synopsis": "This AD plays when Chop, the Colony Butcher, is used as an energy source in one of the Colony's regeneration stations.",
        "how_to_trigger": "- Load GustavDev/SCL_Main_A- Use ReCon command \"oe COL_Butcher\"- Recruit the Butcher (Chop) with an ILLITHID roll.- Go to one of the Colony regeneration stations, e.g. S_COL_RegenStation1_5e5596d1-dd18-409c-b060-d4d01d664146- Place the Butcher on the bed while a player activates the regen station. Chop will (if able to speak) play this AD."
      }
    },
    "source_files": [
      "COL_RegenStation_PAD_SourcePain.json",
      "COL_RegenStation_PAD_WrongSource.json",
      "COL_RegenStation_PAD.json",
      "COL_RegenStation_AD_Butcher_SourcePain.json"
    ],
    "automatic_ordering": {
      "reasoning": "Examining the four sessions shows that they all relate to triggering a regeneration station event but under different conditions. In one case (PAD_SourcePain) a normal player is used as the energy source, in another (AD_Butcher_SourcePain) a specific character \u2013 the Colony Butcher (Chop) \u2013 is used after being recruited, in a third (PAD_WrongSource) the station is attempted with an invalid candidate (a construct, undead, etc.), and in the fourth (PAD) no character is used at all (empty bed). In a playthrough, only one of these situations will occur when trying to interact with the regen station. There is no inherent sequential or causative ordering between these sessions; they are alternative outcomes based on the player\u2019s choice of subject for the station. Thus, there is no predecessor-successor ordering among them, but they are mutually exclusive because choosing one scenario prevents the others from happening in the same play path.",
      "order": [],
      "exclusive": [
        [
          "PAD_SourcePain",
          "PAD_WrongSource",
          "PAD",
          "AD_Butcher_SourcePain"
        ]
      ]
    }
  },
  "dialogue": {
    "PAD_SourcePain_0": {
      "id": "PAD_SourcePain_0",
      "speaker": "Player",
      "text": "Argh! I feel... lighter, somehow. Like something's been taken.",
      "context": "",
      "checkflags": [],
      "setflags": [],
      "ruletags": [],
      "approval": [],
      "rolls": "",
      "goto": "",
      "link": "",
      "is_end": true,
      "node_type": "normal",
      "children": {}
    },
    "PAD_WrongSource_0": {
      "id": "PAD_WrongSource_0",
      "speaker": "Player",
      "text": "Nothing. Seems it needs a different source to draw from.",
      "context": "",
      "checkflags": [],
      "setflags": [],
      "ruletags": [],
      "approval": [],
      "rolls": "",
      "goto": "",
      "link": "",
      "is_end": true,
      "node_type": "normal",
      "children": {}
    },
    "PAD_0": {
      "id": "PAD_0",
      "speaker": "Player",
      "text": "Looks like it siphons power from anyone lying in that cradle. Wonderful.",
      "context": "",
      "checkflags": [
        "COL_RegenStations_State_UsedOnce = False",
        "COL_RegenStation_State_CheckSuccess"
      ],
      "setflags": [
        "COL_RegenStations_State_UsedOnce"
      ],
      "ruletags": [],
      "approval": [],
      "rolls": "",
      "goto": "",
      "link": "",
      "is_end": true,
      "node_type": "normal",
      "children": {}
    },
    "PAD_1": {
      "id": "PAD_1",
      "speaker": "Player",
      "text": "It needs to draw power from a host. How very illithid.",
      "context": "",
      "checkflags": [
        "COL_RegenStations_State_UsedOnce",
        "COL_RegenStation_State_CheckSuccess"
      ],
      "setflags": [],
      "ruletags": [],
      "approval": [],
      "rolls": "",
      "goto": "",
      "link": "",
      "is_end": true,
      "node_type": "normal",
      "children": {}
    },
    "PAD_2": {
      "id": "PAD_2",
      "speaker": "Player",
      "text": "Inactive. What powered the one on the nautiloid?",
      "context": "",
      "checkflags": [
        "COL_RegenStations_State_UsedOnce = False",
        "COL_RegenStation_State_CheckSuccess = False"
      ],
      "setflags": [
        "COL_RegenStations_State_UsedOnce"
      ],
      "ruletags": [],
      "approval": [],
      "rolls": "",
      "goto": "",
      "link": "",
      "is_end": true,
      "node_type": "normal",
      "children": {}
    },
    "AD_Butcher_SourcePain_0": {
      "id": "AD_Butcher_SourcePain_0",
      "speaker": "Chop",
      "text": "W...w...why...",
      "context": "NodeContext: Muted, pained whine - first legible statement from creature",
      "checkflags": [],
      "setflags": [],
      "ruletags": [],
      "approval": [],
      "rolls": "",
      "goto": "",
      "link": "",
      "is_end": true,
      "node_type": "normal",
      "children": {}
    }
  }
}